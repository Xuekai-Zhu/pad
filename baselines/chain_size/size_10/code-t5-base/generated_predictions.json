{"output": "def solution():\n    # Calculate the total amount of chicken feed needed for the day\n    total_chicken_feed = 3 * 3  # Wendi feeds each of her chicken 3 cups of feed\n    morning_chicken_feed = 15  # Wendi gives her flock of chickens 15 cups of feed in the morning\n    afternoon_chicken_feed = 25  # Wendi gives her chickens another 25 cups of feed in the afternoon\n    total_chicken_feed_needed = total_chicken_feed + morning_chicken_feed + afternoon_chicken_feed  # total amount of chicken feed needed in the final meal\n    result = total_chicken_feed_needed\n    return result"}
{"output": "def solution():\n    \n    glass_price = 5\n    second_glass_price = glass_price * 0.6\n    total_glasses = 16\n    total_price = total_glasses * (glass_price + second_glass_price)\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    seattle_sheep = 20\n    charleston_sheep = seattle_sheep * 4\n    toulouse_sheep = charleston_sheep * 2\n    total_sheep = seattle_sheep + charleston_sheep + toulouse_sheep\n    result = total_sheep\n    return result"}
{"output": "def solution():\n    \n    # Define the size of the file in GB\n    FILE_SIZE = 200\n\n    # Define the download speed in GB/minute\n    download_speed = 2\n\n    # Calculate the total download time in minutes\n    total_download_time = FILE_SIZE / download_speed\n\n    # Calculate the remaining download time in minutes\n    remaining_download_time = total_download_time * 0.4\n\n    # Calculate the total download time in minutes\n    total_download_time_in_minutes = remaining_download_time + 20\n\n    # Display the total download time in minutes\n    result = total_download_time_in_minutes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance John traveled during the first 3 hours\n    distance1 = 3 * 60\n\n    # Calculate the distance John traveled during the next 2 hours\n    distance2 = 2 * 30\n\n    # Calculate the distance John traveled during the 4 hours\n    distance3 = 4 * 80\n\n    # Calculate the total distance John traveled\n    total_distance = distance1 + distance2 + distance3\n\n    # Display the total distance John traveled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    regular_hours = 40\n    regular_rate = 10\n    overtime_pay = 1.2 * regular_rate\n    total_hours = 45\n    regular_earnings = regular_hours * regular_rate\n    overtime_earnings = overtime_pay * total_hours\n    total_earnings = regular_earnings + overtime_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    first_month_downloads = 60\n    second_month_downloads = 3 * first_month_downloads\n    third_month_downloads = int(first_month_downloads * 0.3)\n    total_downloads = first_month_downloads + second_month_downloads + third_month_downloads\n    result = total_downloads\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of pastry\n    DONUT_PRICE = 68\n    CUPCAKE_PRICE = 80\n    CHEESECAKE_PRICE = 55\n\n    # Define the number of dozens of each type of pastry bought\n    donut_dozens = 3\n    cupcake_dozens = 2\n    cheesecake_dozens = 6\n\n    # Calculate the total cost of the donuts\n    donut_cost = donut_dozens * DONUT_PRICE\n\n    # Calculate the total cost of the cupcakes\n    cupcake_cost = cupcake_dozens * CUPCAKE_PRICE\n\n    # Calculate the total cost of the cheesecakes\n    cheesecake_cost = cheesecake_dozens * CHEESECAKE_PRICE\n\n    # Calculate the total cost of all the pastries\n    total_cost = donut_cost + cupcake_cost + cheesecake_cost\n\n    # Display the total"}
{"output": "def solution():\n    \n    tree_cost = 90\n    lemons_per_year = 7\n    lemon_price = 1.5\n    water_cost_per_year = 3\n    years = 0\n    \n    while tree_cost < tree_cost:\n        years += 1\n        tree_cost += lemons_per_year * lemon_price\n        \n    result = years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vacuum cleaners left\n    vacuum_cleaners_left = 5\n\n    # Calculate the number of vacuum cleaners sold at the green house\n    green_cleaners = vacuum_cleaners_left // 3\n\n    # Calculate the number of vacuum cleaners sold to the red house\n    red_cleaners = vacuum_cleaners_left - 2\n\n    # Calculate the number of vacuum cleaners sold at the orange house\n    orange_cleaners = vacuum_cleaners_left // 2\n\n    # Calculate the total number of vacuum cleaners sold\n    total_cleaners_sold = green_cleaners + red_cleaners + orange_cleaners\n\n    # Calculate the number of vacuum cleaners Melanie started with\n    vacuum_cleaners_start = total_cleaners_sold + vacuum_cleaners_left\n\n    # Display the number of vacuum cleaners Melanie started with\n    result = vacuum_cleaners"}
{"output": "def solution():\n    \n    # Define the total number of students\n    total_students = 20\n\n    # Calculate the number of students enrolled in contemporary dance\n    contemporary_students = int(total_students * 0.2)\n\n    # Calculate the number of students remaining enrolled\n    remaining_students = total_students - contemporary_students\n\n    # Calculate the number of students enrolled in jazz dance\n    jazz_students = int(remaining_students * 0.25)\n\n    # Calculate the number of students enrolled in hip-hop dance\n    hip_hop_students = total_students - contemporary_students - jazz_students\n\n    # Calculate the percentage of students enrolled in hip-hop dance\n    hip_hop_percentage = (hip_hop_students / total_students) * 100\n\n    # Display the percentage of students enrolled in hip-hop dance\n    result = hip_hop_percentage\n    return result"}
{"output": "def solution():\n    \n    jewelry_price = 5000\n    gadgets_price = 8000\n    jewelry_market_increase = 0.5\n    gadgets_market_increase = 1.2\n    jewelry_profit = jewelry_price * (1 + jewelry_market_increase)\n    gadgets_profit = gadgets_price * (1 + gadgets_market_increase)\n    total_profit = jewelry_profit + gadgets_profit\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the distance traveled each day\n    day1_distance = 80\n    day2_distance = 150\n\n    # Calculate the total distance traveled in the first day\n    day1_total_distance = day1_distance * 2\n\n    # Calculate the total distance traveled in the second day\n    day2_total_distance = day2_distance * 2\n\n    # Calculate the total distance covered by each train in the two days\n    total_distance = day1_total_distance + day2_total_distance\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly wage and number of weeks worked\n    HOURLY_WAGE = 20\n    COACH_WAGE = 30\n    WEEKS_WORKED = 50\n\n    # Calculate the annual salary\n    teacher_salary = HOURLY_WAGE * WEEKS_WORKED\n    coach_salary = HOURLY_WAGE * WEEKS_WORKED\n    total_salary = teacher_salary + coach_salary\n\n    # Display the annual salary\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    eggs_per_day = 3\n    days_per_week = 7\n    weeks = 4\n    total_eggs = eggs_per_day * days_per_week * weeks\n    dozens_of_eggs = total_eggs / 12\n    result = dozens_of_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define the total distance of the trail\n    total_distance = 12\n\n    # Define the time taken to walk the first 4 miles\n    time1 = 1\n\n    # Define the time taken to walk the next 2 miles\n    time2 = 2\n\n    # Define the desired average speed in miles per hour\n    desired_speed = 4\n\n    # Calculate the time taken to walk the remaining distance\n    time1 = total_distance / time1\n\n    # Calculate the time taken to walk the remaining distance\n    time2 = total_distance / time2\n\n    # Calculate the remaining distance\n    remaining_distance = total_distance - time1 - time2\n\n    # Calculate the required speed to walk the remaining distance\n    required_speed = remaining_distance / desired_speed\n\n    # Display the required speed\n    result = required_speed\n    return result"}
{"output": "def solution():\n    \n    # Calculate the amount of water in the orange drink\n    orange_water = 10 * (2/3)\n\n    # Calculate the amount of water in the pineapple drink\n    pineapple_water = 15 * (3/5)\n\n    # Calculate the total amount of water in the orange and pineapple drink\n    total_water = orange_water + pineapple_water\n\n    # Calculate the amount of water in the remaining 24 liters\n    remaining_water = 24 - total_water\n\n    # Display the amount of water in the remaining 24 liters\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    \n    samantha_age = 31\n    raymond_age = samantha_age - 6\n    raymond_son_age = 23\n    years_ago_son_born = raymond_son_age - samantha_age\n    result = years_ago_son_born\n    return result"}
{"output": "def solution():\n    \n    total_customers = 8\n    first_3_customers = 3\n    next_2_customers = 2\n    last_3_customers = 3\n    first_3_dvds = first_3_customers * 1\n    next_2_dvds = next_2_customers * 2\n    last_3_dvds = last_3_customers * 0\n    total_dvds = first_3_dvds + next_2_dvds + last_3_dvds\n    result = total_dvds\n    return result"}
{"output": "def solution():\n    # Calculate the amount of melts the candle burns in 1:00 PM\n    melts_per_hour = 2\n\n    # Calculate the amount of melts the candle burns in 5:00 PM\n    burns_in_5_hours = (5 - 1) * melts_per_hour\n\n    # Calculate the amount of melts the candle will be after burning from 1:00 PM to 5:00 PM\n    melts_after_1_5_hours = burns_in_5_hours * melts_per_hour\n\n    # Calculate the difference in centimeters between the two options\n    difference = melts_after_1_5_hours - melts_after_1_5_hours\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the book and the discount percentage\n    BOOK_PRICE = 19.50\n    DISCOUNT_PERCENTAGE = 25\n\n    # Calculate the original price of the book\n    original_price = BOOK_PRICE / (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Display the original price\n    result = original_price\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    CHICKEN_MEAL_PRICE = 12\n    MILK_PRICE = 3\n    APPLE_PRICE = 1.5\n    PIZZA_PRICE = 8.5\n\n    # Define the quantities of each item ordered\n    chicken_meal_qty = 1\n    milk_qty = 5\n    apple_qty = 4\n\n    # Calculate the total cost of the meals\n    meal_cost = chicken_meal_qty * CHICKEN_MEAL_PRICE\n\n    # Calculate the total cost of the milk\n    milk_cost = milk_qty * MILK_PRICE\n\n    # Calculate the total cost of the apples\n    apple_cost = apple_qty * APPLE_PRICE\n\n    # Calculate the total cost of the meals\n    total_meal_cost = chicken_meal_qty + milk_cost + apple_cost\n\n    # Calculate the"}
{"output": "def solution():\n    num_shorts = 3\n    shorts_price = 16.5\n\n    num_pants = 3\n    pants_price = 22.5\n\n    num_shoes = 3\n    shoes_price = 42\n\n    # Calculate the total cost of all shorts\n    total_shorts_cost = num_shorts * shorts_price\n\n    # Calculate the total cost of all pants\n    total_pants_cost = num_pants * pants_price\n\n    # Calculate the total cost of all shoes\n    total_shoes_cost = num_shoes * shoes_price\n\n    # Calculate the total cost of all clothing items\n    total_cost = total_shorts_cost + total_pants_cost + total_shoes_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    servings_per_carton = 15\n    cost_per_carton = 4.0\n    num_days = 60\n\n    # Calculate the total number of servings of ice cream Cynthia will eat in 60 days\n    total_servings = servings_per_carton * num_days\n\n    # Calculate the total number of cartons of ice cream Cynthia will buy in 60 days\n    total_cartons = total_servings / servings_per_carton\n\n    # Calculate the total cost of all cartons of ice cream Cynthia will buy in 60 days\n    total_cost = total_cartons * cost_per_carton\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_distance = 60\n    first_stop_distance = 20\n    second_stop_distance = 15\n    distance_between_stops = total_distance - first_stop_distance - second_stop_distance\n    result = distance_between_stops\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of one pair of heels\n    HEEL_PRICE = 33\n\n    # Calculate the cost of two pairs of high heels\n    high_heel_cost = HEEL_PRICE * 2\n\n    # Calculate the total cost of the two pairs of high heels\n    total_high_heels_cost = HEEL_PRICE + high_heel_cost\n\n    # Calculate the total cost of the boots\n    total_boots_cost = total_high_heels_cost / 2\n\n    # Display the total cost of the boots\n    result = total_boots_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of Darrell's ages to Allen's ages\n    darrell_to_allen_ratio = 7/11\n\n    # Calculate the total age of Darrell and Allen's ages\n    total_age = 162\n    darrell_age = total_age / (darrell_to_allen_ratio + 1)\n    allen_age = total_age - darrell_age\n\n    # Calculate Allen's age 10 years from now\n    allen_age_10_years = allen_age + 10\n\n    # Display Allen's age 10 years from now\n    result = allen_age_10_years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jelly beans in the jar\n    jelly_beans = 80\n\n    # Calculate the number of jelly beans in the jar\n    jelly_beans *= 2\n\n    # Calculate the number of jelly beans in the jar\n    jelly_beans *= 1.25\n\n    # Calculate the average guess\n    average_guess = jelly_beans / 3\n\n    # Display the average guess\n    result = average_guess\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and hours per dog\n    NUM_DOGS = 10\n    HOURS_PER_DOG = 0.5\n\n    # Calculate the total number of hours John spends taking care of dogs per day\n    total_hours_per_day = NUM_DOGS * HOURS_PER_DOG\n\n    # Calculate the total number of hours John spends taking care of dogs per week\n    total_hours_per_week = total_hours_per_day * 7\n\n    # Display the total number of hours John spends taking care of dogs per week\n    result = total_hours_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the number of silver coins\n    silver_coins = 110 - 30\n\n    # Calculate the number of gold coins\n    gold_coins = silver_coins + 30\n\n    # Display the number of gold coins\n    result = gold_coins\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jewels Raymond has\n    raymond_jewels = 40\n\n    # Calculate the number of jewels Aaron has\n    aaron_jewels = raymond_jewels / 2 + 5\n\n    # Calculate the number of jewels Siobhan has\n    siobhan_jewels = aaron_jewels - 2\n\n    # Display the number of jewels Siobhan has\n    result = siobhan_jewels\n    return result"}
{"output": "def solution():\n    \n    total_time = 40\n    first_20_minutes = 20\n    first_20_points = 4\n    second_20_minutes = 20\n    second_20_percent_increase = 25\n    second_20_points = first_20_points * (1 + (second_20_percent_increase / 100))\n    total_points = first_20_points + second_20_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    yogurts_per_day = 2\n    sale_price = 5.0\n    num_days = 30\n\n    # Calculate the total number of yogurts eaten over 30 days\n    total_yogurts_eaten = yogurts_per_day * num_days\n\n    # Calculate the total sale price of all yogurts\n    total_sale_price = total_yogurts_eaten * sale_price\n\n    # Calculate the total cost of all yogurts\n    total_cost = total_sale_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_sets = 13\n    price_per_set = 15\n    num_games_bought = 8\n    game_cost = 20\n    remaining_money = 5\n\n    # Calculate the total cost of all games bought\n    total_game_cost = num_games_bought * game_cost\n\n    # Calculate the total revenue from selling all the lego sets\n    total_revenue = num_sets * price_per_set\n\n    # Calculate the remaining money after buying the video games\n    remaining_money = total_revenue - total_game_cost - remaining_money\n\n    # Calculate the number of lego sets remaining\n    num_remaining_sets = remaining_money / price_per_set\n    result = num_remaining_sets\n    return result"}
{"output": "def solution():\n    \n    miles_per_week = 60\n    days_per_week = 3\n    first_day_hours = 3\n    second_day_hours = first_day_hours / 2\n    total_hours = first_day_hours + second_day_hours\n    total_miles = miles_per_week * days_per_week\n    speed = total_miles / total_hours\n    result = speed\n    return result"}
{"output": "def solution():\n    # Calculate the time Dana spends running and walking\n    time_running = 1/3 * 6  # one-third of the time running\n    time_walking = 2/3 * 6  # two-thirds of the time walking\n\n    # Calculate the distance Dana can run\n    distance_running = time_running * 3  # one-third of the time running\n\n    # Calculate the distance Dana can walk\n    distance_walking = time_walking * 4  # four times faster than she can walk\n\n    # Calculate the total distance Dana can travel in 6 hours\n    total_distance = distance_running + distance_walking\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define Suzy's iPhone's age\n    suzy_age = 1\n\n    # Calculate Ben's iPhone's age\n    ben_age = suzy_age * 2\n\n    # Calculate Brandon's iPhone's age\n    brandon_age = ben_age * 4\n\n    # Display Brandon's iPhone's age\n    result = brandon_age\n    return result"}
{"output": "def solution():\n    \n    distance_to_reach = 1000\n    distance_to_throw_javelin = 400\n    distance_to_throw_gemstone = distance_to_throw_javelin * 3\n    distance_to_reach_with_gemstone = distance_to_reach - distance_to_throw_javelin - distance_to_throw_gemstone\n    result = distance_to_reach_with_gemstone\n    return result"}
{"output": "def solution():\n    \n    num_pies = 5\n    pieces_per_pie = 8\n    total_pieces = num_pies * pieces_per_pie\n    remaining_pieces = 14\n    pieces_taken = total_pieces - remaining_pieces\n    result = pieces_taken\n    return result"}
{"output": "def solution():\n    servings_per_bag = 5  # A 300g bag has 5 servings\n    calories_per_serving = 250  # A bag of chips has 250 calories per serving\n    daily_calorie_target = 2000  # The daily calorie target is 2000\n    calories_consumed = 1800  # You have already consumed 1800 calories\n\n    # Calculate the total number of calories in the bag\n    total_calories = servings_per_bag * calories_per_serving * daily_calorie_target\n\n    # Calculate the remaining calories in the bag\n    remaining_calories = total_calories - calories_consumed\n\n    # Convert remaining calories to grams\n    grams_eaten = remaining_calories / 1000\n    result = grams_eaten\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each candle\n    COST_PER_CANDLE = 2\n    SELLING_PRICE_PER_CANDLE = 2\n\n    # Calculate the cost of making 20 candles\n    cost = 20 * 10 * COST_PER_CANDLE\n\n    # Calculate the revenue from selling 20 candles\n    revenue = 20 * SELLING_PRICE_PER_CANDLE\n\n    # Calculate the net profit\n    net_profit = revenue - cost\n\n    # Display the net profit\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the average number of hours per article\n    HOURS_PER_ARTICLE = 4\n\n    # Calculate the number of articles written on Monday\n    monday_articles = 5\n\n    # Calculate the number of articles written on Tuesday\n    tuesday_articles = 2/5 * monday_articles\n\n    # Calculate the number of articles written on Wednesday\n    wednesday_articles = 2 * tuesday_articles\n\n    # Calculate the total number of hours spent writing articles\n    total_hours = (monday_articles + tuesday_articles + wednesday_articles) * HOURS_PER_ARTICLE\n\n    # Display the total number of hours spent writing articles\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    initial_notes = 80\n    notes_per_cup = 220\n    remaining_notes = 23\n    total_notes = initial_notes + notes_per_cup * 220\n    notes_in_package = total_notes - remaining_notes\n    result = notes_in_package\n    return result"}
{"output": "def solution():\n    # Calculate the number of red ties John bought\n    red_ties = 2 * 200 / 1.5  # red ties cost 50% more than blue ties\n\n    # Calculate the total cost of blue ties\n    blue_ties_cost = 200\n\n    # Calculate the total cost of red ties\n    red_ties_cost = red_ties * 40 * 1.5  # red ties cost 50% more than blue ties\n\n    # Calculate the total cost of ties\n    total_cost = red_ties_cost + blue_ties_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the wire in feet\n    length_feet = 4\n\n    # Define the length of the wire in inches\n    length_inches = 6\n\n    # Convert the length of the wire from feet to inches\n    length_inches = length_feet * 12\n\n    # Calculate the number of pieces Tracy obtained\n    num_pieces = length_inches // length_inches\n\n    # Display the number of pieces\n    result = num_pieces\n    return result"}
{"output": "def solution():\n    num_floors = 15\n    units_per_floor = 8\n    occupancy_ratio = 3/4\n\n    # Calculate the total number of units in the building\n    total_units = num_floors * units_per_floor\n\n    # Calculate the number of occupied units\n    occupied_units = total_units * occupancy_ratio\n\n    # Calculate the number of unoccupied units\n    unoccupied_units = total_units - occupied_units\n    result = unoccupied_units\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced per day and per dozen\n    EGGS_PER_DAY = 252\n    EGGS_PER_DOZEN = 12\n\n    # Define the price per dozen\n    PRICE_PER_DOZEN = 2\n\n    # Calculate the number of eggs produced per week\n    eggs_per_week = EGGS_PER_DAY * 7\n\n    # Calculate the number of dozens of eggs produced per week\n    dozens_per_week = eggs_per_week / EGGS_PER_DOZEN\n\n    # Calculate the total earnings per week\n    earnings_per_week = dozens_per_week * PRICE_PER_DOZEN\n\n    # Display the total earnings per week\n    result = earnings_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of Tom's ship\n    SPEED = 10\n\n    # Define the time Tom is sailing from 1 to 4 PM\n    SILING_TIME = 1\n\n    # Define the speed of Tom's ship\n    SPEED = 6\n\n    # Calculate the time it takes Tom to travel from 1 to 4 PM\n    time1 = SILING_TIME\n\n    # Calculate the distance Tom travels from 1 to 4 PM\n    distance1 = SPEED * SILING_TIME\n\n    # Calculate the time it takes Tom to travel from 1 to 4 PM\n    time2 = distance1 / SPEED\n\n    # Calculate the time it takes Tom to get back\n    time3 = distance2 / 6\n\n    # Calculate the total time it takes Tom to get back\n    total_time = time1 + time2\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each type of book\n    COMIC_BOOK_WEIGHT = 1/4\n    TOY_WEIGHT = 1/2\n\n    # Define the number of comic books to be removed\n    COMIC_BOOKS_REMOVED = 30\n\n    # Calculate the total weight of the comic books to be removed\n    comic_book_total_weight = COMIC_BOOK_WEIGHT * COMIC_BOOKS_REMOVED\n\n    # Calculate the remaining weight needed to remove\n    remaining_weight = 15 - comic_book_total_weight\n\n    # Calculate the number of toys to remove\n    toy_count = remaining_weight / TOY_WEIGHT\n\n    # Display the number of toys to remove\n    result = toy_count\n    return result"}
{"output": "def solution():\n    \n    truck_tires_repaired = 6\n    car_tires_repaired = 4\n    truck_tire_revenue = 60\n    car_tire_revenue = 40\n    car_tries_repaired = 12\n    thursday_earnings = (truck_tires_repaired * truck_tire_revenue) + (car_tires_repaired * car_tire_revenue)\n    friday_earnings = (truck_tires_repaired + car_tries_repaired) * car_tire_revenue\n    difference = thursday_earnings - friday_earnings\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of kittens\n    initial_kittens = 7\n\n    # Calculate the number of kittens for the first cat\n    first_cat_kittens = 3 * initial_kittens\n\n    # Calculate the number of kittens for the second cat\n    second_cat_kittens = 12\n\n    # Calculate the total number of kittens\n    total_kittens = initial_kittens + first_cat_kittens + second_cat_kittens\n\n    # Display the total number of kittens\n    result = total_kittens\n    return result"}
{"output": "def solution():\n    \n    total_lollipops = 30\n    eaten_lollipops = 2\n    remaining_lollipops = total_lollipops - eaten_lollipops\n    lollipops_per_bag = 2\n    bags_filled = remaining_lollipops // lollipops_per_bag\n    result = bags_filled\n    return result"}
{"output": "def solution():\n    ticket_price = 7  # Peter gets a ticket for $7\n    popcorn_price = 7  # Peter gets a popcorn for $7\n    total_money = 42  # Peter has 42 dollars for the week\n\n    # Calculate the number of times Peter can go to the movies\n    num_movies = (total_money - ticket_price - popcorn_price) // movie_price\n    result = num_movies\n    return result"}
{"output": "def solution():\n    \n    bridge_limit = 5000\n    truck_weight = 3755\n    box_weight = 15\n    total_weight = truck_weight + box_weight\n    max_boxes = max_weight // box_weight\n    result = max_boxes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of Stephen's groceries\n    initial_cost = 40\n\n    # Calculate the delivery fee\n    delivery_fee = initial_cost * 0.25\n\n    # Add the delivery fee and tip\n    final_cost = initial_cost + delivery_fee + 4\n\n    # Display the final cost\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of clusters and fruit per cluster\n    clusters = 6\n    fruit_per_cluster = 20\n\n    # Calculate the total number of fruit\n    total_fruit = clusters * fruit_per_cluster\n\n    # Calculate the number of raspberries\n    raspberries = total_fruit\n\n    # return the result\n    result = raspberries\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of oranges in the basket\n    total_oranges = 25\n\n    # Calculate the number of bad oranges\n    bad_oranges = total_oranges - 1\n\n    # Calculate the number of unripe oranges\n    unripe_oranges = total_oranges * 0.2\n\n    # Calculate the number of good oranges\n    good_oranges = total_oranges - bad_oranges - unripe_oranges - 2\n\n    # Display the number of good oranges\n    result = good_oranges\n    return result"}
{"output": "def solution():\n    \n    material_cost = 500\n    jeweler_cost = 800\n    total_cost = material_cost + jeweler_cost\n    insured_cost = total_cost * 0.1\n    final_cost = total_cost - insured_cost\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial pension rate and the number of years worked\n    pension_rate = 50000\n    years_worked = 40\n\n    # Calculate the pension value after 20 years\n    pension_value_20_years = pension_rate * (1 + 0.05)\n\n    # Calculate the pension value after 30 years\n    pension_value_30_years = pension_value_20_years * (1 - 0.05)\n\n    # Calculate the annual pension value after 30 years\n    annual_pension_value = pension_value_30_years + pension_value_20_years\n\n    # Display the annual pension value\n    result = annual_pension_value\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount charged\n    initial_amount = 140\n\n    # Calculate the amount charged on the first half of the year\n    first_half_amount = initial_amount * (1 - 0.1)\n\n    # Calculate the amount charged on the second half of the year\n    second_half_amount = initial_amount * (1 - 0.1)\n\n    # Calculate the total amount paid\n    total_amount = first_half_amount + second_half_amount\n\n    # Display the total amount paid\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Calculate the amount of gas needed to fill up the tank\n    gas_needed = 12 - 4\n\n    # Calculate the distance Sophia can drive on a single tank of gas\n    distance_on_tank = gas_needed * 100\n\n    # Display the distance Sophia can drive on a single tank of gas\n    result = distance_on_tank\n    return result"}
{"output": "def solution():\n    tv_hours = 2  # Jim spends 2 hours watching TV\n    bed_hours = tv_hours / 2  # Jim spends half as long to go to bed and read\n    times_per_week = 3  # Jim does this 3 times a week\n    weeks = 4  # Jim wants to know how many hours he spends on TV and reading in 4 weeks\n\n    # Calculate the total hours Jim spends on TV and reading in 4 weeks\n    total_hours = (tv_hours + bed_hours) * times_per_week * weeks\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of schools and the number of players per team\n    num_schools = 4\n    girls_per_team = 1\n    boys_per_team = 1\n    players_per_team = 5\n\n    # Calculate the total number of players\n    total_players = (girls_per_team + boys_per_team) * players_per_team\n\n    # Calculate the total number of coach players\n    total_coach_players = 2 * players_per_team\n\n    # Calculate the total number of people\n    total_people = total_players + total_coach_players\n\n    # return the result\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    diamonds = 175\n    rubies = diamonds - 35\n    emeralds = rubies * 2\n    total_gems = diamonds + rubies + emeralds\n    result = total_gems\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of boys to girls\n    BOYS_TO_GIRLS = 2\n\n    # Define the number of girls\n    girls = 60\n\n    # Calculate the number of boys\n    boys = girls * BOYS_TO_GIRLS\n\n    # Calculate the total number of students\n    total_students = girls + boys\n\n    # Calculate the number of teachers\n    teachers = total_students // 5\n\n    # Display the number of teachers\n    result = teachers\n    return result"}
{"output": "def solution():\n    \n    # Define the weekly allowance and the number of weeks\n    WEEKLY_ALLOWANCE = 5\n    WEEKS = 8\n\n    # Define the total amount of money Bailey has\n    TOTAL_MONEY = 100\n\n    # Calculate the total amount of money Bailey received\n    total_received = WEEKLY_ALLOWANCE * WEEKS\n\n    # Calculate the amount of money Bailey started with\n    starting_money = TOTAL_MONEY - total_received\n\n    # Display the starting amount of money\n    result = starting_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dance classes and students per class\n    NUM_CLASSES = 5 + 8\n    STUDENTS_PER_CLASS = 15\n\n    # Calculate the total number of students in a week\n    total_students = NUM_CLASSES * STUDENTS_PER_CLASS * 7\n\n    # Calculate the total amount of money Judy makes in a week\n    total_money = total_students * 15\n\n    # Display the total amount of money Judy makes in a week\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    first_dish_instructions = 20\n    second_dish_instructions = 2 * first_dish_instructions\n    total_instructions = first_dish_instructions + second_dish_instructions\n    result = total_instructions\n    return result"}
{"output": "def solution():\n    \n    brownies_sold = 43\n    cheesecakes_sold = 23\n    brownie_price = 3\n    cheesecake_price = 4\n    total_brownie_sales = brownies_sold * brownie_price\n    total_cheesecake_sales = cheesecakes_sold * cheesecake_price\n    total_sales = total_brownie_sales + total_cheesecake_sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each phone and the number of months\n    PHONE_COST = 150\n    NUM_PHONES = 5\n\n    # Calculate the total cost for the installment\n    total_cost = PHONE_COST * NUM_PHONES\n\n    # Calculate the interest charged for each unit\n    interest_charged = total_cost * 0.02\n\n    # Calculate the total cost for 3 months\n    total_cost_3_months = total_cost + interest_charged\n\n    # Display the total cost for 3 months\n    result = total_cost_3_months\n    return result"}
{"output": "def solution():\n    \n    marigold_price = 2.74\n    petunias_price = 1.87\n    begonias_price = 2.12\n    marigold_pots = 12\n    petunias_pots = 9\n    begonias_pots = 17\n    total_marigold_price = marigold_price * marigold_pots\n    total_petunias_price = petunias_price * petunias_pots\n    total_begonias_price = begonias_price * begonias_pots\n    total_price = total_marigold_price + total_petunias_price + total_begonias_price\n    rounded_price = round(total_price)\n    result = rounded_price\n    return result"}
{"output": "def solution():\n    \n    # Define the square footage of the top level\n    top_level = 16\n\n    # Calculate the square footage of the third level\n    third_level = top_level - (top_level / 2)\n\n    # Calculate the square footage of the fourth level\n    fourth_level = third_level / 2\n\n    # Calculate the average square footage of a level\n    average_square_footage = fourth_level / 4\n\n    # Display the average square footage\n    result = average_square_footage\n    return result"}
{"output": "def solution():\n    \n    cups_per_day_1 = 1\n    days_1 = 180\n    cups_per_day_2 = 2\n    cups_per_bag = 110\n    total_cups_1 = cups_per_day_1 * days_1\n    total_cups_2 = cups_per_day_2 * days_2\n    total_cups = total_cups_1 + total_cups_2\n    bags_of_food = total_cups / cups_per_bag\n    result = bags_of_food\n    return result"}
{"output": "def solution():\n    \n    sarah_laundry = 400\n    david_laundry = sarah_laundry / 4\n    raymond_laundry = sarah_laundry / 2\n    difference = raymond_laundry - david_laundry\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Calculate the cost of buying 3 flowers in packages of 3\n    cost_3 = 3 * 2.5\n\n    # Calculate the cost of buying 2 flowers in packages of 2\n    cost_2 = 2 * 1\n\n    # Calculate the amount saved by buying 18 flowers at the better price\n    amount_saved = cost_3 - cost_2\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    dog_cost = 100\n    discount_percent = 30\n    discount_amount = dog_cost * (discount_percent / 100)\n    discounted_cost = dog_cost - discount_amount\n    result = discounted_cost\n    return result"}
{"output": "def solution():\n    \n    girls_water = 24 * (1/6)\n    boy_water = 6\n    total_water = girls_water + boy_water\n    water_left = 24 - total_water\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    initial_stickers = 10\n    bought_stickers = 21\n    birthday_stickers = 23\n    given_away_stickers = 9\n    greeting_card_stickers = 28\n    remaining_stickers = initial_stickers - bought_stickers + birthday_stickers - given_away_stickers - greeting_card_stickers\n    result = remaining_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define Grace's weight\n    grace_weight = 125\n\n    # Calculate Alex's weight\n    alex_weight = 4 * grace_weight - 2\n\n    # Calculate the combined weight\n    combined_weight = grace_weight + alex_weight\n\n    # Display the combined weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rose bushes and thorns per rose\n    rose_bushes = 3\n    roses_per_bush = 25\n    thorns_per_rose = 8\n\n    # Calculate the total number of roses\n    total_roses = rose_bushes * roses_per_bush\n\n    # Calculate the total number of thorns\n    total_thorns = total_roses * thorns_per_rose\n\n    # return the result\n    result = total_thorns\n    return result"}
{"output": "def solution():\n    \n    total_games = 22\n    lost_games = total_games - 8\n    wins = lost_games + 8\n    result = wins\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vacations Gene has been on\n    vacations_on = 4\n\n    # Define the number of years Gene has been vacating\n    years_vacationing = 23\n\n    # Calculate the number of shirts Gene has been on\n    shirts_on = vacations_on * years_vacationing\n\n    # Calculate the number of quilt blocks Gene has\n    blocks_on = shirts_on * 4\n\n    # Calculate the total number of quilt blocks Gene has\n    total_blocks = blocks_on * 2\n\n    # Display the total number of quilt blocks\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    \n    first_time_ring = 4\n    second_time_ring = 3 * first_time_ring\n    third_time_ring = second_time_ring / 2\n    total_ring = first_time_ring + second_time_ring + third_time_ring\n    result = total_ring\n    return result"}
{"output": "def solution():\n    \n    # Define the initial salary and the annual salary increase\n    initial_salary = 600\n    annual_salary_increase = 0.1\n\n    # Calculate Sylvie's annual salary after three more years of service\n    annual_salary = initial_salary * (1 + annual_salary_increase) * 3\n\n    # Display Sylvie's annual salary after three years of service\n    result = annual_salary\n    return result"}
{"output": "def solution():\n    \n    total_copies = 88000\n    marilyn_copies = total_copies / 10\n    harald_copies = marilyn_copies / 10\n    result = harald_copies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and gift bags needed per invited guest\n    guests = 16\n    gift_bags_per_guest = 0.75\n\n    # Calculate the total number of gift bags needed\n    total_gift_bags_needed = guests * gift_bags_per_guest\n\n    # Calculate the number of attendees that don't show up\n    attendees = total_gift_bags_needed / 4\n\n    # Calculate the total cost of the gift bags\n    gift_bags_cost = total_gift_bags_needed * 2\n\n    # return the result\n    result = gift_bags_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of potato salad needed for an adult dinosaur and a child\n    ADULT_SALAD_PER_DINOSAUR = 10\n    CHILD_SALAD_PER_ADULT = ADULT_SALAD_PER_ADULT / 2\n\n    # Define the number of adults and children at the picnic\n    num_adults = 20\n    num_children = 5\n\n    # Calculate the total amount of potato salad needed\n    total_potato_salad = (num_adults * ADULT_SALAD_PER_DINOSAUR) + (num_children * CHILD_SALAD_PER_ADULT)\n\n    # Convert the total amount of potato salad to pounds\n    total_potato_salad_pounds = total_potato_salad / 16\n\n    # Display the total amount of potato salad needed in pounds\n    result = total_potato_salad_pounds\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pets Cindy has\n    cindy_pets = 4\n\n    # Calculate the number of pets Marcia has\n    marcia_pets = cindy_pets + 2\n\n    # Calculate the number of pets Jan has\n    jan_pets = marcia_pets * 3\n\n    # Calculate the total number of pets\n    total_pets = cindy_pets + marcia_pets + jan_pets\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    # Define the age of James\n    james_age = 10\n\n    # Calculate the age of Corey\n    corey_age = james_age - 1\n\n    # Calculate the age of Amy\n    amy_age = jackson_age + 5\n\n    # Calculate the age of James\n    james_age = james_age + 2\n\n    # Calculate the age of Jackson\n    jackson_age = amy_age + 10\n\n    # Display the age of Jackson\n    result = jackson_age\n    return result"}
{"output": "def solution():\n    \n    lee_speed = 400\n    gerald_speed = lee_speed - 2\n    gerald_speed_increase = 0.1\n    gerald_speed = gerald_speed * (1 + gerald_speed_increase)\n    result = gerald_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and cats\n    dogs = 60\n    cats = dogs * 2\n\n    # Calculate the number of rabbits pets\n    rabbits_pets = (dogs + cats) - 12\n\n    # Calculate the total number of pets\n    total_pets = dogs + cats + rabbits_pets\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the fractions of boys and girls\n    total_students = 200\n    boys_fraction = 2/5\n    girls_fraction = 2/3\n\n    # Calculate the number of boys and girls\n    boys = total_students * boys_fraction\n    girls = total_students - boys\n\n    # Calculate the number of girls in the scout\n    girls_in_scout = girls * girls_fraction\n\n    # Calculate the number of girls not in the scout\n    girls_not_in_scout = girls - girls_in_scout\n\n    # Display the number of girls not in the scout\n    result = girls_not_in_scout\n    return result"}
{"output": "def solution():\n    \n    harry_slept = 9\n    james_slept = (2/3) * harry_slept\n    difference = harry_slept - james_slept\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the volume of each can of tomatoes\n    CAN_VOLUME = 16\n\n    # Define the number of tomatoes per can\n    TOMATOES_PER_CANVAS = 3\n\n    # Define the amount of sauce made\n    SAUCE_AMOUNT = 32\n\n    # Calculate the number of tomatoes used\n    tomatoes_used = SAUCE_AMOUNT / CAN_VOLUME / TOMATOES_PER_CANVAS\n\n    # Display the number of tomatoes used\n    result = tomatoes_used\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cars on the motorway\n    initial_cars = 30\n\n    # Calculate the number of cars that drive through in the first 15 minutes\n    first_15_cars = initial_cars\n\n    # Calculate the number of cars that drive through in the remaining 15 minutes\n    remaining_cars = initial_cars - first_15_cars\n\n    # Calculate the number of cars that drive through in the remaining 15 minutes\n    remaining_cars = remaining_cars * 20\n\n    # Calculate the number of cars that take an exit\n    exit_cars = 5\n\n    # Calculate the number of cars that drive through the first 15 minutes\n    first_15_cars = first_15_cars + remaining_cars - exit_cars\n\n    # Display the number of cars that drive through the first 15 minutes\n    result = first_15_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of potted plants\n    initial_plants = 2 * 40\n\n    # Define the number of potted plants given to friends and family tomorrow\n    friend_plants = 2\n    family_plants = 1\n\n    # Calculate the total number of potted plants\n    total_plants = initial_plants + friend_plants + family_plants\n\n    # Display the total number of potted plants\n    result = total_plants\n    return result"}
{"output": "def solution():\n    \n    fourth_friend_rings = 60\n    first_friend_rings = 20\n    second_friend_rings = first_friend_rings * 1.25\n    third_friend_rings = fourth_friend_rings + 10\n    total_rings = first_friend_rings + second_friend_rings + third_friend_rings\n    result = total_rings\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pages Solo needs to read\n    total_pages = 4 + 20 + 7 + 8\n\n    # Define the number of pages Solo has already read\n    pages_read = 15\n\n    # Calculate the number of pages Solo still needs to read\n    pages_left = total_pages - pages_read\n\n    # Calculate the average number of pages Solo needs to read per day\n    avg_pages_per_day = pages_left / 4\n\n    # Display the average number of pages Solo needs to read per day\n    result = avg_pages_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the number of glasses of water John drinks each week\n    WEEKDAY_GLASSES = 5\n    WEEKEND_GLASSES = 2\n\n    # Calculate the total number of glasses of water John drinks in a week\n    total_glasses = WEEKDAY_GLASSES * 5 + WEEKEND_GLASSES\n\n    # Display the total number of glasses of water John drinks in a week\n    result = total_glasses\n    return result"}
{"output": "def solution():\n    \n    # Define the distance between the oceanfront and the opposite inlandedge\n    DISTANCE = 42\n\n    # Define the time it takes to cover every 3 miles of the city\n    TIME_PER_3_MILES = 10\n\n    # Calculate the number of times the fog bank needs to cover the whole city\n    time_to_cover_one_mile = DISTANCE / 3\n    time_to_cover_two_miles = time_per_3_MILES * 2\n\n    # Calculate the total time it will take for the fog bank to cover the whole city\n    total_time = time_to_cover_one_mile + time_to_cover_two_miles\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jigsaw pieces\n    total_pieces = 1000\n\n    # Calculate the number of pieces placed on the board\n    board_pieces = total_pieces // 4\n\n    # Calculate the number of remaining pieces\n    remaining_pieces = total_pieces - board_pieces\n\n    # Calculate the number of pieces placed on the mom\n    mom_pieces = remaining_pieces // 3\n\n    # Calculate the number of pieces left to be placed\n    pieces_left = remaining_pieces - mom_pieces\n\n    # Display the number of pieces left to be placed\n    result = pieces_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Amir eats\n    amir_cookies = 5\n\n    # Calculate the number of cookies Cody eats\n    cody_cookies = 3 * amir_cookies\n\n    # Calculate the total number of cookies they eat together\n    total_cookies = amir_cookies + cody_cookies\n\n    # Display the total number of cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each box and the wall\n    box_length = 5\n    box_width = 6\n    box_height = 4\n    wall_thickness = 1\n\n    # Calculate the volume of each box\n    box_volume = box_length * box_width * box_height\n\n    # Calculate the total volume of all 3 boxes\n    total_volume = box_volume * 3\n\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    total_hours = 7\n    monday_tuesday_episodes = 1\n    wednesday_episodes = 1\n    thursday_episodes = 1\n    friday_episodes = 2\n    total_time = (monday_tuesday_episodes + wednesday_episodes + thursday_episodes + friday_episodes) * 60\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Henry wants to make last year\n    cookies_last_year = 110 / 2\n\n    # Define the number of cookies Henry actually baked\n    cookies_original = cookies_last_year + 15\n\n    # Define the number of cookies Henry dropped out\n    cookies_dropped = 5\n\n    # Calculate the number of cookies Henry baked last year\n    cookies_last_year = cookies_original - cookies_dropped\n\n    # Display the number of cookies Henry baked last year\n    result = cookies_last_year\n    return result"}
{"output": "def solution():\n    \n    price_per_gallon = 3.00\n    cashback_per_gallon = 0.20\n    gallons_bought = 10\n    total_price = price_per_gallon * gallons_bought\n    total_cashback = cashback_per_gallon * gallons_bought\n    net_price = total_price - total_cashback\n    result = net_price\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of roll-ups\n    total_rollups = 2 * 24 + 3 * 14\n\n    # Calculate the average number of roll-ups they ate\n    average_rollups = total_rollups / 2\n\n    # Display the average number of roll-ups they ate\n    result = average_rollups\n    return result"}
{"output": "def solution():\n    \n    water_per_ten_feet = 2 / 10\n    time_to_row_twenty_feet = 16\n    time_to_shore = 64\n    total_water_taken = water_per_ten_feet * time_to_row_twenty_feet * time_to_shore\n    result = total_water_taken\n    return result"}
{"output": "def solution():\n    \n    # Define the number of teachers and lessons per day\n    NUM_TEACHERS = 4\n    LESSONS_PER_TEACHER = 2\n\n    # Calculate the total number of lessons per day\n    total_lessons = NUM_TEACHERS * LESSONS_PER_TEACHER\n\n    # Calculate the number of whiteboard cleaned per day\n    whiteboard_cleaned = total_lessons * 3\n\n    # Display the number of whiteboard cleaned per day\n    result = whiteboard_cleaned\n    return result"}
{"output": "def solution():\n    \n    # Define the number of flowers Ryan plants per day and the number of days\n    FLOWER_PER_DAY = 2\n    DAYS = 15\n\n    # Calculate the total number of flowers Ryan plants\n    total_planted = FLOWER_PER_DAY * DAYS\n\n    # Calculate the number of flowers Ryan has left\n    remaining_flowers = total_planted - 5\n\n    # Display the number of flowers Ryan has left\n    result = remaining_flowers\n    return result"}
{"output": "def solution():\n    \n    jamal_phone_capacity = 1800\n    brittany_phone_capacity = jamal_phone_capacity / 6\n    brittany_birds_capacity = brittany_phone_capacity / 50\n    ducks_capacity = jamal_phone_capacity - brittany_birds_capacity\n    result = ducks_capacity\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the 2 x 4 x 10 boards\n    cost_2x4 = 10 * 10\n\n    # Calculate the cost of the 5 4 x 4 x 10 boards\n    cost_5x4 = 16 * 10\n\n    # Calculate the total cost of the boards\n    total_cost = cost_2x4 + cost_5x4\n\n    # Calculate the total revenue from selling the boards\n    revenue = 5 * 16\n\n    # Calculate the profit\n    profit = revenue - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of sugar to water\n    sugar_to_water_ratio = 7/13\n\n    # Calculate the total teaspoons of sugar and cups of water used\n    total_ratio = 7 + 13\n    total_teaspoons = 120\n\n    # Calculate the number of teaspoons of sugar used\n    sugar_teaspoons = (sugar_to_water_ratio / total_ratio) * total_teaspoons\n\n    # Display the number of teaspoons of sugar used\n    result = sugar_teaspoons\n    return result"}
{"output": "def solution():\n    \n    shoes_per_child = 2\n    num_children = 3\n    cost_per_shoe = 60\n    total_shoes = shoes_per_child * num_children\n    total_cost = total_shoes * cost_per_shoe\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of containers of imported vehicles and the number of vehicles per container\n    containers_of_imported = 2\n    vehicles_per_container = 5\n\n    # Calculate the total number of vehicles in the first day\n    total_vehicles_first_day = containers_of_imported * vehicles_per_container\n\n    # Calculate the total number of vehicles in the second day\n    total_vehicles_second_day = 30 - total_vehicles_first_day\n\n    # Calculate the number of containers of imported vehicles on the second day\n    containers_of_imported_second_day = total_vehicles_second_day / vehicles_per_container\n\n    # Return the result\n    result = containers_of_imported_second_day\n    return result"}
{"output": "def solution():\n    \n    # Calculate Lylah's salary 4 years ago\n    lylah_salary_4_years_ago = 40000 * 1.3\n\n    # Calculate Adrien's salary 4 years ago\n    adrien_salary_4_years_ago = lylah_salary_4_years_ago * 1.4\n\n    # Calculate Adrien's new salary\n    adrien_salary_new = adrien_salary_4_years_ago * 1.4\n\n    # Calculate the total salary the two were receiving four years later\n    total_salary_new = adrien_salary_new + lylah_salary_new\n\n    # Display the total salary the two were receiving four years later\n    result = total_salary_new\n    return result"}
{"output": "def solution():\n    \n    pads_per_week = 2\n    sheets_per_pad = 30\n    weeks_per_month = 4\n    total_sheets_per_week = pads_per_week * sheets_per_pad * weeks_per_month\n    total_sheets_per_month = total_sheets_per_week * weeks_per_month\n    result = total_sheets_per_month\n    return result"}
{"output": "def solution():\n    \n    morisette_apples = 5\n    morisette_oranges = 8\n    kael_apples = 2 * morisette_apples\n    kael_oranges = morisette_oranges / 2\n    total_fruits = morisette_apples + morisette_oranges + kael_apples + kael_oranges\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Sadie slept on Monday\n    monday_hours = 8\n\n    # Calculate the number of hours Sadie slept on the next two days\n    next_two_days_hours = monday_hours - 2\n\n    # Calculate the total number of hours Sadie slept in the first two days\n    first_two_days_hours = monday_hours + next_two_days_hours\n\n    # Calculate the number of hours Sadie slept on the rest of the week\n    rest_of_week_hours = first_two_days_hours + 1\n\n    # Calculate the total number of hours Sadie slept in the week\n    total_hours = first_two_days_hours + rest_of_week_hours\n\n    # Display the total number of hours Sadie slept\n    result = total_hours\n    return result"}
{"output": "def solution():\n    # Calculate the distance Rosie can run in the first 3 hours\n    distance_first_three_hours = 10 * 3\n\n    # Calculate the distance Rosie can run in the remaining 3 hours\n    distance_remaining_three_hours = 5 * 3\n\n    # Calculate the total distance Rosie can run in 7 hours\n    total_distance = distance_first_three_hours + distance_remaining_three_hours\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stamped letters\n    stamped_letters = 60\n\n    # Calculate the number of stamped letters\n    stamped_stamps = stamped_letters / 3\n\n    # Calculate the remaining number of stamped letters\n    remaining_stamps = stamped_letters - 30\n\n    # Calculate the total number of letters in the pile\n    total_letters = 60 + remaining_stamps + 30\n\n    # Display the total number of letters in the pile\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    initial_spoons = 12\n    new_spoons = 5\n    used_spoons = 3\n    total_spoons = initial_spoons + new_spoons - used_spoons\n    result = total_spoons\n    return result"}
{"output": "def solution():\n    \n    chicken_sausages = 38\n    fish_sausages = chicken_sausages + 6\n    total_sausages = chicken_sausages + fish_sausages\n    result = total_sausages\n    return result"}
{"output": "def solution():\n    \n    lily_friends = 50\n    amy_friends = lily_friends + 20\n    total_friends = lily_friends + amy_friends\n    result = total_friends\n    return result"}
{"output": "def solution():\n    num_watermelons = 4\n    watermelon_price = 3 * 15\n\n    num_peppers = 20\n    pepper_price = 15\n\n    num_oranges = 10\n    orange_price = watermelon_price - 5\n\n    # Calculate the total cost of all watermelons\n    total_watermelon_cost = num_watermelons * watermelon_price\n\n    # Calculate the total cost of all peppers\n    total_pepper_cost = num_peppers * pepper_price\n\n    # Calculate the total cost of all oranges\n    total_orange_cost = num_oranges * orange_price\n\n    # Calculate the total cost of all items\n    total_cost = total_watermelon_cost + total_pepper_cost + total_orange_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    num_people_per_day = 500\n    patients_per_day = num_people_per_day / 24\n    doctors_charge_rate = 150\n    hospital_charge_rate = 200\n    total_patients_seen = patients_per_day * 60\n    total_doctors_charge = doctors_charge_rate * total_patients_seen\n    total_hospital_charge = hospital_charge_rate * total_patients_seen\n    total_profit = total_hospital_charge - total_doctors_charge\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of seasonal workers\n    num_workers = 60\n\n    # Calculate the number of elves that quit after children vomit\n    elves_quit_after_children = num_workers // 3\n\n    # Calculate the number of remaining elves\n    remaining_elves = num_workers - elves_quit_after_children\n\n    # Calculate the number of elves that quit after kids kick their shins\n    elves_quit_after_kids = 10\n\n    # Calculate the number of elves left\n    elves_left = remaining_elves - elves_quit_after_kids\n\n    # Display the number of elves left\n    result = elves_left\n    return result"}
{"output": "def solution():\n    \n    joseph_in_may = 500\n    june_in_june = joseph_in_may - 60\n    total_expenditure = joseph_in_may + june_in_june\n    result = total_expenditure\n    return result"}
{"output": "def solution():\n    \n    pam_rides = 2\n    fred_rides = 4\n    luge_rides = 2\n    tickets_per_ride = 6\n    total_tickets = (pam_rides + fred_rides) * luge_rides * tickets_per_ride\n    result = total_tickets\n    return result"}
{"output": "def solution():\n    \n    # Define the number of miles walked on Monday\n    monday_miles = 4\n\n    # Calculate the number of miles walked on Tuesday\n    tuesday_miles = monday_miles * 6\n\n    # Calculate the total number of miles walked on Monday through Wednesday\n    total_miles = 41\n\n    # Calculate the number of miles walked on Wednesday\n    wednesday_miles = total_miles - monday_miles - tuesday_miles\n\n    # Display the number of miles walked on Wednesday\n    result = wednesday_miles\n    return result"}
{"output": "def solution():\n    \n    car_washes_per_month = 4\n    cost_per_car_wash = 15\n    months_per_year = 12\n    total_cost = car_washes_per_month * cost_per_car_wash * months_per_year\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of video games Brian has\n    brian_games = 20\n\n    # Calculate the number of video games Bobby has\n    bobby_games = 3 * brian_games - 5\n\n    # Display the number of video games Bobby has\n    result = bobby_games\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of unicorns\n    total_unicorns = 27\n\n    # Calculate the number of unicorns in the Scottish Highlands\n    highlands_unicorns = total_unicorns // 3\n\n    # Calculate the number of female Scottish unicorns\n    female_unicorns = total_unicorns - highlands_unicorns\n\n    # Display the number of female Scottish unicorns\n    result = female_unicorns\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    SUB_PRICE = 7.5\n    CHIPS_PRICE = 1.5\n    COOKIES_PRICE = 1.0\n\n    # Calculate the total cost of the order\n    sub_cost = 2 * SUB_PRICE\n    chips_cost = 2 * CHIPS_PRICE\n    cookie_cost = 2 * COOKIES_PRICE\n    total_cost = sub_cost + chips_cost + cookie_cost\n\n    # Calculate the delivery fee\n    delivery_fee = total_cost * 0.2\n\n    # Add the tip\n    total_cost += 5\n\n    # Display the delivery fee\n    result = total_cost\n    return result"}
{"output": "def solution():\n    total_questions = 75\n    rate_first_test = 5\n    hours_first_test = 8\n    hours_second_test = 6\n\n    # Calculate the total number of questions Mark completed in the first test\n    questions_first_test = rate_first_test * hours_first_test\n\n    # Calculate the total number of questions Mark completed in the second test\n    questions_second_test = rate_second_test * hours_second_test\n\n    # Calculate the total number of questions Mark has completed so far\n    total_questions_completed = questions_first_test + questions_second_test\n\n    # Calculate the number of questions Mark has left incomplete\n    questions_left = total_questions - total_questions_completed\n    result = questions_left\n    return result"}
{"output": "def solution():\n    \n    blue_gumballs = 12\n    pink_gumballs = (4 * blue_gumballs) + 22\n    result = pink_gumballs\n    return result"}
{"output": "def solution():\n    \n    total_cars = 20\n    automatic_cars = 12\n    manual_cars = 4\n    semi_automatic_cars = total_cars - automatic_cars - manual_cars\n    percent_semi_automatic = (semi_automatic_cars / total_cars) * 100\n    result = percent_semi_automatic\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of bees\n    total_bees = 700\n\n    # Calculate the number of baby bees\n    baby_bees = total_bees / 3\n\n    # Calculate the number of queens\n    queens = baby_bees / 2\n\n    # Calculate the number of worker bees\n    worker_bees = baby_bees * 2\n\n    # Display the number of worker bees\n    result = worker_bees\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 2\n    part_time_pay = 10\n    days_per_week = 7\n    total_hours = hours_per_day * days_per_week\n    total_earnings = total_hours * part_time_pay\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    milk_cost = 2\n    eggs_cost = 3\n    light_bulbs_cost = 3\n    cups_cost = 3\n    roach_trips_cost = 4\n    total_cost = milk_cost + eggs_cost + light_bulbs_cost + cups_cost + roach_trips_cost\n    tax_rate = 10\n    tax_amount = total_cost * (tax_rate / 100)\n    total_cost_with_tax = total_cost + tax_amount\n    result = total_cost_with_tax\n    return result"}
{"output": "def solution():\n    \n    # Define the number of clients and the cost of bleach and cloths per client\n    num_clients = 5\n    bleach_cost = 2\n    cloths_cost = 5\n\n    # Calculate the total cost of bleach and cloths per week\n    total_cost_per_week = (num_clients * bleach_cost) + (num_clients * cloths_cost)\n\n    # Calculate the total income per week\n    total_income_per_week = total_cost_per_week * 7\n\n    # Calculate the profit per week\n    profit_per_week = 92 - total_income_per_week\n\n    # Return the result\n    result = profit_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hectares and pineapples per hectare\n    hectares = 10\n    pineapples_per_hectare = 100\n\n    # Calculate the total number of pineapples harvested in a year\n    pineapples_per_year = hectares * pineapples_per_hectare * 12\n\n    # Return the result\n    result = pineapples_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pieces in the boxed set\n    boxed_pieces = 500\n\n    # Calculate the number of pieces in the second box\n    second_boxed_pieces = boxed_pieces * 3\n\n    # Calculate the number of pieces in the third box\n    third_boxed_pieces = second_boxed_pieces / 4\n\n    # Calculate the total number of blocks picked up\n    total_blocks = boxed_pieces + second_boxed_pieces + third_boxed_pieces\n\n    # Display the total number of blocks picked up\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    # Calculate the number of bees Debra saw in the first 6 hours\n    first_six_hours = 30\n    second_six_hours = first_six_hours / 2\n    total_first_six_hours = first_six_hours + second_six_hours\n\n    # Calculate the number of bees Debra saw in the second 6 hours\n    second_six_hours = first_six_hours * 2\n    total_second_six_hours = second_six_hours + second_six_hours\n\n    # Calculate the number of bees Debra saw in the last 6 hours\n    last_six_hours = 6\n    total_last_six_hours = last_six_hours\n\n    # Calculate the total number of bees Debra saw in the last 6 hours\n    total_returned_bees = total_first_six_hours + total_second_six_hours\n    result = total_returned_bees\n    return result"}
{"output": "def solution():\n    adult_ticket_cost = 12\n    child_ticket_cost = 10\n    num_adults = 1\n    change_received = 8\n\n    # Calculate the total cost of admission\n    total_admission_cost = adult_ticket_cost * num_adults\n\n    # Calculate the total cost of children\n    total_child_cost = child_ticket_cost * num_children\n\n    # Calculate the total amount of money given to the cashier\n    total_given_money = total_admission_cost + total_child_cost\n    result = total_given_money\n    return result"}
{"output": "def solution():\n    \n    charlie_friends = 12\n    dorothy_friends = charlie_friends / 3\n    james_friends = dorothy_friends * 4\n    result = james_friends\n    return result"}
{"output": "def solution():\n    \n    # Define Steve's distance and speed\n    steve_distance = 3\n    steve_speed = 440\n\n    # Define Tim's distance and speed\n    tim_distance = 2\n    tim_speed = 264\n\n    # Calculate the time it takes for Steve to ride his bike\n    steve_time = steve_distance / steve_speed\n\n    # Calculate the time it takes for Tim to ride his skateboard\n    tim_time = tim_distance / tim_speed\n\n    # Calculate the total time of the race\n    total_time = steve_time + tim_time\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    tire_cost = 0.25\n    bike_tires = 5\n    trike_tires = 3\n    unicycle_tires = 1\n    total_tires = bike_tires + trike_tires + unicycle_tires\n    total_earnings = total_tires * tire_cost\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    packs_of_cookies = 10\n    cookies_per_pack = 6\n    cost_per_cookie = 0.10\n    total_cookies = packs_of_cookies * cookies_per_pack\n    total_cost = total_cookies * cost_per_cookie\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of french fries\n    initial_fries = 14\n\n    # Calculate the number of french fries eaten by the seagull\n    seagull_fries = initial_fries / 2\n\n    # Calculate the number of french fries remaining after the seagull\n    remaining_fries = initial_fries - seagull_fries\n\n    # Calculate the number of french fries eaten by the pigeons\n    pigeon_fries = 3 * 3\n\n    # Calculate the number of french fries remaining after the pigeons eat\n    remaining_fries -= pigeon_fries\n\n    # Calculate the number of french fries stole by the raccoon\n    raccoon_fries = remaining_fries * 2 / 3\n\n    # Calculate the number of french fries remaining after the raccoon stole\n    remaining_fries -= raccoon_fri"}
{"output": "def solution():\n    \n    monday_wednesday_friday_classes = 3 * 3\n    tuesday_thursday_classes = 2 * 2\n    total_classes_per_week = monday_wednesday_friday_classes + tuesday_thursday_classes\n    weeks_of_school = 16\n    total_hours_per_week = total_classes_per_week * weeks_of_school\n    total_hours = total_hours_per_week * weeks_of_school\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    rolls_per_day = 300\n    croissants_per_day = 120\n    baguettes_per_day = 60\n    roll_length = 4\n    croissant_length = 6\n    baguette_length = 2\n    total_roll_length = rolls_per_day * roll_length\n    total_croissant_length = croissants_per_day * croissant_length\n    total_baguette_length = baguettes_per_day * baguette_length\n    total_length = total_roll_length + total_croissant_length + total_baguette_length\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    monkey_bananas = 200\n    gorillas_bananas = 400\n    baboons_bananas = 100\n    total_bananas_needed = (monkey_bananas + gorillas_bananas + baboons_bananas) * 2\n    result = total_bananas_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the football field in yards\n    football_field_length = 100\n\n    # Calculate the total distance Blake runs\n    blake_distance = 2 * football_field_length\n\n    # Calculate the total distance Kelly runs\n    kelly_distance = 2 * football_field_length\n\n    # Calculate the total distance Kelly runs\n    kelly_total_distance = kelly_distance\n\n    # Calculate the total distance Blake runs\n    blake_total_distance = blake_distance * 15\n\n    # Calculate the total distance Kelly runs\n    kelly_total_distance = kelly_total_distance * 34\n\n    # Calculate the difference in distance between the winner and loser\n    difference = winner_total_distance - kelly_total_distance\n\n    # Return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    pens_cost = 4 * 1.5\n    notebooks_cost = 2 * 4\n    bond_paper_cost = 20\n    total_cost = pens_cost + notebooks_cost + bond_paper_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    initial_tadpoles = 11\n    lily_pad_tadpoles = 6\n    rock_tadpoles = 2\n    remaining_tadpoles = initial_tadpoles - lily_pad_tadpoles - rock_tadpoles\n    result = remaining_tadpoles\n    return result"}
{"output": "def solution():\n    \n    # Define the depth of the water on Monday\n    monday_depth = 17\n\n    # Define the additional depth of the water on Tuesday\n    tuesday_depth = 7\n\n    # Calculate the total depth of the water\n    total_depth = monday_depth + tuesday_depth\n\n    # Calculate the depth of the water on Wednesday\n    wednesday_depth = (2/3) * total_depth\n\n    # Display the depth of the water on Wednesday\n    result = wednesday_depth\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish caught by Anakin\n    anakin_starfish = 10\n    anakin_sea_horses = 6\n    anakin_clownfish = 3\n\n    # Calculate the number of fish caught by Locsin\n    Locsin_starfish = anakin_starfish - 5\n    Locsin_sea_horses = anakin_sea_horses - 3\n    Locsin_clownfish = anakin_clownfish + 2\n\n    # Calculate the total number of fish caught\n    total_fish = anakin_starfish + anakin_sea_horses + anakin_clownfish + Locsin_starfish + Locsin_sea_horses + Locsin_clownfish\n\n    # Display the total number of fish caught\n    result = total_fish\n    return result"}
{"output": "def solution():\n    original_price = 20  # The original price of a bag of marbles is $20\n    increased_price = 0.2 * original_price  # The price increases by 20% every two months\n    months = 36  # The bag of marbles cost after 36 months\n\n    # Calculate the total cost of a bag of marbles after 36 months\n    total_cost = original_price + (increased_price * months)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_red_cars = 5\n    red_car_price = 4\n\n    num_action_figures = 3\n    action_figure_price = 5\n\n    doll_price = 3 * action_figure_price\n\n    # Calculate the total cost of all red cars\n    total_red_car_cost = num_red_cars * red_car_price\n\n    # Calculate the total cost of all action figures\n    total_action_figure_cost = num_action_figures * action_figure_price\n\n    # Calculate the total cost of all doll\n    total_doll_cost = doll_price\n\n    # Calculate the total cost of all toys\n    total_toy_cost = total_red_car_cost + total_action_figure_cost + total_doll_cost\n    result = total_toy_cost\n    return result"}
{"output": "def solution():\n    \n    accountant_charge = 90\n    freelance_hours = 8\n    missed_income = 35 * freelance_hours\n    total_income = missed_income + accountant_charge\n    difference = total_income - freelance_hours\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    budget = 1500\n    machine_cost = 1090\n    scanner_cost = 157\n    cd_burner_cost = 74\n    printer_cost = 102\n    total_accessories_cost = machine_cost + scanner_cost + cd_burner_cost + printer_cost\n    total_money = budget - total_accessories_cost\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    eggs_per_flan = 3\n    flans_needed = 15\n    eggs_per_basket = 9\n    total_eggs = eggs_per_flan * flans_needed\n    babysitting_eggs = total_eggs // eggs_per_basket\n    result = babysitting_eggs\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Brooke's age is x\n    # Then Seth's age is 2x\n    # In 2 years, their ages will be 28\n    # So, x + 2 = 28\n    # Simplifying the equation, we get:\n    # 2x + 2 = 28\n    # Solving for x, we get:\n    x = (28 - 2) / 2\n    # Seth is twice as old as Brooke\n\n    # Display Seth's age\n    result = x\n    return result"}
{"output": "def solution():\n    \n    # Define Ethal's money\n    ethal_money = 8\n\n    # Calculate Jimmy's money\n    jimmy_money = 2 * ethal_money + 2\n\n    # Display Jimmy's money\n    result = jimmy_money\n    return result"}
{"output": "def solution():\n    miles_per_day = 20  # Pancho walks 20 miles a day\n    weekend_miles = 10  # Pancho walks 10 miles on weekends\n    days_per_week = 7  # There are 7 days in a week\n\n    # Calculate the total number of miles Pancho walks in a week\n    total_miles = miles_per_day * days_per_week + weekend_miles\n    result = total_miles\n    return result"}
{"output": "def solution():\n    \n    hat_cost = 25\n    jacket_cost = 3 * hat_cost\n    total_hat_jacket_cost = hat_cost + jacket_cost\n    pants_cost = total_hat_jacket_cost / 2\n    total_uniform_cost = hat_cost + jacket_cost + pants_cost\n    result = total_uniform_cost\n    return result"}
{"output": "def solution():\n    \n    spiders = 80\n    spider_legs = 8\n    insects = 90\n    insect_legs = 6\n    rare_invertebrates = 3\n    rare_invertebrate_legs = 10\n    total_spider_legs = spiders * spider_legs\n    total_insect_legs = insects * insect_legs\n    total_rare_invertebrate_legs = rare_invertebrates * rare_invertebrate_legs\n    total_legs = total_spider_legs + total_insect_legs + total_rare_invertebrate_legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the age of Sally Thirtytwo\n    sally_thirtytwo_age = 8\n\n    # Calculate the age of Granny Red\n    granny_red_age = 2 * sally_thirtytwo_age\n\n    # Calculate the age of Sally Four\n    sally_four_age = sally_thirtytwo_age\n\n    # Calculate the age of Granny Red\n    granny_red_age = 2 * granny_red_age\n\n    # Calculate the age of Sally Two\n    sally_two_age = granny_red_age + 3\n\n    # Calculate the total age of the four birds\n    total_age = sally_thirtytwo_age + granny_red_age + sally_four_age + sally_two_age\n\n    # return the result\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum payment for each debt\n    PAYMENT_1 = 300\n    CARD_PAYMENT = 200\n    MORTGAGE_PAYMENT = 500\n\n    # Calculate the monthly payment for each debt\n    payment_1 = PAYMENT_1 * 12\n    payment_2 = CARD_PAYMENT * 12\n    payment_3 = MORTGAGE_PAYMENT * 12\n\n    # Calculate the total monthly payment for all debts\n    total_payment = payment_1 + payment_2 + payment_3\n\n    # Calculate the amount Jessica needs to pay\n    additional_payment = total_payment * 1.5\n\n    # Calculate the total amount Jessica needs to pay in a year\n    total_payment_year = total_payment_year * 12\n\n    # Display the total amount Jessica needs to pay\n    result = total_payment_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of potatoes and the time to peel and cut each potato\n    num_potatoes = 60\n    peel_time = 1.5\n    cut_time = 5\n\n    # Calculate the total time to peel and cut all the potatoes\n    total_peel_time = peel_time * num_potatoes\n    total_cut_time = cut_time * num_potatoes\n\n    # Calculate the total time to finish prepping the potatoes\n    total_time = total_peel_time + total_cut_time\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    cost_per_gallon = 3\n    cost_per_sugar = 2\n    selling_price_per_glass = 0.5\n    glasses_per_gallon = 20\n    total_profit = 25\n    total_glasses = glasses_per_gallon * total_glasses\n    total_income = total_income + total_glasses * selling_price_per_gallon\n    cost_of_lemons = total_income / cost_per_gallon\n    result = cost_of_lemons\n    return result"}
{"output": "def solution():\n    \n    total_asians = 240\n    japanese_asians = 80\n    chinese_asians = total_asians - japanese_asians\n    boys_on_chinese_team = 60\n    girls_on_chinese_team = chinese_asians - boys_on_chinese_team\n    result = girls_on_chinese_team\n    return result"}
{"output": "def solution():\n    \n    monthly_income = 6000\n    rent = monthly_income / 4\n    car_fuel = monthly_income / 3\n    remaining_income = monthly_income - rent - car_fuel\n    daughter_expenses = 200\n    wife_budget = 700\n    donated_income = remaining_income / 2\n    total_expenses = daughter_expenses + wife_expenses\n    remaining_income -= total_expenses\n    remaining_income -= donated_income\n    result = remaining_income\n    return result"}
{"output": "def solution():\n    \n    # Define the number of crabs Bo has\n    bo_crabs = 40\n\n    # Calculate the number of crabs Monic has\n    monic_crabs = bo_crabs - 4\n\n    # Calculate the number of crabs Rani has\n    rani_crabs = monic_crabs + 10\n\n    # Calculate the total number of crabs the three have together\n    total_crabs = bo_crabs + monic_crabs + rani_crabs\n\n    # Display the total number of crabs\n    result = total_crabs\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 10\n    first_week_hours = 5\n    second_week_hours = 8\n    first_week_earnings = hourly_rate * first_week_hours\n    second_week_earnings = hourly_rate * second_week_hours\n    total_earnings = first_week_earnings + second_week_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    total_students = 80\n    winner_percent = 3/4\n    winner_votes = total_students * winner_percent\n    loser_votes = total_students * winner_votes\n    result = loser_votes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of white carnations\n    white_carnations = 200 * 5\n\n    # Calculate the number of red roses\n    red_roses = 4 * white_carnations\n\n    # Calculate the number of red roses to deliver by 5 pm\n    red_roses_to_deliver = red_roses - 5\n\n    # Display the number of red roses to deliver\n    result = red_roses_to_deliver\n    return result"}
{"output": "def solution():\n    \n    jan_age = 30\n    mark_age_two_years_ago = (jan_age / 2) + 5\n    jean_age = mark_age_two_years_ago + 2\n    result = jean_age\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the relay\n    relay_distance = 4 * 400\n\n    # Calculate the time it takes for each team to run their 400 meter leg\n    team1_time = 55\n    team2_time = 55\n\n    # Calculate the time it takes for each team to run their 400 meter leg\n    team3_time = 60\n    team4_time = team1_time + 3\n\n    # Calculate the total time it takes for both teams to run their 400 meter leg\n    team1_total_time = team1_time + team2_time\n    team2_total_time = team3_time + team4_time\n\n    # Calculate the difference in time between the two teams\n    time_difference = abs(team1_total_time - team2_total_time)\n\n    # Display the time difference\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the probability of rolling a six-sided die\n    DIE_PROBABILITY = 6\n\n    # Define the probability of rolling 2 even numbers\n    EVEN_PROBABILITY = 3\n\n    # Calculate the probability of rolling 2 even numbers\n    EVEN_PROBABILITY = EVEN_PROBABILITY * 2\n\n    # Calculate the probability of rolling 1 even number\n    EVEN_PROBABILITY = EVEN_PROBABILITY * 2 / EVEN_PROBABILITY\n\n    # Calculate the difference in probability\n    DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_DIE_"}
{"output": "def solution():\n    \n    mom_apples = 20\n    jenna_apples = mom_apples / 2\n    total_apples = mom_apples + jenna_apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of pieces of straw distributed among the small rodents\n    total_straw = 160\n\n    # Calculate the number of pieces of straw given to the hamsters\n    hamster_straw = 10 * 5\n\n    # Calculate the number of pieces of straw distributed among the rabbits\n    rabbit_straw = total_straw // 20\n\n    # Calculate the number of pieces of straw given among the rats\n    rat_straw = total_straw - hamster_straw - rabbit_straw\n\n    # Calculate the number of rats among the small rodents\n    num_rats = rat_straw // 3\n\n    # Display the number of rats among the small rodents\n    result = num_rats\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount owed to Benedict\n    amount_owed = 100\n\n    # Calculate the interest earned after 3 months\n    interest_earned = amount_owed * 0.02\n\n    # Calculate the total amount owed after 3 months\n    total_amount_owed = amount_owed + interest_earned\n\n    # Display the total amount owed\n    result = total_amount_owed\n    return result"}
{"output": "def solution():\n    cost_per_bag = 20\n    cost_per_bag_transport = 2\n    total_profit = 400\n    selling_price_per_bag = 30\n\n    # Calculate the total cost of transporting all bags of wheat\n    total_cost = cost_per_bag_transport * 2\n\n    # Calculate the total revenue from selling all bags of wheat\n    total_revenue = total_profit - total_cost\n\n    # Calculate the number of bags of wheat sold\n    num_bags_sold = total_revenue / selling_price_per_bag\n    result = num_bags_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    TICKET_PRICE = 20.25\n    FOOD_PRICE = TICKET_PRICE - 4.5\n    RIDE_PRICE = 33\n\n    # Calculate the total cost of the tickets\n    tickets_cost = 3 * TICKET_PRICE\n\n    # Calculate the total cost of the food\n    food_cost = tickets_cost - FOOD_PRICE\n\n    # Calculate the total cost of the rides\n    rides_cost = 2 * RIDE_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = tickets_cost + food_cost + rides_cost\n\n    # Calculate the cost per person\n    cost_per_person = total_cost / 3\n\n    # Display the cost per person\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes in 3 hours\n    MINUTES_IN_3_HOURS = 3 * 60\n\n    # Define the number of peaches John can collect per minute\n    PEACHES_PER_MINUTE = 2\n\n    # Calculate the total number of peaches John collects\n    total_peaches = MINUTES_IN_3_HOURS * PEACHES_PER_MINUTE\n\n    # Display the total number of peaches John collects\n    result = total_peaches\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of insects needed per week and per duck\n    insects_per_week = 3.5\n    ducks_per_day = 10 / 7\n\n    # Calculate the amount of insects needed per day\n    insects_per_day = insects_per_week * ducks_per_day\n\n    # Display the amount of insects needed per day\n    result = insects_per_day\n    return result"}
{"output": "def solution():\n    # Calculate the number of trees Tom plants in 10 years\n    trees_planted = 10 * 10\n\n    # Calculate the number of trees Tom chops down in 10 years\n    trees_chopped = 2 * 10\n\n    # Calculate the number of trees Tom has left after 10 years\n    trees_left = 50 - (trees_planted - trees_chopped)\n\n    # Calculate the number of trees Tom deaths\n    deaths = 0.3 * trees_left\n\n    # Calculate the final number of trees Tom has left\n    final_trees = trees_left - deaths\n    result = final_trees\n    return result"}
{"output": "def solution():\n    \n    friday_flamingos = 18\n    saturday_flamingos = friday_flamingos / 3\n    sunday_flamingos = 18\n    total_flamingos = friday_flamingos + saturday_flamingos + sunday_flamingos\n    result = total_flamingos\n    return result"}
{"output": "def solution():\n    num_colors = 5\n    total_cost = 20\n    cost_per_crayon = 2\n\n    # Calculate the total number of crayons needed\n    total_crayons = num_colors\n\n    # Calculate the total cost of all crayons\n    total_cost = total_crayons * cost_per_crayon\n\n    # Calculate the change\n    change = total_cost - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    pencil_cost = 1.20\n    eraser_cost = 0.30\n    num_pens = 8\n\n    # Calculate the total cost of pencils\n    total_pencil_cost = pencil_cost * num_pens\n\n    # Calculate the total cost of eraser\n    total_eraser_cost = eraser_cost * num_pens\n\n    # Calculate the total cost of all pens\n    total_cost = total_pencil_cost + total_eraser_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_carrots = 200\n    restaurants = 40\n    carrots_per_restaurant = 2\n    carrots_used = restaurants * carrots_per_restaurant\n    carrots_not_used = total_carrots - carrots_used\n    result = carrots_not_used\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of inhabitants and the number of men and women\n    total_inhabitants = 23786\n    men = 8417\n    women = 9092\n\n    # Calculate the number of kids\n    kids = total_inhabitants - men - women\n\n    # Display the number of kids\n    result = kids\n    return result"}
{"output": "def solution():\n    \n    initial_cards = 20\n    cards_collected_first_month = 3 * initial_cards\n    cards_collected_second_month = cards_collected_first_month - 20\n    cards_collected_third_month = 2 * (cards_collected_first_month + cards_collected_second_month)\n    total_cards = initial_cards + cards_collected_first_month + cards_collected_second_month + cards_collected_third_month\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sentences Mark edits each week\n    sentences_per_week = 1000\n\n    # Calculate the number of sentences Mark receives from Publisher A\n    sentences_from_Publisher_A = sentences_per_week / 2\n\n    # Calculate Mark's earnings from Publisher B\n    earnings_from_Publisher_B = sentences_from_Publisher_A * 0.05\n\n    # Calculate Mark's earnings from both publishers\n    earnings_from_Publisher_B = earnings_from_Publisher_B * 2\n\n    # Calculate Mark's total earnings in a week\n    total_earnings = earnings_from_Publisher_A + earnings_from_Publisher_B\n\n    # Display Mark's earnings in cents\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    morning_pails = 5\n    afternoon_pails = 6\n    liters_per_pail = 5\n    total_liters = (morning_pails + afternoon_pails) * liters_per_pail\n    result = total_liters\n    return result"}
{"output": "def solution():\n    \n    # Define the initial reward and raise percentage\n    INITIAL_REWARD = 5000\n    RAISE_PERCENTAGE = 5\n\n    # Calculate the new salary after the raise\n    new_salary = INITIAL_REWARD * (1 + RAISE_PERCENTAGE / 100)\n\n    # Calculate the total earnings for the year\n    total_earnings = (2000 * new_salary) + INITIAL_REWARD\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    acre_count = 10\n    grapes_per_year = acre_count * 5\n    wine_per_ton = 2\n    total_wine_per_year = grapes_per_year * wine_per_ton\n    result = total_wine_per_year\n    return result"}
{"output": "def solution():\n    slices_per_sandwich = 2\n    slices_per_omelet = slices_per_sandwich + 1\n    num_sandwiches_per_day = 1\n    num_omelets_per_day = 3\n    slices_per_dish = 8\n\n    # Calculate the total number of slices of cheese used for sandwiches\n    total_sandwich_slices = slices_per_sandwich * num_sandwiches_per_day\n\n    # Calculate the total number of slices of cheese used for omelets\n    total_omelet_slices = slices_per_omelet * num_omelets_per_day\n\n    # Calculate the total number of slices of cheese used\n    total_cheese_slices = total_sandwich_slices + total_omelet_slices + slices_per_dish\n    result = total_cheese_slices\n    return result"}
{"output": "def solution():\n    \n    green_pens = 22\n    yellow_pens = 10\n    blue_bags = 6\n    red_bags = 2\n    blue_pens_per_bag = 9\n    red_pens_per_bag = 6\n    total_blue_pens = blue_bags * blue_pens_per_bag\n    total_red_pens = red_bags * red_pens_per_bag\n    total_pens = green_pens + yellow_pens + total_blue_pens + total_red_pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define the scores on the first five tests\n    test_scores = [89, 71, 92, 100, 86]\n\n    # Calculate the total number of tests needed\n    total_tests = sum(test_scores) / len(test_scores)\n\n    # Calculate the minimum score Brinley needs on the sixth test to get an average of 93\n    min_score = total_tests * 93 - sum(test_scores)\n\n    # Display the minimum score Brinley needs on the sixth test\n    result = min_score\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total distance Micheal did during the first 4 weeks\n    distance_first_week = 5 * 25 * 4\n\n    # Calculate the total distance Micheal did during the next 2 weeks\n    distance_second_week = 2 * 60 * 3\n\n    # Calculate the total distance Micheal did during the last 3 weeks\n    distance_third_week = 3 * 25 * 2\n\n    # Calculate the total distance Micheal did\n    total_distance = distance_first_week + distance_second_week + distance_third_week\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each chocolate bar and the number of candied apples\n    CHOCOLATE_BAR_WEIGHT = 40\n    APPLE_WEIGHT = CHOCOLATE_BAR_WEIGHT * 2\n\n    # Define the number of chocolate bars and candied apples\n    chocolate_bars = 25\n    candied_apples = 80\n\n    # Calculate the total weight of the chocolate bars\n    chocolate_bar_weight = chocolate_bars * CHOCOLATE_BAR_WEIGHT\n\n    # Calculate the total weight of the candied apples\n    apple_weight = candied_apples * APPLE_WEIGHT\n\n    # Calculate the total weight of the candy in grams\n    total_weight = chocolate_bar_weight + apple_weight\n\n    # Display the total weight in grams\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    monday_cakes = 4\n    tuesday_cakes = 3 * monday_cakes\n    wednesday_cakes = 5 * tuesday_cakes\n    total_cakes = monday_cakes + tuesday_cakes + wednesday_cakes\n    result = total_cakes\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of half a dozen cups\n    half_dozen_cups_cost = 6000 / 2\n\n    # Calculate the cost of 20 dozen cups\n    cost_of_20_dozen_cups = half_dozen_cups_cost - 1200\n\n    # Calculate the total cost of buying each cup\n    cost_of_each_cup = cost_of_20_dozen_cups / 20\n    result = cost_of_each_cup\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the jacket and shoes\n    jacket_cost = 30\n    shoes_cost = 20\n\n    # Calculate the total cost of the jacket and shoes\n    total_cost = jacket_cost + (2 * shoes_cost)\n\n    # Calculate the amount earned from babysitting kids\n    babysitting_earnings = 4 * 5\n\n    # Calculate the remaining amount needed to earn the lawn\n    remaining_amount = total_cost - babysitting_earnings\n\n    # Calculate the number of times Sara needs to mow the lawn\n    mowing_times = remaining_amount // 4\n\n    # Display the number of times Sara needs to mow the lawn\n    result = mowing_times\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced by each type of chicken per day\n    RED_CHICKEN_EGGS = 3\n    WHITE_CHICKEN_EGGS = 5\n\n    # Define the number of days Jerry collects eggs\n    DAYS = 42\n\n    # Calculate the total number of eggs collected\n    total_eggs = RED_CHICKEN_EGGS * DAYS\n\n    # Calculate the number of white chickens Jerry has\n    white_chickens = total_eggs - 2\n\n    # Calculate the number of red chickens Jerry has\n    red_chickens = (total_eggs - white_chickens) / RED_CHICKEN_EGGS\n\n    # Display the number of red chickens Jerry has\n    result = red_chickens\n    return result"}
{"output": "def solution():\n    # Calculate the total distance of the park\n    total_distance = 1.5 * 6\n\n    # Calculate the time it takes Gary to walk around the park\n    time_walked = total_distance / 3\n\n    result = time_walked\n    return result"}
{"output": "def solution():\n    \n    first_day_customers = 100\n    second_day_customers = first_day_customers + 50\n    total_customers = 500\n    third_day_customers = total_customers - first_day_customers - second_day_customers\n    result = third_day_customers\n    return result"}
{"output": "def solution():\n    \n    # Define the rate of leak in gallons per minute\n    leak_rate = 4\n\n    # Define the initial amount of water in the big pool\n    big_pool_water = 0\n\n    # Calculate the amount of water in the small pool\n    small_pool_water = 0\n\n    # Calculate the amount of water in the big pool 4 minutes ago\n    big_pool_time_ago = 4 * (small_pool_water / leak_rate)\n\n    # Calculate the amount of water in the big pool 4 minutes ago\n    big_pool_time_now = 4 * big_pool_time_ago\n\n    # Calculate the amount of water in the small pool\n    small_pool_water = big_pool_time_now - big_pool_time_now\n\n    # Display the amount of water in the small pool\n    result = small_pool_water\n    return result"}
{"output": "def solution():\n    \n    shoes_price = 320\n    belt_price = 32\n    total_price = shoes_price + belt_price\n    hourly_rate = 8\n    hours_needed = total_price / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    borrowed_amount = 2000\n    return_amount = borrowed_amount * 0.1\n    monthly_payment = 165\n    total_payment = monthly_payment * 12\n    remaining_balance = borrowed_amount - return_amount - total_payment\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    roses = 4\n    dahlias = roses + 7\n    total_flowers = roses + dahlias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define Harriet's age\n    harriet_age = 21\n\n    # Calculate Adrian's age\n    adrian_age = harriet_age * 3\n\n    # Calculate Zack's age\n    zack_age = harriet_age / 2\n\n    # Calculate the total age of the three in three years\n    total_age = harriet_age + adrian_age + zack_age + 3\n\n    # Calculate the average age of the three in three years\n    average_age = total_age / 3\n\n    # Display the average age\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    total_points = 251\n    naomi_points = 68\n    yuri_points = (naomi_points / 2) + 10\n    brianna_points = naomi_points + 17\n    jojo_points = total_points - naomi_points - yuri_points - brianna_points\n    result = jojo_points\n    return result"}
{"output": "def solution():\n    crossword_time = 10  # It takes Carmen 10 minutes to finish a crossword puzzle\n    sudoku_time = 5  # It takes Carmen 5 minutes to finish a sudoku puzzle\n    num_crossword_puzzles = 3  # Carmen solved 3 crossword puzzles\n    num_sudoku_puzzles = 8  # Carmen solved 8 sudoku puzzles\n\n    # Calculate the total time Carmen spent playing the crossword puzzles\n    total_crossword_time = crossword_time * num_crossword_puzzles\n\n    # Calculate the total time Carmen spent playing the sudoku puzzles\n    total_sudoku_time = sudoku_time * num_sudoku_puzzles\n\n    # Calculate the total time Carmen spent playing the games\n    total_time = total_crossword_time + total_sudoku_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    initial_water = 120\n    used_water = 90\n    remaining_water = initial_water - used_water\n    rainwater = 2 * remaining_water\n    total_water = remaining_water + rainwater\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    geraniums = 90\n    petunias = geraniums - 40\n    total_flowers = geraniums + petunias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define the amount spent on advertising for the first year\n    ad_1_spending = 15000\n\n    # Calculate the amount spent on advertising for the second year\n    ad_2_spending = ad_1_spending / 3\n\n    # Calculate the total amount spent on advertising for the two years\n    total_spending = ad_1_spending + ad_2_spending\n\n    # Display the total amount spent on advertising\n    result = total_spending\n    return result"}
{"output": "def solution():\n    \n    carlos_canoe_rental_rate = 30\n    benji_banana_boat_raft_rate = 18\n    carlos_canoe_hours = 3\n    benji_banana_boat_hours = 5\n    carlos_total_canoe_rental = carlos_canoe_rental_rate * carlos_canoe_hours\n    benji_total_banana_boat_raft_rental = benji_banana_boat_raft_rate * benji_banana_boat_hours\n    total_rental_cost = carlos_total_canoe_rental + benji_total_banana_boat_raft_rental\n    result = total_rental_cost\n    return result"}
{"output": "def solution():\n    \n    bus_days = 6\n    car_days = bus_days / 2\n    total_days = bus_days + car_days\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    fire_type = 30\n    grass_type = 20\n    water_type = 40\n    lost_water_type = 8\n    bought_grass_type = 14\n    total_cards = fire_type + grass_type + water_type - lost_water_type + bought_grass_type\n    percentage_chance = (water_type / total_cards) * 100\n    result = round(percentage_chance)\n    return result"}
{"output": "def solution():\n    \n    base_burrito = 6.5\n    meat_cost = 2\n    cheese_cost = 1\n    avocado_cost = 1\n    sauces_cost = 2 * 0.25\n    total_cost = base_burrito + meat_cost + cheese_cost + avocado_cost + sauces_cost\n    upgrade_cost = 3\n    total_cost += upgrade_cost\n    gift_card_cost = 5\n    remaining_cost = total_cost - gift_card_cost\n    result = remaining_cost\n    return result"}
{"output": "def solution():\n    \n    kalinda_pieces_per_minute = 4\n    mom_pieces_per_minute = kalinda_pieces_per_minute / 2\n    total_pieces = 360\n    kalinda_hours = total_pieces / kalinda_pieces_per_minute\n    mom_hours = total_pieces / mom_pieces_per_minute\n    total_hours = kalinda_hours + mom_hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    total_watermelons = 120\n    harvested_watermelons = total_watermelons * 0.3\n    remaining_watermelons = total_watermelons - harvested_watermelons\n    ready_for_harvest = remaining_watermelons * 0.75\n    not_ready_for_harvest = remaining_watermelons - ready_for_harvest\n    result = not_ready_for_harvest\n    return result"}
{"output": "def solution():\n    num_cars = 12\n    car_price = 20000\n    tax_rate = 0.1\n    registration_fee = 1000\n\n    # Calculate the total cost of all cars before tax\n    total_cars_cost = num_cars * car_price\n\n    # Calculate the total cost of taxes\n    tax_cost = total_cars_cost * tax_rate\n\n    # Calculate the total cost of registration\n    registration_cost = num_cars * registration_fee\n\n    # Calculate the total cost of everything\n    total_cost = total_cars_cost + tax_cost + registration_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of shells collected on Monday\n    monday_shells = 20 + 5\n\n    # Calculate the number of shells collected on Tuesday\n    tuesday_shells = 2 * monday_shells\n\n    # Display the number of shells collected on Tuesday\n    result = tuesday_shells\n    return result"}
{"output": "def solution():\n    \n    ants = 50\n    bugs = ants / 2\n    total_insects = ants + bugs\n    result = total_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of penguins\n    initial_penguins = 36\n\n    # Calculate the number of penguins that jump in and swim in the ocean\n    jump_in_ocean = initial_penguins / 3\n\n    # Calculate the number of penguins that go in the cave\n    go_in_cave = initial_penguins / 3\n\n    # Calculate the number of penguins still left sunbathing\n    remaining_penguins = initial_penguins - jump_in_ocean - go_in_cave\n\n    # Display the number of penguins still left sunbathing\n    result = remaining_penguins\n    return result"}
{"output": "def solution():\n    \n    girlfriend_tomatoes = 2 * 6\n    total_tomatoes = girlfriend_tomatoes + 6\n    tomatoes_per_week = total_tomatoes * 7\n    vines_needed = tomatoes_per_week // 3\n    result = vines_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and slices per friend\n    num_friends = 20\n    slices_per_friend = 4\n\n    # Calculate the total number of slices needed\n    total_slices = num_friends * slices_per_friend\n\n    # Calculate the number of pizzas needed\n    num_pizzas = total_slices // 8\n\n    # Display the number of pizzas needed\n    result = num_pizzas\n    return result"}
{"output": "def solution():\n    \n    pens_per_empty_pen = 5\n    pens_bought = 25\n    pens_made = pens_per_empty_pen + 1\n    total_pens = pens_bought + pens_made\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define Johnny's allowance and additional money\n    ALLOWANCE = 20\n    ADDITIONAL_MONEY = 10\n\n    # Calculate Johnny's total allowance after a year\n    total_allowance = ALLOWANCE + ADDITIONAL_MONEY\n\n    # Calculate Johnny's total money after a year\n    total_money = total_allowance * 3\n\n    # Display Johnny's total money after a year\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    jessa_age = 20\n    joan_age = jessa_age + 5\n    mary_age = joan_age - 2\n    sum_of_ages = jessa_age + joan_age + mary_age\n    result = sum_of_ages\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students in the hall\n    total_students = 1000\n\n    # Calculate the number of students who went out through exit A\n    a_students = total_students * 0.3\n\n    # Calculate the number of remaining students\n    remaining_students = total_students - a_students\n\n    # Calculate the number of students who went out through exit B\n    b_students = remaining_students * (3/5)\n\n    # Calculate the number of students who went out through exit C\n    c_students = total_students - a_students - b_students\n\n    # Display the number of students who went out through exit C\n    result = c_students\n    return result"}
{"output": "def solution():\n    \n    john_candies = 54\n    robert_candies = john_candies / 2\n    james_candies = robert_candies + 6\n    difference = john_candies - james_candies\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    dolly_books = 2\n    pandora_books = 1\n    both_books = (dolly_books + pandora_books) * 2\n    total_books = dolly_books + pandora_books + both_books\n    result = total_books\n    return result"}
{"output": "def solution():\n    num_people = 5\n    num_penpals = 2\n    num_letters_per_penpal = 2\n    num_pages_per_letter = 5\n    num_minutes_per_page = 6\n\n    # Calculate the total number of letters sent per week\n    total_letters_per_week = num_people * num_letters_per_penpal\n\n    # Calculate the total number of pages sent per week\n    total_pages_per_week = total_letters_per_week * num_pages_per_letter\n\n    # Calculate the total number of minutes Mike can write per week\n    total_minutes_per_week = total_pages_per_week * num_minutes_per_page\n\n    # Convert the total minutes to hours\n    total_hours = total_minutes_per_week / 60\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of minutes in Jason's phone plan\n    initial_minutes = 1000\n\n    # Define the number of days in Jason's month\n    days_in_month = 30\n\n    # Define the number of minutes Jason has a call with his boss each day\n    call_with_boss = 15\n\n    # Define the additional minutes Jason has\n    extra_minutes = 300\n\n    # Calculate the total number of minutes Jason has\n    total_minutes = initial_minutes + call_with_boss + extra_minutes\n\n    # Calculate the number of minutes Jason has left\n    minutes_left = total_minutes - total_minutes\n\n    # Display the number of minutes Jason has left\n    result = minutes_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of fries\n    initial_fries = 24\n\n    # Kyle took 5 fries\n    kyle_fries = 5\n\n    # Billy took twice as many as Kyle\n    billy_fries = 2 * kyle_fries\n\n    # Colby took 3 less than Kyle's fries\n    colby_fries = kyle_fries - 3\n\n    # Calculate the total number of fries taken by Griffin\n    total_fries_taken = kyle_fries + billy_fries + colby_fries\n\n    # Calculate the number of fries Ginger gave Griffin\n    ginger_fries = initial_fries - total_fries_taken\n\n    # Display the number of fries Ginger gave Griffin\n    result = ginger_fries\n    return result"}
{"output": "def solution():\n    # Calculate the total number of snails in both aquariums\n    total_snails = 4 + 32\n\n    # Calculate the difference between the number of snails in the two aquariums and the number of fish in both aquariums\n    difference = 2 * total_snails\n\n    # Calculate the number of fish in each aquarium\n    fish_per_aquarium = (total_snails + difference) / 2\n    result = fish_per_aquarium\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 250\n    hours_per_day = 6\n    times_per_week = 4\n    weeks_to_finish = 5\n    total_hours = hours_per_day * times_per_week * weeks_to_finish\n    total_cost = hourly_rate * total_hours\n    discount = total_cost * 0.1\n    final_cost = total_cost - discount\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    total_cost = 12 + 43 + 15 + 4 + 22\n    num_people = 3\n    cost_per_person = total_cost / num_people\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    bags_of_onions = 4\n    weight_per_bag = 50\n    cost_per_pound = 1.5\n    total_weight = bags_of_onions * weight_per_bag\n    total_cost = total_weight * cost_per_pound\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of cookies Sue ate on Monday\n    monday_cookies = 4 * 5\n\n    # Calculate the number of cookies Sue ate on Tuesday\n    tuesday_cookies = 2 * monday_cookies\n\n    # Calculate the total number of cookies Sue ate\n    total_cookies = monday_cookies + tuesday_cookies + 5 + 13\n\n    # Calculate the difference between the number of cookies Sue and her sister consume\n    calories_difference = total_cookies - 200\n    result = calories_difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of students in the school\n    total_students = 20 * 3\n\n    # Calculate the number of girls in the first two classes\n    girls_in_first_two_classes = 15 + 12\n\n    # Calculate the number of boys in the first two classes\n    boys_in_first_two_classes = total_students * 0.5\n\n    # Calculate the number of girls in the third class\n    girls_in_third_class = total_students - girls_in_first_two_classes\n\n    # Calculate the number of boys in the third class\n    boys_in_third_class = boys_in_first_two_classes * 0.5\n    result = boys_in_third_class\n    return result"}
{"output": "def solution():\n    \n    initial_apps = 61\n    deleted_apps = 9\n    downloaded_apps = 18\n    total_apps = initial_apps - deleted_apps + downloaded_apps\n    result = total_apps\n    return result"}
{"output": "def solution():\n    \n    last_night_wolves = 10\n    last_night_cougars = 15\n    today_cougars = last_night_cougars * 3\n    today_wolves = last_night_wolves * 3\n    today_cougars = last_night_cougars - 3\n    total_animals = last_night_wolves + last_night_cougars + today_wolves + today_cougars\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    # Define Bill's starting floor\n    starting_floor = 3\n\n    # Calculate the floor Bill rides the elevator up to\n    elevator_floor = starting_floor * 4 + 6\n\n    # Calculate Bill's current floor\n    current_floor = starting_floor + elevator_floor\n\n    # Display Bill's current floor\n    result = current_floor\n    return result"}
{"output": "def solution():\n    \n    # Define the number of kids and the number of times Mitchel went down the slide\n    num_kids = 3\n    mitchel_slide_count = 30\n\n    # Calculate the number of times Anne went down the slide\n    anne_slide_count = mitchel_slide_count * 0.7\n\n    # Calculate the number of times Robert went down the slide\n    robert_slide_count = anne_slide_count * 4\n\n    # Display the number of times Robert went down the slide\n    result = robert_slide_count\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cows\n    initial_cows = 10 * 20\n\n    # Calculate the number of new cows after Mr. Sylas buys 40\n    new_cows = initial_cows - 40\n\n    # Divide the new cows equally among the 20 stalls\n    new_cows_per_stall = new_cows / 20\n\n    # Calculate the number of cows in 8 stalls\n    cows_in_8_stalls = new_cows_per_stall * 8\n\n    # Display the number of cows in 8 stalls\n    result = cows_in_8_stalls\n    return result"}
{"output": "def solution():\n    num_pennies = 100\n    num_nickels = 40\n    num_dimes = 20\n    num_dollars = 40\n\n    # Calculate the total value of all pennies\n    total_pennies_value = num_pennies * 0.01\n\n    # Calculate the total value of all nickels\n    total_nickels_value = num_nickels * 0.05\n\n    # Calculate the total value of all dimes\n    total_dimes_value = num_dimes * 0.1\n\n    # Calculate the total value of all dollars\n    total_dollars = total_pennies_value + total_nickels_value + total_dimes_value\n    result = total_dollars\n    return result"}
{"output": "def solution():\n    \n    # Define the weight per section of the redwood\n    WEIGHT_PER_SECTION = 400\n\n    # Define the dimensions of the redwood\n    redwood_height = 200\n\n    # Calculate the weight of the redwood section\n    section_weight = WEIGHT_PER_SECTION * redwood_height\n\n    # Calculate the weight of the redwood termites\n    termites_weight = section_weight * 0.3\n\n    # Calculate the total weight of the redwood tree\n    total_weight = section_weight * redwood_height\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per book and the number of books owed\n    COST_PER_BOOK = 0.5\n    BOOKS_PER_WEEK = 8\n\n    # Define the flat fee for having at least one book\n    FLAT_FEE = 2.0\n\n    # Calculate the total cost of the overdue books\n    overdue_cost = COST_PER_BOOK * BOOKS_PER_WEEK\n\n    # Calculate the total cost including the flat fee\n    total_cost = overdue_cost + FLAT_FEE\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples Andrea has\n    andrea_apples = 52\n\n    # Calculate the number of apples Jamal has\n    jamal_apples = andrea_apples - 8\n\n    # Calculate the number of bananas Jamal has\n    jamal_bananas = jamal_apples / 2\n\n    # Calculate the number of apples Andrea has\n    andrea_apples = jamal_apples + 8\n\n    # Calculate the total number of fruits\n    total_fruits = andrea_apples + jamal_bananas + andrea_apples\n\n    # Display the total number of fruits\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    cookies_per_dozen = 12\n    cookies_today = 36\n    cookies_tomorrow = 30\n    flour_per_dozen = 2\n    total_cookies = cookies_today + cookies_tomorrow\n    flour_needed = total_cookies * flour_per_dozen\n    result = flour_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pennies and the ratio of pennies to dollars\n    total_pennies = 9300\n    penny_ratio = 2/3\n\n    # Calculate the total number of pennies in the stack\n    total_pennies = total_pennies / penny_ratio\n\n    # Calculate the total dollars in the stack\n    total_dollars = total_pennies * 100\n\n    # Display the total dollars\n    result = total_dollars\n    return result"}
{"output": "def solution():\n    \n    boxes = 5\n    marbles_per_box = 50\n    total_marbles = boxes * marbles_per_box\n    marbles_received = 20\n    remaining_marbles = total_marbles - marbles_received\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees in Chris's yard\n    chris_trees = 6\n\n    # Calculate the number of trees in Ferdinand's yard\n    ferdinand_trees = chris_trees / 2\n\n    # Calculate the number of trees in Harry's yard\n    harry_trees = 2 * ferdinand_trees + 5\n\n    # Calculate the difference between the number of trees in Harry's yard and Ferdinand's yard\n    difference = harry_trees - ferdinand_trees\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    carmen_money = 100\n    samantha_money = carmen_money + 25\n    daisy_money = samantha_money + 50\n    total_money = carmen_money + samantha_money + daisy_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the budget and the selling price of the property\n    budget = 400000\n    property_price = 350000\n\n    # Calculate the price of the brokerage fee and transfer fee\n    brokerage_fee = property_price * 0.05\n    transfer_fee = property_price * 0.12\n\n    # Calculate the total price of the house\n    total_price = property_price + brokerage_fee + transfer_fee\n\n    # Calculate the difference between the total price and the budget\n    price_difference = total_price - budget\n\n    # Display the price difference\n    result = price_difference\n    return result"}
{"output": "def solution():\n    selling_price = 400000  # Mr. Tan sold his house for $400000\n    transfer_fee = 0.75 * selling_price  # Mr. Tan paid the transfer fees that amount to 3% of the selling price\n    brokerage_fee = 0.05 * selling_price  # Mr. Tan paid a brokerage fee that is 5% of the selling price\n    remaining_loan = 250000  # Mr. Tan paid $250000 for the remaining loan amount of the house\n\n    # Calculate the net profit from selling the house\n    net_profit = selling_price - transfer_fee - brokerage_fee - remaining_loan\n    result = net_profit\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes to heat up the oil\n    time_to_heat = 20\n    time_to_heat_to_desired = 0.4 * time_to_heat\n    time_to_warm_up = time_to_heat + time_to_heat_to_desired\n\n    # Calculate the time it takes to cook the oil\n    time_to_cook = time_to_warm_up - 5\n\n    # Calculate the total time it takes to cook the oil\n    total_time = time_to_heat + time_to_cook + time_to_warm_up\n    result = total_time\n    return result"}
{"output": "def solution():\n    num_newspaper_ads = 50\n    newspaper_ad_price = 5\n\n    num_television_ads = 15\n    television_ad_price = 75\n\n    # Calculate the total cost of all newspaper ads\n    total_newspaper_ad_cost = num_newspaper_ads * newspaper_ad_price\n\n    # Calculate the total cost of all television ads\n    total_television_ad_cost = num_television_ads * television_ad_price\n\n    # Calculate the total cost of all ads\n    total_cost = total_newspaper_ad_cost + total_television_ad_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_balls = 16\n    golf_balls = total_balls / 2\n    blue_golf_balls = golf_balls / 2\n    result = blue_golf_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of M&Ms in the first bag\n    bag1_mms = 300\n\n    # Define the number of M&Ms in the second bag\n    bag2_mms = bag1_mms + 12\n\n    # Define the number of M&Ms in the third bag\n    bag3_mms = bag1_mms / 2\n\n    # Calculate the total number of M&Ms\n    total_mms = bag1_mms + bag2_mms + bag3_mms\n\n    # Display the total number of M&Ms\n    result = total_mms\n    return result"}
{"output": "def solution():\n    \n    # Define the number of houses and bedrooms\n    num_houses = 2\n    num_bedrooms_per_house = 3\n\n    # Define the number of windows per bedroom\n    windows_per_bedroom = 2\n\n    # Define the number of additional windows in each house not connected to bedrooms\n    additional_windows_per_house = 4\n\n    # Calculate the total number of windows\n    total_windows = num_houses * num_bedrooms_per_house * windows_per_bedroom + additional_windows_per_house * (num_houses - 1) * windows_per_house\n\n    # Display the total number of windows\n    result = total_windows\n    return result"}
{"output": "def solution():\n    \n    cocoa_cost = 4.20\n    laundry_cost = 9.45\n    pasta_cost = 1.35\n    total_cost = cocoa_cost + laundry_cost + pasta_cost\n    amount_paid = 20\n    change = amount_paid - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stitches taken by the body of the sweater\n    body_stitches = 900\n\n    # Calculate the number of stitches taken by the collar\n    collar_stitches = body_stitches / 10\n\n    # Calculate the number of stitches taken by the rosette\n    rosette_stitches = collar_stitches * 2\n\n    # Calculate the total number of stitches taken by the sweater\n    total_stitches = body_stitches + collar_stitches + rosette_stitches\n\n    # Calculate the number of stitches taken by each sleeve\n    stitches_per_sleeve = total_stitches / 2\n\n    # Display the number of stitches taken by each sleeve\n    result = stitches_per_sleeve\n    return result"}
{"output": "def solution():\n    num_tomato_packets = 20\n    tomato_seed_price = 40\n\n    num_celery_packets = 80\n    celery_seed_price = 30\n\n    # Calculate the total cost of all tomato packets\n    total_tomato_cost = num_tomato_packets * tomato_seed_price\n\n    # Calculate the total cost of all celery packets\n    total_celery_cost = num_celery_packets * celery_seed_price\n\n    # Calculate the total cost of all seeds\n    total_cost = total_tomato_cost + total_celery_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of lines in the solo song\n    solo_song_lines = 54\n\n    # Calculate the number of lines in the first scene\n    first_scene_lines = solo_song_lines * 2\n\n    # Calculate the number of lines in the second scene\n    second_scene_lines = solo_song_lines + 6\n\n    # Calculate the number of lines in the four-fifths of the song\n    four_fifths_lines = solo_song_lines * 4/5\n\n    # Calculate the total number of lines Sean needs to memorize\n    total_lines = solo_song_lines + first_scene_lines + second_scene_lines + four_fifths_lines\n\n    # return the result\n    result = total_lines\n    return result"}
{"output": "def solution():\n    \n    total_cards = 80\n    a_cards = (2/5) * total_cards\n    remaining_cards = total_cards - a_cards\n    b_cards = (1/2) * remaining_cards\n    c_cards = (5/8) * remaining_cards\n    d_cards = remaining_cards - b_cards - c_cards\n    result = d_cards\n    return result"}
{"output": "def solution():\n    \n    small_hole_time = 3\n    large_hole_time = 10\n    num_small_holes = 30\n    num_large_holes = 15\n    total_time = (small_hole_time * num_small_holes) + (large_hole_time * num_large_holes)\n    hours = total_time / 60\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the sum of their ages in 10 years\n    sum_in_10_years = 20\n\n    # Calculate Mico's age in 10 years\n    mico_age_in_10_years = sum_in_10_years / 2\n\n    # Calculate Marco's age in 10 years\n    marco_age_in_10_years = sum_in_10_years / 2\n\n    # Calculate the sum of their ages in 10 years\n    sum_in_10_years = mico_age_in_10_years + marco_age_in_10_years\n\n    # Display the sum of their ages in 10 years\n    result = sum_in_10_years\n    return result"}
{"output": "def solution():\n    \n    ruby_age_in_9_years = 3 * 9\n    ruby_age_now = ruby_age_in_9_years - 9\n    sam_age_now = ruby_age_now / 6\n    result = sam_age_now\n    return result"}
{"output": "def solution():\n    num_popsicles = 20\n    popsicle_price = 0.25\n\n    num_ice_cream_bars = 4\n    ice_cream_bar_price = 0.50\n\n    # Calculate the total cost of all popsicles\n    total_popsicles_cost = num_popsicles * popsicle_price\n\n    # Calculate the total cost of all ice cream bars\n    total_ice_cream_bars_cost = num_ice_cream_bars * ice_cream_bar_price\n\n    # Calculate the total cost of all items\n    total_cost = total_popsicles_cost + total_ice_cream_bars_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_cobras = 40\n    num_mambas = 60\n    num_spots_cobras = 70\n    num_spots_mambas = num_spots_cobras * 2\n\n    # Calculate the total number of spots\n    total_spots = num_cobras + num_mambas + num_spots_cobras\n\n    # Calculate half the total number of spots\n    half_spots = total_spots / 2\n    result = half_spots\n    return result"}
{"output": "def solution():\n    \n    team_members = 12\n    coaches = 3\n    guests_per_team_member = 2\n    guests_per_pizza = 3\n    cost_per_pizza = 15\n    total_guests = team_members * guests_per_team_member * guests_per_pizza\n    total_pizzas = total_guests // guests_per_pizza + (total_guests % guests_per_pizza > 0)\n    total_cost = total_pizzas * cost_per_pizza\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_topaz_gemstones = 8\n    topaz_gemstone_length = 1\n    sterling_bead_length = 0.25\n    total_length = 25\n\n    # Calculate the total length of all topaz gemstones used\n    total_topaz_gemstone_length = num_topaz_gemstones * topaz_gemstone_length\n\n    # Calculate the total length of all sterling silver beads used\n    total_sterling_bead_length = total_length / 4\n\n    # Calculate the number of sterling silver beads used per necklace\n    num_sterling_beads_per_necklace = total_sterling_bead_length / total_length\n    result = num_sterling_beads_per_necklace\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stories written in each week\n    alani_stories = 20\n    braylen_stories = 40\n    margot_stories = 60\n\n    # Calculate the number of stories written in each week\n    alani_stories_second_week = alani_stories * 2\n    braylen_stories_second_week = braylen_stories * 2\n    margot_stories_second_week = margot_stories * 2\n\n    # Calculate the total number of stories written\n    total_stories = alani_stories + braylen_stories_second_week + margot_stories_second_week\n\n    # return the result\n    result = total_stories\n    return result"}
{"output": "def solution():\n    \n    ann_age = 9\n    brother_age = ann_age * 2\n    brother_age_in_3_years = brother_age + 3\n    result = brother_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    quarters = 5\n    dimes = 2\n    total_cents = (quarters * 25) + (dimes * 10)\n    cents_left = 55 - total_cents\n    result = cents_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows of each type of star\n    row1 = 8\n    row2 = 6\n    row3 = 8\n    row4 = 6\n\n    # Calculate the total number of stars on the flag\n    total_stars = row1 + row2 + row3 + row4\n\n    # Calculate the number of 5-star rows on the flag\n    num_5_stars = 76 - total_stars\n\n    # Display the number of 5-star rows on the flag\n    result = num_5_stars\n    return result"}
{"output": "def solution():\n    flagstone_weight = 75  # Each flagstone weighs 75 pounds\n    total_weight = 2000  # The delivery trucks can carry a total weight of 2000 pounds\n    num_flagstones = 80  # The landscaping company is transporting 80 flagstones in one trip\n\n    # Calculate the total weight of the flagstones\n    total_flagstone_weight = total_weight * num_flagstones\n\n    # Calculate the number of trucks needed to transport the flagstones\n    num_trucks = total_flagstone_weight // flagstone_weight\n    if total_flagstone_weight % flagstone_weight!= 0:\n        num_trucks += 1\n\n    result = num_trucks\n    return result"}
{"output": "def solution():\n    fast_speed = 60  # miles per hour\n    slow_speed = fast_speed / 2  # miles per hour\n    fast_distance = 480  # miles\n\n    # Calculate the time it takes for the fast lane to cover the same distance\n    time_fast = fast_distance / fast_speed\n\n    # Calculate the time it takes for the slow lane to cover the same distance\n    time_slow = slow_distance / slow_speed\n    result = time_slow\n    return result"}
{"output": "def solution():\n    \n    ali_medals = 22\n    izzy_medals = ali_medals - 5\n    total_medals = ali_medals + izzy_medals\n    combined_medals = total_medals * 10\n    result = combined_medals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults, children, and chocolate bars per packet\n    num_adults = 4\n    num_children = 8\n    chocolate_bars_per_packet = 5\n\n    # Calculate the total number of chocolate bars\n    total_chocolate_bars = num_adults * chocolate_bars_per_packet\n\n    # Calculate the number of chocolate bars left for the children\n    children_chocolate_bars = total_chocolate_bars - total_chocolate_bars\n\n    # Calculate the number of bars each child gets\n    bars_per_child = children_chocolate_bars // num_children\n\n    # Display the number of bars each child gets\n    result = bars_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly rate and the number of hours worked\n    HOURLY_RATE = 5\n    HOURS_WORKED = 0.5\n\n    # Calculate the number of minutes worked\n    minutes_worked = HOURS_WORKED * 60\n\n    # Calculate the number of hours worked\n    hours_worked = minutes_worked / 10\n\n    # Calculate the total earnings\n    earnings = hours_worked * HOURLY_RATE\n\n    # Display the total earnings\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    mike_points = 21\n    jim_points = mike_points - 3\n    tony_points = mike_points * 2\n    total_points = mike_points + jim_points + tony_points\n    extra_points = total_points - 20\n    result = extra_points\n    return result"}
{"output": "def solution():\n    num_oranges = 15\n    num_sons = 2\n    oldest_son_age = 8\n    youngest_son_age = oldest_son_age / 2\n\n    # Calculate the total number of oranges washed\n    total_washed_oranges = num_sons * oldest_son_age + youngest_son_age\n\n    # Calculate the number of oranges left unwashed\n    num_left_unwashed_oranges = num_oranges - total_washed_oranges\n    result = num_left_unwashed_oranges\n    return result"}
{"output": "def solution():\n    \n    pushups_first_day = 100\n    squats_first_day = 50\n    dumbbell_presses_first_day = 20\n    pushups_second_day = pushups_first_day + 20\n    squats_second_day = squats_first_day - 10\n    dumbbell_presses_second_day = dumbbell_presses_first_day * 2\n    total_activities = pushups_first_day + squats_first_day + dumbbell_presses_first_day + pushups_second_day + squats_second_day + dumbbell_presses_second_day\n    result = total_activities\n    return result"}
{"output": "def solution():\n    rice_per_person = 0.2  # Each person eats 0.2 kg of rice every meal\n    num_members = 5  # There are 5 members in the household\n    total_rice_per_person = rice_per_person * num_members  # Total rice consumed per person\n    total_rice_per_week = total_rice_per_person * 7  # There are 7 days in a week\n\n    # Calculate how many weeks the 42 kg bag of rice will last\n    weeks = 42 / total_rice_per_week\n    result = weeks\n    return result"}
{"output": "def solution():\n    \n    target_crates = 120\n    crates_sold_weekend = 20\n    crates_sold_tuesday = 15\n    crates_sold_wednesday = 12\n    crates_sold_thursday = 18\n    total_crates_sold = crates_sold_weekend + crates_sold_tuesday + crates_sold_wednesday + crates_sold_thursday\n    crates_off = target_crates - total_crates_sold\n    result = crates_off\n    return result"}
{"output": "def solution():\n    \n    opening_bid = 200\n    rise_per_bid = 50\n    num_people = 3\n    total_rides = opening_bid + (3 * rise_per_bid)\n    total_bids = total_rides * num_people\n    total_cost = opening_bid + total_bids\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    miles_per_day = 30\n    work_days_per_week = 5\n    weeks_per_year = 50\n    total_miles_per_week = miles_per_day * work_days_per_week * weeks_per_year\n    miles_per_month = total_miles_per_week * 12\n    cost_per_mile = 2\n    bonus_per_month = 150\n    total_cost = (miles_per_month * cost_per_mile) + (bonus_per_month * 12)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    sunday_time = 23\n    monday_time = 16\n    combined_time = sunday_time + monday_time\n    tuesday_time = 2 * combined_time\n    result = tuesday_time\n    return result"}
{"output": "def solution():\n    \n    total_pages = 32\n    left_back_pages = 1\n    left_front_pages = 2\n    right_back_pages = 32\n    right_front_pages = 31\n    total_printed = left_back_pages + left_front_pages + right_back_pages + right_front_pages\n    total_used = total_pages * 4\n    result = total_used\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Annika brought\n    initial_money = 50\n\n    # Calculate the amount of money Annika spent on food and snacks\n    food_snacks_cost = initial_money / 2\n\n    # Calculate the amount of money Annika spent on rides\n    rides_cost = 10\n\n    # Calculate the total amount of money Annika spent\n    total_spent = food_snacks_cost + rides_cost\n\n    # Calculate the amount of money Annika has left\n    money_left = initial_money - total_spent\n\n    # Display the amount of money Annika has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    # Calculate the total number of books sold in the first year\n    books_sold_first_year = 2 * 250\n\n    # Calculate the total earnings from selling books in the first year\n    earnings_first_year = books_sold_first_year * 20\n\n    # Calculate the total number of books sold in the second year\n    books_sold_second_year = 250 - 50 - 45\n\n    # Calculate the total earnings in the second year\n    total_earnings_second_year = earnings_first_year + books_sold_second_year\n    result = total_earnings_second_year\n    return result"}
{"output": "def solution():\n    \n    # Define Watson's work hours per week\n    WORK_HOURS_PER_WEEK = 10\n\n    # Define Watson's hourly wage and bonus wage\n    HOURLY_WAGE = 10\n    BONUS_WAGE = 300\n\n    # Calculate Watson's earnings per week\n    earnings_per_week = WORK_HOURS_PER_WEEK * HOURLY_WAGE * 5\n\n    # Calculate Watson's total earnings for the month\n    total_earnings = earnings_per_week * 4\n\n    # Display Watson's total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    wrestles = 20\n    percent_beat = 80\n    people_lost = wrestles * (percent_beat / 100)\n    result = people_lost\n    return result"}
{"output": "def solution():\n    \n    total_loaves = 60\n    morning_sales = total_loaves * (2/3)\n    remaining_loaves = total_loaves - morning_sales\n    afternoon_sales = remaining_loaves / 2\n    result = afternoon_sales\n    return result"}
{"output": "def solution():\n    \n    joey_weight_loss_per_week = 8 / 4\n    sandy_weight_loss_per_week = joey_weight_loss_per_week / 4\n    weeks_to_lose_same_amount = sandy_weight_loss_per_week / 4\n    result = weeks_to_lose_same_amount\n    return result"}
{"output": "def solution():\n    \n    ice_cream_price = 13\n    milk_price = 11 - 0.5\n    num_ice_cream_tubs = 2\n    num_milk_packets = 4\n    total_ice_cream_savings = (ice_cream_price * num_ice_cream_tubs) - total_ice_cream_savings\n    total_milk_savings = (milk_price * num_milk_packets) - total_milk_savings\n    result = total_ice_cream_savings\n    return result"}
{"output": "def solution():\n    \n    extra_arms_per_day = 3\n    extra_leges_per_day = 5\n    extra_days = 15\n    total_extra_arms = extra_arms_per_day * extra_days\n    total_extra_leges = extra_leges_per_day * extra_days\n    total_limbs = total_extra_arms + total_extra_leges\n    result = total_limbs\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the business suits\n    business_suit_cost = 6 * 100\n\n    # Calculate the cost of the suitcases\n    suitcases_cost = 3 * 50\n\n    # Calculate the cost of the flight ticket\n    flight_ticket_cost = 5 * business_suit_cost + 700\n\n    # Calculate the total cost of the business partners\n    total_cost = business_suit_cost + suitcases_cost + flight_ticket_cost + 2000\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people in the family and the number of eggs they eat each day\n    family_size = 5\n    three_eggs_per_person = 3\n    two_eggs_per_person = 2\n\n    # Calculate the total number of eggs eaten by the three people each day\n    three_eggs_total = three_eggs_per_person * family_size\n\n    # Calculate the total number of eggs eaten by the rest of the people each day\n    rest_eggs_total = family_size - three_eggs_total\n\n    # Calculate the total number of eggs eaten by the rest of the people each day\n    rest_eggs_total = rest_eggs_total * family_size\n\n    # Calculate the total number of eggs consumed by the family in a week\n    total_eggs = three_eggs_total + rest_eggs_total\n\n    # return the result\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define Quinn's age\n    quinn_age = 30\n\n    # Calculate Jane's age\n    jane_age = quinn_age - 3\n\n    # Calculate Trent's age\n    trent_age = jane_age + 5\n\n    # Display Trent's age\n    result = trent_age\n    return result"}
{"output": "def solution():\n    \n    # Define Cera's current age\n    cera_age = 46\n\n    # Calculate Noah's age 6 years ago\n    noah_age_6_years_ago = cera_age - 6\n\n    # Calculate Chile's current age\n    chile_age_6_years_ago = 3000 * noah_age_6_years_ago\n\n    # Calculate Chile's current age\n    chile_age = chile_age_6_years_ago - 6\n\n    # Display Chile's current age\n    result = chile_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of players on the football team\n    total_players = 105\n\n    # Calculate the number of players on the offense\n    offense_players = total_players * 2\n\n    # Calculate the number of players on the special teams\n    special_team_players = offense_players / 2\n\n    # Calculate the number of players on the defense\n    defense_players = total_players - offense_players - special_team_players\n\n    # Display the number of players on the defense\n    result = defense_players\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of people invited\n    total_people = 2 * 6 + 3 * 4\n\n    # Calculate the number of people who couldn't come due to illness\n    illness_people = 8\n\n    # Calculate the number of people who had previous commitments\n    previous_commitments = total_people / 4\n\n    # Calculate the total number of people on the party\n    total_people = total_people + illness_people + previous_commitments\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    johanna_marbles = 20\n    father_marbles = (2/5) * johanna_marbles\n    total_marbles = johanna_marbles + father_marbles\n    weight_per_marble = 2\n    total_weight = total_marbles * weight_per_marble\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    pool_length = 6\n    pool_width = 4\n    pool_depth = 5\n    cubic_feet = pool_length * pool_width * pool_depth\n    cost_per_cubic_foot = 0.1\n    total_cost = cubic_feet * cost_per_cubic_foot\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    boys = 30\n    girls = 3 * boys\n    nongendered_children = boys / 10\n    total_children = boys + girls + nongendered_children\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    wires_ratio = 1 + 3\n    wires_needed = 45\n    poles_needed = wires_needed / wires_ratio\n    poles_required = poles_needed * 1\n    result = poles_required\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of men and women\n    initial_men = 25\n    initial_women = 15\n\n    # Calculate the total number of people at the party\n    total_people = initial_men + initial_women\n\n    # Calculate the number of men left after an hour\n    men_left = total_people * (1/4)\n\n    # Calculate the number of women left after an hour\n    women_left = total_people - men_left\n\n    # Display the number of women left\n    result = women_left\n    return result"}
{"output": "def solution():\n    \n    book_cost = 4\n    magazine_cost = book_cost / 2\n    pen_cost = magazine_cost - 1\n    result = pen_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of pencils Jam and Meg need to store\n    jam_pencils = 3 + 2\n    meg_pencils = 46\n    total_pencils = jam_pencils + meg_pencils\n\n    # Calculate the number of boxes needed to store all the pencils\n    boxes_needed = total_pencils // 26\n    if total_pencils % 26!= 0:\n        boxes_needed += 1\n\n    # Display the number of boxes needed\n    result = boxes_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of coffee in milliliters weaker\n    coffee_in_milliliters = 12\n\n    # Calculate the amount of coffee added by the ice cubes\n    coffee_added_cubes = 15\n\n    # Calculate the total amount of coffee in milliliters\n    total_coffee_in_milliliters = coffee_in_milliliters + coffee_added_cubes\n\n    # Calculate the amount of coffee weaker in milliliters\n    coffee_weaker_in_milliliters = total_coffee_in_milliliters * 2\n\n    # Display the amount of coffee weaker in milliliters\n    result = coffee_weaker_in_milliliters\n    return result"}
{"output": "def solution():\n    \n    old_records_per_person = 2 / 1\n    new_records_per_person = 7 / 1\n    old_records = old_records_per_person * 5\n    new_records = new_records_per_person * 5\n    total_old_records = old_records + new_records\n    result = total_old_records\n    return result"}
{"output": "def solution():\n    \n    junior_programmers = (2/5) * 100\n    senior_programmers = junior_programmers + 400\n    total_employees = 100\n    junior_salary = junior_programmers * 2000\n    senior_salary = senior_programmers * 2000\n    total_salary = junior_salary + senior_salary\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people who got in at the first bus stop\n    people_first_stop = 5\n\n    # Define the number of people who got down at the second bus stop\n    people_second_stop = 7\n\n    # Define the number of people who got in at the third bus stop\n    people_third_stop = 20\n\n    # Calculate the total number of people who got in at the first bus stop\n    people_first_stop = people_first_stop + people_first_stop\n\n    # Calculate the total number of people who got in at the second bus stop\n    people_second_stop = people_second_stop - people_second_stop\n\n    # Calculate the total number of people who got on the bus at the terminal\n    total_people = people_first_stop + people_second_stop + people_third_stop\n\n    # Display the total number of people who got on the bus at the terminal\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    starting_lollipops = 24\n    given_away_lollipops = 14\n    bought_lollipops = 2 * given_away_lollipops\n    remaining_lollipops = starting_lollipops - given_away_lollipops - bought_lollipops\n    night_eaten_lollipops = 3\n    morning_eaten_lollipops = 2\n    total_eaten_lollipops = night_eaten_lollipops + morning_eaten_lollipops\n    total_lollipops = remaining_lollipops + total_eaten_lollipops\n    result = total_lollipops\n    return result"}
{"output": "def solution():\n    \n    # Define the rate at which the phone recharges\n    rate = 1 / 3\n\n    # Define the percentage of charge at which the phone is at 60% charged\n    charge_percentage = 60 / 100\n\n    # Calculate the time it will take to fully charge the phone\n    time_to_charge = charge_percentage * 60\n\n    # Convert the time to hours\n    time_to_hours = time_to_charge / 60\n\n    # Display the time it will take to fully charge\n    result = time_to_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 7\n\n    # Define the number of lollipops Erin's mother gives\n    mother_lollipops = 10\n\n    # Calculate the total number of lollipops\n    total_lollipops = initial_lollipops + mother_lollipops\n\n    # Subtract the number of lollipops Erin gives to Ella\n    remaining_lollipops = total_lollipops - 3\n\n    # Display the number of lollipops Erin has left\n    result = remaining_lollipops\n    return result"}
{"output": "def solution():\n    \n    rewards_per_20 = 1\n    last_shopping_trip = 80\n    this_shopping_trip = 43\n    coupon_amount = 2 * (this_shopping_trip - last_shopping_trip)\n    total_rewards = last_shopping_trip + this_shopping_trip - coupon_amount\n    total_price = total_rewards / rewards_per_20\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    job_a_pay = 15 * 2000\n    job_a_tax = job_a_pay * 0.2\n    job_b_pay = 42000\n    job_b_tax = job_b_pay * 0.1\n    net_income = job_b_pay - job_a_tax - job_b_tax\n    difference = net_income - job_a_tax\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_castles = 220\n    ruins_percent = 40\n    ruins_count = total_castles * (ruins_percent / 100)\n    unmanned_percent = 100 - ruins_count\n    unmanned_count = ruins_count * (unmanned_percent / 100)\n    result = unmanned_count\n    return result"}
{"output": "def solution():\n    \n    furniture_advance = 1250\n    furniture_installments = 6\n    cozy_advance = 12100\n    cozy_installments = 9\n    furniture_cost = furniture_advance * furniture_installments + cozy_advance * cozy_installments\n    cozy_cost = cozy_advance * cozy_installments\n    cost_difference = abs(furniture_cost - cozy_cost)\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guns each person has\n    DJ_guns = 8\n    NICK_guns = 10\n    RJ_guns = 1\n    Richard_guns = 5\n\n    # Calculate the total number of guns\n    total_guns = DJ_guns + NICK_guns + RJ_guns + Richard_guns\n\n    # Calculate the number of guns each person would have if they share equally\n    guns_per_person = total_guns // 3\n\n    # Display the number of guns each person would have\n    result = guns_per_person\n    return result"}
{"output": "def solution():\n    sugar_per_batch_suckers = 30\n    sugar_per_batch_fudge = 70\n    num_batches_suckers = 8\n    num_batches_fudge = 1\n\n    # Calculate the total amount of sugar needed for all batches of suckers\n    total_sugar_for_suckers = sugar_per_batch_suckers * num_batches_suckers\n\n    # Calculate the total amount of sugar needed for all batches of fudge\n    total_sugar_for_fudge = sugar_per_batch_fudge * num_batches_fudge\n\n    # Calculate the total amount of sugar needed for all batches of suckers and fudge\n    total_sugar_needed = total_sugar_for_suckers + total_sugar_for_fudge\n    result = total_sugar_needed\n    return result"}
{"output": "def solution():\n    \n    shares = 8\n    initial_price = 8\n    first_year_increase = 0.5\n    second_year_decrease = 0.25\n    first_year_value = initial_price * (1 + first_year_increase)\n    second_year_value = initial_price * (1 - second_year_decrease)\n    total_value = first_year_value + second_year_value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    luke_hotdogs = 2\n    thomas_hotdogs = 3 * luke_hotdogs\n    john_hotdogs = 0.5 * thomas_hotdogs\n    difference = john_hotdogs - luke_hotdogs\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of groups\n    total_students = 200\n    num_groups = 3\n\n    # Calculate the number of students in each group\n    students_per_group = total_students / num_groups\n\n    # Calculate the number of students in the last group\n    last_group_students = students_per_group - 10\n\n    # Calculate the number of students in the smallest group\n    smallest_group_students = students_per_group - last_group_students\n\n    # Display the number of students in the smallest group\n    result = smallest_group_students\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of animals\n    total_animals = 60\n\n    # Calculate the number of cows\n    cows = total_animals / 3\n\n    # Calculate the number of chickens\n    chickens = 2 * cows\n\n    # Calculate the total number of legs\n    legs = total_animals * 4\n\n    # Display the total number of legs\n    result = legs\n    return result"}
{"output": "def solution():\n    \n    starting_balls = 3\n    weekly_balls = 4\n    caught_balls = 2\n    lost_balls = 1\n    total_balls = starting_balls + weekly_balls - caught_balls - lost_balls\n    result = total_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the pink frog\n    pink_frog_weight = 50\n\n    # Calculate the weight of the yellow snake\n    yellow_snake_weight = pink_frog_weight - 10\n\n    # Calculate the weight of the red bird\n    red_bird_weight = pink_frog_weight + 20\n\n    # Calculate the total weight of the container\n    container_weight = 20\n\n    # Calculate the total weight of one animal\n    total_weight = pink_frog_weight + yellow_snake_weight + red_bird_weight + container_weight\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of baby outfits Laurel's friend gave her\n    friend_outfits = 24\n\n    # Calculate the number of baby outfits Laurel received at her baby shower\n    shower_outfits = friend_outfits * 2\n\n    # Calculate the total number of baby outfits Laurel has\n    total_outfits = friend_outfits + shower_outfits + 15\n\n    # Display the total number of baby outfits\n    result = total_outfits\n    return result"}
{"output": "def solution():\n    \n    tyson_meters_per_day = 5000\n    coach_meters_per_day = tyson_meters_per_day * (1 + 1/5)\n    days_in_june = 30\n    total_meters_per_day = tyson_meters_per_day + coach_meters_per_day\n    total_distance_in_june = total_meters_per_day * days_in_june\n    result = total_distance_in_june\n    return result"}
{"output": "def solution():\n    \n    # Define the price of Juice Box A\n    box_a_price = 4\n\n    # Calculate the price of Juice Box B\n    box_b_price = box_a_price + 5\n\n    # Calculate the price of Juice Box C\n    box_c_price = box_a_price + 7\n\n    # Calculate the difference in price between Juice Box C and Juice Box B\n    difference = box_c_price - box_b_price\n\n    # Display the difference in price\n    result = difference\n    return result"}
{"output": "def solution():\n    num_tables_4_legs = 40\n    num_tables_3_legs = 50\n    legs_per_table_4 = 4\n    legs_per_table_3 = 3\n\n    # Calculate the total number of legs for the tables with 4 legs\n    total_legs_4_legs = num_tables_4_legs * legs_per_table_4\n\n    # Calculate the total number of legs for the tables with 3 legs\n    total_legs_3_legs = num_tables_3_legs * legs_per_table_3\n\n    # Calculate the total number of legs for all tables\n    total_legs = total_legs_4_legs + total_legs_3_legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    # Calculate the total number of cookies in the bag\n    total_cookies = 36\n\n    # Calculate the number of cookies in the lunch box\n    lunch_cookies = 4 * 5\n\n    # Calculate the number of cookies eaten by Jenny's husband\n    husband_cookies = 7 * 1\n\n    # Calculate the number of cookies eaten by Jenny\n    jenny_cookies = total_cookies - lunch_cookies - husband_cookies\n    result = jenny_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of each shirt\n    ORIGINAL_PRICE = 30\n\n    # Calculate the discounted price of each shirt\n    discounted_price = ORIGINAL_PRICE * 0.6\n\n    # Calculate the total cost of the two shirts\n    total_cost = discounted_price * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tractor_sold = 10\n    tractor_earnings = 100\n    silo_sold = 5\n    silo_earnings = 220\n    total_earnings = tractor_sold * tractor_earnings + silo_sold * silo_earnings\n    percent_more = ((total_earnings - tractor_earnings) / total_earnings) * 100\n    result = percent_more\n    return result"}
{"output": "def solution():\n    \n    food_cost_per_week = 25\n    treats_cost_per_month = 20\n    medicine_cost_per_week = 100\n    weeks_per_month = 4\n    total_food_cost_per_month = food_cost_per_week * weeks_per_month\n    total_treats_cost_per_month = treats_cost_per_month * weeks_per_month\n    total_medicine_cost_per_month = medicine_cost_per_week * weeks_per_month\n    total_cost_per_month = total_food_cost_per_month + total_treats_cost_per_month + total_medicine_cost_per_month\n    result = total_cost_per_month\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the yoga class\n    yoga_class = 1\n\n    # Calculate the length of the cooking class\n    cooking_class = 3 * yoga_class\n\n    # Calculate the length of the cheese-tasting event\n    cheese_tasting_event = 0.5\n\n    # Calculate the length of the museum tour\n    museum_tour = cooking_class / 2\n\n    # Calculate the length of the errands\n    errands = 2\n\n    # Calculate the total length of all the after-work activities\n    total_length = yoga_class + cooking_class + cheese_tasting_event + museum_tour + errands\n\n    # Display the total length\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    daisies_plant_pots = 30\n    roses_plant_pots = daisies_plant_pots * 2\n    total_plant_pots = daisies_plant_pots + roses_plant_pots\n    remaining_plant_pots = total_plant_pots - 100\n    result = remaining_plant_pots\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Andrea had\n    initial_money = 36\n\n    # Calculate the amount of money Andrea had left after buying the sweater and giving her brother\n    remaining_money = initial_money - 11 - 4\n\n    # Display the amount of money Andrea saved\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    boating_time = 6\n    swimming_time = boating_time / 2\n    total_time = boating_time + swimming_time + 3 * 2\n    sightseeing_time = total_time * 0.4\n    result = sightseeing_time\n    return result"}
{"output": "def solution():\n    \n    phone_cost = 400\n    saved_money = 80\n    first_job_pay = 10 * 20\n    second_job_pay = 5 * 15\n    total_pay = first_job_pay + second_job_pay\n    remaining_money = phone_cost - saved_money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    shortest_tree_height = 6\n    second_tree_height = shortest_tree_height + 5\n    combined_height = shortest_tree_height + second_tree_height\n    tallest_tree_height = 2 * combined_height\n    result = tallest_tree_height\n    return result"}
{"output": "def solution():\n    toy_car_cost = 2  # Each toy car costs $2\n    teddy_bear_cost = 1  # Each teddy bear costs $1\n    num_toy_cars = 6  # Dean bought 6 toy cars\n    num_teddy_bears = 5  # Dean bought 5 teddy bears\n    extra_money = 10  # Dean's mother gave him an extra $10\n\n    # Calculate the total cost of the toy cars\n    total_toy_car_cost = toy_car_cost * num_toy_cars\n\n    # Calculate the total cost of the teddy bears\n    total_teddy_bear_cost = teddy_bear_cost * num_teddy_bears\n\n    # Calculate the total cost of all the items\n    total_cost = total_toy_car_cost + total_teddy_bear_cost\n\n    # Calculate how much money Dean has left\n    money_left = 28 - total_cost\n    result ="}
{"output": "def solution():\n    \n    total_budget = 90\n    mini_golf_cost = 5\n    go_kart_cost = 10\n    mini_golf_rides = mini_golf_cost // mini_golf_cost\n    go_kart_rides = go_kart_cost // go_kart_cost\n    friends_can_invite = total_budget - mini_golf_rides - go_kart_rides\n    result = friends_can_invite\n    return result"}
{"output": "def solution():\n    \n    pocket_money_per_day = 5\n    lollipop_cost = 0.25\n    num_lollipops = 4\n    num_days = 5\n    total_lollipop_cost = lollipop_cost * num_lollipops\n    total_pocket_money = pocket_money_per_day * num_days\n    total_piggy_bank_cost = total_pocket_money + total_lollipop_cost\n    result = total_piggy_bank_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Billy had\n    initial_money = 10\n\n    # Define the cost of a pound of candy\n    candy_cost_per_pound = 1.5\n\n    # Calculate the amount of money Billy spent on candy\n    candy_cost = initial_money / candy_cost_per_pound\n\n    # Calculate the amount of money Billy spent on gumballs\n    gumball_cost = 0.05 * 40\n\n    # Calculate the amount of money Billy spent on candy\n    candy_cost = candy_cost / 2\n\n    # Calculate the amount of money Billy spent on gumballs\n    gumball_cost = 0.05 * 40\n\n    # Calculate the total amount of money Billy spent on candy\n    total_cost = candy_cost + gumball_cost\n\n    # Calculate the amount of candy Billy bought\n    candy_bought = total_cost / candy_cost_per_pound"}
{"output": "def solution():\n    \n    carver_age = 45\n    son_age = (carver_age + 5) / 2\n    result = son_age\n    return result"}
{"output": "def solution():\n    \n    distance_first_city = 75\n    distance_second_city = 100\n    distance_third_city = distance_first_city + distance_second_city - 50\n    total_distance = distance_first_city + distance_second_city + distance_third_city\n    days = total_distance / 18000\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of stuffing needed for each type of bed\n    ROTTWEiler_STUFFING = 8\n    CHIHUAHUA_STUFFING = 2\n    COLLIE_STUFFING = 2\n\n    # Define the number of beds to be made\n    num_chihuahua_beds = 4\n    num_collie_beds = 3\n\n    # Calculate the total amount of stuffing needed\n    total_stuffing = (num_chihuahua_beds * CHIHUAHUA_STUFFING) + (num_collie_beds * COLLIE_STUFFING)\n\n    # Display the total amount of stuffing needed\n    result = total_stuffing\n    return result"}
{"output": "def solution():\n    \n    distance_to_friend = 200\n    speed_to_friend = 70\n    distance_before_detour = distance_to_friend + 10\n    distance_after_route_home = 240 - 80\n    total_distance = distance_to_friend + speed_to_friend + distance_before_detour + distance_after_route_home\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of fourth-graders and the number of girls\n    total_fourth_graders = 96\n    girls = 43\n\n    # Calculate the number of fourth-grade boys\n    boys = total_fourth_graders - girls\n\n    # Calculate the number of fourth-grade girls and fourth-grade boys on Friday\n    girls_on_friday = 5\n    boys_on_friday = 4\n\n    # Calculate the number of fourth-grade boys at Small Tree School on Friday\n    boys_on_friday = boys - girls_on_friday\n\n    # Display the number of fourth-grade boys at Small Tree School on Friday\n    result = boys_on_friday\n    return result"}
{"output": "def solution():\n    \n    girls = 6\n    boys = 2 * girls\n    kids = girls + boys\n    result = kids\n    return result"}
{"output": "def solution():\n    \n    total_points_needed = 42\n    points_scored_first_test = 15\n    points_scored_second_test = 18\n    points_scored_third_test = (total_points_needed - points_scored_first_test - points_scored_second_test) / 3\n    result = points_scored_third_test\n    return result"}
{"output": "def solution():\n    \n    total_customers = 50\n    refusing_customers = 3\n    shoplifters = (total_customers - refusing_customers) / 4 - 5\n    violence_customers = 3 * shoplifters\n    other_customers = total_customers - refusing_customers - shoplifters - violence_customers\n    result = other_customers\n    return result"}
{"output": "def solution():\n    \n    sara_score = 8\n    erin_score = 3 * sara_score\n    erin_points_before = erin_score + 14\n    result = erin_points_before\n    return result"}
{"output": "def solution():\n    num_seniors = 44\n    senior_frame_cost = 20\n    logo_cost = 0.2 * senior_frame_cost\n    num_pins = 2\n    pin_cost = 5\n    num_officers = num_seniors / 4\n    cord_cost = 12\n\n    # Calculate the total cost of all seniors\n    total_senior_frame_cost = num_seniors * senior_frame_cost\n\n    # Calculate the total cost of all pins\n    total_pin_cost = num_pins * pin_cost\n\n    # Calculate the total cost of all cords\n    total_ord_cost = num_officers * cord_cost\n\n    # Calculate the total cost of all seniors\n    total_cost = total_senior_frame_cost + total_pin_cost + total_ord_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    cost_of_wallpaper = 400\n    percent_saved = 20\n    amount_saved = cost_of_wallpaper * (percent_saved / 100)\n    total_cost = cost_of_wallpaper + amount_saved\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    friday_sales = 14\n    second_day_sales = friday_sales * 2\n    third_day_sales = second_day_sales / 2\n    total_sales = friday_sales + second_day_sales + third_day_sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    tuesday_hours = 1\n    thursday_hours = 2\n    saturday_hours = tuesday_hours * 2\n    total_hours = (tuesday_hours + thursday_hours + saturday_hours) * 7\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of equipment and the percentage of faulty pieces of equipment\n    total_cost = 400000\n    faulty_percentage = 40\n\n    # Calculate the total number of faulty pieces of equipment\n    faulty_count = total_cost * (faulty_percentage / 100)\n\n    # Calculate the total amount spent on equipment\n    total_spent = total_cost - faulty_count\n\n    # Display the total amount spent\n    result = total_spent\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of sheep\n    total_sheep = 30\n\n    # Calculate the amount of milk collected from the first half of the sheep\n    milk_first_half = total_sheep / 2\n\n    # Calculate the amount of milk collected from the second half of the sheep\n    milk_second_half = total_sheep / 2\n\n    # Calculate the total amount of milk collected\n    total_milk = milk_first_half + milk_second_half\n\n    # Display the total amount of milk collected\n    result = total_milk\n    return result"}
{"output": "def solution():\n    \n    rolls_per_dozen = 12\n    children = 6\n    remaining_rolls = rolls_per_dozen - children\n    pieces_per_child = 8\n    total_pieces = remaining_rolls * pieces_per_child\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    total_pupils = 40\n    blue_pupils = total_pupils / 2\n    remaining_pupils = total_pupils - blue_pupils\n    green_pupils = remaining_pupils / 4\n    yellow_pupils = remaining_pupils - green_pupils\n    result = yellow_pupils\n    return result"}
{"output": "def solution():\n    \n    # Define the price per piece and the number of apples picked on Monday\n    PRICE_PER_PIECE = 4\n    monday_apples = 56 / PRICE_PER_PIECE\n\n    # Calculate the number of apples picked on Tuesday\n    tuesday_apples = 12\n\n    # Calculate the number of apples picked on Come Wednesday\n    come_wednesday_apples = 2 * tuesday_apples\n\n    # Calculate the total number of apples picked over the three days\n    total_apples = monday_apples + tuesday_apples + come_wednesday_apples\n\n    # Display the total number of apples picked\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    total_socks = 50\n    washed_socks = 10 * 2 + 15\n    missed_socks = total_socks - washed_socks\n    result = missed_socks\n    return result"}
{"output": "def solution():\n    num_cookies_bought = 23\n    num_cookies_given = 42\n    num_cookies_eaten = 44\n\n    # Calculate the total number of cookies left for Rachel\n    total_cookies_left = num_cookies_bought + num_cookies_given - num_cookies_eaten\n    result = total_cookies_left\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount borrowed and interest rate\n    total_borrowed = 3650\n    interest_rate = 0.1\n\n    # Calculate the interest earned\n    interest_earned = total_borrowed * interest_rate\n\n    # Calculate the monthly interest earned\n    monthly_interest = interest_earned / 5\n\n    # Round the monthly interest earned to two decimal places\n    monthly_pay = round(monthly_interest, 2)\n\n    # Return the result\n    result = monthly_pay\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance Cho hiked in 8 hours\n    cho_distance = 14 * 8\n\n    # Calculate the distance Chloe hiked in 5 hours\n    chloe_distance = 9 * 5\n\n    # Calculate the difference in distance between Cho and Chloe\n    difference = cho_distance - chloe_distance\n\n    # Display the difference in distance\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the number of silver pesos Anna has\n    anna_silver_pesos = 2 * 50\n\n    # Calculate the number of gold pesos Anna has\n    anna_gold_pesos = 80 + 40\n\n    # Calculate the total number of pesos they have together\n    total_pesos = 50 + 80 + anna_silver_pesos + anna_gold_pesos\n    result = total_pesos\n    return result"}
{"output": "def solution():\n    num_pitchers = 3\n    cups_per_pitcher = 12\n    price_per_cup = 1\n    cups_sold_per_hour = 4\n    total_cost = 18\n\n    # Calculate the total number of cups of lemonade needed\n    total_cups = num_pitchers * cups_per_pitcher\n\n    # Calculate the total revenue from selling all the lemonade\n    total_revenue = total_cups * price_per_cup\n\n    # Calculate the total time Millie spends running the lemonade stand\n    total_time = total_revenue / cups_sold_per_hour\n\n    # Calculate the profit Millie will make per hour\n    profit_per_hour = total_revenue - total_cost\n    result = profit_per_hour\n    return result"}
{"output": "def solution():\n    \n    land_sold = (3/5) * 12.8\n    land_at_first = land_sold + 12.8\n    result = land_at_first\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of members and the percentage of boys and girls\n    total_members = 52\n    boys_percentage = 0.5\n    girls_percentage = 0.5\n\n    # Calculate the number of boys and girls\n    boys = total_members * boys_percentage\n    girls = total_members * girls_percentage\n\n    # Calculate the number of people who can't make it to the show\n    no_people = total_members - boys - girls\n\n    # Calculate the number of people who can't make it to the show\n    no_people = no_people / 2\n\n    # Calculate the number of people who sang\n    sangers = total_members - no_people\n\n    # Display the number of people who sang\n    result = sangers\n    return result"}
{"output": "def solution():\n    \n    test_scores = [65, 94, 81, 86, 74]\n    total_score = sum(test_scores) / len(test_scores)\n    math_grade = total_score / 80\n    result = math_grade\n    return result"}
{"output": "def solution():\n    \n    eraser_cost = 2\n    pencil_cost = 3\n    num_erasers = 6\n    num_pencils = 8\n    total_cost = (eraser_cost * num_erasers) + (pencil_cost * num_pencils)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of messages delivered to Ms. Thompson\n    thompson_messages = 66\n\n    # Calculate the number of messages delivered to Mr. Yu\n    yu_messages = thompson_messages / 3\n\n    # Calculate the total number of messages delivered\n    total_messages = thompson_messages + yu_messages\n\n    # Display the total number of messages delivered\n    result = total_messages\n    return result"}
{"output": "def solution():\n    num_rides = 9\n    num_tickets_per_ride = 2\n    ticket_price = 2\n    bracelet_price = 30\n\n    # Calculate the total cost of all rides of tickets\n    total_tickets_cost = num_rides * num_tickets_per_ride\n\n    # Calculate the total cost of all rides of bracelets\n    total_bracelet_cost = num_rides * bracelet_price\n\n    # Calculate the total cost of all rides of tickets\n    total_ticket_cost = total_tickets_cost * num_tickets_per_ride\n\n    # Calculate the amount of money David saves\n    savings = total_ticket_cost - total_bracelet_cost\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    total_gifts = 6 + 4 + 2\n    ribbon_available = 144\n    gifts_per_bow = ribbon_available // gifts_per_bow\n    result = gifts_per_bow\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of Betty's popsicles to Sam's popsicles\n    betty_ratio = 5\n    sam_ratio = 6\n\n    # Calculate the total number of popsicles\n    total_popsicles = 165\n\n    # Calculate the sum of the ratios in order to find the value of one ratio\n    total_ratio = betty_ratio + sam_ratio\n\n    # Calculate the value of one ratio\n    one_ratio = total_popsicles / total_ratio\n\n    # Calculate the number of popsicles Betty has\n    betty_popsicles = one_ratio * one_ratio\n\n    # Calculate the number of popsicles Sam has\n    sam_popsicles = one_ratio * one_ratio\n\n    # Calculate the difference between the number of popsicles Sam and Betty have\n    difference = sam_popsicles - betty_popsicles\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    netflix_cost = 10\n    hulu_disney_plus_cost = 10 * 2\n    total_cost = netflix_cost + hulu_disney_plus_cost\n    savings_percent = 20\n    savings = total_cost * (savings_percent / 100)\n    savings_amount = total_cost - savings_amount\n    result = savings_amount\n    return result"}
{"output": "def solution():\n    \n    writing_time = 4\n    recording_time = writing_time / 2\n    editing_time = 90\n    total_time = writing_time + recording_time + editing_time\n    editing_percentage = (editing_time / total_time) * 100\n    result = editing_percentage\n    return result"}
{"output": "def solution():\n    \n    rows = 6\n    columns = 6\n    books = (2 * rows) + 20\n    result = books\n    return result"}
{"output": "def solution():\n    num_cards_made = 20\n    num_cards_per_box = 15\n    num_boxes_brought = 2\n    num_cards_per_box = num_cards_per_box * num_boxes_brought\n    num_cards_given_away = 24 + 5 + 17\n    num_cards_remaining = num_cards_made - num_cards_given_away + num_cards_received\n    result = num_cards_remaining\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of slices\n    initial_slices = 12\n\n    # Calculate the number of slices given to Bill\n    bill_slices = initial_slices * (1/3)\n\n    # Calculate the number of slices given to Mark\n    mark_slices = initial_slices * (1/4)\n\n    # Calculate the total number of slices given away\n    total_given_away = bill_slices + mark_slices\n\n    # Calculate the number of slices left\n    slices_left = initial_slices - total_given_away - 2\n\n    # Display the number of slices left\n    result = slices_left\n    return result"}
{"output": "def solution():\n    \n    starting_amount = 50\n    daily_earnings = 10\n    bike_cost = 300\n    amount_saved = starting_amount - (daily_earnings * bike_cost)\n    days_to_save = amount_saved / daily_earnings\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spiders\n    spiders = 90\n\n    # Calculate the number of millipedes\n    millipedes = spiders * (1/3)\n\n    # Calculate the number of stink bugs\n    stink_bugs = 2 * millipedes - 12\n\n    # Calculate the total number of bugs\n    total_bugs = spiders + millipedes + stink_bugs\n\n    # Display the total number of bugs\n    result = total_bugs\n    return result"}
{"output": "def solution():\n    erica_age = 30  # Erica is 30 years old\n    beth_age = erica_age + 5  # Beth is 5 years older than Erica\n    alice_age = beth_age + 7  # Alice is 7 years older than Beth\n\n    # Calculate the difference between Alice and Erica's ages\n    age_difference = alice_age - erica_age\n    result = age_difference\n    return result"}
{"output": "def solution():\n    \n    glasses_of_milk = 2\n    ounces_per_glass = 8\n    calories_per_ounce = 3\n    total_ounces = glasses_of_milk * ounces_per_glass\n    total_calories = total_ounces * calories_per_ounce\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    weeks_per_month = 4\n    days_per_week = 6\n    days_per_year = 52\n    pay_per_day = 50\n    total_pay = weeks_per_month * days_per_week * pay_per_day * days_per_year\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of flour and milk needed in cups\n    FLOUR_PER_BATCH = 3\n    MILK_PER_BATCH = 1\n\n    # Define the amount of flour and milk sold in cups\n    FLOUR_PER_BATCH = 2\n    MILK_PER_BATCH = 2\n\n    # Calculate the total amount of flour and milk needed\n    total_flour = FLOUR_PER_BATCH * 4\n    total_milk = MILK_PER_BATCH * 4\n\n    # Calculate the number of bags of flour and bottles of milk needed\n    bags_of_flour = total_flour // FLOUR_PER_BATCH\n    bottles_of_milk = total_milk // MILK_PER_BATCH\n\n    # Calculate the difference between the number of bags of flour and bottles of milk needed\n    difference = bags_of_flour - bottles_of_milk"}
{"output": "def solution():\n    \n    watt_hours_per_day = 8\n    watts_per_hour = 900\n    hours_per_day = 8\n    days = 30\n    total_watts = watt_hours_per_day * watts_per_hour * hours_per_day * days\n    energy_saved_per_day = total_watts / 1000\n    energy_saved_in_30_days = energy_saved_per_day * days\n    result = energy_saved_in_30_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stripes per zebra\n    stripes_per_zebra = 17\n\n    # Define the number of stripes per zebra\n    stripes_per_zebra_2 = stripes_per_zebra / 2\n\n    # Calculate the total number of stripes\n    total_stripes = 2 * stripes_per_zebra + 36 + stripes_per_zebra_2\n\n    # Calculate the average number of stripes per zebra\n    avg_stripes_per_zebra = total_stripes / 3\n\n    # Display the average number of stripes per zebra\n    result = avg_stripes_per_zebra\n    return result"}
{"output": "def solution():\n    \n    sandwiches_per_person = 4\n    total_people = 20\n    meat_cost_per_pound = 7\n    cheese_cost_per_pound = 3\n    total_sandwiches = sandwiches_per_person * total_people\n    total_meat_cost = meat_cost_per_pound * total_sandwiches\n    total_cheese_cost = cheese_cost_per_pound * total_sandwiches\n    total_cost = total_meat_cost + total_cheese_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cannolis and the ratio of corn to cannolis\n    cannolis = 40\n    corn_to_cannolis = 2\n\n    # Calculate the number of cannolis bought at the store\n    cannolis_bought = cannolis + 60\n\n    # Calculate the number of corns\n    corns = cannolis_bought - 40\n\n    # Calculate the combined total of the number of corns and cannolis\n    total = cannolis_bought + corns\n\n    # Display the combined total\n    result = total\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of steps Elliott walked\n    total_steps = 10000\n\n    # Calculate the number of steps Elliott finished on his walks\n    walks_steps = total_steps / 2\n\n    # Calculate the number of steps Elliott took for his short walk\n    short_walk_steps = 1000\n\n    # Calculate the number of steps Elliott took during his jog\n    jog_steps = total_steps - walks_steps - short_walk_steps - 2000\n\n    # Display the number of steps Elliott took during his jog\n    result = jog_steps\n    return result"}
{"output": "def solution():\n    \n    total_pages = 45\n    words_per_page = 200\n    words_per_minute = 300\n    time_to_airport = 10\n    total_words = total_pages * words_per_page\n    time_to_read = total_words / words_per_minute\n    time_early = time_to_read + time_to_airport\n    result = time_early\n    return result"}
{"output": "def solution():\n    \n    num_employees = 40\n    wage_per_hour = 15\n    work_hours_per_week = 40\n    weeks_in_june = 2\n    num_expired_contracts = num_employees * (1/4)\n    num_expired_employees = num_employees - num_expired_contracts\n    total_pay = num_expired_employees * wage_per_hour * work_hours_per_week * weeks_in_june\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Sally had\n    initial_money = 10\n\n    # Calculate the sale price of the taffy\n    sale_price = 3\n\n    # Calculate the discounted price of the taffy\n    discounted_price = sale_price * 0.5\n\n    # Calculate the cost of the taffy\n    taffy_cost = sale_price - discounted_price\n\n    # Calculate the cost of the seashells\n    seashell_cost = 1.5\n\n    # Calculate the cost of the magnets\n    magnets_cost = 4 * 0.25\n\n    # Calculate the total cost of the taffy\n    total_cost = taffy_cost + seashell_cost + magnets_cost\n\n    # Calculate the amount of money Sally has left\n    money_left = initial_money - total_cost\n\n    # Return the result\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the fireworks\n    package_price = 400\n    pack_price = 2 * package_price\n    finale_price = 150\n\n    # Calculate the total cost before discount\n    total_cost = package_price + pack_price + finale_price\n\n    # Calculate the discount amount\n    discount = total_cost * 0.2\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost - discount\n\n    # Return the result\n    result = total_cost_after_discount\n    return result"}
{"output": "def solution():\n    cookies_per_dozen = 12  # Shannon's recipe makes 1 dozen madeleine cookies\n    cookies_per_night = 2  # Shannon eats 2 cookies per night\n    days = 30  # Shannon wants to make enough cookies for 30 days\n\n    # Calculate the total number of cookies Shannon needs for 30 days\n    total_cookies_needed = cookies_per_night * days\n\n    # Calculate the total number of dozens of cookies Shannon needs to make\n    dozens_needed = total_cookies_needed / cookies_per_dozen\n    result = dozens_needed\n    return result"}
{"output": "def solution():\n    # Calculate the number of homemade candles\n    homemade_candles = 50000\n\n    # Calculate the number of non-expensive candles\n    non_expensive_candles = homemade_candles * 0.99\n\n    # Calculate the number of non-expensive and non-expensive candles\n    non_expensive_candles = homemade_candles - non_expensive_candles\n\n    # Calculate the number of non-expensive and non-expensive candles that smell like wet dog\n    non_expensive_candles = non_expensive_candles * 0.05\n\n    # Calculate the number of non-expensive and non-expensive candles that smell like wet dog\n    non_expensive_candles = non_expensive_candles - non_expensive_candles\n\n    # Calculate the number of candles that smell like wet dog\n    wet_dog_candles = non_expensive_candles * 0."}
{"output": "def solution():\n    \n    # Define the regular price per blouse and the discount percentage\n    REGULAR_PRICE = 20\n    DISCOUNT_PERCENTAGE = 30\n\n    # Calculate the discounted price per blouse\n    discounted_price = REGULAR_PRICE - (REGULAR_PRICE * DISCOUNT_PERCENTAGE / 100)\n\n    # Calculate the total cost of the discounted blouses\n    total_cost = discounted_price * 4\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples gathered from each tree\n    tallest_trees = 30\n    shortest_trees = tallest_trees / 2\n    average_trees = average_trees + 1\n\n    # Calculate the number of apples gathered from each tree\n    joanne_tallest_trees = tallest_trees * 2\n    joanne_shortest_trees = shortest_trees * 3\n    sister_tallest_trees = tallest_trees * 2\n    sister_shortest_trees = shortest_trees * 3\n    sister_average_trees = average_trees * 3\n\n    # Calculate the total number of apples gathered\n    total_apples = joanne_tallest_trees + joanne_shortest_trees + sister_tallest_trees + sister_shortest_trees + sister_average_trees\n\n    # Display the total number of apples gathered\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the number of heads and bumps\n    heads = 180\n    bumps = 304\n\n    # Calculate the number of dromedaries\n    dromedaries = (heads + bumps) // 2\n\n    # Display the number of dromedaries\n    result = dromedaries\n    return result"}
{"output": "def solution():\n    \n    first_day_distance = 200\n    second_day_distance = 300\n    first_week_days = 4\n    second_week_days = 2\n    total_first_week_distance = first_day_distance * first_week_days\n    total_second_week_distance = second_day_distance * second_week_days\n    total_distance = total_first_week_distance + total_second_week_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    peter_locker = 5  # Peter's locker is 5 cubic inches\n    zack_locker = peter_locker / 4  # Peter's locker is 1/4 as big as Zack's locker\n    timothy_locker = zack_locker / 2  # Zack's locker is half as big as Timothy's locker\n\n    result = timothy_locker\n    return result"}
{"output": "def solution():\n    \n    stanley_elevation = 10000\n    stanley_ledge = 4000\n    oliver_elevation = 3000\n    distance_to_reach_stanley_elevation = stanley_elevation - stanley_ledge\n    result = distance_to_reach_stanley_elevation\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of capital\n    initial_cap = 5000\n\n    # Define the amount of money the first bank gave Mr. Josue\n    bank1_money = 4000\n\n    # Define the amount of money the second bank gave Mr. Josue\n    bank2_money = 2 * bank1_money\n\n    # Calculate the total amount of money Mr. Josue has now\n    total_money = initial_cap + bank1_money + bank2_money\n\n    # Display the total amount of money Mr. Josue has now\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    initial_cats = 50\n    boats = 4\n    cats_per_boat = 5\n    cats_remaining = initial_cats - (boats * cats_per_boat)\n    cats_ran = (3/5) * cats_remaining\n    cats_left = cats_remaining - cats_ran\n    result = cats_left\n    return result"}
{"output": "def solution():\n    \n    normal_price_1 = 8 * 6\n    normal_price_2 = 12 * 8\n    new_price_2 = 14 * 8\n    total_cost = normal_price_1 + normal_price_2 + new_price_2\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tattered_cost = 28\n    jogger_cost = tattered_cost - 6\n    total_cost = tattered_cost + jogger_cost\n    total_savings = 6\n    jogger_savings = total_savings / 3\n    difference = jogger_savings - tattered_savings\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of buses, minibusses, and minivans\n    buses = 4\n    minibusses = 6\n    minivans = 10\n\n    # Define the capacity of each bus, minibusses, and minivans\n    bus_capacity = 60\n    minibusse_capacity = 30\n    minivans_capacity = 15\n\n    # Calculate the total capacity of the buses\n    total_bus_capacity = buses * bus_capacity\n\n    # Calculate the total capacity of the minibusses\n    total_minibusse_capacity = minibusses * minibusse_capacity\n\n    # Calculate the total capacity of the minivans\n    total_minivans_capacity = minivans * minivans_capacity\n\n    # Calculate the total capacity of the day trip\n    total_capacity = total_bus_capacity + total_minibusse_capacity + total_minivans_capacity\n\n    # Calculate the number of employees that can join the day trip\n    employees_joined = total_capacity - total_capacity"}
{"output": "def solution():\n    \n    # Define the number of birds attracted by each bird feeder\n    birds_attracted = 20\n\n    # Define the number of birds attracted by the store-bought ones\n    birds_attracted_by_store = birds_attracted + 10\n\n    # Calculate the total number of birds attracted by all three birds\n    total_birds_attracted = (3 + 3) * birds_attracted_by_store\n\n    # Calculate the number of birds Lillian can expect to see in her garden each day\n    birds_per_day = total_birds_attracted - total_birds_attracted\n\n    # Display the number of birds Lillian can expect to see each day\n    result = birds_per_day\n    return result"}
{"output": "def solution():\n    \n    bagel_price = 4\n    soup_price = bagel_price * 1.25\n    cake_price = bagel_price / 2\n    total_price = bagel_price + soup_price + cake_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    ticket_cost = 100\n    selling_price = 1.5\n    cards_sold = ticket_cost / selling_price\n    cards_kept = cards_sold / 3\n    cards_start = cards_sold + cards_kept + 50\n    result = cards_start\n    return result"}
{"output": "def solution():\n    \n    total_guests = 36\n    half_guests = total_guests / 2\n    guests_with_second_hotdogs = half_guests - 40\n    guests_without_second_hotdogs = total_guests - guests_with_second_hotdogs\n    result = guests_without_second_hotdogs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters in Indras' name\n    indras_letters = 6\n\n    # Calculate the number of letters in Indras's sister's name\n    sister_letters = (indras_letters / 2) + 4\n\n    # Calculate the total number of letters\n    total_letters = indras_letters + sister_letters\n\n    # Display the total number of letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    pot_pans = 120\n    mixing_bowls = 20\n    utensils = 5\n    utensil_price = 5\n    total_cost = pot_pans + mixing_bowls + (utensils * utensil_price)\n    discount = total_cost * 0.2\n    final_cost = total_cost - discount\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the items\n    rope_price = 6\n    game_price = 11\n    ball_price = 2\n\n    # Define the amount of money Dora has saved\n    saved_money = 2\n\n    # Define the amount of money Dora's mother gave her\n    mother_money = 16\n\n    # Calculate the total cost of the items\n    total_cost = rope_price + game_price + ball_price\n\n    # Calculate the remaining amount of money needed\n    remaining_money = total_cost - saved_money - mother_money\n\n    # Display the remaining amount of money needed\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    thaddeus_dragons = 100\n    arthur_dragons = thaddeus_dragons * 0.75\n    walter_dragons = arthur_dragons * 2\n    bruce_dragons = walter_dragons / 5\n    total_dragons = thaddeus_dragons + arthur_dragons + walter_dragons + bruce_dragons\n    result = total_dragons\n    return result"}
{"output": "def solution():\n    \n    total_gallons = 15\n    containers = 5\n    gallons_per_container = total_gallons / containers\n    gas_per_container = gallons_per_container / 4\n    pints_per_gallon = 8\n    total_pints = gas_per_container * pints_per_gallon\n    result = total_pints\n    return result"}
{"output": "def solution():\n    chips_price = 40  # The vending machines sell chips for 40 cents\n    candy_price = 75  # The vending machines sell candy bars for 75 cents\n    total_spent = 5  # George spent $5\n    bags_of_chips = 3  # George got 3 bags of chips\n    remaining_money = total_spent * 0.01  # George had 1% of his money left\n\n    # Calculate the total amount of money George spent on chips\n    chips_money = bags_of_chips * chips_price\n\n    # Calculate the amount of money George had left after buying chips\n    money_left = total_spent - chips_money\n\n    # Calculate the number of candy bars George bought\n    candy_bars = money_left / candy_price\n    result = candy_bars\n    return result"}
{"output": "def solution():\n    \n    initial_lollipops = 25\n    kept_lollipops = 5\n    remaining_lollipops = initial_lollipops - kept_lollipops\n    friends = 4\n    lollipops_per_friend = remaining_lollipops // friends\n    result = lollipops_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the cake and the number of pieces\n    CAKE_WEIGHT = 20\n    NUM_PIECES = 8\n\n    # Calculate the total weight of the cakes\n    total_weight = CAKE_WEIGHT * NUM_PIECES\n\n    # Calculate the weight of the remaining cake\n    remaining_weight = total_weight - CAKE_WEIGHT\n\n    # Display the weight of the remaining cake\n    result = remaining_weight\n    return result"}
{"output": "def solution():\n    \n    total_oranges = 34 + 22\n    num_people = 2\n    oranges_per_person = total_oranges / num_people\n    result = oranges_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of onions needed\n    onions_needed = 2\n\n    # Calculate the amount of onions needed\n    onions_needed = onions_needed * 2\n\n    # Calculate the cost of the onions\n    onion_cost = onions_needed * 2\n\n    # Calculate the cost of the beef stock\n    beef_cost = 2 * 2\n\n    # Calculate the total cost\n    total_cost = onion_cost + beef_cost\n\n    # Calculate the cost per serving\n    cost_per_serving = total_cost / 6\n\n    # Round the cost per serving to the nearest integer\n    result = round(cost_per_serving)\n    return result"}
{"output": "def solution():\n    \n    bernadette_arrival = 5\n    bernadette_drive_time = 4 * bernadette_drive_time\n    wayne_time = 4\n    total_time = bernadette_arrival + bernadette_drive_time + wayne_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the area of the bedroom in square feet\n    bedroom_area = 360\n\n    # Convert the length of the room from yards to feet\n    room_length_feet = 3 * 3\n\n    # Calculate the perimeter of the room in feet\n    perimeter_feet = bedroom_area / room_length_feet\n\n    # Display the perimeter of the room in feet\n    result = perimeter_feet\n    return result"}
{"output": "def solution():\n    \n    elizabeth_red_beads = 1\n    elizabeth_clear_beads = 2\n    margareth_red_beads = 3\n    margareth_blue_beads = 4\n    total_beads = (elizabeth_red_beads + elizabeth_clear_beads) + (margareth_red_beads + margareth_blue_beads)\n    beads_per_pack = 20\n    total_beads_per_sister = total_beads_per_pack * sisters\n    difference = total_beads_per_sister - total_beads_per_sister\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial temperature of the house\n    initial_temp = 40\n\n    # Calculate the amount of time Marcus spends baking\n    baking_time = 3\n\n    # Calculate the amount of time Marcus spends on the oven\n    oven_time = baking_time * 60\n\n    # Calculate the amount of time Marcus spends on the window\n    window_time = 30\n\n    # Calculate the amount of time Marcus spends on the window\n    window_time = window_time / 10\n\n    # Calculate the amount of time Marcus spends on the house cools down\n    cooling_time = window_time // 10\n\n    # Calculate the final temperature of the house\n    final_temp = initial_temp + oven_time + cooling_time\n\n    # Display the final temperature of the house\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    jon_swim_time = 40\n    jon_bike_ride_time = 20\n    jon_run_time = 50\n    jon_total_time = jon_swim_time + jon_bike_ride_time + jon_run_time\n    james_swim_time = jon_swim_time * 1.1\n    james_bike_time = jon_bike_time + 5\n    james_total_time = james_swim_time + james_bike_time\n    jon_won_time = 10\n    james_run_time = james_total_time - jon_won_time\n    result = james_run_time\n    return result"}
{"output": "def solution():\n    \n    # Convert 1.25 hours to minutes\n    movie_c_length = 1.25 * 60\n\n    # Calculate the length of Movie B\n    movie_b_length = movie_c_length + 5\n\n    # Calculate the length of Movie A\n    movie_a_length = movie_b_length / 4\n\n    # Display the length of Movie A\n    result = movie_a_length\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of miles Michael runs\n    miles_run = 32 / 30\n\n    # Calculate the number of birds of hay Michael eats\n    birds_eaten = miles_run * 0.5\n\n    # Calculate the total cost of the hay\n    hay_cost = birds_eaten * 3\n\n    # Calculate the change Michael will have after buying the hay\n    change = 6 * 5 - hay_cost\n\n    # Display the change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    eggs_in_cases = 4 * 12\n    eggs_loose = 2\n    total_eggs = eggs_in_cases + eggs_loose\n    eggs_per_glass = 5\n    total_glasses = total_eggs // eggs_per_glass\n    trays = total_glasses // 5\n    result = trays\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of points Joey has\n    joey_points = 214\n\n    # Define the number of points Joey scores before his turn in Scrabble\n    joey_score = 26\n\n    # Define the number of points Marcy has\n    marcy_points = 225\n\n    # Define the number of points Marcy scores after his turn in Scrabble\n    marcy_score = 10\n\n    # Calculate the total number of points Joey has\n    joey_total_points = joey_points + marcy_points\n\n    # Calculate the number of points Joey is now winning\n    joey_winnings = joey_total_points - joey_score\n\n    # Display the number of points Joey is now winning\n    result = joey_winnings\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the case and the number of sneakers sold on Monday\n    case_cost = 576\n    monday_sneakers = 17\n\n    # Calculate the revenue from selling 17 sneakers at $20 each\n    monday_revenue = monday_sneakers * 20\n\n    # Calculate the revenue from selling the remaining sneakers at $25 each\n    remaining_sneakers = 48 - monday_sneakers\n    department_store_revenue = remaining_sneakers * 25\n\n    # Calculate the total revenue\n    total_revenue = monday_revenue + department_store_revenue\n\n    # Calculate the profit\n    profit = total_revenue - case_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    packets = 10\n    packets_with_8_colors = 6\n    packets_with_6_colors = 4\n    colors_per_packet_with_8_colors = 8\n    colors_per_packet_with_6_colors = 16\n    total_colors = (packets_with_8_colors * colors_per_packet_with_8_colors) + (packets_with_6_colors * colors_per_packet_with_6_colors)\n    result = total_colors\n    return result"}
{"output": "def solution():\n    \n    super_ticket_price = 20\n    soda_price = 3\n    extra_soda_price = 1\n    movie_ticket_price = 12\n    regular_price = (soda_price + extra_soda_price) - super_ticket_price - 2\n    regular_price_per_popcorn = movie_ticket_price / regular_price_per_popcorn\n    result = regular_price_per_popcorn\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of filling the balloons\n    initial_cost = 900\n\n    # Define the number of balloons to be filled\n    num_balloons = 170\n\n    # Calculate the new cost of filling each balloon after the price increase\n    new_cost = 20\n\n    # Calculate the total cost of filling the balloons after the price increase\n    total_cost = initial_cost + (num_balloons * new_cost)\n\n    # Return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance traveled during the first 2 hours\n    distance1 = 60 * 2\n\n    # Calculate the distance traveled during the next 1 hour\n    distance2 = 30 * 1\n\n    # Calculate the total distance traveled\n    total_distance = distance1 + distance2\n\n    # Calculate the average speed\n    average_speed = total_distance / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    num_sapphires = 8\n    num_rubies = 2\n    sapphire_value = 800\n    rubie_value = 1200\n\n    # Calculate the total value of all sapphires\n    total_sapphire_value = num_sapphires * sapphire_value\n\n    # Calculate the total value of all rubies\n    total_rubie_value = num_rubies * rubie_value\n\n    # Calculate the total value of all jewels\n    total_value = total_sapphire_value + total_rubie_value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    apples_per_day = 4\n    days = 30\n    total_apples = apples_per_day * days\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    num_beds = 10\n    bed_width = 2\n    bed_length = 8\n    bed_height = 2\n    soil_per_bed = bed_width * bed_length * bed_height\n    soil_per_bag = 2\n    total_soil_needed = num_beds * soil_per_bed\n    total_soil_needed_per_bag = total_soil_needed / soil_per_bag\n    cost_per_bag = 12\n    total_soil_cost = total_soil_needed_per_bag * cost_per_bag\n    result = total_soil_cost\n    return result"}
{"output": "def solution():\n    \n    red_cards = 15\n    green_cards = red_cards * 1.6\n    yellow_cards = red_cards + green_cards\n    total_cards = red_cards + green_cards + yellow_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    katelyn_saw = 50\n    friend1_saw = katelyn_saw / 2\n    friend2_saw = katelyn_saw / 2\n    total_saw = katelyn_saw + friend1_saw + friend2_saw\n    fairies_flying_away = 30\n    fairies_remaining = total_saw - fairies_flying_away\n    result = fairies_remaining\n    return result"}
{"output": "def solution():\n    \n    jennifer_puppies = 8\n    jennifer_spots = 3\n    brandon_puppies = 12\n    brandon_spots = 4\n    total_puppies = jennifer_puppies + brandon_puppies\n    percentage_jennifer_spots = (jennifer_puppies / total_puppies) * 100\n    result = percentage_jennifer_spots\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the sugar cubes\n    sugar_cubes_weight = 2 * 1\n\n    # Define the weight of the carrots\n    carrot_weight = 4 * 12\n\n    # Define the weight of the hay\n    hay_weight = 75\n\n    # Calculate the total weight of the horses\n    total_weight = sugar_cubes_weight + carrot_weight + hay_weight + 75\n\n    # Calculate the weight of oats\n    oats_weight = total_weight - total_weight\n\n    # Display the weight of oats\n    result = oats_weight\n    return result"}
{"output": "def solution():\n    \n    aluminum_can_value = 2\n    plastic_bottle_value = 3\n    soda_cans_per_week = 3\n    water_bottles_per_week = 5\n    total_cans_per_week = aluminum_can_value * soda_cans_per_week\n    total_bottles_per_week = plastic_bottle_value * water_bottles_per_week\n    total_earnings_per_week = total_cans_per_week + total_bottles_per_week\n    result = total_earnings_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the number of plants Frederick has\n    frederick_plants = 10\n\n    # Calculate the number of plants Toni has\n    toni_plants = frederick_plants * 1.6\n\n    # Calculate the number of plants Shondra has\n    shondra_plants = toni_plants - 7\n\n    # Display the number of plants Shondra has\n    result = shondra_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount Ali had\n    ali_money = 21\n\n    # Define the amount Leila gave Ali\n    leila_money = 100\n\n    # Calculate the amount Leila gave Ali\n    leila_gave = leila_money / 2\n\n    # Calculate the total amount Ali has now\n    total_money = ali_money + leila_gave\n\n    # Display the total amount Ali has now\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the pizza delivery\n    delivery_cost = 15\n\n    # Calculate the amount Ashley needs to give the tip\n    tip_amount = delivery_cost / 5\n\n    # Calculate the total amount Ashley needs to give the tip\n    total_amount = delivery_cost + tip_amount\n\n    # Display the total amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the race\n    RACE_DISTANCE = 100\n\n    # Calculate the distance of the first part of the race\n    first_part_distance = RACE_DISTANCE - 5\n\n    # Calculate the distance of the second part of the race\n    second_part_distance = 2 + 3\n\n    # Calculate the distance of the third part of the race\n    third_part_distance = RACE_DISTANCE - first_part_distance - second_part_distance\n\n    # Calculate the total distance of the race\n    total_distance = first_part_distance + second_part_distance + third_part_distance\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    num_decks = 6\n    basketball_cards_per_deck = 25\n    num_boxes = 5\n    baseball_cards_per_box = 40\n    cards_kept = 50\n    cards_per_student = 10\n\n    # Calculate the total number of basketball cards\n    total_basketball_cards = num_decks * basketball_cards_per_deck\n\n    # Calculate the total number of baseball cards\n    total_baseball_cards = num_boxes * baseball_cards_per_box\n\n    # Calculate the total number of cards\n    total_cards = total_basketball_cards + total_baseball_cards\n\n    # Calculate the total number of students\n    total_students = total_cards // cards_per_student\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    # Calculate the cost of Becky's apples after the discount\n    becky_cost = 20 * 0.45 - 1\n\n    # Calculate the cost of Kelly's apples after the discount\n    kelly_cost = 20 * 0.50 - 1\n\n    # Calculate the difference in cost between Kelly and Becky\n    cost_difference = kelly_cost - becky_cost\n\n    # Display the cost difference\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    sheets_per_room = 2\n    comforter = 1\n    pillow_cases_per_room = 2 * sheets_per_room\n    towels_per_room = 2 * pillow_cases_per_room\n\n    # Calculate the total number of sheets in 80 rooms\n    total_sheets = sheets_per_room * 80\n\n    # Calculate the total number of pillow cases in 80 rooms\n    total_pillow_cases = pillow_cases_per_room * 80\n\n    # Calculate the total number of towels in 80 rooms\n    total_towels = towels_per_room * 80\n\n    # Calculate the total number of pieces of laundry in 80 rooms\n    total_laundry = total_sheets + total_comforter + total_pillow_cases + total_towels\n    result = total_laundry\n    return result"}
{"output": "def solution():\n    \n    starting_shoes = 200\n    monday_shoes = 5\n    wednesday_shoes = 15\n    friday_shoes = 30\n    saturday_shoes = 180\n    total_shoes_received = monday_shoes + wednesday_shoes + friday_shoes + saturday_shoes\n    shoes_on_sunday = starting_shoes - total_shoes_received\n    result = shoes_on_sunday\n    return result"}
{"output": "def solution():\n    \n    jars_of_sprinkles = 6\n    cupcakes_per_jar = 8\n    total_cupcakes = jars_of_sprinkles * cupcakes_per_jar\n    cupcakes_per_pan = 12\n    pans_needed = total_cupcakes / cupcakes_per_pan\n    result = pans_needed\n    return result"}
{"output": "def solution():\n    \n    pen_price = 2\n    paper_price = 3 * pen_price - 1\n    total_price = pen_price + paper_price\n    change = 10 - total_price\n    result = change\n    return result"}
{"output": "def solution():\n    \n    num_students = 30\n    pencils_per_student = 10\n    total_pencils = num_students * pencils_per_student\n    used_pencils = total_pencils * (1/5)\n    remaining_pencils = total_pencils - used_pencils\n    left_pencils = remaining_pencils * (1/3)\n    result = left_pencils\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 5\n    carrot_sticks = (total_cookies / 2) + 2\n    result = carrot_sticks\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the shark and the length of the remoras\n    shark_length = 10\n    remoras_length = 2 * 6\n\n    # Calculate the combined length of the shark and remoras\n    combined_length = shark_length + remoras_length\n\n    # Calculate the percentage of the shark's body length\n    percentage = (combined_length / shark_length) * 100\n\n    # Display the percentage\n    result = percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the fraction of students with desktop computers\n    COMPUTER_FRACTION = 3/4\n\n    # Define the number of students without desktop computers\n    no_computers = 20\n\n    # Calculate the number of students with desktop computers\n    num_computers = no_computers * COMPUTER_FRACTION\n\n    # Display the number of students at the grade level\n    result = num_computers\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes Jason to walk in minutes\n    WALKING_TIME = 240\n\n    # Define the number of weeks Jason wants to try out\n    weeks = 3\n\n    # Define the number of days Jason can walk in a week\n    days_per_week = 4\n\n    # Calculate the total time Jason needs to walk in minutes\n    total_time = WALKING_TIME * days_per_week * weeks\n\n    # Calculate the time Jason needs to walk each day\n    days_per_day = total_time / days_per_week\n\n    # Display the time Jason needs to walk each day\n    result = days_per_day\n    return result"}
{"output": "def solution():\n    \n    total_spent = 300\n    books_per_book = 15\n    total_books = total_spent / books_per_book\n    num_kids = 4\n    books_per_child = total_books / num_kids\n    result = books_per_child\n    return result"}
{"output": "def solution():\n    \n    total_kids = 32\n    allergic_to_dairy = 9\n    allergic_to_peanuts = 6\n    allergic_to_both = 3\n    allergic_to_anything = total_kids - allergic_to_dairy - allergic_to_peanuts - allergic_to_both\n    result = allergic_to_anything\n    return result"}
{"output": "def solution():\n    num_employees_per_group = 200\n    num_groups = 3\n    num_tour_guides_per_group = 7\n\n    # Calculate the total number of employees on the tour\n    total_employees = num_employees_per_group * num_groups\n\n    # Calculate the total number of tour guides on the tour\n    total_tour_guides = total_employees * num_tour_guides_per_group\n    result = total_tour_guides\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the plane tickets\n    plane_ticket_cost = 5000\n\n    # Calculate the cost of the hotel\n    hotel_cost = normal_price * 1.2\n\n    # Calculate the total cost of the trip for 3 days\n    total_cost = plane_ticket_cost * 3 + hotel_cost * 3\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    ben_blue_paint = 4\n    ben_yellow_paint = 3\n    jasper_blue_paint = ben_blue_paint / 2\n    jasper_yellow_paint = ben_yellow_paint * 3\n    total_paint = jasper_blue_paint + jasper_yellow_paint\n    result = total_paint\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the 1959 penny\n    1959_weight = 48\n\n    # Calculate the weight of the 2010 penny\n    2010_weight = 1959_weight * 0.75\n\n    # Calculate the combined weight of the two pennies\n    combined_weight = 1959_weight + 2010_weight + 2010_weight\n\n    # Display the combined weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    total_goal = 200\n    keegan_earnings = 83\n    tasha_earnings = 91\n    keegan_earnings_so_far = keegan_earnings + tasha_earnings\n    remaining_goal = total_goal - keegan_earnings_so_far\n    result = remaining_goal\n    return result"}
{"output": "def solution():\n    \n    total_songs = 100\n    gabriel_songs = 20\n    luri_songs = 3 * gabriel_songs\n    difference = luri_songs - gabriel_songs\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    oranges_picked = 60\n    oranges_eaten = oranges_picked * (2/5)\n    oranges_eaten = oranges_eaten * 10\n    total_oranges = oranges_picked + oranges_eaten\n    total_money = total_oranges * 10\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of Jillian's shoes\n    shoes_cost = 80\n\n    # Calculate the cost of Jillian's handbag\n    handbag_cost = 3 * shoes_cost - 20\n\n    # Display the cost of Jillian's handbag\n    result = handbag_cost\n    return result"}
{"output": "def solution():\n    \n    daily_distance = 12\n    days_per_week = 5\n    weekly_distance = daily_distance * days_per_week\n    hourly_distance = 10\n    hours_per_day = weekly_distance / hourly_distance\n    hours_per_week = hours_per_day * days_per_week\n    result = hours_per_week\n    return result"}
{"output": "def solution():\n    \n    horses = 4\n    oats_per_horse_per_meal = 5\n    meals_per_day = 2\n    oats_per_day = horses * oats_per_horse_per_meal * meals_per_day\n    oats_per_bag = 50\n    bags_needed = oats_per_day / oats_per_bag\n    result = bags_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of puppies and the proportion of Pomeranians\n    total_puppies = 27\n    pomeranians_proportion = 2/3\n\n    # Calculate the number of Pomeranians\n    pomeranians = total_puppies * pomeranians_proportion\n\n    # Calculate the number of girl Pomeranians\n    girl_pomeranians = pomeranians / 3\n\n    # Display the number of girl Pomeranians\n    result = girl_pomeranians\n    return result"}
{"output": "def solution():\n    \n    # Define the highest temperatures for each country\n    southlandia_temp = -48\n    northlandia_temp = 21\n    midlandia_temp = -3\n\n    # Calculate the average highest temperature\n    avg_temp = (southlandia_temp + northlandia_temp + midlandia_temp) / 3\n\n    # Display the average highest temperature\n    result = avg_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the toy car and the amount already saved\n    CAR_COST = 12\n    CURRENT_SAVINGS = 4\n\n    # Define the amount of money the child needs to save\n    AMOUNT_TO_SAVE = 2\n\n    # Calculate the remaining amount of money\n    remaining_money = CAR_COST - CURRENT_SAVINGS\n\n    # Calculate the number of days it will take to save the remaining money\n    days_to_save = remaining_money / AMOUNT_TO_SAVE\n\n    # Display the number of days\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    eggs_per_tray = 24  # Each tray can hold 24 eggs\n    total_eggs = 64  # Jaime has 64 eggs\n    trays = 2  # Jaime has 2 trays\n\n    # Calculate the total number of eggs that can be placed on the trays\n    total_eggs_on_trays = eggs_per_tray * trays\n\n    # Calculate the number of eggs that won't be able to place on the tray\n    eggs_not_on_trays = total_eggs - total_eggs_on_trays\n    result = eggs_not_on_trays\n    return result"}
{"output": "def solution():\n    \n    small_pizza_cost = 8\n    family_size_pizza_cost = 3 * small_pizza_cost\n    total_cost = small_pizza_cost + family_size_pizza_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per pack and the number of packs purchased\n    PACK_PRICE = 4.00\n    PACKS_PURCHASED = 2\n\n    # Calculate the total cost before the coupon\n    total_cost = PACK_PRICE * PACKS_PURCHASED\n\n    # Subtract the coupon from the total cost\n    total_cost -= 2.00\n\n    # Calculate the cost per pack\n    cost_per_pack = total_cost / PACKS_PURCHASED\n\n    # Convert the cost per pack to cents\n    cost_per_razor_cents = cost_per_pack * 100\n\n    # Display the cost per razor in cents\n    result = cost_per_razor_cents\n    return result"}
{"output": "def solution():\n    # Calculate the total height of the human pyramid\n    total_height = (9 * 64) + (10 * 60)  # 9 out of 10 cheerleaders are 64\" tall, 10th cheerleader is 60\" tall\n    total_girls = 4 + 3 + 2  # 4 girls stand on top of the 4, 2 stand on top of the 3 and the shortest girl is on the top\n    human_pyramid_height = total_height / 12  # convert to feet\n    result = human_pyramid_height\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 8\n    minutes_per_hour = 5\n    days = 5\n    total_minutes = hours_per_day * minutes_per_hour * days\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define Brett's current age\n    brett_age = 14\n\n    # Calculate Angela's age in four years\n    angela_age_in_four_years = brett_age * 3\n\n    # Calculate Angela's current age\n    angela_age = angela_age_in_four_years - 4\n\n    # Display Angela's current age\n    result = angela_age\n    return result"}
{"output": "def solution():\n    \n    morning_rides = 14 * 2\n    afternoon_rides = 14 * 2\n    morning_cost = morning_rides * 6\n    afternoon_cost = afternoon_rides * 2\n    total_cost = morning_cost + afternoon_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of oranges Ashley brought\n    ashley_oranges = 5 * 10\n\n    # Calculate the total number of oranges Brianne brought\n    brianne_oranges = ashley_oranges + 20\n\n    # Calculate the total number of oranges they can make\n    total_oranges = ashley_oranges + brianne_oranges\n\n    # Calculate the number of greek orange pies they can make\n    pies = total_oranges // 3\n\n    # Display the number of greek orange pies they can make\n    result = pies\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the first venue\n    venue1_cost = 200\n\n    # Calculate the cost of the second venue\n    venue2_cost = 25 * 2\n\n    # Calculate the cost of the first venue with food\n    venue1_food_cost = 5 * 2\n\n    # Calculate the total cost of both venues\n    total_cost = venue1_cost + venue2_food_cost\n\n    # Calculate the number of guests needed\n    guests_needed = total_cost / venue1_cost\n    result = guests_needed\n    return result"}
{"output": "def solution():\n    \n    total_insects = 43\n    david_insects = total_insects / 2\n    lily_insects = david_insects + 7\n    result = lily_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of yarn used by Mariah and her grandma\n    mariah_yarn = 1/4 * 364\n    grandma_yarn = 1/2 * 364\n\n    # Calculate the total amount of yarn used\n    total_yarn = mariah_yarn + grandma_yarn\n\n    # Display the total amount of yarn used\n    result = total_yarn\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and gifts for each friend\n    num_friends = 5\n    num_friends_1 = 2\n    num_friends_2 = 3\n    num_friends_3 = 3\n    num_gifts_1 = 5\n    num_gifts_2 = 2\n\n    # Calculate the total number of gifts for each friend\n    total_gifts_1 = num_friends_1 * num_gifts_1\n    total_gifts_2 = num_friends_2 * num_gifts_2\n\n    # Calculate the total number of gifts for all friends\n    total_gifts = total_gifts_1 + total_gifts_2 + 10\n\n    # Display the total number of gifts\n    result = total_gifts\n    return result"}
{"output": "def solution():\n    \n    # Define the width of the chair\n    chair_width = 3\n\n    # Calculate the width of the rug\n    rug_width = chair_width - 5\n\n    # Calculate the width of the couch\n    couch_width = 2 * rug_width + 2\n\n    # Display the length of the couch\n    result = couch_width\n    return result"}
{"output": "def solution():\n    \n    packs_of_gum = 4\n    packs_of_strawberry = 2\n    cost_of_grape_pack = 2\n    cost_of_green_apple_pack = cost_of_grape_pack / 2\n    total_cost = 7\n    cost_of_strawberry_packs = (total_cost - cost_of_grape_pack - cost_of_green_apple_pack) / packs_of_strawberry\n    result = cost_of_strawberry_packs\n    return result"}
{"output": "def solution():\n    \n    sticks_from_2x4 = 200\n    sticks_from_2x8 = 400\n    sticks_per_piece = sticks_from_2x4 + sticks_from_2x8\n    total_sticks = (sticks_per_piece * 4) + (sticks_per_piece * 8)\n    money_available = 24\n    sticks_bought = money_available - sticks_bought\n    sticks_per_popsicle = sticks_bought / sticks_per_popsicle\n    result = sticks_per_popsicle\n    return result"}
{"output": "def solution():\n    num_dogs = 6\n    legs_per_dog = 4\n    snowshoes_per_dog = 2\n    cost_per_pair = 12.0\n\n    # Calculate the total number of legs of all dogs\n    total_legs = num_dogs * legs_per_dog\n\n    # Calculate the total number of pairs of snowshoes needed\n    total_pairs = total_legs / snowshoes_per_dog\n\n    # Calculate the total cost of all pairs of snowshoes needed\n    total_cost = total_pairs * cost_per_pair\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    trips_per_day = 2\n    days_per_week = 5\n    cost_per_trip = 2.20\n    days_per_week = 7\n    total_cost = trips_per_day * days_per_week * cost_per_trip\n    savings = total_cost - 20\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    farm_cows = 30\n    zoo_sheep = 20\n    farm_cows = farm_cows / 2\n    zoo_sheep = zoo_sheep / 2\n    total_cows = farm_cows + zoo_cows\n    total_sheep = farm_sheep + zoo_sheep\n    total_animals = total_cows + total_sheep\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    rose_onions = 12\n    rose_potatoes = 4\n    sophia_onions = rose_onions / 4\n    total_onions = rose_onions + sophia_onions\n    total_potatoes = rose_potatoes + sophia_potatoes\n    result = total_onions + total_potatoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of lbs Andy wants to lose and the number of days in December\n    lbs_goal = 30\n    days_in_december = 31\n\n    # Calculate the total number of lbs Andy wants to lose\n    total_lbs_goal = lbs_goal * 365\n\n    # Calculate the number of calories needed to burn to lose a pound\n    calories_needed = total_lbs_goal - 3500\n\n    # Calculate the number of calories needed per day to reach his goal\n    calories_per_day = calories_needed / days_in_december\n\n    # Display the number of calories needed per day\n    result = calories_per_day\n    return result"}
{"output": "def solution():\n    \n    daily_pay = 30\n    days_worked = 7\n    total_pay = daily_pay * days_worked\n    remaining_money = 100 - total_pay\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    water_per_km = 60  # Hannah needs to drink 60 ml of water for each kilometer she runs\n    laps_to_run = 8  # Hannah needs to run 8 laps\n    lap_distance = 0.25  # Each lap of water is 0.25 km\n\n    # Calculate the total distance Hannah will run\n    total_distance = laps_to_run * lap_distance\n\n    # Calculate the total amount of water Hannah will need to drink\n    total_water = water_per_km * total_distance\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Julie had\n    initial_money = 500\n\n    # Calculate the amount of money Julie spent on clothes\n    clothes_cost = initial_money * 0.2\n\n    # Calculate the remaining money after buying clothes\n    remaining_money = initial_money - clothes_cost\n\n    # Calculate the amount of money Julie spent on CDs\n    cds_cost = remaining_money * 0.25\n\n    # Calculate the final amount of money Julie has left\n    final_money = remaining_money - cds_cost\n\n    # Display the final amount of money Julie has left\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    lot_cost = 120000\n    house_cost = lot_cost * 3\n    result = house_cost\n    return result"}
{"output": "def solution():\n    num_packs = 8\n    num_bags = 5\n    cost_per_bag = 4\n    selling_price_per_bag = 8\n\n    # Calculate the total cost of all canvas bags\n    total_cost = num_packs * num_bags * cost_per_bag\n\n    # Calculate the total revenue from selling all bags\n    total_revenue = selling_price_per_bag * num_bags\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    punches_per_minute = 25\n    rounds = 5\n    minutes_per_round = 3\n    total_minutes = rounds * minutes_per_round\n    total_punches = total_minutes * punches_per_minute\n    result = total_punches\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Suzanne made\n    suzanne_cookies = 36\n\n    # Calculate the number of cookies Josh made\n    josh_cookies = suzanne_cookies / 4\n\n    # Calculate the number of cookies Kelsie made\n    kelsie_cookies = josh_cookies * 2\n\n    # Display the number of cookies Kelsie made\n    result = kelsie_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Ali has\n    initial_money = (4 * 10) + (6 * 20)\n\n    # Calculate the amount of money Ali gives her sister\n    sister_money = initial_money / 2\n\n    # Calculate the remaining amount of money\n    remaining_money = initial_money - sister_money\n\n    # Calculate the amount of money Ali uses to buy dinner\n    dinner_money = remaining_money * (3/5)\n\n    # Calculate the final amount of money Ali has after buying dinner\n    final_money = remaining_money - dinner_money\n\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    # Define Rob's time in minutes\n    rob_time = 2 * 60\n\n    # Calculate Royce's time in minutes\n    royce_time = 2 * rob_time + 40\n\n    # Display Royce's time in minutes\n    result = royce_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of grandchildren\n    num_grandchildren = 3\n\n    # Calculate the total number of wool needed\n    total_wool = num_grandchildren * 4 * 2\n\n    # Calculate the number of wool skeins needed for each child\n    hat_wool = 2\n    scarf_wool = 4\n    sweater_wool = 12\n    mittens_wool = 1\n    socks_wool = 2\n\n    # Calculate the total number of wool skeins needed\n    total_wool_skeins = (hat_wool + scarf_wool + sweater_wool + mittens_wool + socks_wool) * 3\n\n    # return the result\n    result = total_wool_skeins\n    return result"}
{"output": "def solution():\n    \n    total_problems = 100\n    monday_problems = 12\n    tuesday_problems = monday_problems * 3\n    remaining_problems = total_problems - monday_problems - tuesday_problems\n    wednesday_problems = remaining_problems / 4\n    remaining_problems -= wednesday_problems\n    result = remaining_problems\n    return result"}
{"output": "def solution():\n    \n    tony_strawberries = 6\n    bobby_strawberries = tony_strawberries - 1\n    kathy_strawberries = bobby_strawberries * 2\n    ricky_strawberries = kathy_strawberries - 2\n    total_strawberries = tony_strawberries + bobby_strawberries + kathy_strawberries + ricky_strawberries\n    result = total_strawberries\n    return result"}
{"output": "def solution():\n    \n    total_loaves = 200\n    sold_loaves = 93 + 39\n    unsold_loaves = 6\n    remaining_loaves = total_loaves - sold_loaves - unsold_loaves\n    result = remaining_loaves\n    return result"}
{"output": "def solution():\n    \n    red_tulips_per_row = 6\n    blue_tulips_per_row = 8\n    total_red_tulips = 36\n    total_blue_tulips = 24\n    total_flowers = (total_red_tulips // red_tulips_per_row) + (total_blue_tulips // blue_tulips_per_row)\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    total_raisins = 27\n    oatmeal_cookies = (3/4) * total_raisins\n    granola = (1/4) * total_raisins\n    snack_mix = (1/4) * total_raisins\n    oatmeal_batches = oatmeal_cookies // oatmeal_cookies\n    result = oatmeal_batches\n    return result"}
{"output": "def solution():\n    daily_consumption = 12  # Ada's daily electric consumption is 12 kilowatts per hour\n    new_consumption = 2  # Ada's new device consumes 2 kilowatts per hour\n    hourly_rate = 1.5  # Ada's new device consumes $1.50 kilowatts per hour\n    days_in_week = 7  # There are 7 days in a week\n\n    # Calculate the total kilowatts consumed by Ada in a week\n    total_consumption = daily_consumption * days_in_week\n\n    # Calculate the total kilowatts consumed by the new device\n    total_consumption += new_consumption * days_in_week\n\n    # Calculate the difference in kilowatts consumed before and after adding the new device\n    kilowatts_difference = total_consumption - daily_consumption\n    result = kilowatts_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the time it takes to paint half a house\n    num_people = 5\n    time_per_half_house = 0.5\n\n    # Calculate the total time needed to paint half a house\n    total_time = num_people * time_per_half_house\n\n    # Convert the total time to hours\n    total_time_hours = total_time / 60\n\n    # Return the result\n    result = total_time_hours\n    return result"}
{"output": "def solution():\n    \n    ophelia_sofas = 20\n    jenna_chairs = 3 * ophelia_sofas\n    total_sofas = ophelia_sofas + jenna_chairs\n    result = total_sofas\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the CD and the headphone set\n    CD_PRICE = 4\n    HEADPHONE_SET_PRICE = 48\n\n    # Calculate the total cost of the CDs\n    total_cost = CD_PRICE + HEADPHONE_SET_PRICE\n\n    # Calculate the number of CDs Tom can buy without the headphone set\n    cds_without_headphone = total_cost // CD_PRICE\n\n    # Calculate the number of CDs Tom can buy with the headphone set\n    cds_with_headphone = total_cost - cds_without_headphone\n\n    # Display the number of CDs Tom can buy with the headphone set\n    result = cds_with_headphone\n    return result"}
{"output": "def solution():\n    \n    week_one_hours = 4\n    week_two_hours = 5\n    week_three_hours = 6\n    total_hours = (week_one_hours * 8) + (week_two_hours * 2) + (week_three_hours * 8)\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of passengers\n    passengers = 48\n\n    # Calculate the number of passengers on the first stop\n    passengers_first_stop = passengers - 8\n\n    # Calculate the number of passengers on the second stop\n    passengers_second_stop = passengers_first_stop / 5\n\n    # Calculate the total number of passengers after the first stop\n    passengers_after_first_stop = passengers - passengers_first_stop - passengers_second_stop\n\n    # Display the total number of passengers after the second stop\n    result = passengers_after_first_stop\n    return result"}
{"output": "def solution():\n    \n    jame_age_in_5_years = 27\n    cousin_age_in_8_years = 2 * jame_age_in_5_years - 8\n    cousin_age_in_5_years = 2 * cousin_age_in_8_years - 5\n    total_age_in_5_years = jame_age_in_5_years + cousin_age_in_8_years + cousin_age_in_5_years\n    years_separating_age = total_age_in_5_years - 5\n    result = years_separating_age\n    return result"}
{"output": "def solution():\n    \n    computer_cost = 1200\n    printer_cost = 2400\n    total_cost = computer_cost + printer_cost\n    monitor_cost = (total_cost - 400) / 2\n    result = monitor_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of shells brought by the boys\n    boys_shells = 60 * 2\n\n    # Calculate the total number of seashells brought by the girls\n    girls_shells = boys_shells + 4 * 60\n\n    # Calculate the number of seashells brought by each girl\n    seashells_per_girl = girls_shells / 2\n\n    # Display the number of seashells brought by each girl\n    result = seashells_per_girl\n    return result"}
{"output": "def solution():\n    \n    george_candies = 3\n    nick_candies = 2 * george_candies - 5\n    result = nick_candies\n    return result"}
{"output": "def solution():\n    \n    # Define Chenny's age\n    chenny_age = 10\n\n    # Calculate Alyana's age\n    alyana_age = chenny_age - 4\n\n    # Calculate Anne's age\n    anne_age = alyana_age + 2\n\n    # Display Anne's age\n    result = anne_age\n    return result"}
{"output": "def solution():\n    \n    # Define the thickness of the first book\n    book1_thickness = 31\n\n    # Define the thickness of the second book\n    book2_thickness = 50\n\n    # Define the thickness of the third book\n    book3_thickness = book2_thickness - 5\n\n    # Define the thickness of the fourth book\n    book4_thickness = book1_thickness * 2\n\n    # Calculate the total thickness of the four books\n    total_thickness = book1_thickness + book2_thickness + book3_thickness + book4_thickness\n\n    # return the result\n    result = total_thickness\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vlogs Emma can upload per month\n    VLOGS_PER_MONTH = 72\n\n    # Define the number of vlogs Emma can make for each week\n    week1_vlogs = 18\n    week2_vlogs = 21\n    week3_vlogs = 15\n\n    # Calculate the total number of vlogs Emma can make\n    total_vlogs = week1_vlogs + week2_vlogs + week3_vlogs\n\n    # Calculate the number of additional vlogs Emma needs to complete\n    additional_vlogs = VLOGS_PER_MONTH - total_vlogs\n\n    # Display the number of additional vlogs Emma needs to complete\n    result = additional_vlogs\n    return result"}
{"output": "def solution():\n    \n    check_amount = 50 / 2\n    tip_percent = 20\n    tip_amount = check_amount * (tip_percent / 100)\n    total_amount = check_amount + tip_amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    initial_share = 18\n    eldest_addition = 5\n    eldest_addition = 10\n    total_money = initial_share + eldest_addition + eldest_addition\n    remaining_money = total_money - 8\n    triple_money = remaining_money * 3\n    final_money = remaining_money - triple_money\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    target_savings = 11205\n    first_half_savings = target_savings / 2\n    second_half_savings = first_half_savings * 2\n    result = second_half_savings\n    return result"}
{"output": "def solution():\n    num_apples = 3\n    apple_price = 1.5\n\n    num_oranges = 5\n    orange_price = 0.8\n\n    num_peaches = 6\n    peach_price = 0.75\n\n    total_cost = (num_apples * apple_price) + (num_oranges * orange_price) + (num_peaches * peach_price)\n    change = 20 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    jairus_task_price = 0.8\n    jenny_task_price = 0.5\n    num_tasks = 20\n\n    # Calculate the total amount of money Jairus gets\n    jairus_total_money = jairus_task_price * num_tasks\n\n    # Calculate the total amount of money Jenny gets\n    jenny_total_money = jenny_task_price * num_tasks\n\n    # Calculate the difference in money between Jairus and Jenny\n    difference = jairus_total_money - jenny_total_money\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_dollars = 100\n    jeff_ratio = 4\n    brad_dollars = total_dollars / (jeff_ratio + 1)\n    jeff_dollars = jeff_ratio * brad_dollars\n    result = jeff_dollars\n    return result"}
{"output": "def solution():\n    \n    miles_per_day = 3\n    days_per_week = 5\n    days_per_week = days_per_week * 7\n    total_miles = miles_per_day * days_per_week\n    result = total_miles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters Elise writes in full\n    full_letters = 2\n\n    # Calculate the number of letters Elise writes in half once\n    half_letters = full_letters / 2\n\n    # Calculate the total number of letters Elise has written\n    total_letters = full_letters + half_letters\n\n    # Display the total number of letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of families\n    initial_families = 3\n\n    # Calculate the number of families after the first call\n    families_after_first_call = initial_families - 3\n\n    # Calculate the number of families after the fourth round\n    families_fourth_round = families_after_first_call * 2\n\n    # return the result\n    result = families_fourth_round\n    return result"}
{"output": "def solution():\n    \n    # Define the weight lost per month\n    LOST_PER_MONTH = 10\n\n    # Define Mark's final weight\n    FINAL_WEIGHT = 70\n\n    # Calculate Mark's weight after 3 months\n    weight_after_3_months = FINAL_WEIGHT - (LOST_PER_MONTH * 3)\n\n    # Calculate Mark's initial weight\n    initial_weight = weight_after_3_months / 3\n\n    # Display Mark's initial weight\n    result = initial_weight\n    return result"}
{"output": "def solution():\n    \n    james_play_set = 80\n    jonathan_toys = james_play_set * 5\n    jonathan_toys += 2\n    result = jonathan_toys\n    return result"}
{"output": "def solution():\n    \n    notebook_price = 1.5\n    pen_price = 0.25\n    calculator_price = 12\n    geometry_set_price = 10\n    num_notebooks = 5\n    num_pens = 2\n    num_calculators = 1\n    num_geometry_sets = 1\n    total_cost = (notebook_price * num_notebooks) + (pen_price * num_pens) + (calculator_price * num_calculators) + (geometry_set_price * num_geometry_sets)\n    discount = total_cost * 0.1\n    total_cost_after_discount = total_cost - discount\n    result = total_cost_after_discount\n    return result"}
{"output": "def solution():\n    \n    hamburgers = 5\n    hamburger_price = 4\n    potato_fries = 10\n    potato_fries_price = 0.3\n    fruit_drinks = 5\n    fruit_drinks_price = 2\n    total_cost = (hamburgers * hamburger_price) + (potato_fries * potato_fries_price) + (fruit_drinks * fruit_drinks_price)\n    change = 50 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    # Calculate the commission earned from selling goods worth $1000\n    commission1 = 0.3 * 1000\n\n    # Calculate the commission earned from Sales over $1000\n    commission2 = 0.1 * 1000\n\n    # Calculate the total commission earned\n    total_commission = commission1 + commission2\n\n    # Calculate the amount of money Antonella earned\n    antonella_earned = 2500 - total_commission\n    result = antonella_earned\n    return result"}
{"output": "def solution():\n    \n    cases_of_water = 2\n    bottles_per_case = 24\n    guests = 70\n    bottles_per_guest = 2\n    total_bottles_needed = (cases_of_water * bottles_per_case) + (guests * bottles_per_guest)\n    additional_bottles_needed = total_bottles_needed - total_bottles_needed\n    result = additional_bottles_needed\n    return result"}
{"output": "def solution():\n    \n    cold_time_per_mile = 16\n    warm_time_per_mile = 2 * cold_time_per_mile + 2\n    distance = 3\n    hot_day_time = distance * hot_day_time\n    difference = hot_day_time - cold_day_time\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 2\n    hours_per_day = 5\n    days_per_week = 4\n    total_hours = hours_per_day * days_per_week\n    total_savings = 80\n    weeks_to_save = total_savings / (hourly_rate * total_hours)\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    fish_sub_cost = 40\n    combo_sub_cost = 3 * fish_sub_cost\n    total_cost = fish_sub_cost + combo_sub_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_buttons = 21\n    two_holes_buttons = 7\n    four_holes_buttons = total_buttons - two_holes_buttons\n    total_holes = (two_holes_buttons * 2) + (four_holes_buttons * 4)\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    timothy_locker = 24\n    zack_locker = timothy_locker / 2\n    peter_locker = zack_locker / 4\n    result = peter_locker\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of cups Octavia drinks\n    octavia_cups = 0.5 * 4\n\n    # Calculate the number of cups Juan drinks\n    juan_cups = 10 * octavia_cups\n\n    # Calculate the number of cups Juan needs to reduce his daily coffee intake\n    juan_cups_to_reduce = juan_cups - 4\n\n    # Display the number of cups Juan needs to reduce his daily coffee intake\n    result = juan_cups_to_reduce\n    return result"}
{"output": "def solution():\n    \n    cages_with_hamsters = 3\n    cages_with_guinea_pigs = 3\n    rodents_per_cage_with_hamsters = 10\n    rodents_per_cage_with_guinea_pigs = 5\n    total_rodents = (cages_with_hamsters * rodents_per_cage_with_hamsters) + (cages_with_guinea_pigs * rodents_per_cage_with_guinea_pigs)\n    result = total_rodents\n    return result"}
{"output": "def solution():\n    \n    mark_weight = 150\n    susan_weight = mark_weight - 20\n    bob_weight = susan_weight * 2\n    total_weight = mark_weight + susan_weight + bob_weight\n    average_weight = total_weight / 3\n    result = average_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial angle of the pyramids sit\n    initial_angle = 32\n\n    # Define the time the sun is moving from Sahir's house to the pyramid\n    time_to_move = 10\n\n    # Define the speed of the sun relative to Sahir's house\n    speed_to_move = 5\n\n    # Calculate the distance the sun is going to the pyramid\n    distance_to_pyramid = speed_to_move * time_to_move\n\n    # Calculate the final distance from the ground to the sun\n    final_distance = initial_angle + distance_to_pyramid\n\n    # Display the final distance\n    result = final_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of candles in each son\n    SON1_CANDLES = 12\n    SON2_CANDLES = SON1_CANDLES - 4\n\n    # Define the cost per pack of 5 candles\n    COST_PER_PACK = 3\n\n    # Calculate the total number of candles needed\n    total_candles = SON1_CANDLES + SON2_CANDLES\n\n    # Calculate the total cost of the candles\n    total_cost = total_candles * COST_PER_PACK\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of pages Judy read in the first week\n    pages_read_week1 = 15 * 2\n\n    # Calculate the number of pages Judy read in the second week\n    pages_read_week2 = 100\n\n    # Calculate the total number of pages Judy read in two weeks\n    total_pages_read = pages_read_week1 + pages_read_week2\n\n    # Display the total number of pages Judy read in two weeks\n    result = total_pages_read\n    return result"}
{"output": "def solution():\n    \n    total_sandwiches = 12\n    cody_sandwiches = total_sandwiches / 3\n    trevor_sandwiches = total_sandwiches / 4\n    sandwiches_left = total_sandwiches - cody_sandwiches - trevor_sandwiches\n    result = sandwiches_left\n    return result"}
{"output": "def solution():\n    \n    shiloh_age_in_7_years = 44\n    shiloh_age_in_7_years = shiloh_age_in_7_years + 7\n    nephew_age_in_7_years = shiloh_age_in_7_years / 3\n    nephew_age = nephew_age_in_7_years - 7\n    result = nephew_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Sharon received\n    initial_money = 5\n\n    # Define the amount of money Sharon gave to each of the next three teeth Sharon lost\n    second_three_teeth_lost = 1\n\n    # Define the amount of money Sharon gave to each of the last 2 teeth Sharon lost\n    last_two_teeth_lost = 2\n\n    # Calculate the amount of money Sharon received for each of the next three teeth\n    first_three_teeth_money = second_three_teeth_lost * 3\n\n    # Calculate the amount of money Sharon gave to each of the last 2 teeth Sharon lost\n    last_two_teeth_money = last_two_teeth_lost * 2\n\n    # Calculate the total amount of money Sharon received\n    total_money_received = first_three_teeth_money + second_three_teeth_money + last_two_teeth_money"}
{"output": "def solution():\n    \n    # Define the number of goals Richie scored\n    richie_goals = 80\n\n    # Calculate the number of goals Mark scored\n    mark_goals = richie_goals - 20\n\n    # Calculate the number of goals Anna scored\n    anna_goals = richie_goals - 45\n\n    # Calculate the total number of goals scored by all three teenagers\n    total_goals = richie_goals + mark_goals + anna_goals\n\n    # Display the total number of goals scored\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Calculate Liam's earnings\n    liam_earnings = 63\n\n    # Calculate Mitchell's earnings\n    mitchell_earnings = 21 * 4\n\n    # Calculate the difference in earnings between Mitchell and Liam\n    earnings_difference = mitchell_earnings - liam_earnings\n\n    # Display the difference in earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Peter has\n    initial_money = 70\n\n    # Define the cost of wooden action figures from Sunday to Wednesday\n    wooden_cost = 5\n\n    # Define the cost of plastic action figures for the rest of the week\n    plastic_cost = 2\n\n    # Calculate the total cost of wooden action figures for the week\n    total_wooden_cost = wooden_cost * 6\n\n    # Calculate the total cost of plastic action figures for the week\n    total_plastic_cost = plastic_cost * 2\n\n    # Calculate the total amount of money Peter will have after the week\n    total_money = initial_money - total_wooden_cost - total_plastic_cost\n\n    # Calculate the total number of action figures Peter will have by the end of the week\n    total_action_figures = total_money / 7\n\n    result = total_action_figures\n    return result"}
{"output": "def solution():\n    spaying_cost = 200\n    num_vaccines = 3\n    vaccine_cost = 20\n    num_vases = 4\n    vases_cost = 12\n\n    # Calculate the total cost of all vaccines\n    total_vaccine_cost = num_vaccines * vaccine_cost\n\n    # Calculate the total cost of all vases\n    total_vases_cost = num_vases * vases_cost\n\n    # Calculate the total cost of the kitten\n    total_cost = spaying_cost + total_vaccine_cost + total_vases_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    roses_per_week = 40\n    roses_ordered_first_shop = 20\n    roses_ordered_second_shop = 15\n    roses_ordered_third_shop = 30\n    weeks_in_month = 4\n    total_roses_ordered = (roses_ordered_first_shop + roses_ordered_second_shop + roses_ordered_third_shop) * weeks_in_month\n    roses_lack = total_roses_ordered - total_roses_ordered\n    result = roses_lack\n    return result"}
{"output": "def solution():\n    \n    initial_savings = 3000\n    monthly_removal = 100\n    months_in_two_years = 24\n    total_removal = monthly_removal * months_in_two_years\n    remaining_savings = initial_savings - total_removal\n    result = remaining_savings\n    return result"}
{"output": "def solution():\n    \n    loaf_cost = 3\n    sandwiches_per_loaf = 10\n    cheeses_cost_per_sandwich = 30\n    sandwiches_sold = 10\n    sandwich_price = 7\n    total_sandwiches = sandwiches_per_loaf * loafs_per_sandwich\n    total_cheeses_cost = cheeses_cost_per_sandwich * sandwiches_sold\n    total_sandwiches_sold = sandwiches_sold * sandwiches_sold\n    total_sales_cost = total_cheeses_cost + total_sandwiches_sold * sandwich_price\n    total_profit = total_sales_cost - total_cheeses_cost\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    boxes_of_64 = 3\n    crayons_per_box = 64\n    total_crayons = boxes_of_64 * crayons_per_box\n    crayons_per_muffin = 8\n    muffins_made = total_crayons // crayons_per_muffin\n    price_per_muffin = 1.5\n    total_money = muffins_made * price_per_muffin\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the bedroom\n    bedroom_length = 18\n    bedroom_width = 12\n\n    # Calculate the area of the bedroom\n    bedroom_area = bedroom_length * bedroom_width\n\n    # Calculate the area of the new carpet\n    new_carpet_area = bedroom_area * 12 + 2\n\n    # Calculate the cost of the old carpet\n    old_carpet_cost = new_carpet_area * 4\n\n    # Calculate the cost of the new carpet\n    new_carpet_cost = new_carpet_area * 34\n\n    # Calculate the total cost of replacing the carpet\n    total_cost = old_carpet_cost + new_carpet_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds seen on each day\n    day1_birds = 50\n    day2_birds = 50\n    day3_birds = 0\n    day4_birds = 120\n    day5_birds = 20\n    day6_birds = 20\n    day7_birds = 90\n\n    # Calculate the total number of birds seen\n    total_birds = day1_birds + day2_birds + day3_birds + day4_birds + day5_birds + day6_birds + day7_birds\n\n    # Calculate the average number of birds seen per day\n    avg_birds_per_day = total_birds / 7\n\n    # Display the average number of birds seen per day\n    result = avg_birds_per_day\n    return result"}
{"output": "def solution():\n    \n    starting_value = 20\n    divided_by_5 = starting_value / 2\n    multiplied_by_12 = starting_value * 2 - 12\n    final_value = starting_value + divided_by_5 + multiplied_by_12\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    boy_cards = 5\n    brother_cards = boy_cards - 3\n    total_cards = boy_cards + brother_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 450\n    actual_temp = 468\n    desired_temp = 520\n    percent_off = ((desired_temp - initial_temp) / actual_temp) * 100\n    result = percent_off\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the first movie in minutes\n    movie1_length = 1.5\n\n    # Define the length of the second movie in minutes\n    movie2_length = 2.5\n\n    # Calculate the total length of the first movie in minutes\n    movie1_total_length = movie1_length * 60\n\n    # Calculate the total length of the second movie in minutes\n    movie2_total_length = movie2_length * 60\n\n    # Calculate the total length of both movies in minutes\n    total_length = movie1_total_length + movie2_total_length\n\n    # return the result\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the value of Herb's house\n    herb_value = 76000\n\n    # Calculate the value of Juan's house\n    juan_value = herb_value * 0.7\n\n    # Calculate the total value of both houses\n    total_value = juan_value + herb_value\n\n    # return the result\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    cups = 12\n    dishes = 2 * cups\n    friend_cups = 40\n    friend_dishes = friend_cups + 20\n    total_cups = cups + friend_cups\n    total_dishes = dishes + friend_dishes\n    total_utensils = total_cups + total_dishes\n    result = total_utensils\n    return result"}
{"output": "def solution():\n    num_contacts_per_box = 90\n    cost_per_box = 100.0\n    discount = 0.1  # 10% discount\n    num_boxes = 2\n\n    # Calculate the total cost of all contacts before discount\n    total_cost_before_discount = num_contacts_per_box * cost_per_box\n\n    # Calculate the discount amount\n    discount_amount = total_cost_before_discount * discount\n\n    # Calculate the total cost of all contacts after discount\n    total_cost_after_discount = total_cost_before_discount - discount_amount\n\n    # Calculate the cost per pair of contacts\n    cost_per_pair = total_cost_after_discount / num_boxes\n    result = cost_per_pair\n    return result"}
{"output": "def solution():\n    \n    jill_saturday_hours = 2\n    jill_sunday_hours = 1\n    john_saturday_hours = jill_saturday_hours * 2\n    john_sunday_hours = jill_sunday_hours * 3\n    jill_pay = jill_saturday_hours + jill_sunday_hours + john_saturday_hours + john_sunday_hours\n    john_pay = jill_pay * 10\n    difference = john_pay - jill_pay\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    aerobics_calories_per_hour = 500\n    running_calories_per_hour = 600\n    total_calories_burned = (2 * aerobics_calories_per_hour) + (1 * running_calories_per_hour)\n    water_per_200_calories = 100\n    total_water_needed = (total_calories_burned // 200) * water_per_200_calories\n    result = total_water_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jelly beans in the jar\n    total_jelly_beans = 4500\n\n    # Calculate the number of blue jelly beans in the jar\n    blue_jelly_beans = total_jelly_beans * 0.01\n\n    # Calculate the number of red jelly beans in the jar\n    red_jelly_beans = blue_jelly_beans - red_jelly_beans\n\n    # Calculate the number of green jelly beans in the jar\n    green_jelly_beans = blue_jelly_beans * 1.1\n\n    # Calculate the difference between the number of green and red jelly beans\n    difference = green_jelly_beans - red_jelly_beans\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    initial_speed = 47  # Jared's initial typing speed is 47 words per minute\n    new_speed = 52  # Jared's new typing speed is 52 words per minute\n    increase = 5  # Jared wants to increase his typing speed once more than 5 words\n\n    # Calculate the total number of words in the three measurements\n    total_words = (initial_speed + new_speed) * 3\n\n    # Calculate the average number of words in the three measurements\n    average_words = total_words / 3\n    result = average_words\n    return result"}
{"output": "def solution():\n    # Calculate Martin's weight after 5 weeks\n    weight_cheerios = 1.25 * 5  # Martin eats Cheerios every day for breakfast, he loses 1.25 pounds/week\n    weight_donuts = 1.75 * 5  # Martin eats donuts every day for breakfast, he gains 1.75 pounds/week\n    total_weight = weight_cheerios + weight_donuts\n\n    # Calculate the difference in weight between the two breakfast options\n    weight_difference = total_weight - weight_cheerios\n    result = weight_difference\n    return result"}
{"output": "def solution():\n    \n    invited_people = 100\n    friends = 10\n    spouses = 8\n    seats_per_invited_person = 2\n    total_seats = (invited_people * seats_per_invited_person) + (friends * seats_per_invited_person) + (spouses * seats_per_invited_person)\n    result = total_seats\n    return result"}
{"output": "def solution():\n    \n    # Define the weights of each dog\n    Affenpinscher_weight = 10\n    Dachshund_weight = 2 * Affenpinscher_weight\n    Papillon_weight = Dachshund_weight / 4\n    Mastiff_weight = 44 * Papillon_weight\n\n    # Calculate the total weight of all four dogs\n    total_weight = Affenpinscher_weight + Dachshund_weight + Papillon_weight + Mastiff_weight\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the boots on eBay\n    eBay_shoes_cost = 13\n    amazon_shoes_cost = 16\n    eBay_shipping_cost = 2 * amazon_shoes_cost\n    eBay_total_cost = eBay_shoes_cost + amazon_shoes_cost + eBay_shipping_cost\n\n    # Calculate the difference in cost between the two boots on eBay and Amazon\n    difference = eBay_total_cost - 16 - 4\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial height of the beanstalk\n    initial_height = 4\n\n    # Define the height of the window\n    window_height = 20\n\n    # Calculate the daily height of the beanstalk\n    daily_height = initial_height * 2\n\n    # Calculate the number of days it will take to reach the window height\n    days_to_reach_window = window_height / daily_height\n\n    # Display the number of days it will take to reach the window height\n    result = days_to_reach_window\n    return result"}
{"output": "def solution():\n    # Calculate the total grams of mushrooms John eats per day\n    daily_mushrooms = 200\n\n    # Calculate the total grams of mushrooms John eats per week\n    weekly_mushrooms = daily_mushrooms * 7\n\n    # Calculate the total grams of protein John has per week\n    weekly_protein = weekly_mushrooms / 3\n\n    result = weekly_protein\n    return result"}
{"output": "def solution():\n    # Calculate Jerry's current age\n    current_age = 2 * 5  # Jerry is twice as old as he was 5 years ago\n\n    # Calculate Jerry's age in 3 years\n    age_in_3_years = current_age + 3\n    result = age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    num_implants = 2\n    base_price = 2000\n    extra_price = 500\n    total_cost = num_implants * base_price + extra_price\n    net_pay = 600 - total_cost\n    hourly_rate = 15\n    hours_needed = net_pay / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the target angle of the triangle\n    target_angle = 180\n\n    # Calculate the measure of the smallest angle\n    smallest_angle = target_angle / 3\n\n    # Calculate the measure of the largest angle\n    largest_angle = smallest_angle / 2\n\n    # Display the measure of the largest angle\n    result = largest_angle\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin in cents\n    QUARTER_VALUE = 0.25\n    DIME_VALUE = 0.10\n    NICKEL_VALUE = 0.05\n    PENNY_VALUE = 0.01\n\n    # Define the number of each coin Colby has\n    num_quarters = 8\n    num_dimes = 6\n    num_nickels = 14\n    num_pennies = 15\n\n    # Calculate the total value of the quarters\n    quarter_value = num_quarters * QUARTER_VALUE\n\n    # Calculate the total value of the dimes\n    dime_value = num_dimes * DIME_VALUE\n\n    # Calculate the total value of the nickels\n    nickel_value = num_nickels * NICKEL_VALUE\n\n    # Calculate the total value of the pennies\n    penny_value = num_pennies * PENNY_VALUE\n\n    # Calculate the total number of gumballs Colby can buy\n    total_gumballs = quarter"}
{"output": "def solution():\n    \n    # Define the number of legs for each type of pet\n    DOG_LEGS = 4\n    CAT_LEGS = 4\n    BIRD_LEGS = 2\n\n    # Define the number of each type of pet in the store\n    num_dogs = 5\n    num_cats = 2\n    num_birds = 10\n\n    # Calculate the total number of legs\n    total_dog_legs = num_dogs * DOG_LEGS\n    total_cat_legs = num_cats * CAT_LEGS\n    total_bird_legs = num_birds * BIRD_LEGS\n    total_legs = total_dog_legs + total_cat_legs + total_bird_legs\n\n    # Display the total number of legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    initial_weight = 8\n    percent_increase = 50\n    new_weight = initial_weight + (initial_weight * (percent_increase / 100))\n    final_weight = new_weight - 2\n    result = final_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of games\n    initial_games = 5\n\n    # Calculate the total amount of money needed for the first year\n    first_year_money = 12 * 1\n\n    # Calculate the total amount of money needed for the second year\n    second_year_money = 12 * 2\n\n    # Calculate the total amount of money needed for the third year\n    third_year_money = 12 * 4\n\n    # Calculate the total amount of money needed for all three years\n    total_money = first_year_money + second_year_money + third_year_money + 5\n\n    # Calculate the total number of games\n    total_games = initial_games + total_money\n\n    # return the result\n    result = total_games\n    return result"}
{"output": "def solution():\n    \n    distance = 1200\n    time = 3\n    speed = distance / time\n    additional_distance = 2000\n    additional_time = additional_distance / speed\n    result = additional_time\n    return result"}
{"output": "def solution():\n    # Calculate the amount of chocolates Marissa makes in one hour\n    marissa_hourly_chocolates = (3/4) * 120\n\n    # Calculate the total amount of chocolates they made in 12 hours\n    total_hourly_chocolates = 120 + marissa_hourly_chocolates\n\n    # Calculate the total amount of chocolates they made together in 12 hours\n    total_chocolates = total_hourly_chocolates * 12\n    result = total_chocolates\n    return result"}
{"output": "def solution():\n    \n    # Define the amount spent on Monday\n    monday_spending = 8\n\n    # Calculate the amount spent on Tuesday\n    tuesday_spending = monday_spending * 2\n\n    # Calculate the amount spent on Wednesday\n    wednesday_spending = tuesday_spending * 4\n\n    # Calculate the total amount spent\n    total_spending = monday_spending + tuesday_spending + wednesday_spending\n\n    # Calculate the amount of money Howard has left\n    money_left = 100 - total_spending\n\n    # Display the amount of money Howard has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    hours_1 = 4\n    cups_1 = 15\n    price_1 = 0.5\n    hours_2 = 2\n    cups_2 = 10\n    price_2 = 0.6\n    total_cups_1 = hours_1 * cups_1\n    total_price_1 = total_cups_1 * price_1\n    total_cups_2 = hours_2 * cups_2\n    total_price_2 = total_cups_2 * price_2\n    total_earnings = total_price_1 + total_price_2\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    miles_per_car = 2\n    rotations_per_tire = 725\n    miles_per_month = 400\n    tires_per_month = miles_per_month / rotations_per_tire\n    total_tires = tires_per_month * 12\n    total_rotations_needed = total_tires * 10000\n    years_to_replace = total_rotations_needed / total_rotations_per_month\n    result = years_to_replace\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the jumbo bottle of shampoo and the number of washings\n    shampoo_cost = 24.00\n    num_washings = 120\n\n    # Calculate the total number of pumps of shampoo needed\n    total_pumps = num_washings / 2\n\n    # Calculate the cost per pump\n    cost_per_pump = shampoo_cost / total_pumps\n\n    # Convert the cost per pump to cents\n    cost_per_pump_cents = cost_per_pump * 100\n\n    # Display the cost per pump in cents\n    result = cost_per_pump_cents\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Joe has\n    initial_money = 50\n\n    # Calculate the sale price of the shirt\n    shirt_price = 25\n\n    # Calculate the sale price of the shorts\n    shorts_price = 35\n\n    # Calculate the sale price of the outfit before tax\n    sale_price_before_tax = initial_money * 0.7\n\n    # Calculate the total cost of the outfit before tax\n    total_cost_before_tax = shirt_price + shorts_price\n\n    # Calculate the amount of money Joe will have left after tax\n    money_left = initial_money - total_cost_before_tax\n\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    croissants_per_dozen = 12\n    butter_per_dozen = 1/4\n    dozens_per_day = 4\n    days_per_week = 7\n    total_croissants = croissants_per_dozen * dozens_per_day * days_per_week\n    total_butter = total_croissants * butter_per_dozen\n    result = total_butter\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per meter and the length of Monica's street\n    COST_PER_METER = 190\n    MONICA_STREET = 150\n\n    # Define the length of Lewis' street\n    LEWIS_STREET = 490\n\n    # Calculate the total cost to repave Monica's street\n    monica_cost = MONICA_STREET * COST_PER_METER\n\n    # Calculate the total cost to repave Lewis' street\n    lewis_cost = LEWIS_STREET * COST_PER_METER\n\n    # Calculate the difference in cost\n    cost_difference = lewis_cost - monica_cost\n\n    # Display the difference in cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial funding and the number of months in the first 5 months\n    initial_funding = 100000\n    months_first_5_months = 5\n\n    # Calculate the total number of months after the first 5 months\n    months_after_first_5_months = months_first_5_months * 10\n\n    # Calculate the total number of months after the first 5 months\n    months_after_first_5_months = months_after_first_5_months / 2\n\n    # Calculate the total number of months after the first 5 months\n    total_months = months_after_first_5_months + months_after_first_5_months\n\n    # Calculate the total cost of the first 5 months of research\n    total_cost = initial_funding + total_months\n\n    # Display the total cost of the research\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of meat each player ate\n    player1_meat = 6\n    player2_meat = 8 * 8\n    player3_meat = 1/16\n\n    # Calculate the total amount of meat consumed\n    total_meat = player1_meat + player2_meat + player3_meat\n\n    # Display the total amount of meat consumed\n    result = total_meat\n    return result"}
{"output": "def solution():\n    \n    members = 1000\n    posts_per_member = 3\n    days_in_march = 31\n    total_posts = members * posts_per_member * days_in_march\n    result = total_posts\n    return result"}
{"output": "def solution():\n    \n    loads_per_week = 2\n    gallons_per_load = 20\n    cost_per_gallon = 0.15\n    weeks_per_year = 52\n    total_gallons = loads_per_week * gallons_per_load * weeks_per_year\n    total_cost = total_gallons * cost_per_gallon\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    aquarium_cost = 10\n    rocks_cost = 2 * 2.5\n    coral_cost = 3 * 2\n    fish_cost = 20 * 0.5\n    fish_food_cost = 2\n    total_cost = aquarium_cost + rocks_cost + coral_cost + fish_cost + fish_food_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial height of the beanstalk\n    height_1 = 3\n\n    # Calculate the height of the beanstalk after the second week\n    height_2 = height_1 * 2\n\n    # Calculate the height of the beanstalk after the third week\n    height_3 = height_2 + 4\n\n    # Calculate the total height of the beanstalk after 3 weeks\n    total_height = height_1 + height_2 + height_3\n\n    # Display the total height of the beanstalk\n    result = total_height\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of meat sold per hour and the number of hours worked per day\n    MEAT_SOLD_PER_HOUR = 15\n    HOURS_WORKED_PER_DAY = 10\n\n    # Define the weight of the bull\n    BILL_WEIGHT = 750\n\n    # Calculate the total amount of meat sold per day\n    total_meat_sold_per_day = MEAT_SOLD_PER_HOUR * HOURS_WORKED_PER_DAY\n\n    # Calculate the number of days it will take to sell the meat from Bill's bull\n    days_to_sell_meat = BILL_WEIGHT / total_meat_sold_per_day\n\n    # Display the number of days to sell the meat\n    result = days_to_sell_meat\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and seats per row\n    rows = 4\n    seats_per_row = 18\n\n    # Calculate the total number of seats in the auditorium\n    total_seats = rows * seats_per_row\n\n    # Calculate the number of seats occupied by the administrators\n    administrators_seats = total_seats // 4\n\n    # Calculate the number of remaining seats\n    remaining_seats = total_seats - administrators_seats\n\n    # Calculate the number of seats occupied by the parents\n    parents_seats = remaining_seats // 3\n\n    # Calculate the number of seats occupied by students\n    students_seats = remaining_seats - parents_seats\n\n    # Display the number of students\n    result = students_seats\n    return result"}
{"output": "def solution():\n    \n    # Define the number of street lights per intersection and the number of poles per intersection\n    STREETLIGHTS_PER_INTERSECTION = 4\n    POLES_PER_INTERSECTION = 6\n\n    # Calculate the total number of street lights on all four intersections\n    total_streetlights = STREETLIGHTS_PER_INTERSECTION * 4 * 4\n\n    # Calculate the number of streetlights not working\n    not_working_streetlights = 20\n\n    # Calculate the number of streetlights working on all four intersections\n    working_streetlights = total_streetlights - not_working_streetlights\n\n    # Calculate the total number of functioning street lights\n    total_streetlights = working_streetlights + working_streetlights\n\n    # Display the total number of functioning street lights\n    result = total_streetlights\n    return result"}
{"output": "def solution():\n    \n    # Define the number of played times for each DVD\n    dvd1_played = 356\n    dvd2_played = 135\n\n    # Define the number of played times for each DVD\n    dvd1_played = dvd1_played + dvd2_played\n    dvd2_played = dvd3_played + dvd2_played\n\n    # Calculate the total number of played times for both DVDs\n    total_played = dvd1_played + dvd2_played\n\n    # Display the total number of played times\n    result = total_played\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weeks John went to physical therapy\n    weeks = 6\n\n    # Define the number of hours John went to physical therapy per week\n    hours_per_week = 2\n\n    # Define the cost per hour of sessions\n    cost_per_hour = 125\n\n    # Calculate the total number of hours John went to physical therapy\n    total_hours = weeks * hours_per_week\n\n    # Calculate the total cost of the sessions\n    total_cost = total_hours * cost_per_hour\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of gum pieces\n    gum_pieces = 20\n\n    # Calculate the number of hours Jim spends at school\n    school_hours = 8\n\n    # Calculate the number of pieces of gum Jim chews at school\n    gum_pieces_at_school = school_hours // 2\n\n    # Calculate the number of pieces of gum Jim chews on the way home\n    gum_pieces_on_school = gum_pieces_at_school + 1\n\n    # Calculate the number of pieces of gum Jim has left\n    gum_pieces_left = gum_pieces - gum_pieces_at_school\n\n    # Calculate the number of pieces of gum Jim gives to his sister\n    gum_pieces_given_to_sister = gum_pieces_left / 2\n\n    # Calculate the final number of pieces of gum Jim has left\n    gum_pieces_left = gum_pieces_left - gum_pieces_given_to_sister"}
{"output": "def solution():\n    \n    # Define Charmaine's current age\n    charmaine_age = 16\n\n    # Calculate Charmaine's age in 12 years\n    charmaine_age_in_12_years = charmaine_age + 12\n\n    # Calculate Charmaine's age in 4 years\n    charmaine_age_in_4_years = charmaine_age_in_12_years + 4\n\n    # Display Charmaine's age in 4 years\n    result = charmaine_age_in_4_years\n    return result"}
{"output": "def solution():\n    num_baseballs = 9\n    baseball_price = 3\n\n    num_basketballs = 8\n    basketball_price = 14\n\n    # Calculate the total cost of all baseballs\n    total_baseball_cost = num_baseballs * baseball_price\n\n    # Calculate the total cost of all basketballs\n    total_basketball_cost = num_basketballs * basketball_price\n\n    # Calculate the difference in cost between the two coaches\n    cost_difference = total_basketball_cost - total_baseball_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and flowers per row\n    rows = 10\n    flowers_per_row = 20\n\n    # Calculate the total number of flowers in the garden\n    total_flowers = rows * flowers_per_row\n\n    # Calculate the number of flowers that have bloomed\n    bloomed_flowers = total_flowers * (4/5)\n\n    # Display the number of flowers that have bloomed\n    result = bloomed_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define Ashley's current internet connection speed in Mb per second\n    current_speed = 20\n\n    # Define the total size of 1 Mb in Mb\n    total_size = 1000\n\n    # Calculate Ashley's new internet connection speed in Mb per hour\n    new_speed = total_size / current_speed\n\n    # Display Ashley's new internet connection speed in Mb per hour\n    result = new_speed\n    return result"}
{"output": "def solution():\n    # Calculate the number of cars pulled on the first three days\n    cars_first_three_days = 10 * 3\n\n    # Calculate the number of cars pulled on the remaining days\n    cars_remaining_days = (10 - 4) * 3\n\n    # Calculate the total number of cars pulled\n    total_cars = cars_first_three_days + cars_remaining_days\n    result = total_cars\n    return result"}
{"output": "def solution():\n    \n    # Define Adam's height in inches\n    height_inches = 40\n\n    # Define Adam's desired height in inches\n    desired_height_inches = 4 * 12\n\n    # Define Adam's growth rate in inches per year\n    growth_rate_inches = 2\n\n    # Calculate the number of years until Adam is tall enough to ride the coaster\n    years_to_ride = (desired_height_inches - 40) / growth_rate_inches\n\n    # Display the number of years\n    result = years_to_ride\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each car and the number of cars sold\n    CAR_PRICE = 25000\n    NUM_CARS_SOLD = 10\n\n    # Calculate the total revenue from selling cars\n    total_revenue = CAR_PRICE * NUM_CARS_SOLD\n\n    # Calculate the amount paid by the company\n    company_payment = 0.3 * total_revenue\n\n    # Calculate the total revenue from the commission\n    commission = 0.1 * total_revenue\n\n    # Calculate the profit\n    profit = total_revenue - company_payment\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    total_riders = 100\n    upright_percent = 25\n    women_percent = 60\n    upright_riders = total_riders * (upright_percent / 100)\n    women_riders = total_riders * (women_percent / 100)\n    men_riders = upright_riders - women_riders\n    result = men_riders\n    return result"}
{"output": "def solution():\n    \n    # Define the price of a diamond Jewell\n    diamond_price = 2000\n\n    # Calculate the price of a gold Jewell\n    gold_price = 4/5 * diamond_price\n\n    # Calculate the price of a silver Jewell\n    silver_price = gold_price - 400\n\n    # Calculate the total price of all three jewels\n    total_price = diamond_price + gold_price + silver_price\n\n    # Display the total price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    snowflake_stamps = 16\n    truck_stamps = snowflake_stamps + 3\n    rose_stamps = truck_stamps - 9\n    total_stamps = snowflake_stamps + truck_stamps + rose_stamps\n    result = total_stamps\n    return result"}
{"output": "def solution():\n    \n    bob_distance = 75\n    bob_speed = 55\n    tom_speed = 70\n    time_to_catch_up = (tom_distance - bob_distance) / tom_speed\n    result = time_to_catch_up\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish caught by Naomi\n    naomi_fish = 17\n\n    # Calculate the number of fish caught by Darren\n    darren_fish = naomi_fish - 6\n\n    # Calculate the number of fish caught by Tommy\n    tommy_fish = darren_fish + 3\n\n    # Display the number of fish caught by Tommy\n    result = tommy_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per class and the total number of classes\n    COST_PER_CLASS = 10\n    TOTAL_CLASSES = 10\n\n    # Calculate the total cost of the classes before they don't sign him up again\n    total_cost = COST_PER_CLASS * TOTAL_CLASSES\n\n    # Calculate the number of classes Manny can miss before they don't sign him up again\n    missed_classes = (60 - total_cost) // COST_PER_CLASS\n\n    # Display the number of missed classes\n    result = missed_classes\n    return result"}
{"output": "def solution():\n    \n    jewel_customers = 50\n    julie_customers = jewel_customers * 2\n    total_customers = jewel_customers + julie_customers\n    weekly_production = total_customers * 7\n    result = weekly_production\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Paisley ran\n    paisley_distance = 4\n\n    # Calculate the distance Reggie ran\n    reggie_distance = 5 * paisley_distance\n\n    # Calculate the distance Lynn ran\n    lynn_distance = (reggie_distance - 3) / 2\n\n    # Display the distance Lynn ran\n    result = lynn_distance\n    return result"}
{"output": "def solution():\n    num_apples = 5\n    apple_price = 5.20\n\n    num_oranges = 5\n    orange_price = 3.30\n\n    # Calculate the total cost of all apples\n    total_apple_cost = num_apples * apple_price\n\n    # Calculate the total cost of all oranges\n    total_orange_cost = num_oranges * orange_price\n\n    # Calculate the total cost of all items\n    total_cost = total_apple_cost + total_orange_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    length = 6\n    width = 4\n    depth = 3\n    cubic_feet = length * width * depth\n    time_per_cubic_foot = 3\n    time_to_shovel = cubic_feet * time_per_cubic_foot\n    result = time_to_shovel\n    return result"}
{"output": "def solution():\n    \n    # Define the base price of the truck\n    truck_price = 30000\n\n    # Calculate the cost of the king cab upgrade\n    king_cab_cost = 7500\n\n    # Calculate the cost of the leather seats\n    leather_seats_cost = king_cab_cost / 3\n\n    # Calculate the cost of the running boards\n    running_boards_cost = leather_seats_cost - 500\n\n    # Calculate the cost of the upgraded exterior light package\n    upgraded_light_package_cost = king_cab_cost + leather_seats_cost + upgraded_light_package_cost\n\n    # Calculate the total cost of the truck with the extra features\n    total_cost = truck_price + king_cab_cost + leather_seats_cost + upgraded_light_package_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Tim's salary and raise percentage\n    salary = 20000\n    raise_percentage = 0.05\n\n    # Calculate Tim's salary after the raise\n    salary_after_raise = salary * (1 + raise_percentage)\n\n    # Calculate Tim's salary after the bonus\n    salary_after_bonus = salary_after_raise / 2\n\n    # Calculate Tim's total earnings in a year\n    total_earnings = salary_after_raise + salary_after_bonus\n\n    # Display Tim's total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    num_suits = 10\n    suit_cost = 750\n\n    num_dress_pants = 10\n    dress_shirt_cost = 60\n\n    num_dress_shirts = 3\n\n    # Calculate the total cost of all suits\n    total_suit_cost = num_suits * suit_cost\n\n    # Calculate the total cost of all dress pants\n    total_dress_pant_cost = num_dress_pants * dress_shirt_cost\n\n    # Calculate the total cost of all dress shirts\n    total_dress_shirt_cost = num_dress_shirts * dress_shirt_cost\n\n    # Calculate the total cost of everything\n    total_cost = total_suit_cost + total_dress_pant_cost + total_dress_shirt_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    political_articles_per_day = 20\n    business_articles_per_day = 10\n    days_in_month = 28\n    total_articles_per_day = political_articles_per_day + business_articles_per_day\n    total_articles_per_month = total_articles_per_day * days_in_month\n    result = total_articles_per_month\n    return result"}
{"output": "def solution():\n    \n    steve_age = 60\n    wife_age = steve_age + 4\n    son_age = steve_age / 2\n    son_age_diff = 3\n    son_wife_age = son_age + son_age_diff\n    result = son_wife_age\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each bag of flour\n    BAG_WEIGHT = 2\n\n    # Calculate the total weight of flour in kilograms\n    total_weight = 3 * BAG_WEIGHT\n\n    # Calculate the weight of flour in each bag of flour\n    weight_per_bag = total_weight / 8\n\n    # Calculate the total weight of flour in kilograms\n    total_weight_in_kilograms = weight_per_bag * 3\n\n    # Display the total weight of flour in kilograms\n    result = total_weight_in_kilograms\n    return result"}
{"output": "def solution():\n    # Calculate the distance Alisa biked\n    alisa_distance = 12 * 4.5\n\n    # Calculate the distance Stanley biked\n    stanley_distance = 10 * 2.5\n\n    # Calculate the total distance both biked\n    total_distance = alisa_distance + stanley_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    soil_speed = 4\n    clay_speed = soil_speed / 2\n    soil_distance = 24\n    clay_distance = 8\n    time_to_dig_soil = soil_distance / soil_speed\n    time_to_dig_clay = clay_distance / clay_speed\n    total_time = time_to_dig_soil + time_to_dig_clay\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    num_people = 3\n    num_cupcakes_per_person = 2\n    num_cupcakes_for_teacher = 2\n    num_cupcakes_for_classmates = 25\n    total_cupcakes = (num_people * num_cupcakes_per_person) + num_cupcakes_for_teacher + num_cupcakes_for_classmates\n    result = total_cupcakes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of likes\n    initial_likes = 2000\n\n    # Calculate the number of likes after 3 weeks\n    likes_after_3_weeks = initial_likes * 70\n\n    # Calculate the total number of likes after 3 weeks\n    total_likes = initial_likes + likes_after_3_weeks + 20000\n\n    # Display the total number of likes\n    result = total_likes\n    return result"}
{"output": "def solution():\n    num_pomegranates = 20\n    original_price = 20\n    discount = 2\n    fruit_price = 30\n    discount_percent = 10\n\n    # Calculate the total cost before discount\n    total_cost_before_discount = num_pomegranates * original_price\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost_before_discount * (1 - discount_percent/100)\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost_after_discount * (1 - discount_percent/100)\n\n    # Calculate the difference between the two prices\n    price_difference = total_cost_after_discount - total_cost_before_discount\n    result = price_difference\n    return result"}
{"output": "def solution():\n    \n    red_sales = 400\n    green_sales = red_sales / 2\n    first_month_sales = red_sales + green_sales\n    second_month_sales = (3/4) * first_month_sales\n    total_sales = first_month_sales + second_month_sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of hiring the carriage\n    start_time = 5\n    end_time = 9\n    free_time = 1\n    first_paid_hour = 15\n    cost_per_hour = 2 * first_paid_hour\n    total_cost = (end_time - start_time) * first_paid_hour + (free_time * cost_per_hour)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Sally had\n    initial_amount = 200\n\n    # Define the current amount of money Sally had\n    current_amount = 420\n\n    # Calculate the amount of money Sally had before receiving a full wage\n    amount_before_full_wage = initial_amount - current_amount\n\n    # Calculate the amount of money Sally had after receiving a full wage\n    amount_after_full_wage = amount_before_full_wage - 300\n\n    # Display the amount of money Sally had withheld from Sally's wage\n    result = amount_after_full_wage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and deviled egg halves needed\n    guests = 16\n    deviled_halves_per_guest = 3\n\n    # Calculate the total number of deviled egg halves needed\n    total_deviled_halves = guests * deviled_halves_per_guest\n\n    # Calculate the number of dozens of eggs needed\n    dozens_of_eggs = total_deviled_halves / 12\n\n    # Display the number of dozens of eggs needed\n    result = dozens_of_eggs\n    return result"}
{"output": "def solution():\n    \n    total_pages = 15\n    pages_written = total_pages / 3\n    pages_left = total_pages - pages_written\n    result = pages_left\n    return result"}
{"output": "def solution():\n    \n    total_pages = 200\n    pages_per_day = 10\n    days_to_complete = 30\n    pages_left = total_pages - pages_per_day\n    days_before_completion = days_to_complete / pages_per_day\n    result = days_before_completion\n    return result"}
{"output": "def solution():\n    \n    plane_cost = 150000\n    rent_per_month = 5000\n    fuel_cost_per_month = rent_per_month * 2\n    months_in_year = 12\n    total_cost = plane_cost + (rent_per_month * months_in_year) + (fuel_cost_per_month * months_in_year)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    rice_time = 30\n    pork_time = rice_time + 20\n    combined_time = rice_time + pork_time\n    beans_time = combined_time / 2\n    total_time = rice_time + pork_time + beans_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and quantities of almonds and walnuts\n    almonds_price = 10\n    walnuts_price = 15\n    almonds_quantity = 1/2\n    walnuts_quantity = 1/3\n\n    # Calculate the total cost of the mixture of almonds and walnuts\n    mixture_total_cost = (almonds_price * almonds_quantity) + (walnuts_price * walnuts_quantity)\n\n    # Calculate the difference in cost between the mixture of almonds and walnuts\n    cost_difference = mixture_total_cost - almonds_price\n\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    legs_per_animal = 70\n    heads_per_animal = 20\n    total_legs = legs_per_animal * 2\n    total_heads = heads_per_animal * 2\n    sheep_on_farm = total_legs - total_heads\n    result = sheep_on_farm\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per pound of coffee and the percentage increase\n    COST_PER_POUND = 5\n    PERCENT_INCREASE = 20\n\n    # Calculate the cost of the expensive brand\n    expensive_cost = COST_PER_POUND * (1 + PERCENT_INCREASE/100)\n\n    # Calculate the total cost of buying a week's worth of coffee\n    weekly_cost = COST_PER_POUND * 7\n\n    # Calculate the total cost of buying the donut\n    donut_cost = 2\n\n    # Calculate the total cost\n    total_cost = weekly_cost + donut_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    CHIPS_PRICE = 2\n    CHICKEN_PRICE = 8\n    SODA_PRICE = 1\n\n    # Define the number of each item purchased\n    num_chips = 2\n    num_chicken = 1\n    num_sodas = 1\n\n    # Calculate the total cost of the chips\n    chips_cost = num_chips * CHIPS_PRICE\n\n    # Calculate the total cost of the chicken\n    chicken_cost = num_chicken * CHICKEN_PRICE\n\n    # Calculate the total cost of the soda\n    soda_cost = num_sodas * SODA_PRICE\n\n    # Calculate the total cost of the apple pie\n    total_cost = 20\n\n    # Calculate the cost of the apple pie\n    pie_cost = total_cost - chips_cost - chicken_cost - soda_cost\n\n    # Display the cost of the apple pie\n    result ="}
{"output": "def solution():\n    \n    total_newspapers = 600\n    district_a_newspapers = 198\n    district_c_newspapers = 209\n    district_b_newspapers = total_newspapers - district_a_newspapers - district_c_newspapers\n    result = district_b_newspapers\n    return result"}
{"output": "def solution():\n    \n    class_hours_per_week = 4 * 2\n    weeks_of_class = 6\n    total_class_hours = class_hours_per_week * weeks_of_class\n    recipes_per_1.5_hours = 1.5\n    total_recipes = total_class_hours / recipes_per_1.5_hours\n    result = total_recipes\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of teachers and the percentage of history teachers\n    total_teachers = 150\n    history_percentage = 60\n\n    # Calculate the number of history teachers\n    history_teachers = total_teachers * (history_percentage / 100)\n\n    # Calculate the number of math teachers\n    math_teachers = total_teachers - history_teachers\n\n    # Calculate the total time the math teachers spend sleeping\n    math_time = math_teachers * 6\n\n    # Display the total time the math teachers spend sleeping\n    result = math_time\n    return result"}
{"output": "def solution():\n    \n    aurelia_money = 120\n    kassidy_money = (3/4) * aurelia_money\n    rayna_money = kassidy_money + 60\n    total_money = aurelia_money + kassidy_money + rayna_money\n    each_money = total_money / 2\n    result = each_money\n    return result"}
{"output": "def solution():\n    num_quarters = 4\n    quarter_length = 12\n    tie_length = 5\n\n    # Calculate the total length of all quarters in minutes\n    total_quarters_length = num_quarters * quarter_length\n\n    # Calculate the total length of the game in minutes\n    total_game_length = total_quarters_length + tie_length\n    result = total_game_length\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of employees\n    initial_employees = 50\n\n    # Calculate the number of employees management\n    management_employees = initial_employees * 0.2\n\n    # Calculate the number of employees overseeing the company\n    overseeing_employees = initial_employees - management_employees\n\n    # Calculate the number of employees overseeing the company\n    overseeing_employees = overseeing_employees * 0.3\n\n    # Display the number of employees overseeing the company\n    result = overseeing_employees\n    return result"}
{"output": "def solution():\n    flour_tablespoons_per_muffin = 5\n    sugar_tablespoons_per_muffin = 3\n    salt_tablespoons_per_muffin = 0.25\n    num_muffins = 16\n\n    # Calculate the total number of tablespoons of flour needed\n    total_flour_tablespoons = flour_tablespoons_per_muffin * num_muffins\n\n    # Calculate the total number of tablespoons of sugar needed\n    total_sugar_tablespoons = sugar_tablespoons_per_muffin * num_muffins\n\n    # Calculate the total number of tablespoons of salt needed\n    total_salt_tablespoons = salt_tablespoons_per_muffin * num_muffins\n\n    # Calculate the total number of tablespoons of dry ingredients needed\n    total_dry_ingredients_tablespoons = total_flour_tablespoons + total_sugar_tablespoons + total_salt_tablespoons"}
{"output": "def solution():\n    \n    # Define the initial amount of candy each person has\n    robert_candy = 3\n    cindy_candy = 5\n    aaron_candy = 4\n\n    # Calculate the total amount of candy\n    total_candy = robert_candy + cindy_candy + aaron_candy\n\n    # Calculate the amount of candy each person would have if they share equally\n    candy_per_person = total_candy / 2\n\n    # Display the amount of candy each person would have\n    result = candy_per_person\n    return result"}
{"output": "def solution():\n    num_type_a = 7\n    type_a_price = 0.5\n\n    num_type_b = 10\n    type_b_price = 0.75\n\n    total_paid = 15\n\n    # Calculate the total cost of all candies of type A\n    total_a_cost = num_type_a * type_a_price\n\n    # Calculate the total cost of all candies of type B\n    total_b_cost = num_type_b * type_b_price\n\n    # Calculate the total cost of all candies of type A and B\n    total_cost = total_a_cost + total_b_cost\n\n    # Calculate the change Adam will receive\n    change = total_paid - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    total_days = 30\n    good_days = 12\n    bad_days = 8\n    good_neutral_days = total_days - good_days - bad_days - good_days - 3\n    good_days_left = good_days - good_neutral_days\n    result = good_days_left\n    return result"}
{"output": "def solution():\n    \n    janey_books = 21\n    sally_books = (janey_books - 3) / 2\n    result = sally_books\n    return result"}
{"output": "def solution():\n    height_today = 20  # The height of the bamboo is 20 feet\n    growth_per_day = 30  # Mrs. Jameson's bamboo grows up to 30 inches a day\n    target_height = 600  # The height of the bamboo is 600 inches\n\n    # Calculate the number of days it will take to reach the target height\n    days_to_reach_target_height = (target_height - 20) / growth_per_day\n    result = days_to_reach_target_height\n    return result"}
{"output": "def solution():\n    \n    initial_toys = 4\n    initial_dogs = 4\n    new_dogs = 8\n    remaining_dogs = initial_dogs + new_dogs - 3\n    new_toys = remaining_dogs * 2\n    total_toys = initial_toys + new_toys\n    result = total_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount invested\n    initial_investment = 1200\n\n    # Calculate the amount invested after Dylan's investment\n    dylan_investment = initial_investment * (2/5)\n\n    # Calculate the remaining amount after Dylan's investment\n    remaining_amount = initial_investment - dylan_investment\n\n    # Calculate the amount invested after Frances\n    frances_investment = remaining_amount * (2/3)\n\n    # Calculate the total amount invested\n    total_investment = dylan_investment + frances_investment\n\n    # Calculate the amount invested by Skyler's investment\n    skyler_investment = total_investment - total_investment\n\n    # Display the amount invested by Skyler's investment\n    result = skyler_investment\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of signatures collected by Carol and Jennifer\n    carol_signatures = 20\n    jennifer_signatures = 44\n\n    # Calculate the total number of signatures collected by Carol and Jennifer after five weeks\n    total_carol_jennifer_signatures = carol_signatures + jennifer_signatures\n\n    # Calculate the total number of signatures collected by the sisters after five weeks\n    total_summer_signatures = total_carol_jennifer_signatures * 5\n\n    # Calculate the number of remaining signatures needed by the end of the summer\n    remaining_signatures = 100 - total_summer_signatures\n\n    # Return the result\n    result = remaining_signatures\n    return result"}
{"output": "def solution():\n    \n    lorie_hourly_earnings = 10\n    karen_hourly_earnings = lorie_hourly_earnings * 2\n    lorie_hours_per_day = 3\n    karen_hours_per_day = lorie_hours_per_day * 2\n    karen_earnings = karen_hourly_earnings * lorie_hours_per_day\n    total_earnings = karen_earnings + lorie_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    potatoes = 96\n    hash_browns_per_potato = 36 / 6\n    total_hash_browns = hash_browns_per_potato * potatoes\n    result = total_hash_browns\n    return result"}
{"output": "def solution():\n    \n    max_load = 700\n    adult_weight = 80\n    num_adults = 8\n    total_weight = adult_weight * num_adults\n    excess_weight = total_weight - max_load\n    result = excess_weight\n    return result"}
{"output": "def solution():\n    \n    katarina_cookies = 68\n    max_cookies = katarina_cookies - 5\n    monster_cookies = max_cookies + 12\n    summer_cookies = max_cookies + 23\n    total_cookies = katarina_cookies + max_cookies + monster_cookies + summer_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the final design\n    final_design = 140\n\n    # Calculate the original length of the dress\n    original_length = final_design / 1.5\n\n    # Add 20cm to the bottom of the dress\n    original_length += 20\n\n    # Display the original length of the dress\n    result = original_length\n    return result"}
{"output": "def solution():\n    \n    turtle_time = 1\n    rabbit_time = 40\n    turtle_mowing_time = turtle_time / 2\n    rabbit_mowing_time = rabbit_time / 2\n    total_time = turtle_mowing_time + rabbit_mowing_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    total_time = 30  # John and Jack have 30 minutes to walk to school together\n    time_to_library = 6  # It takes John 6 minutes to get to the corner where the library is\n    time_to_fire_station = 13  # It takes John 13 minutes to get to the fire station\n\n    # Calculate the total time it takes them to get to school without being late\n    total_time_without_late = total_time - (time_to_library + time_to_fire_station)\n    result = total_time_without_late\n    return result"}
{"output": "def solution():\n    num_apples = 1\n    apple_price = 4\n\n    num_bananas = 2\n    banana_price = 2\n\n    num_oranges = 2\n    orange_price = 3\n\n    # Calculate the total cost of all apples\n    total_apple_cost = num_apples * apple_price\n\n    # Calculate the total cost of all bananas\n    total_banana_cost = num_bananas * banana_price\n\n    # Calculate the total cost of all oranges\n    total_orange_cost = num_oranges * orange_price\n\n    # Calculate the total cost of all items\n    total_cost = total_apple_cost + total_banana_cost + total_orange_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    greta_cookies = 30\n    celinda_cookies = 2 * greta_cookies\n    total_cookies = greta_cookies + celinda_cookies\n    cookies_eaten = 10\n    cookies_in_box = total_cookies - cookies_eaten\n    result = cookies_in_box\n    return result"}
{"output": "def solution():\n    \n    # Let x be the age of one twin\n    # Then the age of one triplet is x + 7\n    # Their combined ages are 44, so we can write an equation:\n    # x + (x + 7) = 44\n    # Simplifying the equation, we get:\n    # 2x + 7 = 44\n    # 2x = 30\n    # Therefore, one twin is 30 years old\n\n    # Display the age of one twin\n    result = 30\n    return result"}
{"output": "def solution():\n    \n    math_homework = 20\n    reading_homework = 40\n    history_homework = 20\n    dinner_time = 3 * 60\n    total_homework = math_homework + reading_homework + history_homework + dinner_time\n    nap_time = total_homework - total_homework\n    result = nap_time\n    return result"}
{"output": "def solution():\n    num_lollipops = 5\n    lollipop_price = 0.40\n\n    num_candies = 4\n    candy_price = 3.20\n\n    # Calculate the total cost of all lollipops\n    total_lollipop_cost = num_lollipops * lollipop_price\n\n    # Calculate the total cost of all candies\n    total_candy_cost = num_candies * candy_price\n\n    # Calculate the total cost of all items\n    total_cost = total_lollipop_cost + total_candy_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of coins saved per month by Rong\n    rong_coins = 20\n\n    # Calculate the number of coins saved per month by Neil\n    neil_coins = (2/5) * rong_coins + rong_coins\n\n    # Calculate the total number of coins saved in 10 years\n    total_coins = (rice_coins + neil_coins) * 10\n\n    # Display the total number of coins saved\n    result = total_coins\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the vaccines and the heartworm check\n    VACCINE_COST = 20\n    HEARTWORM_CHECK_PERCENTAGE = 0.6\n\n    # Calculate the total cost of the vaccines\n    total_vaccine_cost = 2 * VACCINE_COST\n\n    # Calculate the heartworm check cost\n    heartworm_check_cost = total_vaccine_cost * HEARTWORM_CHECK_PERCENTAGE\n\n    # Calculate the amount John has left after the heartworm check\n    amount_left = 125 - heartworm_check_cost\n\n    # Display the amount John has left\n    result = amount_left\n    return result"}
{"output": "def solution():\n    \n    bananas_per_crate = 5\n    apples_per_crate = 12\n    oranges_per_crate = 7\n    apple_price = 0.5\n    banana_price = 2 * apple_price\n    orange_price = 3 * banana_price\n    total_fruits = bananas_per_crate + apples_per_crate + oranges_per_crate\n    total_price = total_fruits * apple_price + banana_price + orange_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    red_squares = 14\n    blue_squares = red_squares + 4\n    green_squares = blue_squares + 6\n    white_squares = green_squares - 12\n    total_squares = red_squares + blue_squares + green_squares + white_squares\n    square_feet = total_squares * 12\n    result = square_feet\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and babies\n    adults = 42\n    babies = 15\n\n    # Define the number of high chairs\n    high_chairs = 8\n\n    # Calculate the number of regular chairs\n    regular_chairs = 5 * high_chairs\n\n    # Calculate the total number of chairs\n    total_chairs = adults + babies + regular_chairs\n\n    # Calculate the number of additional chairs needed\n    additional_chairs = total_chairs - high_chairs\n\n    # Display the number of additional chairs needed\n    result = additional_chairs\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of deer and the percentage of bucks\n    total_deer = 50\n    buck_percentage = 0.5\n\n    # Calculate the number of bucks\n    bucks = total_deer * buck_percentage\n\n    # Calculate the number of 8 point bucks\n    point_percentage = 0.2\n    point_birds = bucks * point_percentage\n\n    # Display the number of 8 point bucks\n    result = point_birds\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum threshold of the class\n    MINIMUM_THRESHOLD = 400\n\n    # Define the number of points collected by Adam\n    adam_points = 50\n\n    # Calculate the number of points collected by Betty\n    betty_points = adam_points * 1.3\n\n    # Calculate the number of points collected by Tom\n    tom_points = betty_points + 30\n\n    # Calculate the number of points collected by Marta\n    marta_points = 3 * betty_points - 30\n\n    # Calculate the total number of points collected\n    total_points = adam_points + betty_points + marta_points + tom_points\n\n    # Calculate the number of points missing to go on the trip\n    missing_points = total_points - MINIMUM_THRESHOLD\n\n    # Display the number of points missing to go on the trip\n    result = missing_points\n    return result"}
{"output": "def solution():\n    num_children = 3\n    num_grandchildren_per_child = 3\n    num_great_grandbabies_per_grandchild = 3\n\n    # Calculate the total number of grandchildren\n    total_grandchildren = num_children * num_grandchildren_per_child\n\n    # Calculate the total number of great grand-babies\n    total_great_grandbabies = total_grandchildren * num_great_grandbabies_per_grandchild\n    result = total_great_grandbabies\n    return result"}
{"output": "def solution():\n    paycheck = 2400.00  # Greta's paycheck is $2400.00\n    retirement_percent = 0.50  # Greta puts 50% of her pay into her retirement account\n    car_percent = 0.20  # Greta uses 20% of her paycheck to make her car payment\n\n    # Calculate the amount Greta puts into her retirement account\n    retirement_amount = paycheck * retirement_percent\n\n    # Calculate the amount Greta uses for her car payment\n    car_payment_amount = paycheck * car_percent\n\n    # Calculate the total amount Greta has to spend\n    total_spent = retirement_amount + car_payment_amount\n\n    # Calculate how much money Greta has left to spend\n    money_left = paycheck - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_pencils = 20\n    missing_pencils = 4\n    remaining_pencils = total_pencils - missing_pencils\n    pairs_of_pencils = remaining_pencils // 2\n    result = pairs_of_pencils\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of fireworks in the first 15 boxes\n    fireworks_in_first_15_boxes = 15 * 20\n\n    # Calculate the number of fireworks in the last 15 boxes\n    fireworks_in_last_15_boxes = fireworks_in_first_15_boxes * 0.4\n\n    # Calculate the number of fireworks in the last 3 boxes\n    fireworks_in_last_3_boxes = 3 * 5\n\n    # Calculate the total number of fireworks\n    total_fireworks = fireworks_in_last_15_boxes + fireworks_in_last_3_boxes\n\n    # Display the total number of fireworks\n    result = total_fireworks\n    return result"}
{"output": "def solution():\n    \n    num_people = 12 + 7\n    num_drinks_per_person = 3\n    num_snacks_per_person = 3\n    num_drinks_per_seat = 1\n    num_snacks_per_seat = 3\n    drinks_per_seat = 2\n    snacks_per_seat = 3\n    total_drinks = num_people * num_drinks_per_person\n    total_snacks = num_people * num_snacks_per_person\n    total_drinks_cost = total_drinks * drinks_per_seat * 2\n    total_snacks_cost = total_snacks * snacks_per_seat * 2\n    total_cost = total_drinks_cost + total_snacks_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of gravel Gissela's truck can haul\n    gissela_weight = 4000\n\n    # Define the weight of gravel Gordy's truck can haul\n    gordy_weight = gissela_weight + 800\n\n    # Define the total weight of gravel the three trucks can haul\n    total_weight = 11600\n\n    # Calculate the weight of gravel Gary's truck can carry\n    gravel_weight = total_weight - gissela_weight - gordy_weight\n\n    # Display the weight of gravel Gary's truck can carry\n    result = gravel_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of males, females, and dumplings eaten by each group\n    num_males = 8\n    num_females = 6\n    male_dumplings = 3\n    female_dumplings = 3\n\n    # Calculate the total number of dumplings eaten by each group\n    male_total_dumplings = num_males * male_dumplings + num_females * female_dumplings\n    larry_total_dumplings = male_total_dumplings + female_total_dumplings\n\n    # return the result\n    result = larry_total_dumplings\n    return result"}
{"output": "def solution():\n    \n    total_ratio = 3 + 2\n    gerald_ratio = 3\n    julia_ratio = 2\n    gerald_money = (gerald_ratio / total_ratio) * 100\n    julia_money = (julia_ratio / total_ratio) * 100\n    total_money = gerald_money + julia_money\n    money_left = total_money - 10\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    cat_speed = 15\n    turtle_speed = cat_speed / 5\n    time = 40\n    distance = turtle_speed * time\n    result = distance\n    return result"}
{"output": "def solution():\n    \n    # Define the goal amount and the amount raised in the first 3 hours\n    GOAL_AMOUNT = 6300\n    FIRST_3_HOURS_RAISED = 2100\n\n    # Calculate the total amount raised so far\n    total_raised = FIRST_3_HOURS_RAISED + GOAL_AMOUNT\n\n    # Calculate the remaining amount to be raised\n    remaining_amount = GOAL_AMOUNT - total_raised\n\n    # Calculate the number of hours needed to reach the remaining amount\n    hours_needed = remaining_amount / 1\n\n    # Display the number of hours needed\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total water used by the city for industrial purposes\n    industrial_water = 0.8 * 40\n\n    # Calculate the total water used by the city for non-industrial purposes\n    non_industrial_water = 40 - industrial_water\n\n    # Calculate the percentage of the river's total water used by the city for non-industrial purposes\n    non_industrial_percentage = (non_industrial_water / total_water) * 100\n\n    # Display the percentage of the river's total water used by the city for non-industrial purposes\n    result = non_industrial_percentage\n    return result"}
{"output": "def solution():\n    \n    days_per_week = 7\n    weeks = 2\n    price_per_day = 12\n    total_price = days_per_week * price_per_day * weeks\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    chocolate_quarts_per_hour = 100 / 2\n    vanilla_quarts_per_hour = 50 / 4\n    total_quarts_per_hour = chocolate_quarts_per_hour + vanilla_quarts_per_hour\n    total_quarts_in_48_hours = total_quarts_per_hour * 48\n    result = total_quarts_in_48_hours\n    return result"}
{"output": "def solution():\n    num_croissants = 5\n    croissant_price = 3.0\n\n    num_cinnamon_rolls = 4\n    cinnamon_roll_price = 2.5\n\n    num_mini_quiches = 3\n    mini_quich_price = 4.0\n\n    num_blueberry_muffins = 13\n    blueberry_muffin_price = 1.0\n\n    # Calculate the total cost of all croissants\n    total_croissant_cost = num_croissants * croissant_price\n\n    # Calculate the total cost of all cinnamon rolls\n    total_cinnamon_roll_cost = num_cinnamon_rolls * cinnamon_roll_price\n\n    # Calculate the total cost of all mini quiches\n    total_mini_quich_cost = num_mini_quiches * mini_quich_price\n\n    # Calculate the total cost of all blueberry muffins\n    total"}
{"output": "def solution():\n    num_scoops = 2\n    cost_per_scoop = 1.5\n    total_money = 6.0\n\n    # Calculate the total cost of all 2 scoops of ice cream\n    total_cost = num_scoops * cost_per_scoop\n\n    # Calculate the number of scoops of ice cream Erin should buy\n    num_scoops = total_money / total_cost\n    result = num_scoops\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of candies\n    initial_candies = 100\n\n    # Define the number of candies eaten by Ginger and Amy per day\n    ginger_candies_per_day = 4\n    amy_candies_per_day = 3\n\n    # Calculate the total number of candies eaten by Ginger and Amy after two weeks\n    ginger_candies_after_two_weeks = initial_candies - (ginger_candies_per_day * 7 * 2)\n    amy_candies_after_two_weeks = amy_candies_after_two_weeks - (amy_candies_per_day * 7 * 2)\n\n    # return the result\n    result = amy_candies_after_two_weeks\n    return result"}
{"output": "def solution():\n    \n    sqft_bathroom = 36\n    tiles_per_square_foot = 24\n    total_tiles = (2/3) * sqft_bathroom * tiles_per_square_foot\n    result = total_tiles\n    return result"}
{"output": "def solution():\n    \n    picking_cost = 20\n    blueberry_picking_cost_per_pound = 1.5\n    blueberry_picking_weight = 30\n    blueberry_store_cost_per_pound = 2.5\n    total_picking_cost = picking_cost + (blueberry_picking_cost_per_pound * blueberry_picking_weight)\n    savings = total_picking_cost - blueberry_store_cost_per_pound\n    result = savings\n    return result"}
{"output": "def solution():\n    num_computers = 500\n    original_price = 700\n    discount = 0.1  # 10% discount\n\n    # Calculate the new price of each computer after the discount\n    new_price = original_price * (1 + discount)\n\n    # Calculate the total cost of all computers at the new prices\n    total_cost = num_computers * new_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    cheese_oz = 2\n    ham_oz = cheese_oz / 2\n    egg_calories = 75\n    cheese_calories_per_ounce = 120\n    ham_calories_per_ounce = 40\n    total_cheese_calories = cheese_oz * egg_calories_per_ounce\n    total_ham_calories = ham_oz * egg_calories_per_ounce\n    total_calories = total_cheese_calories + total_ham_calories\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    pencil_cost = 0.5\n    eraser_cost = 0.25\n    num_pencils = 6\n    num_erasers = 8\n    total_cost = (pencil_cost * num_pencils) + (eraser_cost * num_erasers)\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people who apply\n    total_people = 100\n\n    # Calculate the number of people who receive interviews\n    interviews = total_people * 0.3\n\n    # Calculate the number of people who receive a job offer\n    job_offer = total_people * 0.2\n\n    # Calculate the number of people who accept the position\n    accept_position = interviews - job_offer\n\n    # Calculate the number of people who accept the position\n    accept_position = accept_position / 3\n\n    # Display the number of people who accept the position\n    result = accept_position\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of rice Goldy bought\n    total_rice = 20 * 25\n\n    # Calculate the amount of rice Goldy gave to her cousin\n    cousin_rice = 3 * 25\n\n    # Calculate the amount of rice Goldy gave to her brother\n    brother_rice = 4 * 25\n\n    # Calculate the total amount of rice Goldy gave to both cousin and brother\n    total_rice = cousin_rice + brother_rice\n    result = total_rice\n    return result"}
{"output": "def solution():\n    \n    coco_crunch_boxes = 3\n    fruit_loops_boxes = 5\n    cereal_boxes = 4\n    this_week_boxes = coco_crunch_boxes + fruit_loops_boxes\n    difference = cereal_boxes - this_week_boxes\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    right_foot_rate = 300\n    left_foot_rate = 250\n    arms_rate = 200\n    total_time = 5\n    right_foot_taps = right_foot_rate * total_time\n    left_foot_taps = left_foot_rate * total_time\n    arms_taps = arms_rate * (total_time - 2)\n    combined_taps = right_foot_taps + left_foot_taps + arms_taps\n    result = combined_taps\n    return result"}
{"output": "def solution():\n    \n    damage = 450\n    road_maintenance = 120\n    asphalt_buckets = 3\n    asphalt_cost = 25\n    total_asphalt_cost = asphalt_buckets * asphalt_cost\n    total_cost = damage + road_maintenance + total_asphalt_cost\n    savings = total_cost - damage\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    normal_chairs = 170\n    baby_chairs = 23\n    normal_chairs_sent = 20\n    baby_chairs_sent = 13\n    total_chairs_sent = normal_chairs_sent + baby_chairs_sent\n    chairs_left = normal_chairs - total_chairs_sent\n    result = chairs_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and slices per pizza\n    num_people = 5\n    slices_per_pizza = 12\n\n    # Calculate the total number of slices\n    total_slices = num_people * slices_per_pizza\n\n    # Calculate the number of slices eaten by Bryce and two friends\n    bryce_slices = (2/3) * total_slices\n\n    # Calculate the number of slices eaten by the two remaining friends\n    remaining_slices = (2/3) * total_slices\n\n    # Calculate the total number of slices eaten\n    total_eaten = bryce_slices + remaining_slices\n\n    # Calculate the number of slices left\n    slices_left = total_slices - total_eaten\n\n    # return the result\n    result = slices_left\n    return result"}
{"output": "def solution():\n    \n    cat_sausages = 9\n    dog_sausages = (2/3) * cat_sausages\n    total_time = cat_sausages + dog_sausages\n    average_time = total_time / 2\n    result = average_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of one of Topher's shoes in inches\n    topher_length_inches = 8 * 12 + 4\n\n    # Calculate the length of one of Bobby's shoes in inches\n    bobby_length_inches = (topher_length_inches - 10) / 9\n\n    # Display the length of one of Bobby's shoes in inches\n    result = bobby_length_inches\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students' cars and teachers' cars\n    num_students = 64\n    num_teachers = 32\n\n    # Calculate the number of students' cars and teachers' windows\n    num_students_windows = num_students * 4\n    num_teachers_windows = num_teachers * 2\n\n    # Calculate the number of students' cars and teachers' windows smashed\n    num_students_windows_smashed = num_students * 0.25\n    num_teachers_windows_smashed = num_teachers * 0.75\n\n    # Calculate the total number of windows smashed\n    total_windows_smashed = num_students_windows_smashed + num_teachers_windows_smashed\n\n    # return the result\n    result = total_windows_smashed\n    return result"}
{"output": "def solution():\n    num_blue_spools = 15\n    num_dark_blue_spools = 45\n    num_green_spools = 40\n    num_dark_green_spools = 50\n\n    # Calculate the total number of spools\n    total_spools = num_blue_spools + num_dark_blue_spools + num_green_spools + num_dark_green_spools\n\n    # Calculate the percentage of blue spools\n    percent_blue = (num_blue_spools / total_spools) * 100\n    result = percent_blue\n    return result"}
{"output": "def solution():\n    \n    total_people = 5000\n    midday_voters = (2/5) * total_people\n    remaining_people = total_people - midday_voters\n    non_voters = (2/3) * remaining_people\n    not_voters = total_people - midday_voters - non_voters\n    result = not_voters\n    return result"}
{"output": "def solution():\n    \n    pieces_per_day = 4\n    pieces_per_pack = 15\n    days = 30\n    total_pieces = pieces_per_day * days\n    packs_needed = total_pieces / pieces_per_pack\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    num_sleeves_per_box = 3\n    num_smores_per_sleeve = 8\n    num_kids = 9\n    num_adults = 6\n    num_smores_per_kid = 2\n    num_smores_per_adult = 1\n\n    # Calculate the total number of smores needed for all kids\n    total_kid_smores = num_kids * num_smores_per_kid\n\n    # Calculate the total number of smores needed for all adults\n    total_adult_smores = num_adults * num_smores_per_adult\n\n    # Calculate the total number of smores needed for all sleeves\n    total_smores = total_kid_smores + total_adult_smores\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_smores / num_sleeves_per_box\n    result = total_boxes\n    return result"}
{"output": "def solution():\n    \n    dora_age = 15\n    father_age = 2 * dora_age + 8\n    mother_age = father_age - 4\n    total_age = dora_age + father_age + mother_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    total_money = 20\n    num_siblings = 3\n    money_per_sibling = total_money / num_siblings\n    result = money_per_sibling\n    return result"}
{"output": "def solution():\n    \n    math_science_weight = 2\n    english_weight = 3\n    history_weight = 2 * english_weight\n    total_weight = math_science_weight + english_weight + history_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    total_voters = 100\n    votes_A = total_voters * 0.2\n    votes_B = votes_A * 1.5\n    votes_C = total_voters - votes_A - votes_B\n    result = votes_C\n    return result"}
{"output": "def solution():\n    \n    boris_apples = 100\n    beck_apples = boris_apples - 23\n    boris_apples -= 10\n    difference = beck_apples - boris_apples\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of water used in the giant cubes\n    giant_cubes_water = 4 * 3\n\n    # Calculate the total amount of water used in the medium cubes\n    medium_cubes_water = 2 * 7\n\n    # Calculate the total amount of water used in the small cubes\n    small_cubes_water = 0.5 * 8\n\n    # Calculate the total amount of water used\n    total_water_used = giant_cubes_water + medium_cubes_water + small_cubes_water\n\n    # Calculate the amount of water left\n    water_left = 32 - total_water_used\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books Clara has\n    clara_books = 20\n\n    # Calculate the number of books Steven has\n    steven_books = clara_books / 2\n\n    # Calculate the number of books Alice has\n    alice_books = steven_books + 6\n\n    # Calculate the difference between the number of books Clara and Alice have\n    difference = clara_books - alice_books\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a gallon jar\n    GALLON_JAR_PRICE = 5\n\n    # Calculate the cost of a half-gallon jar\n    HALF_GALLON_JAR_PRICE = GALLON_JAR_PRICE + 2\n\n    # Calculate the total cost of 10-gallon jars\n    total_10_gallon_jars = 10 * GALLON_JAR_PRICE\n\n    # Calculate the total cost of 16 half-gallon jars\n    total_half_gallon_jars = 16 * HALF_GALLON_JAR_PRICE\n\n    # Calculate the total cost of all the jars\n    total_cost = total_10_gallon_jars + total_half_gallon_jars\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students\n    total_students = 50\n\n    # Calculate the number of students who like to play basketball\n    basketball_students = 5\n\n    # Calculate the number of students who like to play video games\n    video_game_students = total_students - 10 - basketball_students\n\n    # Calculate the number of students who like to play music\n    music_students = 2 * basketball_students\n\n    # Calculate the number of students who like to play video games\n    video_game_students = video_game_students - music_students\n\n    # Display the number of students who like to play video games\n    result = video_game_students\n    return result"}
{"output": "def solution():\n    \n    initial_birds = 12\n    scaring_away = initial_birds / 3\n    remaining_birds = initial_birds - scaring_away\n    additional_birds = 20\n    total_birds = remaining_birds + additional_birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    total_students = 80  # There are a total of 80 students in both classes\n    students_per_class = total_students / 2  # Each class has the same amount of students\n    girls_percentage = 0.4  # 40% of the students are girls\n\n    # Calculate the number of girls in each class\n    girls_per_class = int(students_per_class * girls_percentage)\n\n    # Calculate the number of boys in each class\n    boys_per_class = students_per_class - girls_per_class\n    result = boys_per_class\n    return result"}
{"output": "def solution():\n    \n    initial_slices = 3\n    tripled_slices = initial_slices * 3\n    eaten_slices = 2\n    stolen_slices = 5\n    remaining_slices = tripled_slices - eaten_slices - stolen_slices\n    result = remaining_slices\n    return result"}
{"output": "def solution():\n    \n    dogs = 8\n    cats = 5\n    birds = 3\n    horses = 12\n    total_animals = dogs + cats + birds + horses\n    days = 7\n    animals_per_day = total_animals / days\n    result = animals_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pack and the number of packs purchased\n    pack_cost = 1800\n    num_packs = 3\n\n    # Calculate the total cost of the packs\n    total_cost = pack_cost * num_packs\n\n    # Calculate the total value of the cards Mark received\n    card_value = 4000 + 1000\n\n    # Calculate the total value of the 30 more cards\n    additional_card_value = 30 * 50\n\n    # Calculate the total value of the cards Mark received\n    total_card_value = card_value + additional_card_value\n\n    # Calculate the total revenue from selling the cards\n    total_revenue = total_cost + total_card_value\n\n    # Calculate the profit from selling the cards\n    profit = total_revenue - total_cost\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    num_adults = 2\n    adult_fee = 26\n    child_fee = 12\n    child_fee = 10\n\n    # Calculate the total cost of the first amusement park\n    first_cost = (num_adults * adult_fee) + (num_children * child_fee)\n\n    # Calculate the total cost of the second amusement park\n    second_cost = (num_adults * adult_fee) + (num_children * child_fee)\n\n    # Calculate the savings if they choose the second amusement park over the first\n    savings = second_cost - first_cost\n    result = savings\n    return result"}
{"output": "def solution():\n    num_tomatoes_per_day = 500\n    cost_per_tomato = 0.5\n    sell_price_per_tomato = 0.4\n    num_days_per_week = 7\n\n    # Calculate the total cost of all tomatoes for a week\n    total_cost_per_week = num_tomatoes_per_day * cost_per_tomato * num_days_per_week\n\n    # Calculate the total revenue from selling all tomatoes for a week\n    total_revenue_per_week = num_tomatoes_per_day * sell_price_per_tomato\n\n    # Calculate the amount saved per week\n    amount_saved_per_week = total_revenue_per_week - total_cost_per_week\n    result = amount_saved_per_week\n    return result"}
{"output": "def solution():\n    \n    sean_marbles = 56\n    carl_marbles = 4 * sean_marbles\n    total_marbles = sean_marbles + carl_marbles\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and groups\n    students = 50\n    groups = 6\n\n    # Calculate the number of students per group\n    students_per_group = students // groups\n\n    # Calculate the total number of students needed\n    total_students = students_per_group * 12\n\n    # Calculate the number of additional groups needed\n    additional_groups = total_students % groups_per_group\n\n    # Display the number of additional groups needed\n    result = additional_groups\n    return result"}
{"output": "def solution():\n    \n    weekday_chairs = 60 * 5\n    weekend_chairs = 100 * 2\n    total_chairs = weekday_chairs + weekend_chairs\n    result = total_chairs\n    return result"}
{"output": "def solution():\n    \n    initial_bananas = 48\n    bananas_stolen_first_day = initial_bananas / 2\n    bananas_added_second_day = 25\n    bananas_stolen_second_day = 12\n    bananas_added_third_day = 6\n    total_bananas = initial_bananas - bananas_stolen_first_day + bananas_added_second_day + bananas_added_third_day\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    \n    num_roommates = 4\n    monthly_bill = 100\n    months_per_year = 12\n    total_bill = num_roommates * monthly_bill * months_per_year\n    cost_per_roommate = total_bill / num_roommates\n    result = cost_per_roommate\n    return result"}
{"output": "def solution():\n    \n    glasses_per_dozen = 12\n    plates_per_dozen = 12\n    total_glasses = 8 * glasses_per_dozen\n    total_plates = 4 * plates_per_dozen\n    broken_glasses = 10\n    broken_plates = 6\n    remaining_glasses = total_glasses - broken_glasses\n    remaining_plates = total_plates - broken_plates\n    total_remaining_glasses = remaining_glasses + remaining_plates\n    result = total_remaining_glasses\n    return result"}
{"output": "def solution():\n    \n    # Define the number of small and large stickers\n    small_stickers = 30\n    large_stickers = 40\n\n    # Calculate the number of small and large stickers Lorraine trades\n    small_stickers_with_large = small_stickers * 0.9\n    large_stickers_with_small = large_stickers * 0.5\n\n    # Calculate the number of small and large stickers Lorraine trades\n    small_stickers_with_large = small_stickers - small_stickers_with_large\n    large_stickers_with_large = large_stickers_with_small * 0.5\n\n    # Calculate the total number of buttons Lorraine has\n    total_buttons = small_stickers_with_large + large_stickers_with_large\n\n    # return the result\n    result = total_buttons\n    return result"}
{"output": "def solution():\n    \n    monday_matches = 2\n    friday_matches = 1\n    saturday_matches = monday_matches * 2\n    total_matches = monday_matches + friday_matches + saturday_matches\n    result = total_matches\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people on the council\n    total_people = 33\n\n    # Calculate the number of votes in favor of the new regulation\n    new_votes = total_people * 2\n\n    # Display the number of votes in favor of the new regulation\n    result = new_votes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students who need size extra-small\n    extra_small = 11\n\n    # Calculate the number of students who need size small\n    small = extra_small * 2\n\n    # Calculate the number of students who need size medium\n    medium = small - 4\n\n    # Calculate the number of students who need size large\n    large = medium / 2\n\n    # Calculate the number of students who need size extra-large\n    extra_large = large + 6\n\n    # Calculate the total number of shirts needed\n    total_shirts = extra_small + small + medium + large + extra_large\n\n    # Display the total number of shirts needed\n    result = total_shirts\n    return result"}
{"output": "def solution():\n    \n    # Define the original price and discount percentage\n    original_price = 140\n    discount_percentage = 5\n\n    # Calculate the discount amount\n    discount_amount = original_price * (discount_percentage / 100)\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount_amount\n\n    # Display the final price after the discount\n    result = final_price\n    return result"}
{"output": "def solution():\n    num_songs_per_playlist = 300\n    num_playlists = 20\n    song_length = 10\n\n    # Calculate the total number of songs in all playlists\n    total_songs = num_songs_per_playlist * num_playlists\n\n    # Calculate the total number of hours the playlists will last\n    total_hours = total_songs * song_length\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of people who think horse #2 will win\n    num_people_2 = 0.2 * 50\n\n    # Calculate the number of people who think horse #7 will win\n    num_people_7 = 0.6 * num_people_2\n\n    # Calculate the number of people who think horse #12 will win\n    num_people_12 = num_people_2 - num_people_7\n\n    # Display the number of people who think horse #12 will win\n    result = num_people_12\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of puppies to Pomeranians\n    puppy_to_omeranians = 2/3\n\n    # Calculate the total number of Pomeranians\n    total_omeranians = 6\n\n    # Calculate the number of girls\n    girls = total_omeranians / 3\n\n    # Calculate the total number of puppies\n    total_puppies = puppy_to_omeranians + girls\n\n    # Display the total number of puppies\n    result = total_puppies\n    return result"}
{"output": "def solution():\n    \n    jayden_money = 70\n    ava_money = 90\n    total_money = jayden_money + ava_money\n    camera_cost = 200\n    remaining_money = camera_cost - total_money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cases of shingles needed\n    total_cases = 250\n\n    # Calculate the number of cases of shingles needed for the first house\n    first_house_cases = total_cases / 2\n\n    # Calculate the number of cases of shingles needed for the second house\n    second_house_cases = total_cases - first_house_cases\n\n    # Calculate the number of cases of shingles needed for the third house\n    third_house_cases = second_house_cases * 2\n\n    # Display the number of cases of shingles needed for the third house\n    result = third_house_cases\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    CUCUMBER_PRICE = 2\n    TOMATO_PRICE = 1\n    LETTUCE_PRICE = 3\n\n    # Define the number of each item purchased\n    leila_cucumbers = 3\n    jack_tomatoes = 5\n    chase_lettuce = 1\n\n    # Calculate the total cost of the cucumbers\n    cucumber_cost = leila_cucumbers * CUCUMBER_PRICE\n\n    # Calculate the total cost of the tomatoes\n    tomato_cost = jack_tomatoes * TOMATO_PRICE\n\n    # Calculate the total cost of the lettuce\n    lettuce_cost = chase_lettuce * LETTUCE_PRICE\n\n    # Calculate the total cost of the salad\n    total_cost = cucumber_cost + jack_cost + lettuce_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    bananas = 200\n    pears = bananas * 1.45\n    total_fruits = bananas + pears\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    ball_cost = 20\n    total_money = 80\n    remaining_money = total_money - ball_cost\n    candy_bar_cost = 5\n    candy_bars_bought = remaining_money / candy_bar_cost\n    result = candy_bars_bought\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per kilogram of oranges\n    ORANGE_COST = 3\n\n    # Define the amount of juice needed to make 1 liter of juice\n    juice_per_liter = 1\n\n    # Define the amount of oranges needed to make 1 liter of juice\n    oranges_per_liter = juice_per_liter * 5\n\n    # Calculate the total amount of oranges needed to make 4 liters of juice\n    total_oranges = oranges_per_liter * 4\n\n    # Calculate the total cost of the oranges\n    total_cost = total_oranges * ORANGE_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books Ezra has read so far\n    ezra_books = 300\n\n    # Define the number of books Ahmed has read so far\n    ahmed_books = ezra_books / 2\n\n    # Define the additional books Ezra decided to read\n    additional_books = 150\n\n    # Calculate the total number of books they read\n    total_books = ezra_books + ahmed_books + additional_books - ezra_books\n\n    # Display the total number of books they read\n    result = total_books\n    return result"}
{"output": "def solution():\n    \n    monday_classes = 4\n    monday_hours = 5\n    wednesday_classes = 2\n    wednesday_hours = 2\n    monday_earnings = (monday_classes * 15) + (wednesday_classes * 15)\n    wednesday_earnings = (wednesday_classes * 2) + (monday_hours * 15)\n    total_earnings = monday_earnings + wednesday_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vanilla and fruity scents already available\n    vanilla_scents = 4\n    fruity_scents = 8\n\n    # Define the number of scents sold by each kind of scent\n    vanilla_scents_sold = 5\n    fruity_scents_sold = 2\n\n    # Calculate the total number of scents sold\n    total_vanilla_scents_sold = vanilla_scents * vanilla_scents_sold\n    total_fruity_scents_sold = fruity_scents * fruity_scents_sold\n\n    # Calculate the number of vanilla and fruity scents remaining\n    remaining_vanilla_scents = vanilla_scents - vanilla_scents_sold\n    remaining_fruity_scents = fruity_scents - fruity_scents_sold\n\n    # Calculate the difference between the number of vanilla and fruity scents sold\n    difference = remaining_vanilla_scents"}
{"output": "def solution():\n    num_eggplants = 20\n    eggplant_price = 3\n    num_corn_ears = 25\n    total_earnings = 135\n\n    # Calculate the total earnings from selling eggplants\n    total_eggplant_earnings = num_eggplants * eggplant_price\n\n    # Calculate the total earnings from selling corn\n    total_corn_earnings = total_earnings - total_eggplant_earnings\n\n    # Calculate the price per ear of corn\n    price_per_ear = total_corn_earnings / num_corn_ears\n    result = price_per_ear\n    return result"}
{"output": "def solution():\n    \n    saturday_hours = 7\n    sunday_hours = 5\n    total_hours = saturday_hours + sunday_hours\n    reading_hours = 3\n    remaining_hours = total_hours - reading_hours\n    video_game_hours = remaining_hours / 3\n    soccer_hours = total_hours - (soccer_hours + video_game_hours)\n    percentage_soccer = (soccer_hours / total_hours) * 100\n    result = percentage_soccer\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pencils\n    initial_pencils = 50\n\n    # Calculate the number of pencils given to Brandon\n    brandon_pencils = initial_pencils * (1/2)\n\n    # Calculate the number of remaining pencils\n    remaining_pencils = initial_pencils - brandon_pencils\n\n    # Calculate the number of pencils given to Charlie\n    charlie_pencils = remaining_pencils * (3/5)\n\n    # Calculate the number of pencils kept\n    kept_pencils = remaining_pencils - charlie_pencils\n\n    # Display the number of pencils kept\n    result = kept_pencils\n    return result"}
{"output": "def solution():\n    \n    distance = 150\n    speed = 75\n    time = 6\n    distance_traveled = distance * speed\n    time_left = time - distance_traveled\n    result = time_left\n    return result"}
{"output": "def solution():\n    num_cars = 57\n    num_motorcycles = 73\n    car_wheels = 4\n    motorcycle_wheels = 2\n    box_size = 650\n\n    # Calculate the total number of wheels needed for all cars\n    total_car_wheels = num_cars * car_wheels\n\n    # Calculate the total number of wheels needed for all motorcycles\n    total_motorcycle_wheels = num_motorcycles * motorcycle_wheels\n\n    # Calculate the total number of wheels needed\n    total_wheels_needed = total_car_wheels + total_motorcycle_wheels\n\n    # Calculate the number of wheels left in the box\n    wheels_left = box_size - total_wheels_needed\n    result = wheels_left\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the laptop\n    original_price = 1000\n\n    # Calculate the discount amount\n    discount = original_price * 0.2\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies and the cost of a normal movie\n    num_movies = 600\n    normal_movie_cost = 10\n\n    # Calculate the number of movies in the series\n    num_series_movies = num_movies / 3\n\n    # Calculate the cost of the series\n    series_cost = num_series_movies * 6\n\n    # Calculate the number of movies remaining after buying the series\n    remaining_movies = num_movies - num_series_movies\n\n    # Calculate the cost of the older movies\n    older_movie_cost = remaining_movies * 5\n\n    # Calculate the total cost of replacing the movies\n    total_cost = series_cost + older_movie_cost + normal_movie_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    peaches_price = 2.0\n    plums_price = 1.0\n    apricots_price = 3.0\n\n    peaches_weight = 6\n    plums_weight = 8\n    apricots_weight = 6\n\n    # Calculate the total cost of peaches\n    peaches_cost = peaches_price * peaches_weight\n\n    # Calculate the total cost of plums\n    plums_cost = plums_price * plums_weight\n\n    # Calculate the total cost of apricots\n    apricots_cost = apricots_price * apricots_weight\n\n    # Calculate the total cost of all fruits\n    total_cost = peaches_cost + plums_cost + apricots_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance covered in the first leg of the trip\n    distance_leg1 = 50 * 1.5\n\n    # Calculate the distance covered in the second leg of the trip\n    distance_leg2 = (0.5 * 50) - 5 * 1.5\n\n    # Calculate the total distance covered\n    total_distance = distance_leg1 + distance_leg2\n\n    # Display the total distance covered\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    emma_enemy_score = 10 * 8\n    emma_berry_score = 5 * 3\n    ava_score = emma_enemy_score + emma_berry_score + 30 * 4\n    score_difference = ava_score - emma_score\n    result = score_difference\n    return result"}
{"output": "def solution():\n    num_friends = 4\n    total_cost = 64\n    num_two_pizzas = 2\n    cost_of_two_pizzas = 30\n\n    # Calculate the total cost of the two pizzas\n    total_cost_of_two_pizzas = total_cost - (num_two_pizzas * cost_of_two_pizzas)\n\n    # Calculate the cost of each of the other two pizzas\n    cost_of_other_two_pizzas = total_cost_of_two_pizzas / 2\n    result = cost_of_other_two_pizzas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Chase and Rider rides their bikes each day\n    CHASE_RIDES_PER_DAY = 3\n    RIDER_RIDES_PER_DAY = 2\n\n    # Define the number of days they ride their bikes each day\n    CHASE_DAYS_PER_WEEK = 5\n    RIDER_DAYS_PER_WEEK = 2\n\n    # Calculate the total number of times they ride their bikes per week\n    total_rides = (CHASE_RIDES_PER_DAY * CHASE_DAYS_PER_WEEK) + (RIER_RIDES_PER_DAY * RIDER_DAYS_PER_WEEK)\n\n    # Display the total number of times they ride their bikes per week\n    result = total_rides\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of orange and white fish\n    orange_fish = 7\n    white_fish = 4\n\n    # Define the number of orange and white fish after the sales assistant\n    orange_fish_after_sales = orange_fish + 17\n\n    # Calculate the number of white fish after adding the sales assistant\n    white_fish_after_sales = white_fish - orange_fish_after_sales\n\n    # Calculate the number of orange fish Bob bought\n    orange_fish_bought = orange_fish_after_sales / 2\n\n    # Calculate the number of white fish Bob bought\n    white_fish_bought = white_fish_after_sales\n\n    # Display the number of white fish bought\n    result = white_fish_bought\n    return result"}
{"output": "def solution():\n    fuel_efficiency = 10  # Andy's car fuel efficiency is 10 MPG\n    regular_gas_price = 3  # The current price for regular gas is $3/gallon\n    distance_to_work = 5  # Andy only uses his car to go to work from Monday to Friday\n\n    # Calculate the total distance traveled in a week\n    total_distance = fuel_efficiency * distance_to_work\n\n    # Calculate the total cost of gas for the week\n    total_regular_gas_cost = total_distance * regular_gas_price\n\n    # Calculate the total cost of gas for the week\n    total_cost = total_regular_gas_cost * 7\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of twenties and quarters\n    twenties = 10\n    quarters = 140\n\n    # Calculate the number of quarters spent\n    quarters_spent = (3/5) * twenties\n\n    # Calculate the total amount spent\n    total_spent = quarters_spent + twenties_spent\n\n    # return the result\n    result = total_spent\n    return result"}
{"output": "def solution():\n    \n    tomatoes_per_plant = 22\n    eggplants_per_plant = 4\n    tomato_plants_planted = 5\n    eggplants_planted = 8\n    total_tomatoes = tomatoes_per_planted * tomato_plants_planted\n    total_eggplants = eggplants_per_planted * eggplants_per_planted\n    total_fruits = total_tomatoes + total_eggplants\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    total_sales = 40\n    smart_tvs = total_sales / 4\n    animal_tvs = total_sales / 8\n    oled_tvs = total_sales - smart_tvs - animal_tvs\n    result = oled_tvs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money John has and the cost of the trip\n    initial_money = 50\n    trip_cost = 300\n\n    # Calculate the amount of money John needs to cover\n    cover_money = trip_cost / 2\n\n    # Calculate the amount of money John is missing\n    missing_money = initial_money - cover_money\n\n    # Display the amount of money John is missing\n    result = missing_money\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 45\n    colder_temp = 33\n    temp_below_32 = 32\n    burn_rate = 5\n    total_temp = initial_temp + colder_temp - temp_below_32\n    logs_needed = total_temp // burn_rate\n    if total_temp % burn_rate!= 0:\n        logs_needed += 1\n    result = logs_needed\n    return result"}
{"output": "def solution():\n    total_people = 90  # 90 people were required to split into groups\n    num_groups = 9  # 9-person groups were formed\n    fraction_of_groups = 3/5  # 3/5 of the number of groups had members\n    num_seashells_per_group = 2  # Each group had 2 seashells\n\n    # Calculate the total number of seashells brought back\n    total_seashells = total_people * num_groups * fraction_of_groups * num_seashells_per_group\n    result = total_seashells\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 172\n\n    # Subtract the number of people who get off at the first stop\n    people_on_first_stop = initial_people - 47\n\n    # Add the number of people who get on at the second stop\n    people_on_second_stop = people_on_first_stop + 13\n\n    # Subtract the number of people who get off at the second stop\n    people_on_third_stop = people_on_second_stop - 38\n\n    # Calculate the total number of people on the train\n    total_people = people_on_first_stop + people_on_second_stop\n\n    # Display the total number of people on the train\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    bottle_caps_per_day = 10\n    price_per_bottle_cap = 0.25\n    days_per_month = 30\n    total_bottle_caps = bottle_caps_per_day * days_per_month\n    total_money = total_bottle_caps * price_per_bottle_cap\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 20\n    regular_hours = 8\n    additional_hours = regular_hours * 0.5\n    total_hours = 11\n    regular_pay = hourly_rate * regular_hours\n    additional_pay = hourly_rate * additional_hours\n    total_pay = regular_pay + additional_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    female_lions = 12\n    male_lions = female_lions / 2\n    cubs = 14\n    total_lions = female_lions + male_lions + cubs\n    result = total_lions\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the jeans and the discount percentage\n    ORIGINAL_PRICE = 40\n    DISCOUNT_PERCENTAGE = 25\n\n    # Calculate the discounted price of the jeans\n    discounted_price = ORIGINAL_PRICE - (ORIGINAL_PRICE * DISCOUNT_PERCENTAGE / 100)\n\n    # Calculate the amount of money Mike will have left over\n    leftover_money = discounted_price - 50\n\n    # Display the amount of money Mike will have left over\n    result = leftover_money\n    return result"}
{"output": "def solution():\n    \n    initial_employees = 200\n    new_employees_per_month = 20\n    salary_per_month = 4000\n    months = 3\n    total_employees = initial_employees + (new_employees_per_month * months)\n    total_salary = total_employees * salary_per_month\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each item\n    DECK_HALLS_LENGTH = 150\n    Jingle_BELLS_LENGTH = 240\n\n    # Define the number of each item\n    deck_halls_count = 2\n    jingle_bells_count = 1\n\n    # Calculate the total length of all the items\n    total_deck_halls_length = deck_halls_count * DECK_HALLS_LENGTH\n    total_jingle_bells_length = jingle_bells_count * Jingle_BELLS_LENGTH\n\n    # Calculate the total length of all the items\n    total_length = total_deck_halls_length + total_jingle_bells_length\n\n    # Display the total length\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    billy_salary = 10 * 20\n    billy_raise = 0.5 * 2\n    sally_salary = 1.0 * 20\n    sally_raise = 1.5 * 20\n    billy_earnings = billy_salary + billy_raise\n    sally_earnings = sally_salary + sally_raise\n    difference = billy_earnings - sally_earnings\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    loaf_cost = 2\n    bagel_cost = 1\n    num_loaves = 3\n    num_bagels = 2\n    total_cost = (loaf_cost * num_loaves) + (bagel_cost * num_bagels)\n    cost_difference = total_cost - loaf_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of points Pierson scored\n    pierson_points = 278\n\n    # Calculate the number of points Nikita scored\n    nikita_points = (pierson_points / 2) + 11\n\n    # Calculate the total number of points\n    total_points = pierson_points + nikita_points\n\n    # Display the total number of points\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and teachers per class\n    students_per_class = 25\n    teachers_per_class = 3\n\n    # Calculate the total number of students and teachers\n    total_students = students_per_class * 40\n    total_teachers = teachers_per_class * 40\n\n    # Calculate the total number of trees planted\n    total_trees = total_students + total_teachers\n\n    # return the result\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stuffed animals\n    puppies = 3\n    koalas = 5\n    zebras = 2\n    frogs = 4\n\n    # Calculate the total number of stuffed animals\n    total_animals = puppies + koalas + zebras + frogs\n\n    # Calculate the percentage of stuffed goats needed\n    goats_percentage = 0.3\n    goats_needed = total_animals * goats_percentage\n\n    # Display the number of stuffed goats needed\n    result = goats_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hours Kris wants to play\n    total_hours = 30\n\n    # Calculate the number of hours Kris played in the first two weeks\n    hours_first_two_weeks = 0.5 * 14\n\n    # Calculate the number of hours Kris played in the next two weeks\n    hours_second_weeks = 2 * 14\n\n    # Calculate the total number of hours Kris has played so far\n    total_hours_played = hours_first_two_weeks + hours_second_weeks\n\n    # Calculate the number of hours Kris still needs to play\n    hours_left_to_play = total_hours - total_hours_played\n\n    # Display the number of hours Kris still needs to play\n    result = hours_left_to_play\n    return result"}
{"output": "def solution():\n    \n    # Define the speeds of the first car and the second car\n    car1_speed = 60\n    car2_speed = 70\n\n    # Calculate the distance each car will travel in 2 hours\n    car1_distance = car1_speed * 2\n    car2_distance = car2_speed * 2\n\n    # Calculate the total distance both cars will travel in 2 hours\n    total_distance = car1_distance + car2_distance\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    diamond_cost = 600\n    gold_cost = 300\n    total_cost = diamond_cost + gold_cost\n    premium_percent = 30\n    premium_amount = total_cost * (premium_percent / 100)\n    total_cost_with_premium = total_cost + premium_amount\n    result = total_cost_with_premium\n    return result"}
{"output": "def solution():\n    \n    third_graders = 340\n    fourth_graders = 40\n    fifth_graders = 400\n    fourth_graders_pass_rate = 2 * fourth_graders_pass_rate\n    total_graders = third_graders + fourth_graders + fifth_graders\n    total_pass_rate = total_graders * third_graders_pass_rate + fourth_graders_pass_rate + fifth_graders_pass_rate\n    result = total_pass_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the number of glass chips needed per square inch\n    GLASS_CHIPS_PER_SQ_INCH = 12\n\n    # Define the number of bags of glass chips\n    BAGS_OF_GLASS_CHIPS = 2\n\n    # Calculate the total number of glass chips needed\n    total_chips = GLASS_CHIPS_PER_SQ_INCH * BAGS_OF_GLASS_CHIPS * 2\n\n    # Calculate the total length of the mosaic in inches\n    total_length = total_chips / GLASS_CHIPS_PER_SQ_INCH\n\n    # Display the total length of the mosaic in inches\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of quarts of tea left\n    quarts_left = 10\n\n    # Calculate the number of students who drank 1.5 quarts of tea\n    num_students_1_5 = 4\n    quarts_per_student_1_5 = 1.5\n\n    # Calculate the number of students who drank 2 quarts of tea\n    num_students_2 = 16\n    quarts_per_student_2 = 2\n\n    # Calculate the total number of quarts of tea drank by the students who drank 1.5 quarts of tea\n    total_quarts_1_5 = num_students_1_5 * quarts_per_student_1_5\n\n    # Calculate the total number of quarts of tea drank by the students who drank 2 quarts of tea\n    total_quarts_2 = num_students_2 * quarts_per_student_2\n\n    # Calculate the total number of g"}
{"output": "def solution():\n    \n    total_candies = 100\n    sold_candies = 150\n    ordered_candies = 100\n    remaining_candies = total_candies - sold_candies + ordered_candies\n    result = remaining_candies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students on campus at the beginning of the year\n    students_at_start = 10\n\n    # Calculate the number of students on campus at the end of the year\n    students_at_end = students_at_start * 2\n\n    # Calculate the additional number of students on campus\n    additional_students = students_at_end - students_at_start\n\n    # Display the additional number of students\n    result = additional_students\n    return result"}
{"output": "def solution():\n    \n    total_income = 105\n    cost_per_branch = 0.25\n    days_per_week = 7\n    total_branches = total_income / cost_per_branch\n    branches_per_day = total_branches / days_per_week\n    result = branches_per_day\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of petals picked by Rose\n    total_petals = 3 * 5 + 4 * 6 + 5 * 4 + 6 * 7\n\n    # Calculate the number of remaining flowers\n    remaining_flowers = total_petals - 1\n\n    # Display the number of remaining flowers\n    result = remaining_flowers\n    return result"}
{"output": "def solution():\n    \n    total_marshmallows = 35\n    john_marshmallows = 9\n    desean_marshmallows = 9\n    s_mores_made = john_marshmallows + desean_marshmallows\n    marshmallows_dropped = 3\n    marshmallows_left = total_marshmallows - marshmallows_dropped\n    s_mores_per_kid = marshmallows_left // marshmallows_per_kid\n    result = s_mores_per_kid\n    return result"}
{"output": "def solution():\n    \n    jack_game_time = 20\n    jack_friend1_time = jack_game_time / 4\n    jack_friend2_time = jack_game_time / 2\n    jack_friend3_time = jack_game_time / 2\n    jack_friend4_time = jack_game_time * 1.5\n    total_time = jack_game_time + jack_friend1_time + jack_friend2_time + jack_friend3_time + jack_friend4_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of salt used per jar\n    salt_per_jar = 10\n\n    # Calculate the amount of citrus zest used\n    citrus_zest = salt_per_jar / 2\n\n    # Calculate the amount of salt used\n    salt = citrus_zest * 2\n\n    # Calculate the amount of oil used\n    oil = salt * 2\n\n    # Display the amount of oil used\n    result = oil\n    return result"}
{"output": "def solution():\n    num_goats = 3\n    goat_price = 500\n\n    num_cows = 2\n    cow_price = 1500\n\n    # Calculate the total cost of all goats\n    total_goat_cost = num_goats * goat_price\n\n    # Calculate the total cost of all cows\n    total_cow_cost = num_cows * cow_price\n\n    # Calculate the total cost of all items\n    total_cost = total_goat_cost + total_cow_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cupcakes needed\n    total_cupcakes = 63\n\n    # Define the number of chocolate and toffee cupcakes already owned\n    chocolate_cupcakes = 8\n    toffee_cupcakes = 40\n\n    # Calculate the number of cupcakes already owned\n    owned_cupcakes = chocolate_cupcakes + toffee_cupcakes\n\n    # Calculate the number of additional cupcakes needed\n    additional_cupcakes = total_cupcakes - owned_cupcakes\n\n    # Display the number of additional cupcakes needed\n    result = additional_cupcakes\n    return result"}
{"output": "def solution():\n    \n    robert_cars = 20\n    joe_cars = robert_cars * 2\n    sold_cars = joe_cars * 0.2\n    given_away_cars = sold_cars * 2\n    remaining_cars = joe_cars - sold_cars - given_away_cars\n    result = remaining_cars\n    return result"}
{"output": "def solution():\n    \n    total_raised = 175000\n    organizations_raised = 50000\n    students_raised = total_raised - organizations_raised\n    amount_per_student = students_raised / 20\n    result = amount_per_student\n    return result"}
{"output": "def solution():\n    \n    # Define the time Sandy walked on the first day\n    day1_time = 8\n\n    # Define the time Sandy walked on the second day\n    day2_time = day1_time / 2\n\n    # Calculate the total time Sandy walked in minutes\n    total_time = (day1_time + day2_time) * 60\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cars\n    initial_cars = 50\n\n    # Calculate the number of cars after the first break\n    cars_after_first_break = initial_cars + 20\n\n    # Calculate the number of cars after the lunch break\n    cars_after_lunch_break = cars_after_first_break / 2\n\n    # Display the number of cars after the lunch break\n    result = cars_after_lunch_break\n    return result"}
{"output": "def solution():\n    \n    cycles_per_day = 30\n    tasks_per_cycle = 5\n    tasks_per_day = cycles_per_day * tasks_per_cycle\n    pay_per_task = 1.20\n    days_per_week = 7\n    total_pay = tasks_per_day * pay_per_task * days_per_week\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    sasha_first_game = 14\n    julie_first_game = sasha_first_game - 4\n    sasha_second_game = julie_first_game - 6\n    total_points = sasha_first_game + julie_first_game + sasha_second_game\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    cat_food_packages = 8\n    dog_food_packages = 6\n    cat_food_tins_per_package = 11\n    dog_food_tins_per_package = 6\n    total_cat_food_tins = cat_food_packages * cat_food_tins_per_package\n    total_dog_food_tins = dog_food_packages * dog_food_tins_per_package\n    difference = total_cat_food_tins - total_dog_food_tins\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cards\n    total_cards = 341\n\n    # Calculate the number of cards Smendrick has\n    smendrick_cards = total_cards / 3\n\n    # Calculate the number of cards Becca has\n    becca_cards = smendrick_cards + 12\n\n    # Display the number of cards Becca has\n    result = becca_cards\n    return result"}
{"output": "def solution():\n    \n    green_eggs = 5\n    blue_eggs = 2 * green_eggs\n    pink_eggs = blue_eggs - 1\n    yellow_eggs = pink_eggs / 3\n    total_eggs = green_eggs + blue_eggs + pink_eggs + yellow_eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    book_weight = 4  # The book weighs 4 pounds\n    book_cost = 32  # The book costs $32\n    distance = 20  # The book needs to be returned to a distribution center 20 miles\n    shipping_price_per_pound = 0.35  # The shipping company charges $0.35 per pound\n    shipping_price_per_mile = 0.08  # The shipping company charges $0.08 per mile\n    refund_percent = 0.75  # Amazon will refund 75% of the book's purchase price\n\n    # Calculate the total cost of the book\n    total_cost = book_cost / (book_weight * shipping_price_per_pound + distance * shipping_price_per_mile)\n\n    # Calculate the refund amount\n    refund_amount = total_cost * refund_percent\n\n    # Calculate how much money Milly will lose\n    lost_money = total_cost - refund_amount\n    result = lost_money\n    return result"}
{"output": "def solution():\n    \n    initial_money = 40\n    father_money = 100\n    total_money = initial_money + father_money\n    jeans_cost = 2 * 30\n    bag_cost = 20\n    total_spent = jeans_cost + bag_cost\n    money_left = total_money - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_bars = 50000\n    first_week_bars = 8000\n    second_week_bars = first_week_bars / 2\n    third_week_bars = first_week_bars * 3\n    fourth_week_bars = total_bars - first_week_bars - second_week_bars - third_week_bars\n    result = fourth_week_bars\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each video in minutes\n    VIDEO_LENGTH = 4\n\n    # Calculate the total time Britany spends on TikTok in a week\n    weekly_time = (18 * VIDEO_LENGTH) + (2 * 60) + (15 * 6)\n\n    # Calculate the total time Britany spends on TikTok in a month\n    monthly_time = weekly_time * 4\n\n    # Display the total time Britany spends on TikTok in a month\n    result = monthly_time\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    MIRROR_PRICE = 129\n    CHANDELIER_PRICE = 1\n    PICTURE_PRICE = 10\n\n    # Define the number of each item Angela has\n    mirror_count = 6\n    chandelier_count = 2\n    pictures = 20\n\n    # Calculate the total cost of each item\n    mirror_cost = mirror_count * MIRROR_PRICE\n    chandelier_cost = chandelier_count * CHANDELIER_PRICE\n    pictures_cost = pictures_count * PICTURE_PRICE\n\n    # Calculate the total cost of Angela's installation\n    total_installation_cost = mirror_cost + shelf_cost + chandelier_cost + pictures_cost\n\n    # Calculate the cost of Angela's additional items\n    additional_cost = (mirror_cost + chandelier_cost + pictures_cost) * 15\n\n    # Calculate the total cost of Angela's installation\n    total_cost"}
{"output": "def solution():\n    \n    # Define the amount of money saved by Eva\n    EVA_SAVED = 20\n\n    # Calculate the amount of money saved by Anthony\n    anthony_savings = EVA_SAVED + 10\n\n    # Calculate the amount of money saved by Roy\n    roy_savings = anthony_savings * 1.4\n\n    # Display the amount of money saved by Roy\n    result = roy_savings\n    return result"}
{"output": "def solution():\n    # Define Pompei's lift\n    pompei_lift = 1\n\n    # Calculate Saskay's lift\n    saskay_lift = pompei_lift * 12\n\n    # Calculate Kagiyami's lift\n    kagiyami_lift = saskay_lift * 4\n\n    # Calculate Naruto's lift\n    naruto_lift = kagiyami_lift * 10\n\n    result = naruto_lift\n    return result"}
{"output": "def solution():\n    \n    speed = 8\n    time_1 = 4\n    time_2 = 6\n    distance_1 = speed * time_1\n    distance_2 = speed * time_2\n    total_distance = distance_1 + distance_2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    kangaros = 3\n    time_per_kangaroo = 18 / kangaros\n    turtles = 4\n    speed_per_turtle = 0.5\n    time_per_turtle = time_per_kangaroo / speed_per_turtle\n    total_time = time_per_turtle * turtles\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    kora_dishes = 20\n    rory_dishes = kora_dishes + 20\n    jada_dishes = 2 * rory_dishes\n    total_dishes = kora_dishes + rory_dishes + jada_dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    laptop_cost = 600\n    traded_price = laptop_cost - 200\n    part_time_payment = 150\n    extra_money = 80\n    current_savings = laptop_cost - traded_price + part_time_payment - extra_money\n    result = current_savings\n    return result"}
{"output": "def solution():\n    large_apple_slices_per_piece = 5\n    small_apple_slices_per_piece = 3\n    num_large_apples = 3\n    num_small_apples = 5\n    num_slices_eaten = 15\n\n    # Calculate the total number of slices of large apples\n    total_large_slices = num_large_apples * large_apple_slices_per_piece\n\n    # Calculate the total number of slices of small apples\n    total_small_slices = num_small_apples * small_apple_slices_per_piece\n\n    # Calculate the total number of slices of apples\n    total_slices = total_large_slices + total_small_slices\n\n    # Calculate the number of slices left\n    slices_left = total_slices - num_slices_eaten\n    result = slices_left\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of milk extracted per day and the number of cows\n    milk_per_day = 5\n    cows = 3\n\n    # Calculate the total amount of milk needed per day\n    total_milk_needed = 25\n\n    # Calculate the amount of milk already extracted\n    milk_extracted = milk_per_day * cows\n\n    # Calculate the remaining amount of milk needed\n    remaining_milk = total_milk_needed - milk_extracted\n\n    # Calculate the number of cows needed to produce the remaining amount of milk\n    cows_needed = remaining_milk / milk_per_day\n\n    # Round up to the nearest integer\n    cows_needed = int(cows_needed + 0.5)\n\n    # Return the result\n    result = cows_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the glue stick\n    STICK_LENGTH = 12\n\n    # Calculate the length of the glue sticks that are used\n    used_stick1 = STICK_LENGTH * (1/6)\n    used_stick2 = STICK_LENGTH * (2/3)\n    used_stick3 = STICK_LENGTH * (1/2)\n\n    # Calculate the total length of the glue sticks that are not used\n    total_length = used_stick1 + used_stick2 + used_stick3\n\n    # Display the total length of the glue sticks that are not used\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the car and phone\n    CAR_COST = 10000\n    PHONE_COST = 800\n\n    # Define Gabriel's starting amount of money\n    GABRIEL_MONEY = 5000\n\n    # Define the amount of money Gabriel's brother gave him\n    BROTHER_MONEY = 200\n\n    # Calculate the total cost of the car and phone\n    total_cost = CAR_COST + PHONE_COST\n\n    # Calculate the amount of money Gabriel still needs\n    money_needed = total_cost - GABRIEL_MONEY - BROTHER_MONEY\n\n    # Display the amount of money Gabriel still needs\n    result = money_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the hat\n    hat_cost = 70\n\n    # Define the amount of money Thea gave the craftsman\n    money_given = 4 * 20\n\n    # Calculate the change Thea received\n    change = hat_cost - money_given\n\n    # return the result\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    SQUIRT_GUN_PRICE = 2\n    WATER_BALLOON_PRICE = 3\n\n    # Define the number of each item purchased\n    squirt_guns = 6\n    water_balloons = 3\n\n    # Calculate the total cost of the squirt guns\n    squirt_gun_cost = squirt_guns * SQUIRT_GUN_PRICE\n\n    # Calculate the total cost of the water balloons\n    water_balloon_cost = water_balloons * WATER_BALLOON_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = squirt_gun_cost + water_balloon_cost\n\n    # Calculate the amount of money left\n    money_left = 2 * 20 - total_cost\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    jack_dishes = 60\n    peter_socks = jack_dishes * 2\n    jack_total_dishes = jack_dishes * 2\n    peter_total_dishes = peter_socks * 2\n    total_dishes = jack_total_dishes + peter_total_dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of students who are good at math only\n    total_students = 20\n    math_only_students = 5\n\n    # Define the number of students who perform well in English only\n    english_only_students = 8\n\n    # Calculate the number of students who are good at math only\n    math_only_students = math_only_students - english_only_students\n\n    # Calculate the number of students who are good at both math and English\n    math_and_english_students = total_students - math_only_students - english_only_students\n\n    # Return the result\n    result = math_and_english_students\n    return result"}
{"output": "def solution():\n    \n    total_show_time = 2 * 60  # convert hours to minutes\n    stage_time = 2\n    perform_time = 6\n    exit_time = 2\n    intermission_time = 10\n    remaining_time = total_show_time - stage_time - exit_time\n    groups_can_perform = remaining_time // intermission_time\n    result = groups_can_perform\n    return result"}
{"output": "def solution():\n    \n    # Define the initial investment and interest rate\n    initial_investment = 300\n    interest_rate = 0.75\n\n    # Calculate the interest earned after 3 years\n    interest_earned = initial_investment * interest_rate * 3\n\n    # Calculate the total amount after 3 years\n    total_amount = initial_investment + interest_earned\n\n    # Display the total amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the number of white shirts and floral shirts\n    white_shirts = 40\n    floral_shirts = 50\n\n    # Calculate the number of white shirts with collars\n    collars_white_shirts = white_shirts / 2\n\n    # Calculate the number of floral shirts with buttons\n    buttons_floral_shirts = floral_shirts - collars_white_shirts\n\n    # Calculate the difference between the number of floral shirts with no buttons and white shirts with no collars\n    difference = buttons_floral_shirts - collars_white_shirts\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    num_eggs = 900\n    eggs_per_tray = 30\n    price_per_tray = 2.5\n\n    # Calculate the total number of eggs in the tray\n    total_eggs = num_eggs * eggs_per_tray\n\n    # Calculate the total earnings from selling the tray\n    total_earnings = total_eggs * price_per_tray\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    # Calculate the total number of goats in both farms\n    total_goats = 55 + 45\n\n    # Calculate the number of goats sold\n    goats_sold = 10 + 2 * 45\n\n    # Calculate the number of goats left in both farms\n    goats_left = total_goats - goats_sold\n    result = goats_left\n    return result"}
{"output": "def solution():\n    num_shoes_per_month = 2\n    cost_per_shoe = 2.0\n    num_months_per_year = 12\n\n    # Calculate the total cost of all shoes for a year\n    total_cost = cost_per_shoe * num_months_per_year\n\n    # Calculate the average cost per pair of shoes\n    avg_cost_per_shoe = total_cost / num_shoes_per_month\n    result = avg_cost_per_shoe\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of food\n    GREEN_FOOD_PRICE = 25\n    RED_FOOD_PRICE = 18\n\n    # Define the number of baskets of green food and red food purchased\n    GREEN_FOOD_BASKETS = 3\n    RED_FOOD_BASKETS = 3\n\n    # Define the discount amount\n    DISCOUNT = 2\n\n    # Calculate the total cost of the green food\n    green_food_cost = GREEN_FOOD_BASKETS * GREEN_FOOD_PRICE - DISCOUNT\n\n    # Calculate the total cost of the red food\n    red_food_cost = RED_FOOD_BASKETS * RED_FOOD_PRICE - DISCOUNT\n\n    # Calculate the total cost of the food\n    total_cost = green_food_cost + red_food_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rooms and the time it takes to clean each room\n    num_rooms = 90\n    time_per_room = 20\n\n    # Calculate the total time to clean one room\n    time_per_room = time_per_room / 2\n\n    # Calculate the total time to clean all rooms\n    total_time = num_rooms * time_per_room\n\n    # Convert the total time to hours\n    hours = total_time / 60\n\n    # Display the total time in hours\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of homes built in the first year\n    homes_first_year = 12\n\n    # Define the number of homes built in the second year\n    homes_second_year = homes_first_year * 3\n\n    # Define the number of homes built in the third year\n    homes_third_year = homes_second_year * 2\n\n    # Calculate the total number of homes built over the next three years\n    total_homes = homes_first_year + homes_second_year + homes_third_year\n\n    # return the result\n    result = total_homes\n    return result"}
{"output": "def solution():\n    \n    total_age = 87\n    brother_age = total_age - 3\n    sister_age = brother_age + 2\n    mom_age = 3 * brother_age - 1\n    my_age = sister_age + mom_age\n    my_age = my_age + 3\n    result = my_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and glue sticks per student\n    num_students = 27\n    sticks_per_student = 2\n\n    # Define the number of glue sticks per pack\n    sticks_per_pack = 8\n\n    # Calculate the total number of glue sticks needed\n    total_sticks_needed = num_students * sticks_per_student\n\n    # Calculate the number of packs needed\n    packs_needed = total_sticks_needed // sticks_per_pack\n    if total_sticks_needed % sticks_per_pack!= 0:\n        packs_needed += 1\n\n    # Display the number of packs needed\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial volume of water passing through the river\n    initial_volume = 4000\n\n    # Calculate the volume of water passing through the river after a day\n    final_volume = initial_volume * 2\n\n    # Calculate the volume of water passing through the river on the third day\n    third_day_volume = final_volume + 6000\n\n    # Calculate the total volume of water passing through the river\n    total_volume = final_volume + third_day_volume\n\n    # Display the total volume of water passing through the river\n    result = total_volume\n    return result"}
{"output": "def solution():\n    num_people_infected = 10\n    num_people_per_day = 6\n    num_days = 3\n\n    # Calculate the total number of people infected after three days\n    total_people_infected = num_people_infected * num_days\n    result = total_people_infected\n    return result"}
{"output": "def solution():\n    \n    rafaela_tip = 20\n    julieta_tip = rafaela_tip * 0.9\n    total_tip = rafaela_tip + julieta_tip\n    result = total_tip\n    return result"}
{"output": "def solution():\n    \n    oranges_bought = 12\n    oranges_given = 3 * 2\n    oranges_remaining = oranges_bought - oranges_given - 3\n    result = oranges_remaining\n    return result"}
{"output": "def solution():\n    \n    claire_badges_per_month = 1\n    amber_badges_per_month = 2 * claire_badges_per_month\n    wendy_badges_per_month = 3 * claire_badges_per_month\n    wendy_badges_per_year = wendy_badges_per_month * 12\n    difference = wendy_badges_per_year - amber_badges_per_month\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    loaves_per_hour = 2\n    slices_per_loaf = 8\n    slices_per_hour = loaves_per_hour * slices_per_loaf\n    slices_sold_per_hour = slices_per_hour * 0.5\n    total_slices_sold = slices_sold_per_hour * 2\n    total_money_raised = total_slices_sold * 0.5\n    result = total_money_raised\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gold coins\n    gold_coins = 70\n\n    # Calculate the number of silver coins\n    silver_coins = gold_coins - 30\n\n    # Calculate the total number of coins\n    total_coins = gold_coins + silver_coins\n\n    # Display the total number of coins\n    result = total_coins\n    return result"}
{"output": "def solution():\n    \n    total_burritos = 600\n    students = 50\n    burritos_per_student = 10\n    eaten_burritos = 20\n    leftover_burritos = total_burritos - (students * burritos_per_student) - eaten_burritos\n    result = leftover_burritos\n    return result"}
{"output": "def solution():\n    \n    red_cars = 12\n    green_cars = red_cars - 2\n    blue_cars = 3 * green_cars\n    total_cars = 75\n    yellow_cars = total_cars - (red_cars + green_cars + blue_cars)\n    result = yellow_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of books\n    total_books = 85\n\n    # Calculate the number of books Anne has\n    anne_books = total_books - 12\n\n    # Calculate the number of books Sofie has\n    sofie_books = anne_books + 25\n\n    # Calculate the number of books Fawn has\n    fawn_books = total_books - anne_books - sofie_books\n\n    # Display the number of books Fawn has\n    result = fawn_books\n    return result"}
{"output": "def solution():\n    \n    potatoes_weight = 5\n    sweet_potatoes_weight = 2 * potatoes_weight\n    carrots_weight = sweet_potatoes_weight - 3\n    result = carrots_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jello cups needed per box\n    JELLO_CUPS_PER_BOX = 10\n\n    # Define the number of kids and jello cups per kid\n    KIDS = 30\n    JELLO_CUPS_PER_KID = 4\n\n    # Calculate the total number of jello cups needed\n    total_jello_cups = JELLO_CUPS_PER_BOX * KIDS\n\n    # Calculate the total number of jello cups needed\n    total_jello_cups_needed = total_jello_cups_needed * JELLO_CUPS_PER_KID\n\n    # Calculate the total cost of the jello cups\n    total_cost = total_jello_cups_needed * 1.25\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_phones = 5\n    phones_price = 700\n    amount_paid = 4000\n\n    # Calculate the total cost of all phones\n    total_phones_cost = num_phones * phones_price\n\n    # Calculate the amount of change the seller will receive\n    change = amount_paid - total_phones_cost\n    result = change\n    return result"}
{"output": "def solution():\n    # Calculate Madeline's weekly cost\n    madeline_weekly_cost = 0.6 * 400\n\n    # Calculate Keenan's weekly cost\n    keenan_weekly_cost = 400 - madeline_weekly_cost\n\n    result = keenan_weekly_cost\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 60\n    first_day_pieces = (2/5) * total_pieces\n    second_day_pieces = 10\n    remaining_pieces = total_pieces - first_day_pieces - second_day_pieces\n    third_day_pieces = (7/13) * remaining_pieces\n    pieces_eaten = first_day_pieces + second_day_pieces + third_day_pieces\n    result = pieces_eaten\n    return result"}
{"output": "def solution():\n    num_soda_bottles = 3\n    soda_price = 21.0\n\n    num_water_bottles = 2\n    water_price = 8.0\n\n    # Calculate the total cost of all soda bottles\n    total_soda_cost = num_soda_bottles * soda_price\n\n    # Calculate the total cost of all water bottles\n    total_water_cost = num_water_bottles * water_price\n\n    # Calculate the total cost of all items\n    total_cost = total_soda_cost + total_water_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money David has\n    initial_money = 12.48\n\n    # Define the number of bolts David wants to buy\n    num_boltes = 16\n\n    # Define the cost of each bolt\n    bolt_cost = 0.03\n\n    # Calculate the total cost of the bolts\n    total_cost = num_boltes * bolt_cost\n\n    # Calculate the amount of money David has left\n    money_left = initial_money - total_cost\n\n    # Display the amount of money David has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Calculate Ella's earnings per hour\n    earnings_per_hour = 33 / 3\n\n    # Calculate Ella's earnings after 12 hours\n    earnings_after_12_hours = earnings_per_hour * 12\n\n    # Display Ella's earnings after 12 hours\n    result = earnings_after_12_hours\n    return result"}
{"output": "def solution():\n    \n    initial_marbles = 52\n    friend_marbles = 28\n    remaining_marbles = initial_marbles - friend_marbles\n    lost_marbles = remaining_marbles / 4\n    remaining_marbles -= lost_marbles\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage of each type of question\n    MC_QUESTION_PERCENTAGE = 0.8\n    FT_QUESTION_PERCENTAGE = 0.9\n    LONG_QUESTION_PERCENTAGE = 0.6\n\n    # Define the number of each type of question\n    MC_QUESTIONS = 10\n    FT_QUESTIONS = 20\n    LONG_QUESTIONS = 5\n\n    # Calculate the total points scored\n    MC_POINTS = MC_QUESTIONS * MC_POINTS\n    FT_POINTS = FT_QUESTIONS * FT_POINTS\n    LONG_POINTS = LONG_QUESTIONS * LONG_POINTS\n    total_points = MC_POINTS + FT_POINTS + LONG_POINTS\n\n    # Display the total points scored\n    result = total_points\n    return result"}
{"output": "def solution():\n    profit = 2000  # Isaias needs to make a profit of $2000\n    total_chickens = 300  # Isaias has 300 chickens on his farm\n    sale_price_per_chicken = 50  # Isaias plans to sell 3/5 of the chickens at $50 per chicken\n\n    # Calculate the number of chickens Isaias plans to sell\n    sale_chickens = int(total_chickens * 3/5)\n\n    # Calculate the total amount of money Isaias earns from selling the chickens\n    total_earnings = sale_chickens * sale_price_per_chicken\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    total_glasses = 32\n    julie_glasses = 14\n    micah_glasses = total_glasses - julie_glasses\n    boys_glasses = julie_glasses / 2\n    difference = julie_glasses - micah_glasses\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    hair_spending = 400\n    manicure_spending = hair_spending / 4\n    pedicure_spending = manicure_spending * 3 / 4\n    total_spending = hair_spending + manicure_spending + pedicure_spending\n    result = total_spending\n    return result"}
{"output": "def solution():\n    rope_length = 20  # The rope is 20 meters long\n    cost_per_meter = 2  # Sarah's friend wants to buy the rope for $2 a meter\n    cost_of_new_rope = 1.5  # Sarah plans to buy a new rope at the store costs $1.5 a meter\n\n    # Calculate the total cost of buying the new rope\n    total_cost = rope_length * cost_per_meter\n\n    # Calculate the amount of money Sarah will have left over after buying the new rope\n    money_left_over = total_cost - total_cost\n    result = money_left_over\n    return result"}
{"output": "def solution():\n    \n    # Define Melanie's current age and the number of years in 10 years\n    current_age = 18\n    years_in_10_years = 10\n\n    # Calculate Melanie's age in 10 years\n    age_in_10_years = current_age + years_in_10_years\n\n    # Calculate Melanie's age in 3 years\n    age_in_3_years = age_in_10_years + 3\n\n    # Display Melanie's age in 3 years\n    result = age_in_3_years\n    return result"}
{"output": "def solution():\n    num_bacon_packs = 5\n    bacon_pack_price = 10\n\n    num_chicken_packs = 6\n    chicken_pack_price = bacon_pack_price * 2\n\n    num_strawberry_packs = 3\n    strawberry_pack_price = 4\n\n    num_apples_packs = 7\n    apple_pack_price = 0.5\n\n    total_budget = 65\n\n    # Calculate the total cost of all bacon packs\n    total_bacon_cost = num_bacon_packs * bacon_pack_price\n\n    # Calculate the total cost of all chicken packs\n    total_chicken_cost = num_chicken_packs * chicken_pack_price\n\n    # Calculate the total cost of all strawberry packs\n    total_strawberry_cost = num_strawberry_packs * strawberry_pack_price\n\n    # Calculate the total cost of all apples packs\n    total"}
{"output": "def solution():\n    \n    # Define the length of the final concert\n    final_concert_length = 65\n\n    # Calculate the length of the encore\n    encore_length = 15\n\n    # Calculate the total length of the concert\n    total_concert_length = final_concert_length + encore_length\n\n    # Calculate the length of the usual concert\n    usual_concert_length = total_concert_length / 2\n\n    # Display the length of the usual concert\n    result = usual_concert_length\n    return result"}
{"output": "def solution():\n    \n    starting_toys = 200\n    alyssa_toys = 40\n    bonnie_toys = 80\n    nicky_toys = 30\n    remaining_toys = starting_toys - alyssa_toys - bonnie_toys - nicky_toys\n    result = remaining_toys\n    return result"}
{"output": "def solution():\n    \n    tuesday_chimichangas = 125\n    wednesday_chimichangas = 125\n    friday_chimichangas = 2 * wednesday_chimichangas\n    total_chimichangas = tuesday_chimichangas + wednesday_chimichangas + friday_chimichangas\n    result = total_chimichangas\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of microphones\n    initial_microphones = 50\n\n    # Calculate the number of microphones that won't find any space\n    won_space = initial_microphones * 0.2\n\n    # Calculate the number of pairs of microphones that can fit in\n    pairs_of_microphones = initial_microphones - won_space\n\n    # Display the number of pairs of microphones\n    result = pairs_of_microphones\n    return result"}
{"output": "def solution():\n    \n    nesting_birds = 6\n    flying_overhead_birds = (2/3) * nesting_birds\n    feeding_birds = 3 * 8\n    total_birds = nesting_birds + flying_overhead_birds + feeding_birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 55\n    cookies_eaten = 5\n    cookies_left = total_cookies - cookies_eaten\n    jars = 5\n    cookies_per_jar = cookies_left / jars\n    result = cookies_per_jar\n    return result"}
{"output": "def solution():\n    \n    orchids = 5\n    daisies = 4\n    orchid_petals = 5\n    daisie_petals = 10\n    total_orchid_petals = orchids * orchid_petals\n    total_daisie_petals = daisies * daisie_petals\n    difference = total_daisie_petals - total_orchid_petals\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_plants = 100\n    indoor_plants = total_plants / 4\n    remaining_plants = total_plants - indoor_plants\n    outdoor_plants = (2 / 3) * remaining_plants\n    flowering_plants = remaining_plants - outdoor_plants\n    percent_flowering_plants = (flowering_plants / total_plants) * 100\n    result = percent_flowering_plants\n    return result"}
{"output": "def solution():\n    # Calculate the speed of a whirligig\n    whirligig_speed = 5 * 121  # the whirligig spins at five times the speed of a thingamabob\n\n    # Calculate the speed of a whatchamacallit\n    whatchamacallit_speed = 11 * 121  # the whatchamacallit spins eleven times faster than a thingamabob\n\n    # Calculate the speed of a whirligig\n    whirligig_speed = 5 * whirligig_speed  # the whirligig spins at five times the speed of a thingamabob\n\n    result = whirligig_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the salad and yogurt\n    SALAD_PRICE = 6\n    YOGURT_PRICE = SALAD_PRICE / 2\n\n    # Define the number of carrots Ellen eats each day\n    carrots = 2\n    salad = 1\n    yogurt = 1\n\n    # Calculate the total cost of salad and yogurt\n    salad_cost = SALAD_PRICE * carrots\n    yogurt_cost = YOGURT_PRICE * carrots\n    total_cost = salad_cost + yogurt_cost\n\n    # Calculate the cost of one carrot\n    carrot_cost = 11 - total_cost\n\n    # Display the cost of one carrot\n    result = carrot_cost\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 8\n    days_per_week = 5\n    regular_pay_rate = 10\n    raised_pay_rate = 2\n    regular_pay = hours_per_day * days_per_week * regular_pay_rate\n    raised_pay = hours_per_day * days_per_week * raised_pay_rate\n    total_pay = regular_pay + raised_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the amount earned by Joe\n    joe_earnings = 6\n\n    # Calculate the number of lawns mowed in the first week\n    kamala_lawn_mowed = joe_earnings * 3\n\n    # Calculate the number of lawns mowed in the second week\n    alba_lawn_mowed = joe_earnings * 5\n\n    # Calculate the total earnings from mowing lawns\n    total_earnings = kamala_lawn_mowed + alba_lawn_mowed\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    martin_weight = 55\n    carl_weight = martin_weight + 16\n    christian_weight = carl_weight + 8\n    harry_weight = christian_weight - 5\n    result = harry_weight\n    return result"}
{"output": "def solution():\n    \n    rental_frequency = 10\n    rental_hours = 3\n    hourly_rate = 25\n    total_hours = rental_frequency * rental_hours\n    total_pay = total_hours * hourly_rate\n    profit = 500 - total_pay\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    martha_notebooks = 7 - 5\n    joseph_notebooks = 3 * martha_notebooks\n    difference = joseph_notebooks - martha_notebooks\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    dijana_distance = 50\n    anis_distance = dijana_distance * (1 + 1/5)\n    total_distance = dijana_distance + anis_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 100\n    num_nephews = 6\n    cookies_per_nephew = total_cookies / num_nephews\n    cookies_left = 4\n    cookies_per_nephew = cookies_left / num_nephews\n    result = cookies_per_nephew\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of pages Denise read yesterday\n    denise_yesterday = 10\n\n    # Calculate the number of pages Daniel read yesterday\n    daniel_yesterday = 13\n\n    # Calculate the number of pages Denise read today\n    denise_today = daniel_yesterday + 5\n\n    # Calculate the difference in the number of pages Denise and Daniel read\n    difference = denise_yesterday - daniel_today\n\n    # Display the difference in the number of pages Denise and Daniel read\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    adult_bowls = 4\n    child_bowls = 8\n    total_bowls = adult_bowls + child_bowls\n    bowls_per_child = total_bowls // child_bowls\n    result = bowls_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of notebooks and ballpen\n    NOTEBOOK_PRICE = 1.5\n    BPEN_PRICE = 0.5\n\n    # Define the number of notebooks and ballpen William bought\n    num_notebooks = 5\n    num_ballpen = 1\n\n    # Calculate the total cost of notebooks and ballpen\n    total_cost = (num_notebooks * NOTEBOOK_PRICE) + (num_ballpen * BPEN_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_small_masks = 4\n    small_mask_size = 2\n\n    num_large_masks = 3\n    large_mask_size = 2.25\n\n    num_small_masks_needed = 20\n    num_large_masks_needed = 8\n\n    # Calculate the total material needed for small masks\n    total_small_material = num_small_masks_needed * small_mask_size\n\n    # Calculate the total material needed for large masks\n    total_large_material = num_large_masks_needed * large_mask_size\n\n    # Calculate the total material needed for all masks\n    total_material = total_small_material + total_large_material\n    result = total_material\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fast and furious movies\n    fast_movies = 9\n    furious_movies = 3\n\n    # Calculate the total number of movies\n    total_movies = fast_movies + furious_movies\n\n    # Calculate the total amount spent\n    total_spent = 216\n\n    # Calculate the average price per ticket\n    average_price = total_spent / total_movies\n\n    # Display the average price\n    result = average_price\n    return result"}
{"output": "def solution():\n    \n    sleep_hours = 10\n    work_hours = sleep_hours - 2\n    walking_hours = 1\n    total_hours = sleep_hours + work_hours + walking_hours\n    free_time = total_hours - total_hours\n    result = free_time\n    return result"}
{"output": "def solution():\n    \n    blue_boxes = 7\n    red_boxes = 9\n    used_blue_shoeboxes = 3\n    used_red_shoeboxes = (1/3) * used_blue_shoeboxes\n    remaining_blue_shoeboxes = blue_boxes - used_blue_shoeboxes\n    remaining_red_shoeboxes = red_boxes - used_red_shoeboxes\n    total_remaining_boxes = remaining_blue_shoeboxes + remaining_red_shoeboxes\n    result = total_remaining_boxes\n    return result"}
{"output": "def solution():\n    \n    sarah_books = 9\n    joseph_books = 2 * sarah_books - 2\n    result = joseph_books\n    return result"}
{"output": "def solution():\n    \n    initial_marbles = 30\n    jamie_marbles = initial_marbles / 5\n    donald_marbles = 10\n    remaining_marbles = initial_marbles - jamie_marbles - donald_marbles\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    duncan_age_now = 60\n    duncan_age_four_years_ago = duncan_age_now - 8 - 4\n    adam_age_four_years_ago = 2 * duncan_age_four_years_ago\n    adam_age_in_8_years = adam_age_four_years_ago + 8\n    result = adam_age_in_8_years\n    return result"}
{"output": "def solution():\n    \n    brown_acres = 200\n    smith_acres = 2 * brown_acres + 100\n    total_acres = brown_acres + smith_acres\n    result = total_acres\n    return result"}
{"output": "def solution():\n    \n    packages_per_hour = 50 - 10\n    pay_per_package = 0.20\n    hours_worked = 8\n    total_packages = packages_per_hour * hours_worked\n    total_pay = total_packages * pay_per_package\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    normal_sudoku_time = 45\n    extreme_sudoku_time = 4 * normal_sudoku_time\n    bottles_per_half_hour = 1 / 0.5\n    total_bottles = (normal_sudoku_time + extreme_sudoku_time) * bottles_per_half_hour\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    red_balloons = 20  # Benny threw 20 pieces of bologna at each red balloon\n    yellow_balloons = 3  # Benny threw 3 pieces of bologna at each yellow balloon\n    total_balloons = 58  # Benny threw 58 pieces of bologna at a bundle of red and yellow balloons\n\n    # Calculate the number of red balloons and yellow balloons\n    red_balloons = red_balloons / 2\n    yellow_balloons = total_balloons - red_balloons\n\n    # Calculate the number of yellow balloons\n    yellow_balloons = yellow_balloons / yellow_balloons\n    result = yellow_balloons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of miles Jon drives per day and per month\n    MILES_PER_DAY = 100\n    MONTHS_PER_MONTH = 30\n\n    # Define the number of tune-ups Jon needs per mile\n    TUNE_UPS_PER_MILE = 1000\n\n    # Calculate the total number of miles Jon drives in a month\n    miles_per_month = MILES_PER_DAY * MONTHS_PER_MONTH\n\n    # Calculate the total number of tune-ups Jon needs in a month\n    tune_ups_per_month = miles_per_month / TUNE_UPS_PER_MILE\n\n    # Calculate the total number of tune-ups Jon needs in a month\n    total_tune_ups = tune_ups_per_month * TUNE_UPS_PER_MONTH\n\n    # Display the total number of tune-ups Jon needs in a month\n    result = total_tune_ups\n    return result"}
{"output": "def solution():\n    \n    tuesday_hours = 5\n    wednesday_hours = 2 * tuesday_hours\n    thursday_hours = wednesday_hours - 2\n    total_hours = tuesday_hours + wednesday_hours + thursday_hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    cake_price = 11\n    balloons_price = 0.5\n    balloons_per_dozen = 12\n    total_balloons = balloons_price * balloons_per_dozen\n    ice_cream_price = 7\n    total_ice_cream_cost = 2 * ice_cream_price\n    total_cost = cake_price + total_balloons + total_ice_cream_cost\n    julia_allowance = total_cost / 2\n    nadine_allowance = total_allowance - julia_allowance\n    result = nadine_allowance\n    return result"}
{"output": "def solution():\n    \n    apples = 3\n    bananas = 5\n    oranges = 6\n    total_fruit = apples + bananas + oranges\n    lola_fruit = 2\n    remaining_fruit = total_fruit - lola_fruit\n    result = remaining_fruit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students playing tennis and volleyball\n    tennis_students = 6\n    volleyball_students = 2 * tennis_students\n\n    # Define the number of students playing boys and girls\n    boys_students = 16\n    girls_students = 22\n\n    # Calculate the total number of students\n    total_students = tennis_students + volleyball_students + boys_students + girls_students\n\n    # Display the total number of students\n    result = total_students\n    return result"}
{"output": "def solution():\n    num_students = 30\n    cost_per_lollypop = 0.8\n    num_lollipops_per_student = 10\n    cost_per_lollypop = 0.5\n\n    # Calculate the total revenue from selling lollipops\n    total_revenue = num_students * num_lollipops_per_student * cost_per_lollypop\n\n    # Calculate the total cost of buying lollipops\n    total_cost = num_students * num_lollipops_per_student * cost_per_lollypop\n\n    # Calculate the profit from selling lollipops\n    profit = total_revenue - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cats\n    cats = 3\n\n    # Define the number of dogs\n    dogs = cats * 3\n\n    # Define the number of rabbits\n    rabbits = dogs - 2\n\n    # Define the number of fish\n    fish = rabbits * 3\n\n    # Define the number of gerbils\n    gerbils = fish / 3\n\n    # Calculate the total number of pets\n    total_pets = cats + dogs + rabbits + fish + gerbils\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    total_slices = 24\n    abby_slices_per_day = 2\n    josh_slices_per_day = 2 * abby_slices_per_day\n    slices_per_day_last = abby_slices_per_day + josh_slices_per_day\n    days_last = total_slices / slices_per_day_last\n    result = days_last\n    return result"}
{"output": "def solution():\n    \n    # Define the number of months in a year\n    MONTHS_IN_YEAR = 12\n\n    # Define the number of shells Martha collects each month\n    shells_per_month = 1\n\n    # Calculate the total number of shells Martha collects in 10th birthday\n    total_shells = shells_per_month * MONTHS_IN_YEAR * 10\n\n    # Display the total number of shells\n    result = total_shells\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cups and rows\n    total_cups = 27\n    rows = 3\n\n    # Calculate the number of cups used for chamomile and mint tea\n    cups_used = total_cups / rows\n\n    # Calculate the number of cups of chamomile and mint tea in each row\n    cups_per_row = cups_used / 2\n\n    # Calculate the number of cups of mint tea in each row\n    mint_cups_per_row = cups_per_row - cups_used\n\n    # Display the number of cups of mint tea in each row\n    result = mint_cups_per_row\n    return result"}
{"output": "def solution():\n    \n    # Define the number of berries collected per hour\n    BERRIES_PER_HOUR = 24 / 8\n\n    # Calculate the number of berries picked up per trip\n    berries_per_trip = BERRIES_PER_HOUR / 4\n\n    # Display the minimum number of berries picked up per trip\n    result = berries_per_trip\n    return result"}
{"output": "def solution():\n    \n    pool_water = 10000\n    fill_water = pool_water / 2\n    total_water = pool_water + fill_water\n    emptied_water = 500 * 6\n    remaining_water = total_water - emptied_water\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    total_money = 150\n    friday_saw = 5\n    saturday_saw = 8\n    friday_ticket_cost = 10\n    other_day_ticket_cost = 7\n    popcorn_cost = 8\n    candy_box_cost = 2\n\n    # Calculate the total cost of tickets for Fridays and Saturdays\n    friday_total_cost = friday_saw * friday_ticket_cost\n    saturday_total_cost = saturday_saw * saturday_ticket_cost\n    friday_total_cost = friday_total_cost + saturday_total_cost\n\n    # Calculate the total cost of popcorn and box of candy\n    total_cost = popcorn_cost + candy_box_cost\n\n    # Calculate the remaining money after deducting the total cost\n    remaining_money = total_money - total_cost\n\n    # Calculate the maximum number of movies Colby can see\n    max_movies = remaining_money"}
{"output": "def solution():\n    \n    cinnamon_rolls = 200\n    blueberry_muffins = 300\n    normal_cinnamon_roll_calories = 600\n    normal_blueberry_muffin_calories = 450\n    normal_pastry_calories = normal_cinnamon_roll_calories + normal_blueberry_muffin_calories / 3\n    total_calories = (cinnamon_rolls * normal_cinnamon_roll_calories) + (blueberry_muffins * normal_blueberry_muffin_calories)\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    monday_junebugs = 39\n    tuesday_wednesday_junebugs = 2 * monday_junebugs\n    thursday_junebugs = 48\n    friday_junebugs = 57\n    total_junebugs = monday_junebugs + tuesday_wednesday_junebugs + thursday_junebugs + friday_junebugs\n    average_junebugs = total_junebugs / 3\n    result = average_junebugs\n    return result"}
{"output": "def solution():\n    \n    bus_speed = 60\n    bus_time = 5\n    car_speed = 30\n    car_time = 8\n    bus_distance = bus_speed * bus_time\n    car_distance = car_speed * car_time\n    difference = bus_distance - car_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blocks, stuffed animals, and stacking rings\n    blocks = 31\n    stuffed_animals = 8\n    stacking_rings = 9\n\n    # Calculate the total number of toys\n    total_toys = blocks + stuffed_animals + stacking_rings\n\n    # Calculate the number of bouncy balls in the tube\n    bouncy_balls = 62 - total_toys\n\n    # Display the number of bouncy balls\n    result = bouncy_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the combined age of Peter, Paul and Jean\n    combined_age = 100\n\n    # Define the age difference between Paul and John\n    age_difference = 10\n\n    # Calculate Paul's age\n    paul_age = combined_age - age_difference\n\n    # Calculate John's age\n    john_age = paul_age + age_difference\n\n    # Calculate Peter's age\n    peter_age = paul_age + john_age\n\n    # Return the result\n    result = peter_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of water balloons\n    initial_balloons = 4 * 2\n\n    # Define the number of water balloons Maria had\n    initial_balloons = 1\n\n    # Define the number of additional balloons each person gets\n    additional_balloons = 3\n\n    # Calculate the total number of balloons\n    total_balloons = initial_balloons + additional_balloons\n\n    # Display the total number of balloons\n    result = total_balloons\n    return result"}
{"output": "def solution():\n    \n    donated_people = 10\n    boxes_per_donation = 5\n    initial_boxes = 10\n    total_boxes = donated_people * boxes_per_donation + initial_boxes\n    remaining_boxes = total_boxes - initial_boxes\n    boxes_per_table = 2\n    tables_needed = remaining_boxes // boxes_per_table\n    if remaining_boxes % boxes_per_table!= 0:\n        tables_needed += 1\n    result = tables_needed\n    return result"}
{"output": "def solution():\n    \n    zoey_seeds = 40\n    zoey_distance = zoey_seeds * 10\n    sydney_seeds = 35\n    sydney_distance = sydney_seeds * 12\n    total_distance = zoey_distance + sydney_distance\n    average_distance = total_distance / 2\n    result = average_distance\n    return result"}
{"output": "def solution():\n    \n    widgeteer_widgets_per_hour = 60\n    widgetmaster_widgets_per_hour = 45\n    widgeteer_widgets_per_day = widgeteer_widgets_per_hour * 24\n    widgetmaster_widgets_per_day = widgetmaster_widgets_per_hour * 30\n    widgeteer_cost = widgeteer_widgets_per_day * 6\n    widgetmaster_cost = widgetmaster_widgets_per_day * 6\n    difference = widgeteer_cost - widgetmaster_cost\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of pesos charged during the 12-hour mark\n    pesos_12_hour = 1000\n\n    # Calculate the total number of pesos charged during the 24-hour mark\n    pesos_24_hour = 1600\n\n    # Calculate the total number of pesos charged after 12 hours\n    pesos_12_hour_after_12_hours = pesos_12_hour + pesos_24_hour\n\n    # Calculate the number of pesos added after 12 hours\n    pesos_added_12_hours = pesos_12_hour_after_12_hours * 70\n\n    # Calculate the total number of pesos charged after 24 hours\n    pesos_added_24_hours = pesos_24_hour_after_12_hours * 70\n\n    # Calculate the total number of pesos charged after the 12-hour mark\n    total_pesos_charged = pesos_12_hour_after_12_hours + pesos_added_24_hours"}
{"output": "def solution():\n    \n    goat_count = 15\n    sheep_count = 12\n    goat_weight = 5\n    sheep_weight = 2 * goat_weight - 3\n    total_goat_weight = goat_count * goat_weight\n    total_sheep_weight = sheep_count * sheep_weight\n    total_weight = total_goat_weight + total_sheep_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    hourly_wage = 50\n    hours_worked = 6\n    total_earnings = hourly_wage * hours_worked\n    gas_cost = 50\n    deposit = 100\n    pencil_cost = 10\n    pens_can_buy = (total_earnings - gas_cost - deposit) // pencil_cost\n    result = pens_can_buy\n    return result"}
{"output": "def solution():\n    \n    craig_letters = 20 * 15\n    brother_letters = craig_letters + 50\n    total_letters = craig_letters + brother_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and Schools\n    rows = 7\n    schools = 5\n\n    # Calculate the total number of rows and Schools\n    total_rows = rows * schools\n\n    # Calculate the total number of children in the drill\n    total_children = total_rows * 8\n\n    # return the result\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pupils and the number of coupons\n    num_pupils = 29\n    num_coupons = 9\n\n    # Calculate the total number of bottles of apple juice needed\n    total_bottles = num_pupils * num_coupons * 100\n\n    # Calculate the number of bottles of apple juice given to each student\n    bottles_per_student = 2\n\n    # Calculate the total number of bottles of apple juice given to lunch\n    bottles_given_to_lunch = total_bottles * bottles_per_student\n\n    # Calculate the total number of bottles of apple juice the teacher has for herself\n    bottles_for_herself = total_bottles - bottles_given_to_lunch\n\n    # Display the total number of bottles of apple juice the teacher has for herself\n    result = bottles_for_herself\n    return result"}
{"output": "def solution():\n    \n    repair_charge = 40\n    labor_charge = 35 * 2.25\n    part_charge = 60\n    total_charge = repair_charge + labor_charge + part_charge\n    result = total_charge\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each CD and the discount percentage\n    CD_COST = 15\n    DISCOUNT_PERCENTAGE = 40\n\n    # Define the number of CDs James gets\n    num_cds = 10\n\n    # Calculate the total cost before the discount\n    total_cost_before_discount = num_cds * CD_COST\n\n    # Calculate the number of CDs James gets after the discount\n    num_cds_after_discount = num_cds - 5\n\n    # Calculate the total cost after the discount\n    total_cost_after_discount = total_cost_before_discount * (1 - DISCOUNT_PERCENTAGE / 100)\n\n    # Calculate the total revenue from selling the CDs\n    total_revenue = num_cds_after_discount * 40\n\n    # Calculate the net profit\n    net_profit = total_revenue - total_cost_after_discount\n\n    # Display the net profit\n    result = net_profit\n    return result"}
{"output": "def solution():\n    num_yams = 6\n    yam_price = 1.5\n\n    num_sweet_potatoes = 10\n    sweet_potato_price = 2\n\n    num_carrots = 4\n    carrot_price = 1.25\n\n    # Calculate the total earnings from selling yams\n    yam_earnings = num_yams * yam_price\n\n    # Calculate the total earnings from selling sweet potatoes\n    sweet_potato_earnings = num_sweet_potatoes * sweet_potato_price\n\n    # Calculate the total earnings from selling carrots\n    carrot_earnings = num_carrots * carrot_price\n\n    # Calculate the total earnings from selling all crops\n    total_earnings = yam_earnings + sweet_potato_earnings + carrot_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    lake_distance = 20\n    swimming_speed = 2\n    swimming_time = 0.6 * lake_distance\n    remaining_distance = lake_distance - swimming_time\n    island_rest_time = swimming_time / 2\n    total_time = swimming_time + island_rest_time + island_rest_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of loaves of bread Sam had last Friday\n    sam_last_friday = 7\n\n    # Calculate the number of loaves of bread the bakery has\n    bakery_last_friday = sam_last_friday * 7 - 40\n\n    # Calculate the total number of loaves of bread the bakery has\n    total_loaves = bakery_last_friday + 7\n\n    # Display the total number of loaves of bread\n    result = total_loaves\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 15\n\n    # Define the number of stickers lost during playtime\n    playtime_stickers = 7\n\n    # Define the number of stickers given for helping classmates\n    helping_stickers = 5\n\n    # Calculate the total number of stickers\n    total_stickers = initial_stickers - playtime_stickers + helping_stickers\n\n    # Display the total number of stickers\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the commission rates\n    NY_PRICE = 5\n    WALL_STREET_PRICE = 15\n    NY_COMMISSION_RATE = 0.1\n    WALL_STREET_COMMISSION_RATE = 0.08\n\n    # Calculate the commission earned on each copy of New York Times\n    NY_COMMISSION_EARNINGS = NY_PRICE * NY_COMMISSION_RATE\n\n    # Calculate the commission earned on each copy of Wall Street Journal\n    WALL_STREET_COMMISSION_EARNINGS = WALL_STREET_PRICE * WALL_STREET_COMMISSION_RATE\n\n    # Calculate the total commission earned\n    total_commission = NY_COMMISSION_EARNINGS + WALL_STREET_COMMISSION_EARNINGS\n\n    # Display the total commission earned\n    result = total_commission\n    return result"}
{"output": "def solution():\n    \n    # Define Deanna's age\n    deanna_age = 26\n\n    # Calculate Marcus's age\n    marcus_age = deanna_age - 5\n\n    # Calculate Leo's age\n    leo_age = marcus_age / 2\n\n    # Display Leo's age\n    result = leo_age\n    return result"}
{"output": "def solution():\n    \n    total_points = 45\n    bahati_points = total_points - 20\n    dinar_points = bahati_points + 10\n    azibo_points = (total_points - bahati_points - dinar_points) / 2\n    result = azibo_points\n    return result"}
{"output": "def solution():\n    \n    # Define the thickness of the book in inches\n    thickness = 1.5\n\n    # Define the number of pages printed on each paper\n    pages_per_paper = 100\n\n    # Calculate the number of pages printed on each side of the book\n    pages_per_side = pages_per_paper * 2\n\n    # Calculate the total number of pages in the book\n    total_pages = thickness * pages_per_side\n\n    # Display the total number of pages in the book\n    result = total_pages\n    return result"}
{"output": "def solution():\n    # Calculate the number of 15-minute intervals from 8:00 AM to 11:00 PM\n    intervals = (11-8) * 60 / 15\n\n    # Calculate the total number of reports stapled\n    total_reports = intervals * 30\n\n    result = total_reports\n    return result"}
{"output": "def solution():\n    \n    # Define the time Kim spends sleepwalking from 2:15 to 2:38 am\n    sleepwalking_time = (2 * 60) - 15\n\n    # Define the time Kim spends waking up at the bathroom\n    bathroom_time = sleepwalking_time - 5\n\n    # Calculate the total time Kim spends sleeping on her bed\n    total_sleep_time = sleepwalking_time + bathroom_time\n\n    # Display the total time Kim spends sleeping on her bed\n    result = total_sleep_time\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of measuring spoons to cups\n    measuring_spoons_to_cups_ratio = 2/3\n\n    # Calculate the number of measuring cups\n    measuring_cups = 2 * 12\n\n    # Calculate the number of measuring spoons Jonathan has\n    measuring_spoons = measuring_spoons_to_cups_ratio * measuring_cups\n\n    # Calculate the total number of utensils Jonathan has\n    total_utensils = measuring_spoons + measuring_cups + 6\n\n    # Display the total number of utensils Jonathan has remaining\n    result = total_utensils\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of the hospital\n    capacity = 1000\n\n    # Calculate the number of occupied beds\n    occupied_beds = capacity * (1/5)\n\n    # Calculate the number of unoccupied beds after 2 weeks\n    unoccupied_beds = capacity - occupied_beds\n\n    # Calculate the total number of unoccupied beds after 2 weeks\n    total_unoccupied_beds = unoccupied_beds * 14\n\n    # Display the total number of unoccupied beds\n    result = total_unoccupied_beds\n    return result"}
{"output": "def solution():\n    \n    total_emails = 16\n    work_emails = 7\n    remaining_emails = total_emails - work_emails\n    family_emails = (2/3) * remaining_emails\n    remaining_emails -= family_emails\n    boyfriend_emails = (1/3) * remaining_emails\n    result = boyfriend_emails\n    return result"}
{"output": "def solution():\n    \n    # Define Aliya's age\n    aliya_age = 3\n\n    # Calculate Shawna's age\n    shawna_age = aliya_age * 3\n\n    # Calculate Shawna's father's age\n    father_age = shawna_age * 5\n\n    # Display Shawna's father's age\n    result = father_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people who attended Courtney\n    courtney_attendance = 48\n\n    # Calculate the number of people who attended Kelly\n    kelly_attendance = courtney_attendance * 1.2\n\n    # Calculate the actual number of people who attended the concert\n    actual_attendance = courtney_attendance - kelly_attendance\n\n    # Display the actual number of people who attended the concert\n    result = actual_attendance\n    return result"}
{"output": "def solution():\n    \n    jason_balls = 2\n    jordan_balls = jason_balls * 2\n    jeffrey_balls = jason_balls * 2\n    total_balls = jason_balls + jordan_balls + jeffrey_balls\n    result = total_balls\n    return result"}
{"output": "def solution():\n    \n    first_day_holes = 10\n    second_day_holes = 13\n    third_day_holes = 8\n    fourth_day_holes = 4 * (first_day_holes + second_day_holes + third_day_holes)\n    total_holes = first_day_holes + second_day_holes + third_day_holes + fourth_day_holes\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    amora_chips = 70\n    lainey_chips = 70\n    collins_chips = (amora_chips + lainey_chips) + 15\n    total_chips = amora_chips + lainey_chips + collins_chips\n    result = total_chips\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of the supplies\n    supplies_cost = 400\n\n    # Calculate the cost of the tickets\n    tickets_cost = supplies_cost * 1.5\n\n    # Calculate the cost of the travel\n    travel_cost = tickets_cost - supplies_cost\n\n    # Display the cost of the travel\n    result = travel_cost\n    return result"}
{"output": "def solution():\n    \n    total_caught = 339\n    stan_caught = (4 * total_caught) - 13\n    alex_caught = stan_caught + 5\n    pokemon_caught = stan_caught\n    result = pokemon_caught\n    return result"}
{"output": "def solution():\n    \n    episode_length = 20\n    total_episodes = episode_length / 2\n    total_minutes = total_episodes * episode_length\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance traveled in the first leg of the journey\n    distance_leg1 = 10 * 30\n\n    # Calculate the distance traveled in the second leg of the journey\n    distance_leg2 = 2 * 18\n\n    # Calculate the distance traveled in the third leg of the journey\n    distance_leg3 = 5 * 22\n\n    # Calculate the total distance traveled\n    total_distance = distance_leg1 + distance_leg2 + distance_leg3\n\n    # Display the total distance traveled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of brownies\n    initial_brownies = 1 * 12\n\n    # Calculate the number of brownies sent to the party\n    brownies_sent = 0.5 * 12\n\n    # Calculate the number of brownies waiting\n    brownies_waiting = 4 * 12\n\n    # Calculate the number of brownies eaten during the party\n    brownies_eaten = 1.5 * 12\n\n    # Calculate the number of brownies left over\n    brownies_left_over = initial_brownies - brownies_sent - brownies_eaten\n\n    # Display the number of brownies left over\n    result = brownies_left_over\n    return result"}
{"output": "def solution():\n    \n    nani_age = 8\n    brother_age = 2 * nani_age\n    sister_age = nani_age * 0.75\n    total_age = nani_age + brother_age + sister_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    total_racquets = 12\n    synthetic_gut = 3\n    polyester_string = 5\n    hybrid_set = 4\n    synthetic_gut_time = 15\n    polyester_string_time = 22\n    hybrid_set_time = 18\n    total_time = (synthetic_gut * synthetic_gut_time) + (polyester_string * polyester_string_time) + (hybrid_set * hybrid_set_time)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each phone\n    PHONE_PRICE = 600\n\n    # Define the number of phones John buys\n    num_kids = 2\n    num_wife = 1\n\n    # Calculate the total cost of the phones\n    total_cost = num_kids * PHONE_PRICE + num_wife * PHONE_PRICE\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of players Carlton's team has\n    carlton_players = 13\n\n    # Calculate the number of players Zeke's team has\n    zeke_players = carlton_players + 7\n\n    # Calculate the total number of players\n    total_players = carlton_players + zeke_players\n\n    # Display the total number of players\n    result = total_players\n    return result"}
{"output": "def solution():\n    \n    length = 15\n    width = 10\n    fence_length = length * width\n    fence_width = width\n    slats_per_foot = 2\n    total_slats = fence_length * fence_width * slats_per_foot\n    result = total_slats\n    return result"}
{"output": "def solution():\n    total_boxes = 12  # Mrs. Harrington bought 12 boxes of oranges\n    mom_boxes = 2  # Mrs. Harrington gave her mom 2 boxes of oranges each\n    sister_boxes = 2  # Mrs. Harrington gave her sister 2 boxes of oranges each\n    total_oranges = total_boxes * 20  # Each box contains 20 oranges\n\n    # Calculate the number of oranges Mrs. Harrington kept\n    oranges_kept = total_oranges / 4\n\n    # Calculate the number of oranges Mrs. Harrington sold\n    oranges_sold = total_oranges - oranges_kept\n    result = oranges_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the number of states in the USA\n    usa_states = (1/2) * 2 + 4\n\n    # Calculate the total number of states\n    total_states = usa_states + india_states\n\n    # Display the total number of states\n    result = total_states\n    return result"}
{"output": "def solution():\n    \n    dictionary_cost = 18\n    dinosaur_book_cost = 13\n    childrens_cookbook_cost = 8\n    total_cost = dictionary_cost + dinosaur_book_cost + childrens_cookbook_cost\n    savings = 14\n    hourly_rate = 5\n    hours_needed = total_cost / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    total_cherries = 60\n    richard_cherries = 30\n    robert_cherries = richard_cherries + 10\n    jerry_cherries = total_cherries - richard_cherries\n    difference = robert_cherries - jerry_cherries\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    gingerbread_sold = 10\n    apple_pie_sold = 15\n    saturday_sales = gingerbread_sold + 4\n    sunday_sales = saturday_sales + 5\n    gingerbread_price = 6\n    apple_pie_price = 15\n    total_sales = (gingerbread_sold * gingerbread_price) + (apple_pie_sold * apple_pie_price)\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of sunscreen needed in ounces\n    SUNSCREEN_PER_HOUR = 8\n\n    # Define the number of hours Pamela will be outside per day\n    HOURS_PER_DAY = 4\n\n    # Define the number of days Pamela will be vacating\n    DAYS = 8\n\n    # Calculate the total amount of sunscreen needed in ounces\n    total_sunscreen_needed = SUNSCREEN_PER_HOUR * HOURS_PER_DAY * DAYS\n\n    # Calculate the number of sunscreen bottles needed\n    sunscreen_bottles_needed = total_sunscreen_needed / SUNSCREEN_PER_HOUR\n\n    # Display the number of sunscreen bottles needed\n    result = sunscreen_bottles_needed\n    return result"}
{"output": "def solution():\n    \n    blue_car_price = 100\n    red_car_price = blue_car_price * 0.6\n    total_price = blue_car_price + red_car_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    emil_age_now = 19\n    emil_turns_24 = 24\n    dad_age_when_turns_24 = emil_turns_24 / 2\n    brother_age_when_turns_24 = emil_turns_24 * 2\n    dad_age_now = dad_age_when_turns_24 - emil_turns_24\n    brother_age_now = brother_age_when_turns_24 - emil_turns_24\n    sum_of_ages_now = dad_age_now + brother_age_now\n    result = sum_of_ages_now\n    return result"}
{"output": "def solution():\n    \n    mother_beads = 20\n    sister_beads = mother_beads + 10\n    friend_beads = 2 * mother_beads\n    total_beads = mother_beads + sister_beads + friend_beads\n    result = total_beads\n    return result"}
{"output": "def solution():\n    \n    thursday_catch = 3\n    friday_catch = 4 * thursday_catch\n    saturday_catch = friday_catch / 2\n    total_catch = thursday_catch + friday_catch + saturday_catch\n    servings = total_catch / 3\n    result = servings\n    return result"}
{"output": "def solution():\n    \n    total_students = 30\n    football_players = total_students * 0.2\n    remaining_students = total_students - football_players\n    cheerleaders_or_band = remaining_students * 0.25\n    students_leaving_early = total_students - football_players - cheerleaders_or_band\n    result = students_leaving_early\n    return result"}
{"output": "def solution():\n    \n    sophie_boots = 5\n    charlie_boots = sophie_boots * 5\n    total_boots = sophie_boots + charlie_boots\n    average_size = total_boots / 2\n    result = average_size\n    return result"}
{"output": "def solution():\n    bed_length = 111  # The flower bed is 111 feet long\n    flowering_plant_width = 12  # Pat's flowers grow 12 inches wide\n    flowering_plant_length = 1.5  # Pat needs to leave 1.5 feet between every plant\n    num_flowers = 17  # Pat already owns 17 flowers\n    cost_per_plant = 6  # Each flowering plant costs $6\n\n    # Calculate the total number of flowering plants Pat needs to fill up her flower bed\n    total_plants = (bed_length / flowering_plant_width) * num_flowers\n\n    # Calculate the total cost of the flowering plants\n    total_cost = total_plants * cost_per_plant\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    edgar_pretzels_per_day = 18\n    brother_pretzels_per_day = edgar_pretzels_per_day / 2\n    brother_weekly_pretzels = brother_pretzels_per_day * 7\n    result = brother_weekly_pretzels\n    return result"}
{"output": "def solution():\n    \n    num_baskets = 5\n    petunias_per_basket = 3\n    sweet_potato_vines_per_basket = 2\n    petunias_cost_per_basket = 3\n    sweet_potato_vines_cost_per_basket = 2.5\n    total_petunias_cost = num_baskets * petunias_per_basket * petunias_cost_per_basket\n    total_sweet_potato_vines_cost = num_baskets * sweet_potato_vines_per_basket * sweet_potato_vines_cost_per_basket\n    total_cost = total_petunias_cost + total_sweet_potato_vines_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of soil needed for each type of flower\n    SUNFLOWER_SOIL = 3\n    CARNATION_SOIL = 1.5\n\n    # Define the number of each type of flower they plant\n    sunflowers = 4\n    carnations = 10\n\n    # Calculate the total amount of soil needed\n    total_soil = 30\n\n    # Calculate the amount of soil needed for each type of flower\n    sunflower_soil = sunflowers * SUNFLOWER_SOIL\n    carnation_soil = carnations * CARNATION_SOIL\n\n    # Calculate the total amount of soil needed for all the flowers\n    total_soil_needed = sunflower_soil + carnation_soil\n\n    # Calculate the number of roses they can plant\n    roses = total_soil_needed // rose_soil\n\n    # Display the number of roses they can plant\n    result = roses\n    return result"}
{"output": "def solution():\n    monthly_income = 2000  # Jessica makes $2,000.00 a month\n    shoe_set_percentage = 0.25  # Jessica sets 25% of her paycheck aside to put towards fancy shoes\n    shoe_cost = 1000  # Each pair of shoes she buys costs $1,000.00\n    months_per_year = 12  # There are 12 months in a year\n\n    # Calculate the total cost of shoes Jessica can buy in a year\n    total_shoe_cost = monthly_income * shoe_set_percentage * months_per_year\n\n    # Calculate the number of shoes Jessica can buy in a year\n    num_shoes = total_shoe_cost / shoe_cost\n    result = num_shoes\n    return result"}
{"output": "def solution():\n    \n    # Define the rate at which Emily can peel and saute shrimp\n    peel_rate = 6\n    saute_rate = 30\n\n    # Calculate the time it takes Emily to peel and cook 90 shrimp\n    time = 90 / (peel_rate + saute_rate)\n\n    # Display the time it takes Emily to peel and cook 90 shrimp\n    result = time\n    return result"}
{"output": "def solution():\n    \n    low_temp = 2\n    high_temp = 3\n    low_hours = 3\n    high_hours = 4\n    off_hours = 2\n    final_temp = (low_temp * low_hours) + (high_temp * high_hours) - (off_hours * off_hours)\n    lower_temp = final_temp - (low_temp * low_hours)\n    result = lower_temp\n    return result"}
{"output": "def solution():\n    # Calculate the age of Bill's dad when he saw the Comet\n    dad_age = 30\n\n    # Calculate the age of Bill's father when he saw the Comet\n    father_age = dad_age / 3\n\n    # Calculate the age of Bill's comet when he was 30\n    comet_age = 3 * father_age\n\n    # Calculate the age of Bill when he saw the Comet for the first time\n    bill_age_1 = comet_age - dad_age\n    result = bill_age_1\n    return result"}
{"output": "def solution():\n    \n    electric_bill_per_month = 1\n    gas_bill_per_month = 1\n    church_per_month = 2\n    pest_lawn_service_per_month = 4\n    total_check_per_month = electric_bill_per_month + gas_bill_per_month + church_per_month + pest_lawn_service_per_month\n    total_checks_per_year = total_check_per_month * 12\n    result = total_checks_per_year\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of trips the first plane makes throughout each day\n    trips_first_plane = 44 / 2\n\n    # Calculate the number of flights the first plane takes to Greece\n    flights_first_plane = (3/4) * flights_first_plane\n\n    # Calculate the number of flights to Germany\n    flights_remaining = flights_first_plane - flights_first_plane\n\n    # Calculate the number of flights to France\n    flights_to_france = flights_remaining / 2\n\n    # Display the number of flights to France\n    result = flights_to_france\n    return result"}
{"output": "def solution():\n    \n    tobias_time = 20\n    chikote_time = tobias_time * 2\n    igneous_time = (tobias_time + chikote_time) / 2\n    total_time = (tobias_time + chikote_time + igneous_time) * 60\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of Adam's trousers\n    trouser_cost = 30\n\n    # Define the amount of money Adam's mother gave him\n    mother_money = 6\n\n    # Define the amount of money Adam's father gave him\n    father_money = 2 * mother_money\n\n    # Calculate the total amount of money Adam has to contribute\n    total_money = trouser_cost + mother_money + father_money\n\n    # Display the total amount of money Adam has to contribute\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define Akbar's age and Alessandro's age\n    akbar_age = 3\n    alessandro_age = 4\n\n    # Calculate Helene's age\n    helene_age = akbar_age * 2\n\n    # Calculate the total age of the children\n    total_age = 20\n\n    # Calculate the sum of their ages\n    sum_ages = akbar_age + alessandro_age + helene_age\n\n    # Calculate Wilfred's age\n    wilfred_age = total_age - sum_ages\n\n    # Display Wilfred's age\n    result = wilfred_age\n    return result"}
{"output": "def solution():\n    \n    neighbor_money = 500\n    online_money = 1500\n    donated_money = 3 * (neighbor_money + online_money)\n    total_money = neighbor_money + online_money + 200\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and cookies per plate\n    num_guests = 100\n    cookies_per_plate = 15\n\n    # Calculate the total number of cookies\n    total_cookies = num_guests * cookies_per_plate\n\n    # Calculate the number of cookies given to the church next door\n    cookies_given = total_cookies / 2\n\n    # Calculate the number of people in the church next door\n    num_people = total_cookies / cookies_given\n\n    # Display the number of people in the church next door\n    result = num_people\n    return result"}
{"output": "def solution():\n    \n    num_adults = 2\n    num_kids = 4\n    num_slices_per_adult = 2\n    num_slices_per_kid = num_kids * 2\n    total_slices = num_adults * num_slices_per_adult + num_kids * num_slices_per_kid\n    percent_per_adult = (num_adults / total_slices) * 100\n    result = percent_per_adult\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to check on inpatients\n    inpatient_time = 20\n\n    # Define the time it takes to check on appointments\n    appointment_time = 30\n\n    # Define the number of inpatients\n    num_inpatients = 9\n\n    # Calculate the total time it will take to check on appointments\n    total_appointment_time = num_appointments * appointment_time\n\n    # Calculate the total time it will take to do rounds\n    total_rounds_time = num_inpatients * inpatient_time\n\n    # Calculate the total time it will take to update his records\n    total_time = total_rounds_time + total_appointment_time\n\n    # Calculate the time left to update his records\n    time_left = 9 - total_time\n\n    # Convert the time left to hours\n    hours_left = time_left / 60\n\n    # Return the result\n    result = hours_left\n    return result"}
{"output": "def solution():\n    \n    batter_time = 20\n    bake_time = 30\n    cool_time = 2 * 60\n    frost_time = 10\n    total_cake_time = batter_time + bake_time + cool_time + frost_time\n    daily_time = total_cake_time / 60\n    result = daily_time\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of chocolate bars sold by Lisa and Peter\n    lisa_bars = 3.5 * 64\n    peter_bars = 4.5 * 64\n\n    # Calculate the number of chocolate bars in a box\n    bars_per_box = (lisa_bars + peter_bars) / 2\n\n    # Display the number of chocolate bars in a box\n    result = bars_per_box\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per session and per student\n    SESSION_COST = 25\n    STUDIENT_COST = 1.5\n\n    # Define the number of students in the dance studio\n    STUDIENTS = 10\n\n    # Define the number of days the dance studio is rented per week\n    DAYS_PER_WEEK = 3\n\n    # Calculate the total earnings per week\n    earnings_per_week = STUDIENTS * SESSION_COST * DAYS_PER_WEEK\n\n    # Calculate the total earnings per month\n    earnings_per_month = earnings_per_week * 4\n\n    # Display the total earnings per month\n    result = earnings_per_month\n    return result"}
{"output": "def solution():\n    \n    peter_boxes = 4\n    martha_boxes = 7\n    total_bars = 64 + 56\n    peter_bars_per_box = peter_boxes / peter_boxes\n    martha_bars_per_box = martha_boxes / martha_boxes\n    difference = peter_bars_per_box - martha_bars_per_box\n    result = difference\n    return result"}
{"output": "def solution():\n    population = 50  # The population of porcupines in the park is 50\n    female_population = (3/5) * population  # The number of female porcupines is 3/5 of the total population\n    babies_per_month = 4  # Each female porcupine gives birth to 4 babies every month\n    months_per_year = 12  # There are 12 months in a year\n\n    # Calculate the total number of babies in the park after a year\n    total_babies = babies_per_month * months_per_year\n\n    # Calculate the total number of porcupines in the park after a year\n    total_porcupines = population + total_babies\n    result = total_porcupines\n    return result"}
{"output": "def solution():\n    \n    pool_width = 14\n    pool_length = 25\n    pool_depth = 4\n    pool_volume = pool_width * pool_length * pool_depth\n    water_needed = pool_volume / 5.9\n    cost_per_gallon = 0.10\n    total_cost = water_needed * cost_per_gallon\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    red_sticks = 9\n    blue_sticks = red_sticks + 5\n    yellow_sticks = blue_sticks - 3\n    total_sticks = red_sticks + blue_sticks + yellow_sticks\n    result = total_sticks\n    return result"}
{"output": "def solution():\n    \n    matteo_speed = 55\n    matteo_time = 4\n    shandy_speed = 45\n    shandy_time = 10\n    matteo_distance = matteo_speed * matteo_time\n    shandy_distance = shandy_speed * shandy_time\n    difference = shandy_distance - matteo_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    total_students = 3000  # Brook Hills High School currently enrolls 3000 students\n    over_16 = total_students / 2  # Half of the students are over 16 years old\n    male_over_16 = over_16 / 4  # One-fourth of the over 16 years old students are male\n    remaining_over_16 = total_students - over_16  # The remaining students are over 16 years old\n    under_16 = remaining_over_16 / 2  # The remaining half of the students are under 16 years old\n    male_under_16 = remaining_under_16 / 2  # One-half of the students under 16 are male\n\n    # Calculate the total number of female students\n    total_female = over_16 + male_over_16 + male_under_16\n    result = total_female\n    return result"}
{"output": "def solution():\n    \n    bethany_laps = 10\n    trey_laps = bethany_laps + 4\n    shaelyn_laps = trey_laps / 2\n    quinn_laps = shaelyn_laps - 2\n    difference = bethany_laps - quinn_laps\n    result = difference\n    return result"}
{"output": "def solution():\n    tank_capacity = 18000  # The tank has a capacity of 18000 gallons\n    wanda_capacity = tank_capacity / 4  # Wanda filled 1/4 of the tank's capacity with water\n    wanda_pumped = wanda_capacity * (2/4)  # Wanda pumped 2/3 of the amount of water she pumped on the first day\n    ms.b_pumped = wanda_pumped * (3/4)  # Ms. B pumped 3/4 as much water as Wanda pumped\n    total_pumped = wanda_pumped + ms.b_pumped  # Calculate the total amount of water pumped in two days\n    result = total_pumped\n    return result"}
{"output": "def solution():\n    \n    # Define the total capacity of the power bank\n    total_capacity = 0\n\n    # Calculate the capacity lost during the first 5 hours\n    lost_capacity = total_capacity * 0.9\n\n    # Calculate the capacity lost during the next 3 hours\n    lost_capacity = total_capacity * 0.7\n\n    # Calculate the remaining capacity after the first 5 hours\n    remaining_capacity = total_capacity - lost_capacity\n\n    # Calculate the charge of the power bank\n    charge = remaining_capacity * 0.28\n\n    # Display the charge of the power bank\n    result = charge\n    return result"}
{"output": "def solution():\n    wage_rate = 10\n    tip_rate = 15\n    car_cost = 10000\n    car_savings_percentage = 0.2\n    hours_per_week = 40\n\n    # Calculate the total amount earned from wages\n    wages_earnings = wage_rate * hours_per_week\n\n    # Calculate the total amount earned from tips\n    tips_earnings = tip_rate * hours_per_week\n\n    # Calculate the total amount earned for the down payment\n    total_earnings = wages_earnings + tips_earnings\n\n    # Calculate the number of weeks needed to save up the down payment\n    weeks_to_save = total_earnings / car_savings_percentage\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    PEACH_PRICE = 0.5\n    PEAR_PRICE = 0.75\n    APPLE_PRICE = 0.75\n    KIWI_PRICE = 1\n    PLUM_PRICE = 0.25\n\n    # Define the number of each item purchased\n    peaches = 3\n    pears = 4\n    kiwis = 2\n    apples = 5\n\n    # Calculate the total cost of each item before tax\n    peach_cost = peaches * PEACH_PRICE\n    pear_cost = pears * PEAR_PRICE\n    apple_cost = apples * APPLE_PRICE\n    kiwis_cost = kiwis * KIWI_PRICE\n    plum_cost = 10 - peach_cost - pear_cost - kiwis_cost\n\n    # Calculate the maximum number of plums Jamaar can buy\n    num_plums = plum_cost // PLUM_PRICE\n\n    # Display the maximum number of plum"}
{"output": "def solution():\n    num_packs = 15\n    num_pieces_per_pack = 60\n    num_packs_kept = 2\n    num_friends = 10\n\n    # Calculate the total number of sweets in the box\n    total_sweets = num_packs * num_pieces_per_pack\n\n    # Calculate the number of sweets that Anne kept\n    sweets_kept = num_packs_kept * num_pieces_per_pack\n\n    # Calculate the number of sweets that Anne gave to her friends\n    sweets_given = total_sweets - sweets_kept\n\n    # Calculate the number of sweets that each friend received\n    sweets_per_friend = sweets_given / num_friends\n    result = sweets_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of carrots\n    initial_price = 120\n\n    # Calculate the new price of carrots after 3 years\n    new_price = initial_price + (initial_price * 0.05)\n\n    # Round the result to the nearest integer\n    result = round(new_price)\n    return result"}
{"output": "def solution():\n    \n    total_pictures = 72\n    albums = 8\n    pics_per_album = total_pictures / albums\n    selfies_albums = 3\n    portraits_albums = 2\n    total_selfies = pics_per_album * selfies_albums\n    portraits = pics_per_album * portraits_albums\n    result = total_selfies + portraits\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes James to read 3 pages\n    time_to_read_3_pages = 10\n\n    # Define the number of pages James reads\n    pages_read = 18\n\n    # Calculate the time it takes James to read the remaining pages\n    time_remaining = pages_read / time_to_read_3_pages\n\n    # Calculate the total time James spends reading\n    total_time = time_remaining + 10\n\n    # Display the total time James spends reading\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of guests\n    initial_guests = 100\n\n    # Calculate the number of guests checked in during early checkout\n    early_checkout_guests = 24\n\n    # Calculate the number of guests checked in during late checkout\n    late_checkout_guests = 15\n\n    # Calculate the number of guests checked in during afternoon\n    afternoon_guests = 2 * late_checkout_guests\n\n    # Calculate the total number of guests checked in\n    total_guests = initial_guests - early_checkout_guests - late_checkout_guests + afternoon_guests + 7\n\n    # Display the total number of guests\n    result = total_guests\n    return result"}
{"output": "def solution():\n    \n    wednesday_bananas = 4\n    thursday_bananas = 6\n    friday_bananas = 3 * wednesday_bananas\n    total_bananas = wednesday_bananas + thursday_bananas + friday_bananas\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of items in the quiz\n    total_items = 60\n\n    # Calculate the number of easy questions\n    easy_questions = total_items * 0.4\n\n    # Calculate the number of average and difficult questions\n    difficult_questions = total_items - easy_questions\n\n    # Calculate the number of easy and difficult questions\n    easy_and_difficult = easy_questions / 2\n\n    # Calculate the total number of points Aries needs to get\n    easy_points = easy_questions * 0.75\n    difficult_points = difficult_questions * 0.75\n\n    # Calculate the total number of points Aries needs to get\n    total_points = easy_points + difficult_points\n\n    # return the result\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Let x be the number of small stuffed animals sold today\n    # Then, the price of one large stuffed animal is 3x\n    # The total earnings is x + 2x = 3x\n    # We know that the total earnings is $120\n    # So, we can write the equation:\n    # x + 3x = 120\n    # Simplifying the equation, we get:\n    # 3x = 120\n    # x = 20\n    # Therefore, Teresa sold 20 small stuffed animals\n\n    # Display the number of small stuffed animals sold\n    result = 20\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sandwiches eaten per day by each family\n    MAN_SANDWICHES = 5\n    WIFE_SANDWICHES = 4\n    SON_SANDWICHES = 2\n\n    # Calculate the total number of sandwiches eaten in one week\n    total_sandwiches = (MAN_SANDWICHES + WIFE_SANDWICHES + SON_SANDWICHES) * 7\n\n    # Display the total number of sandwiches eaten\n    result = total_sandwiches\n    return result"}
{"output": "def solution():\n    \n    cookies_sold = 80\n    cookies_price = 1\n    cupcakes_sold = 60\n    cupcakes_price = 4\n    sisters_given = 2\n    sisters_earnings = sisters_given * 10\n    total_earnings = cookies_sold * cookies_price + cupcakes_sold * cupcakes_price\n    money_left = total_earnings - sisters_earnings\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_eggs = 100\n    eggs_found_by_smith = 30 * 2\n    eggs_found_by_friends = total_eggs - eggs_found_by_smith - 10\n    result = eggs_found_by_friends\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of ore each dwarf can mine per day\n    dwarf_ore_per_day = 12\n\n    # Calculate the amount of ore each dwarf can mine with iron pickaxe\n    iron_ore_per_day = dwarf_ore_per_day * 2\n\n    # Calculate the amount of ore each dwarf can mine with steel pickaxe\n    steel_ore_per_day = iron_ore_per_day * 1.5\n\n    # Calculate the total amount of ore each dwarf can mine in a month\n    dwarf_ore_per_month = dwarf_ore_per_day * 30\n    iron_ore_per_month = iron_ore_per_day * 30\n    steel_ore_per_month = steel_ore_per_day * 30\n\n    # Calculate the total amount of ore 40 dwarves with steel pickaxes mine in a month\n    total_ore_per_month = dwarf_ore_"}
{"output": "def solution():\n    \n    package1_sandwiches = 2\n    package1_price = 3\n    package2_sandwiches = 4\n    package2_price = 6\n    package3_sandwiches = 8\n    total_price = package1_sandwiches * package1_price + package2_sandwiches * package2_price + package3_sandwiches * package3_price\n    price_with_8_sandwiches = total_price / 8\n    result = price_with_8_sandwiches\n    return result"}
{"output": "def solution():\n    \n    bedroom_set_cost = 3000\n    old_bedroom_cost = 1000\n    total_cost = bedroom_set_cost - old_bedroom_cost\n    monthly_cost = total_cost * 0.1\n    result = monthly_cost\n    return result"}
{"output": "def solution():\n    \n    red_balloons = 25\n    green_balloons = 7\n    yellow_balloons = 12\n    red_burst = red_balloons * 0.4\n    yellow_burst = yellow_balloons * 0.5\n    blue_balloons = 8\n    blue_added = blue_balloons * 0.75\n    total_balloons = red_balloons + green_balloons + yellow_balloons + blue_added\n    result = total_balloons\n    return result"}
{"output": "def solution():\n    \n    normal_teacher_chance = 0.4\n    normal_teacher_count = 1\n    personal_teacher_chance = 0.2\n    normal_teacher_count = 1\n    personal_teacher_count = 1\n    total_teacher_count = normal_teacher_count * normal_teacher_count\n    total_personal_teacher_count = personal_teacher_count * total_teacher_count\n    total_homework_chance = total_teacher_count + total_personal_teacher_count\n    percent_to_turn_in_homework = (normal_teacher_count + total_homework_chance) / total_teacher_count * 100\n    result = percent_to_turn_in_homework\n    return result"}
{"output": "def solution():\n    \n    total_seats = 6000\n    graduated_seats = 950\n    faculty_attending_seats = 300\n    total_graduated_seats = graduated_seats + faculty_attending_seats\n    tickets_per_graduate = total_graduated_seats / 2\n    result = tickets_per_graduate\n    return result"}
{"output": "def solution():\n    \n    # Define the number of large jelly beans Grandpa can eat\n    large_beans = 75\n\n    # Calculate the number of medium-sized jelly beans Grandpa can eat\n    medium_beans = large_beans * 2\n\n    # Calculate the number of small jelly beans Grandpa can eat\n    small_beans = medium_beans - 3\n\n    # Display the number of small jelly beans Grandpa can eat\n    result = small_beans\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 6\n    days_listening = 3\n    total_hours = hours_per_day * days_listening\n    daily_pay = 15\n    parking_pay = 3\n    total_pay = daily_pay + parking_pay\n    pay_per_hour = total_pay / total_hours\n    result = pay_per_hour\n    return result"}
{"output": "def solution():\n    starting_amount = 200\n    num_books = 3\n    book_price = 16\n\n    num_pencils = 3\n    pencil_price = 6\n\n    # Calculate the total cost of all books\n    total_book_cost = num_books * book_price\n\n    # Calculate the total cost of all pencils\n    total_pencil_cost = num_pencils * pencil_price\n\n    # Calculate the total cost of all items\n    total_cost = total_book_cost + total_pencil_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    driveway_width = 24\n    bottle_size = 3\n    bottles_needed = driveway_width // bottle_size\n    time_per_bottle = 5\n    total_time = bottles_needed * time_per_bottle\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    apples_per_box = 40\n    boxes_of_apples = 2\n    apples_per_pack = 8\n    total_apples = apples_per_box * boxes_of_apples\n    packs_of_apples = total_apples // apples_per_pack\n    result = packs_of_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of Parmesan and Mozzarella cheese\n    PARMESAN_PRICE = 11\n    MOZZARLA_PRICE = 6\n\n    # Define the amount of each item purchased\n    parmesan_pounds = 2\n    mozzarella_pounds = 3\n\n    # Calculate the total cost of the meat\n    total_cost = (parmesan_pounds * PARMESAN_PRICE) + (mozzarella_pounds * MOZZARLA_PRICE)\n\n    # Calculate the amount of money left after purchasing the meat\n    money_left = 50 - total_cost\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    # Calculate Jim's total income before college\n    income_before_college = 25 * 4\n\n    # Calculate Jim's total income after college tripled his income\n    income_after_college = income_before_college * 3\n\n    # Calculate the time it would take Jim to earn the same amount of money as loans\n    time_to_earn_loans = income_after_college / 50000\n\n    result = time_to_earn_loans\n    return result"}
{"output": "def solution():\n    \n    bed_length = 6\n    bed_width = 8\n    bed_area = bed_length * bed_width\n    total_area = 2 * (bed_length + bed_width)\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    monday_letters = 425\n    tuesday_letters = (1/5) * monday_letters + 17\n    wednesday_letters = 2 * tuesday_letters + 5\n    total_letters = monday_letters + tuesday_letters + wednesday_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the catering\n    chicken_salad_cost = 10 * 6.5  # 10 people want chicken salad at $6.50 per person\n    pasta_salad_cost = 6 * 6  # 6 people want pasta salad at $6 per person\n    total_cost = chicken_salad_cost + pasta_salad_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    first_race_loss = 5\n    second_race_loss = 2 * first_race_loss + 1\n    third_race_loss = 1.5 * second_race_loss\n    total_loss = first_race_loss + second_race_loss + third_race_loss\n    average_loss = total_loss / 3\n    result = average_loss\n    return result"}
{"output": "def solution():\n    num_countries = 26\n    num_cities_per_country = 5\n    num_people_per_city = 1000\n\n    # Calculate the total number of people in all cities\n    total_people_in_cities = num_cities_per_country * num_people_per_city\n\n    # Calculate the total number of people in South America\n    total_people_in_south_america = total_people_in_cities * num_countries\n    result = total_people_in_south_america\n    return result"}
{"output": "def solution():\n    \n    # Calculate Xavier's height\n    xavier_height = 4 * 12 + 3\n\n    # Calculate Cole's height\n    cole_height = 50\n\n    # Calculate the difference between Cole and Xavier's height\n    height_difference = cole_height - xavier_height\n\n    # Display the height difference\n    result = height_difference\n    return result"}
{"output": "def solution():\n    \n    total_amount = 1920\n    second_taken = total_amount - 80\n    third_taken = 2 * second_taken\n    first_taken = second_taken / 3\n    result = first_taken\n    return result"}
{"output": "def solution():\n    \n    painters = 4\n    daily_hours = 3/8\n    weeks = 3\n    total_hours = painters * daily_hours * weeks\n    hours_per_paint = total_hours / painters\n    result = hours_per_paint\n    return result"}
{"output": "def solution():\n    \n    total_balls = 19\n    second_set_balls = total_balls / 2\n    first_set_balls = second_set_balls + 4\n    result = first_set_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the car and the depreciation rate\n    initial_price = 20000\n    depreciation_rate = 0.2\n\n    # Calculate the price of the car after the depreciation\n    price_after_depreciation = initial_price * (1 - depreciation_rate)\n\n    # Calculate the price of the car in the year 2010\n    price_in_year_2010 = price_after_depreciation * 11\n\n    # Display the price of the car in the year 2010\n    result = price_in_year_2010\n    return result"}
{"output": "def solution():\n    \n    total_books = 50\n    english_books = total_books / 2\n    german_books = total_books * 0.1\n    spanish_books = total_books - english_books - german_books\n    result = spanish_books\n    return result"}
{"output": "def solution():\n    \n    # Define the distance from San Diego to New York City\n    distance_from_diego_to_nyc = 1955\n\n    # Define the distance Bernice drove each day\n    distance_per_day = distance_from_diego_to_nyc + 325\n\n    # Calculate the total distance Bernice drove in 4 days\n    total_distance_driven = distance_per_day * 4\n\n    # Calculate the distance Bernice still needs to drive\n    distance_remaining = total_distance_driven - 1955\n\n    # Display the distance Bernice still needs to drive\n    result = distance_remaining\n    return result"}
{"output": "def solution():\n    \n    cups_per_day = 8\n    cups_per_gallon = 16\n    days = 30\n    total_cups = cups_per_day * days\n    total_gallons = total_cups / cups_per_gallon\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 120\n\n    # Calculate the number of people who boarded at the first stop\n    first_stop_people = initial_people + 20\n\n    # Calculate the number of people who boarded at the second stop\n    second_stop_people = 2 * 50\n\n    # Calculate the number of people who descended at the third station\n    third_stop_people = 80\n\n    # Calculate the total number of people on the train at the final stop\n    final_people = initial_people + first_stop_people + second_stop_people + third_stop_people\n\n    # return the result\n    result = final_people\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    TANK_TOP_PRICE = 10\n    SHORTS_PRICE = TANK_TOP_PRICE + 5\n    TENNIS_SHOES_PRICE = 48 / 2\n    SOCKS_PRICE = 8\n\n    # Calculate the total cost of each item\n    tank_top_cost = TANK_TOP_PRICE\n    shorts_cost = shorts_cost + SHORTS_PRICE\n    tennis_shoes_cost = TENNIS_SHOES_PRICE / 2\n    socks_cost = TENNIS_SHOES_PRICE - 2\n\n    # Calculate the total cost of all items\n    total_cost = tank_top_cost + shorts_cost + tennis_shoes_cost + socks_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total area of the kitchen floor and the cost of each tile\n    total_area = 200\n    tile_cost = 12\n\n    # Calculate the number of tiles needed\n    tiles_needed = total_area / 2\n\n    # Calculate the total cost of the tiles needed\n    total_cost = tiles_needed * tile_cost\n\n    # Return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    normal_cost_per_month = 120\n    accident_percent_increase = 60\n    increase_amount = normal_cost_per_month * (accident_percent_increase / 100)\n    total_cost_per_month = normal_cost_per_month + increase_amount\n    total_cost_per_year = total_cost_per_month * 12\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    \n    twin_beds_per_week = 4\n    king_size_beds_per_week = 1\n    weeks_per_year = 52\n    twin_sets_per_week = twin_beds_per_week * weeks_per_year\n    king_sets_per_week = king_size_beds_per_week * weeks_per_year\n    total_twin_sets = twin_sets_per_week * weeks_per_year\n    total_king_sets = king_sets_per_week * weeks_per_year\n    total_loads = total_twin_sets + total_king_sets\n    result = total_loads\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies Jill and her friends watch each day\n    saturday_movies = 4\n    sunday_movies = saturday_movies / 2\n\n    # Calculate the total number of movies Jill and her friends can watch in 4 weeks\n    total_movies = (saturday_movies + sunday_movies) * 4\n\n    # Display the total number of movies Jill and her friends can watch in 4 weeks\n    result = total_movies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 100\n\n    # Calculate the number of stickers collected last year\n    last_year_stickers = 50\n\n    # Calculate the number of stickers collected this year\n    this_year_stickers = 2 * last_year_stickers\n\n    # Calculate the total number of stickers collected\n    total_stickers = initial_stickers + last_year_stickers + this_year_stickers\n\n    # return the result\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    num_cats = 3\n    cat_food_per_day = 60\n    total_cat_food = 720\n\n    # Calculate the total amount of cat food needed per day\n    total_cat_food_per_day = num_cats * cat_food_per_day\n\n    # Calculate the number of days the cat food will last\n    num_days = total_cat_food / total_cat_food_per_day\n    result = num_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pizzas and slices per pizza\n    pizzas = 4\n    slices_per_pizza = 8\n\n    # Calculate the total number of slices\n    total_slices = pizzas * slices_per_pizza\n\n    # Calculate the number of slices Becky ate\n    becky_slices = 10\n\n    # Calculate the number of slices Jake ate\n    jake_slices = becky_slices - 3\n\n    # Calculate the number of slices Silvia ate\n    silvia_slices = jake_slices * 2\n\n    # Calculate the total number of slices eaten\n    total_slices = becky_slices + jake_slices + silvia_slices\n\n    # Display the total number of slices eaten\n    result = total_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the meal\n    meal_length = 98\n\n    # Calculate the length of Donovan's part\n    donovan_length = meal_length - 18\n\n    # Calculate the length of Betsy's part\n    betsy_length = donovan_length + 18\n\n    # Display the length of Betsy's part\n    result = betsy_length\n    return result"}
{"output": "def solution():\n    \n    cast_cost = 200\n    visit_time = 30\n    visit_cost = cast_cost + visit_time * 60\n    painkiller_cost = 4 * 30\n    parking_cost = 6 * 2\n    total_cost = visit_cost + painkiller_cost + parking_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_emails_per_day = 80\n    percent_no_response = 0.2\n    num_days_per_week = 5\n\n    # Calculate the total number of emails James gets in a week\n    total_emails_per_week = num_emails_per_day * num_days_per_week\n\n    # Calculate the number of emails James doesn't require any response\n    num_no_response_emails = total_emails_per_week * percent_no_response\n\n    # Calculate the number of emails James responds to in a week\n    num_responded_emails = total_emails_per_week - num_no_response_emails\n    result = num_responded_emails\n    return result"}
{"output": "def solution():\n    \n    monday_visited = 32\n    tuesday_visited = 2 * monday_visited\n    wednesday_visited = 3 * tuesday_visited\n    thursday_visited = 30\n    friday_visited = 25\n    total_visited = monday_visited + tuesday_visited + wednesday_visited + thursday_visited + friday_visited\n    result = total_visited\n    return result"}
{"output": "def solution():\n    \n    first_three_tests_score = 100\n    fourth_tests_score = 80\n    total_score = first_three_tests_score + fourth_tests_score\n    average_score = total_score / 4\n    result = average_score\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pizzas\n    initial_pizzas = 20\n\n    # Calculate the number of pizzas eaten by the glee club\n    glee_club_pizzas = initial_pizzas * 0.7\n\n    # Calculate the number of pizzas ordered by the football team\n    football_pizzas = 2 * initial_pizzas\n\n    # Calculate the number of pizzas eaten by the football team\n    football_team_pizzas = football_pizzas * 0.8\n\n    # Calculate the number of pizzas left\n    pizzas_left = initial_pizzas - glee_club_pizzas - football_team_pizzas\n\n    # Display the number of pizzas left\n    result = pizzas_left\n    return result"}
{"output": "def solution():\n    num_small_coupons = 700\n    small_coupon_price = 5\n\n    num_big_coupons = num_small_coupons * 2\n    big_coupon_price = 15\n\n    # Calculate the total cost of all small coupons\n    total_small_coupon_cost = num_small_coupons * small_coupon_price\n\n    # Calculate the total cost of all big coupons\n    total_big_coupon_cost = num_big_coupons * big_coupon_price\n\n    # Calculate the total cost of all coupons\n    total_coupon_cost = total_small_coupon_cost + total_big_coupon_cost\n    result = total_coupon_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of meatballs in each sub sandwich\n    MEATBALL_PER_SANDWICH = 4\n\n    # Calculate the number of meatballs ordered by Sidney\n    sidney_meatballs = 10 - 3\n\n    # Calculate the total number of meatballs ordered\n    total_meatballs = sidney_meatballs + 4\n\n    # Calculate the number of meatballs eaten by Mark\n    mark_meatballs = 4\n\n    # Calculate the number of meatballs remaining\n    remaining_meatballs = total_meatballs - mark_meatballs\n\n    # Display the number of meatballs remaining\n    result = remaining_meatballs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trucks and tons of fertiliser per truck\n    NUM_TRUCKS = 20\n    TONS_PER_TRUCK = 20\n\n    # Calculate the total number of tons of fertiliser\n    total_tons = NUM_TRUCKS * TONS_PER_TRUCK\n\n    # Calculate the number of lorries that were not delivering the fertilisers\n    lorries_not_delivered = total_tons * 0.25\n\n    # Calculate the total number of tons of fertiliser\n    total_tons = total_tons + lorries_not_delivered\n\n    # Display the total number of tons of fertiliser\n    result = total_tons\n    return result"}
{"output": "def solution():\n    \n    croissants_per_dozen = 12\n    dozens_of_croissants = 6\n    pounds_of_butter = croissants_per_dozen * dozens_of_croissants\n    pounds_of_butter_with_promotion = pounds_of_butter / 2\n    cost_per_pound = 4.00\n    total_cost = pounds_of_butter_with_promotion * cost_per_pound\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    party_cost = 125 + (20*6)\n    classmates = 25\n    girls = 7\n    family_members = 13\n    total_members = classmates + girls + family_members\n    total_cost = party_cost + total_members\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money each person had\n    initial_money = 60\n\n    # Calculate the amount of money Maggie spent\n    maggie_money = initial_money * 0.25\n\n    # Calculate the amount of money Riza spent\n    riza_money = initial_money * (1/3)\n\n    # Calculate the total amount of money they have left\n    total_money = initial_money - maggie_money - riza_money\n\n    # Display the total amount of money they have left\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    total_bananas = 315\n    first_monkey_bananas = 10\n    second_monkey_bananas = first_monkey_bananas + 4\n    third_monkey_bananas = total_bananas - first_monkey_bananas - second_monkey_bananas\n    result = third_monkey_bananas\n    return result"}
{"output": "def solution():\n    \n    initial_pieces = 500\n    finished_pieces = initial_pieces / 2\n    remaining_pieces = 500\n    total_pieces = finished_pieces + remaining_pieces\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    roses_bought = 15\n    cost_per_dozen = 2\n    cost_per_dozen = 15\n    total_cost = (roses_bought * cost_per_dozen) + (cost_per_dozen * 12)\n    amount_paid = 5 * 5\n    change = amount_paid - total_cost\n    quarters = change // 25\n    result = quarters\n    return result"}
{"output": "def solution():\n    \n    milkshake_sales = 6 * 5.5\n    burger_platter_sales = 9 * 11\n    soda_sales = 20 * 1.5\n    total_sales = milkshake_sales + burger_platter_sales + soda_sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    first_train_time = 10\n    second_train_time = first_train_time / 6\n    third_train_time = second_train_time / 4\n    total_time = first_train_time + second_train_time + third_train_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    toothpicks_needed = 200\n    toothpicks_saved_per_week = 10\n    weeks_saved = 12\n    total_toothpicks_saved = toothpicks_saved_per_week * weeks_saved\n    remaining_toothpicks = toothpicks_needed - total_toothpicks_saved\n    weeks_needed = remaining_toothpicks / toothpicks_saved_per_week\n    result = weeks_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the watch\n    original_price = 2000\n\n    # Calculate the price Mr. Roger bought\n    roger_price = original_price * 0.75\n\n    # Calculate the price Mr. Roger sold\n    friend_price = original_price * 0.120\n\n    # Calculate the discount\n    discount = roger_price - friend_price\n\n    # Calculate the percentage discount\n    percent_discount = (discount / original_price) * 100\n\n    # Display the percentage discount\n    result = percent_discount\n    return result"}
{"output": "def solution():\n    \n    springs_per_hour = 6\n    hours = 4\n    jellyfish_per_hour = springs_per_hour * hours\n    total_jellyfish = jellyfish_per_hour * hours\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    binkie_score = 90\n    frankie_score = 2 * binkie_score + 15\n    result = frankie_score\n    return result"}
{"output": "def solution():\n    \n    # Define James' home distance and speed\n    HOME_DISTANCE = 4\n    WALK_SPEED = 4\n\n    # Calculate the distance James walked to the store\n    distance_to_store = HOME_DISTANCE / 2\n\n    # Calculate the time it took James to walk to the store\n    time_to_store = distance_to_store / WALK_SPEED\n\n    # Display the time it took James to reach the store\n    result = time_to_store\n    return result"}
{"output": "def solution():\n    cost_per_banana = 0.8\n    cost_per_bunch = 3.0\n    num_bunches = 10\n    bananas_per_bunch = 4\n\n    # Calculate the total cost of buying bananas in bunches individually\n    total_bananas_individual = num_bunches * bananas_per_bunch\n\n    # Calculate the total cost of buying bananas in bunches\n    total_cost_individual = total_bananas_individual * cost_per_banana\n\n    # Calculate the amount saved by buying bananas in bunches instead of individually\n    amount_saved = total_cost_individual - cost_per_bunch\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    total_fence = 100\n    harry_fence = (total_fence + 60) / 2\n    sam_fence = harry_fence - 60\n    result = sam_fence\n    return result"}
{"output": "def solution():\n    \n    # Calculate the growth rate of the crocodile in inches per year\n    growth_rate = 8 / 4\n\n    # Calculate the growth in 13 years\n    growth_in_13_years = growth_rate * 13\n\n    # Display the growth in 13 years\n    result = growth_in_13_years\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of bike\n    MTB_PRICE = 500\n    BMX_PRICE = 0.5 * MTB_PRICE\n    TREKING_PRICE = 450\n\n    # Calculate the number of bikes sold for each type\n    trekking_bikes = 300 / 2\n    bMX_bikes = int(trekking_bikes * 0.15)\n    mib_bikes = 300 - trekking_bikes - bMX_bikes\n\n    # Calculate the price of each type of bike\n    mib_price = MTB_PRICE + BMX_PRICE\n\n    # Calculate the total revenue from selling all the bikes\n    total_revenue = trekking_bikes * TREKING_PRICE + bMX_bikes * BMX_PRICE\n\n    # Calculate the revenue from selling all the bikes\n    revenue = total_revenue - mib_bikes\n\n    # Display the revenue\n    result"}
{"output": "def solution():\n    bales_per_hour_farmer = 5\n    bales_per_hour_truck = 3\n    hours_in_day = 6\n\n    # Calculate the total number of bales made by the farmer in 6 hours\n    total_bales_made = bales_per_hour_farmer * hours_in_day\n\n    # Calculate the total number of bales picked up by the truck in 6 hours\n    total_bales_picked_up = bales_per_hour_truck * hours_in_day\n\n    # Calculate the total number of bales left in the field\n    total_bales_left = total_bales_made - total_bales_picked_up\n    result = total_bales_left\n    return result"}
{"output": "def solution():\n    \n    periods_per_day = 6\n    extra_classes = 2\n    minutes_per_class = 40\n    days_per_week = 5\n    total_minutes_per_week = periods_per_day * minutes_per_class * days_per_week\n    extra_time_per_day = total_minutes_per_week / 16\n    extra_time_per_weekday = extra_time_per_day * 2\n    total_extra_time_per_weekday = extra_time_per_day * days_per_weekday\n    total_time_per_week = total_minutes_per_weekday + total_extra_time_per_weekday\n    hours_per_week = total_time_per_weekday / 60\n    result = hours_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the starting height of the bouncy ball\n    starting_height = 24 * 3\n\n    # Calculate the height of the first bounce\n    first_bounce_height = starting_height * 2/3\n\n    # Calculate the height of the second bounce\n    second_bounce_height = first_bounce_height - first_bounce_height\n\n    # Display the height of the second bounce\n    result = second_bounce_height\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the first child in inches\n    child1_height = 6 * 12\n\n    # Define the height of the second child in inches\n    child2_height = child1_height + 2\n\n    # Define the height of the third child in inches\n    child3_height = child2_height - 5\n\n    # Define the height of the fourth child in inches\n    child4_height = child3_height + 3\n\n    # Display the height of the fourth child in inches\n    result = child4_height\n    return result"}
{"output": "def solution():\n    \n    apples_per_bag = 10\n    total_apples_sold = 2000\n    bags_sold = total_apples_sold / apples_per_bag\n    price_per_bag = 5\n    total_earnings = bags_sold * price_per_bag\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of meat on the triceratops after the Tyrannosaurus rex ate\n    initial_meat = 0\n\n    # Calculate the amount of meat on the triceratops after the Tyrannosaurus rex ate\n    remaining_meat = initial_meat / 2\n\n    # Calculate the amount of meat on the pack of velociraptors scavenged\n    scavenged_meat = remaining_meat / 2\n\n    # Calculate the total amount of meat on the triceratops before the T-Rex ate\n    total_meat = remaining_meat + scavenged_meat\n\n    # Return the result\n    result = total_meat\n    return result"}
{"output": "def solution():\n    \n    north_wall_area = 10 * 8\n    east_wall_area = 5 * 8\n    area = north_wall_area + east_wall_area\n    gallon_coverage = 20\n    cost_per_gallon = 12\n    total_area = area * gallon_coverage\n    total_cost = total_area * cost_per_gallon\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sodas\n    initial_sodas = 12\n\n    # Shook 3 sodas\n    shaken_sodas = 3\n\n    # Unshaken sodas\n    unshaken_sodas = 1\n\n    # Ellen's brother took 1 of the shaken sodas and 2 of the unshaken sodas\n    brother_sodas = 1 + 2\n\n    # Calculate the total number of sodas\n    total_sodas = initial_sodas + shaken_sodas + unshaken_sodas\n\n    # Calculate the likelihood of Ellen's friend gets sprayed with soda\n    friend_sodas = total_sodas - brother_sodas - shaken_sodas\n    friend_percentage = (friend_sodas / total_sodas) * 100\n\n    # Display the percentage of sodas sprayed with soda\n    result = friend_percentage\n    return result"}
{"output": "def solution():\n    \n    train1_speed = 60\n    train2_speed = train1_speed / 2\n    time = 3\n    distance_train1 = train1_speed * time\n    distance_train2 = train2_speed * time\n    total_distance = distance_train1 + distance_train2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Billy can help per day\n    HOURS_PER_DAY = 3\n\n    # Define the number of people Billy can help per hour\n    PEOPLE_PER_HOUR = 2\n\n    # Define the number of days between March 1st and April 19th off\n    days_1st_april_off = 31 - days_1st_april_off\n\n    # Calculate the number of people Billy can help in one day\n    people_per_day = PEOPLE_PER_HOUR * HOURS_PER_DAY\n\n    # Calculate the number of days between March 1st and April 19th off\n    days_april_off = days_1st_april_off / 0.2\n\n    # Calculate the total number of people Billy can help\n    total_people = days_april_off * people_per_day\n\n    # Display the total number of people Billy can help\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars and buses\n    num_cars = 20\n    num_buses = 12\n\n    # Define the number of people each car carried\n    car_capacity = 3\n\n    # Calculate the total number of people on the church\n    total_people = (num_cars * car_capacity) + (num_buses * 35)\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define Mike's age\n    mike_age = 24\n\n    # Calculate Martha's age\n    martha_age = mike_age - 4\n\n    # Calculate Jeff's age\n    jeff_age = martha_age + 10\n\n    # Display Jeff's age\n    result = jeff_age\n    return result"}
{"output": "def solution():\n    \n    biggest_slide_length = 300\n    biggest_slide_speed = 60\n    biggest_slide_time = biggest_slide_length / biggest_slide_speed\n    second_slide_length = 240\n    second_slide_speed = 80\n    second_slide_time = second_slide_length / second_slide_speed\n    time_difference = biggest_slide_time - second_slide_time\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    lunch_time = 30\n    break_time = 15\n    num_days = 5\n    total_lunch_time = lunch_time * num_days\n    total_break_time = break_time * num_days\n    total_time = total_lunch_time + total_break_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_miles = 52\n    amber_miles = 8\n    micah_miles = 3.5 * amber_miles\n    ahito_miles = total_miles - amber_miles - micah_miles\n    result = ahito_miles\n    return result"}
{"output": "def solution():\n    merchandise_cost = 85.00  # Sheila charged $85.00 worth of merchandise on her credit card\n    item_cost = 15.00  # Sheila returned one item that cost $15.00\n    frying_pan_cost = 20.00 * 0.8  # Sheila bought a frying pan for 20% off\n    towels_cost = 30.00 * 0.9  # Sheila bought a set of towels that was 10% off\n\n    # Calculate the total cost of the items\n    total_cost = item_cost + frying_pan_cost + towels_cost\n\n    # Calculate the new balance on her credit card\n    new_balance = merchandise_cost - total_cost\n    result = new_balance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jellyfish in the tank\n    total_jellyfish = 0\n\n    # Calculate the number of large jellyfish\n    large_jellyfish = total_jellyfish // 5\n\n    # Calculate the number of small jellyfish\n    small_jellyfish = total_jellyfish - large_jellyfish\n\n    # Calculate the number of jellyfish that change color from green to blue\n    green_jellyfish = large_jellyfish // 3\n\n    # Calculate the number of jellyfish that stay blue\n    blue_jellyfish = small_jellyfish - green_jellyfish\n\n    # Calculate the total number of jellyfish in the tank\n    total_jellyfish = total_jellyfish + blue_jellyfish\n\n    # Display the total number of jellyfish in the tank\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    # Define Chris's age\n    chris_age = 4\n\n    # Calculate Ben's age\n    ben_age = chris_age * 2\n\n    # Calculate Caroline's age\n    caroline_age = ben_age * 3\n\n    # Calculate Caroline's age\n    caroline_age = ben_age + caroline_age\n\n    # Display Caroline's age\n    result = caroline_age\n    return result"}
{"output": "def solution():\n    \n    current_salary = 100000\n    annual_salary = current_salary * 0.4\n    years_to_save = annual_salary / 0.2\n    result = years_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the total length of ribbon and the number of equal parts\n    total_ribbon = 100\n    equal_parts = 4\n\n    # Calculate the length of each equal part\n    part_length = total_ribbon / equal_parts\n\n    # Calculate the length of each equal part\n    final_length = part_length / 5\n\n    # Display the length of each equal part\n    result = final_length\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage of boys in the school population\n    BOYS_PERCENTAGE = 40\n\n    # Define the number of boys in the school population\n    boys = 240\n\n    # Calculate the total number of boys in the school population\n    total_boys = boys / (BOYS_PERCENTAGE / 100)\n\n    # Calculate the number of girls in the school population\n    girls = total_boys / (1 - BOYS_PERCENTAGE / 100)\n\n    # Display the number of girls\n    result = girls\n    return result"}
{"output": "def solution():\n    \n    pots_cost = 19\n    soil_cost = 26\n    coupon_value = 7\n    total_cost = pots_cost + soil_cost - coupon_value\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of inch heels\n    total_inch_heels = 3 * 4 + 3 * 2\n\n    # Calculate the average height of heels\n    average_height = total_inch_heels / 3\n    result = average_height\n    return result"}
{"output": "def solution():\n    \n    total_distance = 9300\n    walking_distance = 125 * 2\n    remaining_distance = total_distance - walking_distance\n    days_to_complete = 12\n    additional_distance_per_day = remaining_distance / days_to_complete\n    result = additional_distance_per_day\n    return result"}
{"output": "def solution():\n    num_red_balls = 3\n    red_ball_price = 9\n\n    num_blue_balls = 11\n    blue_ball_price = 5\n\n    num_green_balls = 25\n    green_ball_price = 3\n\n    # Calculate the total revenue from red balls\n    red_ball_revenue = num_red_balls * red_ball_price\n\n    # Calculate the total revenue from blue balls\n    blue_ball_revenue = num_blue_balls * blue_ball_price\n\n    # Calculate the total revenue from green balls\n    green_ball_revenue = num_green_balls * green_ball_price\n\n    # Calculate the total revenue from all balls sold\n    total_revenue = red_ball_revenue + blue_ball_revenue + green_ball_revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    total_apples = 12\n    peter_apples = total_apples / 4\n    paul_apples = total_apples / 3\n    remaining_apples = total_apples - peter_apples - paul_apples\n    result = remaining_apples\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 2\n    overnight_temp = 8\n    increase_temp = 3\n    final_temp = initial_temp - overnight_temp + increase_temp\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Raymond had\n    initial_money = 21\n\n    # Define the amount of money Raymond saved\n    saved_money = 11\n\n    # Define the amount of money Raymond spent on the comic book and puzzle\n    comic_book_cost = 5\n    puzzle_cost = 19\n\n    # Calculate the total amount of money Raymond spent\n    total_spent = comic_book_cost + puzzle_cost\n\n    # Calculate the amount of money Raymond has left\n    money_left = initial_money + saved_money - total_spent\n\n    # Display the amount of money Raymond has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    budget = 16\n    spent_money = 4\n    remaining_money = 2\n    total_money = budget - spent_money - remaining_money\n    num_books = 2\n    cost_per_book = total_money / num_books\n    result = cost_per_book\n    return result"}
{"output": "def solution():\n    \n    last_year_students = 50\n    increase_percent = 20\n    this_year_students = last_year_students * (1 + (increase_percent / 100))\n    result = this_year_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the light blinks in one minute\n    BLINKS_PER_MINUTE = 255 / 5\n\n    # Define the number of times the light needs to blink 459 times\n    NUM_TIMES = 459 / BLINKS_PER_MINUTE\n\n    # Display the number of minutes\n    result = NUM_TIMES\n    return result"}
{"output": "def solution():\n    \n    # Define the number of each type of fish\n    male_guppies = 4\n    female_guppies = 7\n    male_gupfishes = 3\n    female_gupfishes = 5\n\n    # Define the number of each type of fish purchased\n    male_guppies_bought = 2\n    female_guppies_bought = 1\n    male_goldfishes_bought = 2\n    female_goldfishes_bought = 2\n    female_goldfishes_bought = 3\n\n    # Calculate the total number of female fishes\n    total_female_fishes = female_guppies + female_guppies_bought + male_goldfishes_bought + female_goldfishes_bought\n\n    # Calculate the difference between the number of female fishes and male fishes\n    difference = total_female_"}
{"output": "def solution():\n    \n    amalia_time = 4\n    megan_time = amalia_time + 2\n    dior_time = amalia_time + 4\n    total_time = amalia_time + megan_time + dior_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    visits_per_month = 2\n    time_per_visit = 2\n    speed = 70\n    distance_per_visit = speed * time_per_visit\n    total_distance = distance_per_visit * visits_per_month\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define Sofie's walking speed in miles per day\n    SOFIE_SPEED = 10\n\n    # Calculate Sofie's walking speed in miles per day\n    sofie_speed = SOFIE_SPEED / 7\n\n    # Calculate Brian's walking speed in miles per day\n    brian_speed = SOFIE_SPEED / 7\n\n    # Calculate Brian's walking distance in 7 days\n    brian_distance = brian_speed * 7\n\n    # Display Brian's walking distance in 7 days\n    result = brian_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of toys and the number of workers\n    total_toys = 400\n    num_workers = 5\n\n    # Calculate the number of toys produced by the first two workers\n    toys_produced_first_two = 6 * 2\n\n    # Calculate the number of toys produced by the second two workers\n    toys_produced_second_two = 4 * 2\n\n    # Calculate the total number of toys produced\n    total_toys_produced = toys_produced_first_two + toys_produced_second_two\n\n    # Calculate the number of toys remaining after the shift\n    remaining_toys = total_toys - total_toys_produced\n\n    # Calculate the number of toys produced by the fifth worker\n    toys_produced_fifth_worker = remaining_toys / 5\n\n    # Display the number of toys produced per hour by the fifth worker\n    result = toys_produced_fifth_worker\n    return result"}
{"output": "def solution():\n    \n    kory_dog_weight = 60\n    elijah_dog_weight = kory_dog_weight / 4\n    total_weight = elijah_dog_weight + kory_dog_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of stickers that Luis kept\n    luis_stickers = 9\n\n    # Calculate the number of stickers that Kris kept\n    kris_stickers = 9\n\n    # Calculate the number of stickers that Seth gave to Luis\n    luis_stickers = luis_stickers / 2\n\n    # Calculate the number of stickers that Seth gave to Kris\n    kris_stickers = kris_stickers - 9\n\n    # Calculate the number of stickers that Seth gave to Rob\n    rob_stickers = 7\n\n    # Calculate the total number of stickers that Seth had in the beginning\n    initial_stickers = luis_stickers + kris_stickers + rob_stickers\n\n    # Display the total number of stickers that Seth had in the beginning\n    result = initial_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each large bag and the number of large bags\n    large_bag_weight = 10\n    num_large_bags = 3\n\n    # Define the number of M&M per ounce\n    mms_per_ounce = 30\n\n    # Calculate the total weight of all the large bags\n    total_large_bag_weight = large_bag_weight * num_large_bags\n\n    # Calculate the total number of M&M that John has\n    total_mms = total_large_bag_weight * mms_per_ounce\n\n    # Calculate the maximum number of small bags John can make\n    max_small_bags = total_mms // 10\n\n    # Display the maximum number of small bags John can make\n    result = max_small_bags\n    return result"}
{"output": "def solution():\n    \n    daily_distance = 400\n    circumference = 40000\n    half_distance = daily_distance / 2\n    days_to_fly = half_distance / daily_distance\n    result = days_to_fly\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of the average car\n    AVERAGE_CAR_SPEED = 120\n\n    # Calculate the speed of the second fastest car\n    second_fastest_car_speed = AVERAGE_CAR_SPEED * 5\n\n    # Calculate the speed of the faster car\n    faster_car_speed = second_fastest_car_speed * 1.25\n\n    # Display the speed of the faster car\n    result = faster_car_speed\n    return result"}
{"output": "def solution():\n    \n    # Define Liam's current age\n    liam_age = 16\n\n    # Calculate Liam's age two years ago\n    liam_age_two_years_ago = liam_age - 2\n\n    # Calculate Vince's age two years ago\n    vince_age_two_years_ago = liam_age_two_years_ago / 2\n\n    # Calculate Vince's current age\n    vince_age = vince_age_two_years_ago + 2\n\n    # Display Vince's current age\n    result = vince_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of eggs painted\n    total_eggs = 56\n\n    # Calculate the number of eggs painted by Arnold\n    arnold_eggs = total_eggs / 2\n\n    # Calculate the number of eggs painted by Sarah\n    sarah_eggs = 30\n\n    # Calculate the number of eggs painted by Camden\n    camden_eggs = sarah_eggs + 12\n\n    # Calculate the difference between the number of eggs painted by Camden and Arnold\n    difference = camden_eggs - arnold_eggs\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    num_crayons = 200\n    num_boxes = 8\n    weight_per_box = 8\n    weight_per_crayon = 1\n    weight_per_pound = 16\n\n    # Calculate the total weight of all crayons in ounces\n    total_weight_ounces = num_crayons * weight_per_crayon\n\n    # Calculate the total weight of all boxes in ounces\n    total_weight_boxes = total_weight_ounces / weight_per_box\n\n    # Calculate the total weight of all crayons in pounds\n    total_weight_pounds = total_weight_boxes * weight_per_pound\n    result = total_weight_pounds\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the tree and the size of each log\n    tree_length = 80\n    log_length = 4\n\n    # Calculate the number of logs John can make\n    num_logs = tree_length / log_length\n\n    # Calculate the number of planks John cuts from each log\n    num_planks_per_log = 5\n\n    # Calculate the total number of planks John cuts\n    total_num_planks = num_logs * num_planks_per_log\n\n    # Calculate the total earnings from selling the planks\n    total_earnings = total_num_planks * 1.2\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define Valerie's monthly salary\n    valerie_salary = 5000\n\n    # Calculate Valerie's brother's salary\n    brother_salary = valerie_salary / 2\n\n    # Calculate the combined salary of Valerie and her brother\n    combined_salary = valerie_salary + brother_salary\n\n    # Calculate their mother's salary\n    mother_salary = combined_salary * 2\n\n    # Calculate the total amount of money they all have together\n    total_money = valerie_salary + brother_salary + mother_salary\n\n    # Display the total amount of money they all have together\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    total_distance = 3\n    beach_distance = 2\n    sidewalk_distance = 1\n    sidewalk_speed = 2\n    time_on_beach = 40\n    time_on_sidewalk = (total_distance - beach_distance - sidewalk_distance) / sidewalk_speed\n    total_time = time_on_beach + time_on_sidewalk\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    current_savings = 4 * 8\n    remaining_savings = 60 - current_savings\n    weeks_to_save = remaining_savings / 4\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue birds in each tree\n    tree1_blue_birds = 7\n    tree2_blue_birds = 4\n    tree3_blue_birds = 3\n\n    # Calculate the total number of blue birds in each tree\n    tree1_total_blue_birds = tree1_blue_birds * 3\n    tree2_total_blue_birds = tree2_blue_birds * 2\n    tree3_total_blue_birds = tree3_blue_birds * 3\n\n    # Calculate the total number of blue birds in all trees\n    total_blue_birds = tree1_total_blue_birds + tree2_total_blue_birds + tree3_total_blue_birds\n\n    # return the result\n    result = total_blue_birds\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 60\n\n    # Define the number of marbles received\n    marbles_received = 2 * 12 + 60\n\n    # Define the number of marbles lost\n    marbles_lost = 10\n\n    # Calculate the new total number of marbles\n    new_total_marbles = initial_marbles + marbles_received - marbles_lost\n\n    # Display the new total number of marbles\n    result = new_total_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define Donny's minimum drinking temperature\n    MIN_DRINKING_TEMP = 40\n\n    # Define the temperature of the first mug\n    mug1_temp = 33\n\n    # Define the temperature of the second mug\n    bottle1_temp = unknown_temp\n\n    # Define the amount of water Donny pours from the first mug to the second bottle\n    bottle1_water = 4\n    bottle1_water = bottle1_temp * bottle1_water\n\n    # Define the amount of water Donny pours from the second bottle\n    bottle2_water = bottle2_temp * bottle2_water\n\n    # Calculate the minimum drinking temperature of the second bottle\n    min_drinking_temp = bottle2_water - min_drinking_temp\n\n    # Display the minimum drinking temperature of the second bottle\n    result = min_drinking_temp\n    return result"}
{"output": "def solution():\n    \n    initial_cows = 50\n    initial_chickens = 20\n    cows_per_day = 20\n    chickens_per_day = 10\n    days_per_week = 7\n    weeks = 3\n    total_cows = initial_cows\n    total_chickens = initial_chickens\n    total_cows += cows_per_day * days_per_week * weeks\n    total_chickens += chickens_per_day * days_per_week * weeks\n    total_animals = total_cows + total_chickens\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pack of bagels and the number of bagels in each pack\n    PACK_COST = 10\n    BAGELS_PER_PACK = 9\n\n    # Define the number of packs of bagels ordered\n    packs_ordered = 4\n\n    # Calculate the total cost before discount\n    total_cost = PACK_COST * packs_ordered\n\n    # Calculate the discount\n    discount = total_cost * 0.1\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost - discount\n\n    # Calculate the cost per bagel\n    cost_per_bagel = total_cost_after_discount / (packs_ordered * BAGELS_PER_PACK)\n\n    # Display the cost per bagel\n    result = cost_per_bagel\n    return result"}
{"output": "def solution():\n    \n    # Define the number of scoops of mashed potatoes that Gomer ate\n    gomer_scoops = 23\n\n    # Calculate the number of potatoes that Gomer used to make 1 less than 3 scoops of mashed potatoes\n    potatoes_for_3_scoops = (gomer_scoops - 5) / 3\n\n    # Calculate the number of potatoes that Gomer used to make 1 less than 3 scoops of mashed potatoes\n    potatoes_for_1_scoops = potatoes_for_3_scoops - 3\n\n    # Calculate the total number of potatoes that Gomer ate\n    total_potatoes = potatoes_for_1_scoops + potatoes_for_2_scoops\n\n    # Display the total number of potatoes that Gomer ate\n    result = total_potatoes\n    return result"}
{"output": "def solution():\n    \n    eggs_per_day_1 = 3\n    days_1 = 30\n    eggs_per_day_2 = 5\n    days_2 = 30\n    total_eggs = (eggs_per_day_1 * days_1) + (eggs_per_day_2 * days_2)\n    dozens_needed = total_eggs / 12\n    result = dozens_needed\n    return result"}
{"output": "def solution():\n    \n    total_jellybeans = 60\n    green_jellybeans = 17\n    red_jellybeans = 2 * green_jellybeans\n    blue_jellybeans = total_jellybeans - green_jellybeans - red_jellybeans\n    result = blue_jellybeans\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees Tim grows and the number of lemons collected per tree\n    TREES = 5\n    LEMONS_PER_TREE = 6\n\n    # Calculate the total number of lemons collected in a year\n    lemons_per_year = TREES * LEMONS_PER_TREE\n\n    # Calculate the total number of lemons collected in a decade\n    lemons_per_decade = lemons_per_year * 10\n\n    # Display the total number of lemons collected\n    result = lemons_per_decade\n    return result"}
{"output": "def solution():\n    \n    total_passengers = 84\n    men_ratio = 5\n    women_ratio = 9\n    total_ratio = men_ratio + women_ratio\n    women_on_bus = (women_ratio / total_ratio) * total_passengers\n    women_remaining = women_on_bus - 20\n    result = women_remaining\n    return result"}
{"output": "def solution():\n    \n    # Define the price of a sunflower and a bouquet of sunflower\n    SUNFLOWER_PRICE = 2\n    BOUQUET_PRICE = 8\n\n    # Calculate Faraday's earnings per day\n    earnings_per_day = 26 + 56\n\n    # Calculate the number of sunflowers sold per day\n    sunflowers_per_day = earnings_per_day / SUNFLOWER_PRICE\n\n    # Calculate the number of sunflowers sold after 3 days\n    sunflowers_sold = sunflowers_per_day * 3\n\n    # Display the number of sunflowers sold\n    result = sunflowers_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Adam has\n    initial_money = 100\n\n    # Define the cost of each rock and the selling price of each rock\n    rock_cost = 5\n    rock_sell_price = 7\n\n    # Calculate the total cost of buying rocks\n    rocks_cost = rock_cost * 2\n\n    # Calculate the total revenue from selling rocks\n    revenue = rock_sell_price * 1.6\n\n    # Calculate the amount of money Adam lost\n    lost_money = initial_money - rocks_cost - revenue\n\n    # Display the amount of money Adam lost\n    result = lost_money\n    return result"}
{"output": "def solution():\n    \n    large_scenes = 45\n    medium_scenes = 36\n    small_scenes = 49\n    large_scenes_per_day = 5\n    medium_scenes_per_day = 6\n    small_scenes_per_day = 7\n    total_large_scenes = large_scenes * large_scenes_per_day\n    total_medium_scenes = medium_scenes * medium_scenes_per_day\n    total_small_scenes = small_scenes * small_scenes_per_day\n    total_scenes = total_large_scenes + total_medium_scenes + total_small_scenes\n    days = total_scenes / total_scenes\n    result = days\n    return result"}
{"output": "def solution():\n    \n    eggs_per_dozen = 12\n    total_eggs = 3 * eggs_per_dozen\n    children = 4\n    eggs_per_child = total_eggs / children\n    result = eggs_per_child\n    return result"}
{"output": "def solution():\n    num_fish = 3\n    food_per_fish_per_day = 1\n    days_in_month = 30\n\n    # Calculate the total amount of food needed per day\n    total_food_per_day = num_fish * food_per_fish_per_day\n\n    # Calculate the total amount of food needed per month\n    total_food_per_month = total_food_per_day * days_in_month\n\n    result = total_food_per_month\n    return result"}
{"output": "def solution():\n    \n    initial_roses = 30\n    given_roses = 24\n    bought_roses = 15\n    remaining_roses = initial_roses - given_roses + bought_roses\n    result = remaining_roses\n    return result"}
{"output": "def solution():\n    \n    distance_1 = 110\n    time_1 = 2\n    speed_1 = distance_1 / time_1\n    distance_2 = 140\n    time_2 = 3\n    speed_2 = distance_2 / time_2\n    average_speed = speed_1 + speed_2\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    first_ticket_win = 0.2\n    second_ticket_win = 3 * first_ticket_win\n    total_tickets = 2\n    probability_of_first_ticket = first_ticket_win + second_ticket_win\n    probability_of_second_ticket = (first_ticket_win + second_ticket_win) / total_tickets\n    probability_of_both_tickets = probability_of_first_ticket * 2\n    result = probability_of_both_tickets\n    return result"}
{"output": "def solution():\n    \n    jim_seashells = 27\n    carlos_seashells = jim_seashells - 5\n    carrey_seashells = carlos_seashells / 2\n    total_seashells = jim_seashells + carlos_seashells + carrey_seashells\n    each_person_gets = total_seashells / 3\n    result = each_person_gets\n    return result"}
{"output": "def solution():\n    # Calculate the total number of carrots Mason eats in a week\n    weekday_carrots = 4 * 5  # Mason eats 4 carrots on weekdays and 5 carrots on Saturday and Sunday\n    weekend_carrots = 5 * 2  # Mason eats 5 carrots on Saturday and Sunday\n    total_carrots = weekday_carrots + weekend_carrots  # total number of carrots Mason eats in a week\n    result = total_carrots\n    return result"}
{"output": "def solution():\n    \n    first_song_time = 5\n    second_song_time = first_song_time * 1.6\n    total_time = first_song_time + second_song_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the mobile device\n    device_cost = 20\n\n    # Calculate the selling price of the mobile device\n    selling_price = device_cost * 2\n\n    # Calculate the total cost of buying the mobile devices\n    total_cost = 2 * device_cost\n\n    # Calculate the total revenue from selling the mobile devices\n    total_revenue = 4 * device_cost\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    isabel_height = 7\n    ned_height = isabel_height - 2\n    carl_height = isabel_height / 2\n    cane_length = carl_height + 1\n    result = cane_length\n    return result"}
{"output": "def solution():\n    \n    bottles_per_day = 4200\n    daily_energy_demand = 0.2\n    daily_energy_needed = 2300\n    bottles_per_juice = bottles_per_day * daily_energy_demand\n    total_bottles_needed = bottles_per_juice * daily_energy_needed\n    remaining_bottles_needed = total_bottles_needed - bottles_per_juice\n    result = remaining_bottles_needed\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of purple and blue wearers\n    purple_wearers = (3/4) * 8\n    blue_wearers = (1/4) * 8\n\n    # Calculate the number of baby wearers\n    baby_wearers = blue_wearers + (1/3) * purple_wearers\n\n    # Calculate the percentage chance of a baby wearing purple\n    percentage_purple = (purple_wearers / baby_wearers) * 100\n\n    # Display the percentage chance of a baby wearing purple\n    result = percentage_purple\n    return result"}
{"output": "def solution():\n    # Calculate the total number of reports received on Monday and Tuesday\n    monday_tues_reports = 1907\n    total_mon_tues_reports = monday_tues_reports + total_mon_tues_reports\n\n    # Calculate the total number of reports received on Thursday and Friday\n    thursday_friday_reports = 2136\n    total_thursday_friday_reports = thursday_friday_reports + total_thursday_friday_reports\n\n    # Calculate the number of reports received on Wednesday\n    wednesday_reports = 5168 - total_mon_tues_reports - total_thursday_friday_reports\n    result = wednesday_reports\n    return result"}
{"output": "def solution():\n    unused_land = 80  # Abraham owns 80 square meters of unused land\n    sold_first_month = unused_land / 2  # Abraham sold half of the land for $50\n    sold_second_month = unused_land / 4  # Abraham sold 1/4 of his land for $30\n    sold_remaining_land = unused_land - sold_first_month - sold_second_month  # Abraham sold the remaining land for $3 per square meter\n\n    # Calculate the total earnings from selling all the land\n    total_earnings = (sold_first_month * 50) + (sold_second_month * 30) + (sold_remaining_land * 3)\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    haley_age = 26\n    geb_age = (haley_age / 2) - 10\n    result = geb_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of face masks Tyrion uses per day\n    masks_per_day = 2 * 3\n\n    # Calculate the total number of face masks Tyrion uses every 2 days\n    total_masks = masks_per_day * 2\n\n    # Display the total number of face masks\n    result = total_masks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in a dozen\n    EGGS_PER_DOZEN = 12\n\n    # Define the number of eggs found by Lamar\n    LAMAR_EGGS = 5\n\n    # Define the number of eggs found by Stacy\n    STCYCLE_EGGS = LAMAR_EGGS * 2\n\n    # Define the number of eggs found by Charlie\n    CHARLIE_EGGS = STCYCLE_EGGS - 2\n\n    # Define the number of eggs found by Mei\n    MEI_EGGS = CHARLIE_EGGS / 2\n\n    # Calculate the total number of eggs found\n    total_eggs = LAMAR_EGGS + STCYCLE_EGGS + CHARLIE_EGGS + MEI_EGGS\n\n    # Calculate the number of eggs still hidden\n    hidden_eggs = 3 * EGGS_PER_DOZEN\n\n    # Display the number of eggs still hidden\n    result = hidden_eg"}
{"output": "def solution():\n    \n    # Define the number of apartments in the first two complexes\n    apartments_first_two = 200\n\n    # Calculate the number of apartments in the last two complexes\n    apartments_last_two = apartments_first_two * 1.6\n\n    # Calculate the total number of apartments\n    total_apartments = apartments_first_two + apartments_last_two\n\n    # Calculate the total number of collections John collects in a week\n    collections_per_week = total_apartments * 3\n\n    # Calculate the total amount of money John makes in a week\n    money_made = collections_per_week * 0.40\n\n    # Display the total amount of money John makes in a week\n    result = money_made\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of fruits produced in the first year\n    fruits_first_year = 50\n\n    # Calculate the number of fruits produced in the second year\n    fruits_second_year = 3 * fruits_first_year\n\n    # Calculate the number of fruits produced in the third year\n    fruits_third_year = 7 * fruits_first_year\n\n    # Calculate the number of fruits produced in the fourth year\n    fruits_fourth_year = 200\n\n    # Calculate the number of fruits produced in the fourth year\n    fruits_fourth_year = 20 * fruits_first_year\n\n    # Calculate the total number of fruits produced\n    total_fruits = fruits_first_year + fruits_second_year + fruits_third_year + fruits_fourth_year\n\n    # Display the total number of fruits produced\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    jack_money = 100\n    sophia_money = jack_money * (1/5)\n    jack_money += sophia_money\n    result = jack_money\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the yellow rope\n    yellow_rope = 37 - 7\n\n    # Calculate the length of the blue rope\n    blue_rope = yellow_rope / 2\n\n    # Calculate the length of the red rope\n    red_rope = 4 * blue_rope\n\n    # Display the length of the red rope\n    result = red_rope\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Ronnie was given\n    ronnie_money = 5\n\n    # Define the amount of money Rissa was given\n    rissa_money = ronnie_money * 3\n\n    # Calculate the total amount of money they had given\n    total_money_given = ronnie_money + rissa_money\n\n    # Calculate the amount of money left after each of them had given an equal amount\n    money_left = total_money_given * (4/5)\n\n    # Calculate the final amount of money Ronnie has left\n    final_money = ronnie_money - money_left\n\n    # Display the final amount of money Ronnie has left\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    total_paint = 12\n    yellow_paint = total_paint / 2\n    red_paint = (total_paint - yellow_paint) / 3\n    result = red_paint\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each bedroom and living room\n    bedroom_length = 20\n    bedroom_width = 12\n    living_room_length = bedroom_length * 5\n\n    # Calculate the area of each bedroom and living room\n    bedroom_area = bedroom_length * bedroom_width\n    living_room_area = living_room_length * bedroom_width\n\n    # Calculate the total area of the house\n    total_area = bedroom_area + living_room_area + 1000\n\n    # return the result\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    monday_clouds = 3\n    friday_clouds = monday_clouds * 2\n    total_clouds = monday_clouds + friday_clouds\n    result = total_clouds\n    return result"}
{"output": "def solution():\n    \n    regular_box_pods = 100\n    regular_box_price = 12\n    special_box_pods = regular_box_pods * 1.2\n    special_box_price = regular_box_price * 1.2\n    dishwashing_cycles = special_box_price / regular_box_pods\n    result = dishwashing_cycles\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Thomas withdraws and the number of bills he loses\n    withdrawal_money = 1000\n    bills_lost = 10\n\n    # Calculate the remaining amount of money after losing 10 bills\n    remaining_money = withdrawal_money - bills_lost\n\n    # Calculate the number of bills Thomas uses to pay for each bill\n    bills_per_bill = remaining_money / 2\n\n    # Calculate the total number of bills Thomas has\n    total_bills = bills_per_bill * 3\n\n    # Calculate the number of 5 dollar bills Thomas can convert his bills to 5 dollar bills\n    num_five_dollar_bills = total_bills // 5\n\n    # Display the number of 5 dollar bills Thomas has\n    result = num_five_dollar_bills\n    return result"}
{"output": "def solution():\n    # Calculate the number of goals scored by team A in the first half\n    team_a_goals = 4\n\n    # Calculate the number of goals scored by team B in the first half\n    team_b_goals = team_a_goals - 2\n\n    # Calculate the number of goals scored by team A in the second half\n    team_a_goals = team_a_goals / 4\n\n    # Calculate the number of goals scored by team B in the second half\n    team_b_goals = team_b_goals * 4\n\n    # Calculate the total number of goals scored in the match\n    total_goals = team_a_goals + team_b_goals + team_a_goals + team_b_goals\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of chalk\n    initial_chalk = 5\n\n    # Calculate the amount of chalk used each day\n    chalk_used_day1 = initial_chalk * 0.2\n\n    # Calculate the amount of chalk used on Monday\n    chalk_used_day2 = initial_chalk - chalk_used_day1\n\n    # Calculate the amount of chalk used on Monday\n    chalk_used_day3 = chalk_used_day1 * 0.45\n\n    # Calculate the amount of chalk used on Monday\n    chalk_used_day4 = chalk_used_day2 - chalk_used_day3\n\n    # Calculate the total amount of chalk used\n    total_chalk_used = chalk_used_day1 + chalk_used_day2 + chalk_used_day3\n\n    # Display the total amount of chalk used\n    result = total_chalk_used\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boys and girls\n    boys = 12\n    girls = 12\n\n    # Calculate the number of students on varsity\n    varsity_students = (1/3) * girls + (1/4) * boys\n\n    # Calculate the number of students not on varsity\n    non_varsity_students = boys + girls - varsity_students\n\n    # Display the number of students not on varsity\n    result = non_varsity_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of face masks Mike bought\n    mike_masks = 5\n\n    # Calculate the number of face masks Johnny bought\n    johnny_masks = 3 * mike_masks + 2\n\n    # Display the number of face masks Johnny bought\n    result = johnny_masks\n    return result"}
{"output": "def solution():\n    \n    james_teeth = 30\n    dentist_drills = 4\n    dentist_caps = james_teeth + 7\n    total_teeth = james_teeth + dentist_drills + dentist_caps\n    percent_teeth = (dentist_teeth / james_teeth) * 100\n    result = percent_teeth\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of milk sold and the cost per gallon\n    milk_sold = 4000\n    cost_per_gallon = 3.5\n\n    # Calculate the total revenue from selling milk\n    total_revenue = milk_sold * cost_per_gallon\n\n    # Calculate the amount of milk that was not sold\n    unsold_milk = total_revenue * (2/5)\n\n    # Calculate the refund amount\n    refund = unsold_milk - cost_per_gallon\n\n    # Display the refund amount\n    result = refund\n    return result"}
{"output": "def solution():\n    \n    wendy_age_in_25_years = wendy_age_in_25_years - 25\n    colin_age_in_25_years = colin_age_in_25_years / 3\n    colin_age_now = colin_age_in_25_years - 7\n    result = colin_age_now\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount spent and the cost per book\n    total_spent = 20000\n    cost_per_book = 500\n\n    # Calculate the total number of books Bob can buy\n    total_books = total_spent // cost_per_book\n\n    # Calculate the number of books Bob can buy per school\n    books_per_school = total_books // 3\n\n    # Display the number of books Bob can buy per school\n    result = books_per_school\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of apples\n    initial_apples = 2\n\n    # Calculate the number of apples after the first failure\n    first_apples = initial_apples - 1\n\n    # Calculate the number of apples after the second failure\n    second_apples = first_apples - 5\n\n    # Calculate the number of apples after the third failure\n    third_apples = second_apples - 6\n\n    # Calculate the total number of apples\n    total_apples = first_apples + second_apples + third_apples\n\n    # Display the total number of apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    total_coal = 850\n    coal_per_bag = 50\n    cost_per_bag = 18\n    total_bags = total_coal / coal_per_bag\n    total_cost = total_bags * cost_per_bag\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    cheese_slices_per_pizza = 12\n    pepperoni_slices_per_pizza = 8\n    cheese_slices_per_friend = 6\n    pepperoni_slices_per_friend = 4\n    total_cheese_slices = cheese_slices_per_friend * cheese_slices_per_friend\n    total_pepperoni_slices = pepperoni_slices_per_friend * pepperoni_slices_per_friend\n    total_slices_needed = total_cheese_slices + total_pepperoni_slices\n    pies_needed = total_slices_needed / total_slices_per_pizza\n    result = pies_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total miles Sam ran this week\n    total_miles = 3*3 + 5*2  # Sam ran 3 miles on Monday, Wednesday and Friday, Tuesday and Thursday\n    result = total_miles\n    return result"}
{"output": "def solution():\n    snowballs_per_hour = 20  # Jay can build 20 snowballs in an hour\n    melt_rate = 2  # Jay can build 2 melt snowballs every 15 minutes\n    total_snowballs = 60  # Jay needs to build 60 snowballs\n\n    # Calculate the number of 15-minute intervals needed to reach 60 snowballs\n    intervals_needed = (total_snowballs / (snowballs_per_hour * 60)) // melt_rate\n\n    # Calculate the total time needed to build the remaining snowballs\n    time_needed = intervals_needed * 60 / melt_rate\n    result = time_needed\n    return result"}
{"output": "def solution():\n    \n    john_age_at_20th_anniversary = 28\n    john_age_at_20th_anniversary = john_age_at_20th_anniversary - 20\n    jim_age_at_20th_anniversary = john_age_at_20th_anniversary / 2\n    result = jim_age_at_20th_anniversary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices in the apple\n    slices_in_apple = 8\n\n    # Calculate the number of slices eaten by Doxa's sister\n    sister_slices = slices_in_apple + 1\n\n    # Calculate the number of slices eaten by Doxa's brother\n    brother_slices = sister_slices + 1\n\n    # Calculate the total number of slices eaten\n    total_slices = slices_in_apple + sister_slices + brother_slices\n\n    # Display the total number of slices eaten\n    result = total_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bandages in each bulk pack\n    PACK_SIZE = 50\n\n    # Calculate the number of bandages used on the first day\n    bandages_first_day = 38\n\n    # Calculate the number of bandages used on the second day\n    bandages_second_day = bandages_first_day - 10\n\n    # Calculate the number of bandages used on the third day\n    bandages_third_day = 2 * PACK_SIZE / 2\n\n    # Calculate the total number of bandages used\n    total_bandages_used = bandages_first_day + bandages_second_day + bandages_third_day\n\n    # Calculate the number of bandages left at the end of the third day\n    bandages_left = 78\n\n    # Calculate the number of bandages used on the first day\n    bandages_first_day = total_bandages_used + bandages_left\n\n    # Display the number of bandages used on the first day\n    result = bandages_first_day\n    return result"}
{"output": "def solution():\n    \n    color_cost = 40\n    haircut_cost = 30 * 10\n    total_cost = color_cost + haircut_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 7.5\n    days_per_week = 6\n    hours_per_week = hours_per_day * days_per_week\n    hourly_rate = 1.5\n    attendance = 10\n    weeks_in_april = 4\n    total_hours = hours_per_week * weeks_in_april\n    total_pay = total_hours * hourly_rate + attendance\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    laundry_earnings = 3\n    room_cleaning_earnings = 1.5\n    trash_earnings = 0.75\n    dishwasher_earnings = 0.5\n    dishwasher_emptied_per_week = 6\n    laundry_earnings_per_week = laundry_earnings * laundry_emptied_per_week\n    room_cleaning_earnings = room_cleaning_earnings * 2\n    trash_earnings_per_week = trash_earnings * 2\n    dishwasher_earnings_per_week = dishwasher_earnings * dishwasher_emptied_per_week\n    total_earnings = laundry_earnings_per_week + room_cleaning_earnings + trash_earnings_per_week + dishwasher_earnings_per_week + dishwasher_earnings_per_week\n    result = total_earnings"}
{"output": "def solution():\n    \n    whale_blood = 40\n    shark_blood = 3 * whale_blood\n    total_sharks = 10\n    total_blood = (whale_blood * total_sharks) + shark_blood\n    result = total_blood\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of people who entered the restaurant at 10:00\n    morning_entered = 50\n    food_entered = 40\n    total_food_entered = morning_entered + food_entered\n\n    # Calculate the number of people who entered the restaurant at 10:00\n    lunch_entered = 2 * morning_entered\n    total_entered = morning_entered + food_entered + lunch_entered\n\n    # Calculate the number of people who entered the restaurant evening\n    evening_entered = 3 * first_entered\n\n    # Calculate the total number of people who entered the restaurant\n    total_entered = total_entered + evening_entered\n\n    # Display the total number of people who entered the restaurant\n    result = total_entered\n    return result"}
{"output": "def solution():\n    \n    red_packs = 5\n    black_packs = red_packs * 2\n    total_pens = (red_packs + black_packs) * 5\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    scotch_bottles = 10\n    scotch_cost = 600\n    cognac_bottles = 2 * scotch_bottles\n    cognac_cost = scotch_cost * 1.5\n    total_cost = (scotch_bottles * scotch_cost) + (cognac_bottles * cognac_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of White Oak trees planted on the first day\n    white_oak_first_day = 20\n\n    # Define the number of Lodgepole Pine trees planted on the first day\n    lodgepole_pine_first_day = 2 * white_oak_first_day\n\n    # Define the number of White Oak trees planted on the second day\n    white_oak_second_day = white_oak_first_day + 10\n\n    # Define the number of Lodgepole Pine trees planted on the second day\n    lodgepole_pine_second_day = lodgepole_pine_first_day * 1.25\n\n    # Calculate the total number of trees planted\n    total_trees = white_oak_first_day + lodgepole_pine_first_day + white_oak_second_day + lodgepole_pine_second_day\n\n    # return the result\n    result = total_trees"}
{"output": "def solution():\n    \n    # Define the amount of root beer Fred made on the first day\n    day1_gallons = 24\n\n    # Calculate the amount of root beer Fred drinks on the second day\n    day2_gallons = day1_gallons - 4\n\n    # Calculate the amount of root beer Fred spilled on the third day\n    day3_gallons = day2_gallons - 7\n\n    # Calculate the total amount of root beer Fred has\n    total_gallons = day1_gallons + day2_gallons + day3_gallons\n\n    # Display the total amount of root beer\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the equation for the number of coffee mugs in the teacher's lounge\n    # Let x be the number of coffee mugs in the teacher's lounge\n    # Then 4x + 8 is the number of coffee mugs in the teacher's lounge\n    # The total number of coffee mugs in the teacher's lounge is 40\n    # So we can write the equation:\n    # 4x + 8 = 40\n    # Solving for x, we get:\n    x = (40 - 8) / 4\n\n    # Display the number of coffee mugs in the teacher's lounge\n    result = x\n    return result"}
{"output": "def solution():\n    \n    total_fish = 66\n    red_stripes = total_fish // 3\n    remaining_fish = total_fish - red_stripes\n    blue_stripes = (5/11) * remaining_fish\n    total_red_and_blue = red_stripes + blue_stripes\n    result = total_red_and_blue\n    return result"}
{"output": "def solution():\n    num_eyeshadow_palette1 = 4\n    num_eyeshadow_palette2 = 4\n    num_makeup_sets = 3\n    num_colors_per_makeup_set = 6\n    num_colors_stolen_by_sister = 1\n\n    # Calculate the total number of colors before the sister steals one\n    total_colors_before_stolen = (num_eyeshadow_palette1 * num_colors_per_eyeshadow_palette1) + (num_makeup_sets * num_colors_per_makeup_set)\n\n    # Calculate the number of colors used up by the makeup sets\n    num_colors_used_up = total_colors_before_stolen / 2\n\n    # Calculate the number of colors left\n    num_colors_left = total_colors_before_stolen - num_colors_used_up\n    result = num_colors_left\n    return result"}
{"output": "def solution():\n    \n    # Define Mattison's height\n    mattison_height = 60\n\n    # Calculate the height of the two-story house\n    house_height = mattison_height * 7\n\n    # Calculate the height of the floor on the first floor\n    floor_height = house_height * 3\n\n    # Calculate the height of the roof from the second floor\n    roof_height = floor_height - house_height\n\n    # Display the height of the roof from the second floor\n    result = roof_height\n    return result"}
{"output": "def solution():\n    \n    total_shells = 700\n    alphas_shells = total_shells * 0.4\n    remaining_shells = total_shells - alphas_shells\n    finders_shells = remaining_shells * 0.6\n    gogetters_shells = remaining_shells - finders_shells\n    result = gogetters_shells\n    return result"}
{"output": "def solution():\n    \n    num_dogs = 4\n    miles_per_dog_per_day = 3\n    miles_walked_first_dog = 1\n    miles_walked_second_dog = 4\n    miles_walked_third_dog = 3\n    total_miles_walked = (miles_walked_first_dog + miles_walked_second_dog + miles_walked_third_dog) * num_dogs\n    miles_last_dog = total_miles_walked - total_miles_walked\n    result = miles_last_dog\n    return result"}
{"output": "def solution():\n    house_value = 250000\n    loan_percentage = 0.4\n    debt_percentage = 0.6\n\n    # Calculate the amount of money John gets from his house\n    loan_value = house_value * loan_percentage\n\n    # Calculate the amount of money John uses to pay off his debts\n    debt_amount = loan_value * debt_percentage\n\n    # Calculate the amount of money John has leftover after paying debt\n    leftover_money = loan_value - debt_amount\n    result = leftover_money\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each tuna caught\n    tuna1_weight = 56\n    tuna2_weight = 46\n    tuna3_weight = 26\n\n    # Calculate the total weight of all the tunas caught\n    total_weight = tuna1_weight + tuna2_weight + tuna3_weight\n\n    # Calculate the total earnings from selling all the tunas\n    earnings = total_weight * 0.5\n\n    # return the result\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the price Trinity bought the magazines\n    price_bought = 72\n\n    # Calculate the selling price of the magazines\n    selling_price = price_bought / 8\n\n    # Calculate Trinity's profit\n    profit = selling_price - price_bought\n\n    # Display Trinity's profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    low_speed = 1\n    medium_speed = low_speed * 2\n    high_speed = medium_speed * 2\n    days = 3\n    low_water = low_speed * days\n    medium_water = medium_speed * days\n    high_water = high_speed * days\n    total_water = low_water + medium_water + high_water\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    packs_of_balloons = 10\n    balloons_per_pack = 30\n    balloons_left = 12\n    total_balloons = packs_of_balloons * balloons_per_pack\n    balloons_thrown = total_balloons - balloons_left\n    result = balloons_thrown\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of medicine in the first dosage\n    medicine1 = 14\n\n    # Calculate the amount of medicine in the second dosage\n    medicine2 = medicine1 * 3\n\n    # Calculate the total amount of medicine in 8 doses\n    total_medicine = medicine1 + medicine2\n\n    # Display the total amount of medicine\n    result = total_medicine\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of Ali's class\n    ali_capacity = 120\n\n    # Calculate the capacity of John's class\n    john_capacity = ali_capacity / 8\n\n    # Calculate the combined capacity of both schools\n    combined_capacity = john_capacity + ali_capacity\n\n    # return the result\n    result = combined_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the initial loan amount and the interest rate\n    loan_amount = 300\n    interest_rate = 0.02\n\n    # Calculate the amount owed after 11 months\n    owed_amount = loan_amount * interest_rate\n\n    # Calculate the total amount owed over 11 months\n    total_owed = owed_amount + 11 * 25\n\n    # Calculate the amount Stephen will pay on the twelfth month\n    pay_on_twelfth_month = total_owed - total_owed\n\n    # Display the amount Stephen will pay on the twelfth month\n    result = pay_on_twelfth_month\n    return result"}
{"output": "def solution():\n    \n    children = 2\n    diaper_changes_per_child = 5\n    total_diapers_per_day = children * diaper_changes_per_child\n    wife_changes_per_day = total_diapers_per_day / 2\n    jordan_changes_per_day = total_diapers_per_day - wife_changes_per_day\n    result = jordan_changes_per_day\n    return result"}
{"output": "def solution():\n    \n    base_length = 6\n    base_width = 6\n    height = 15\n    cubic_inches = base_length * base_width * height\n    cubic_inches_per_bean = 0.15\n    packing_efficiency = 0.8\n    total_cubic_inches = cubic_inches * cubic_inches_per_bean\n    total_jelly_beans = total_cubic_inches / cubic_inches_per_bean\n    total_red_jelly_beans = total_jelly_beans * (1 - packing_efficiency)\n    distance_off = total_red_jelly_beans - 900\n    result = distance_off\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of passengers on the bus\n    initial_passengers = 200\n\n    # Calculate the number of passengers who entered the bus at the first stop\n    passengers_first_stop = 40\n\n    # Calculate the number of passengers who entered the bus at the second station\n    passengers_second_station = (3/4) * passengers_first_stop\n\n    # Calculate the number of passengers who entered the bus at the third station\n    passengers_third_station = passengers_first_stop * 2\n\n    # Calculate the total number of passengers on the bus\n    total_passengers = initial_passengers + passengers_first_stop + passengers_second_station + passengers_third_station\n\n    # Display the total number of passengers on the bus\n    result = total_passengers\n    return result"}
{"output": "def solution():\n    visits_per_year = 3  # Pauline visits her favorite local museum three times a year\n    cost_per_visit = 2  # The cost of one visit is $2\n    years = 5  # Pauline visits her favorite local museum for 5 years\n\n    # Calculate the total cost of all visits to the museum\n    total_cost = visits_per_year * cost_per_visit * years\n\n    # Calculate the cost of one visit after 5 years with a 150% increase\n    cost_per_visit = cost_per_visit * 1.5\n\n    # Calculate the total cost of all visits to the museum for 3 more years\n    total_cost_for_3_years = visits_per_year * cost_per_visit * 3\n\n    # Calculate the total cost of all visits to the museum\n    total_cost = total_cost + cost_for_3_years\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_students_per_grade = 10\n    grade_length = 7\n    num_students_per_year = num_students_per_grade * grade_length\n    num_students_trying_room = 8\n    time_per_group = 45\n\n    # Calculate the total number of students who need to try the escape room\n    total_students_trying_room = num_students_per_year * num_students_per_grade\n\n    # Calculate the total time needed for all students to try the escape room\n    total_time_needed = total_students_trying_room * time_per_group\n    result = total_time_needed\n    return result"}
{"output": "def solution():\n    num_wooden_tables = 4\n    wooden_table_price = 20\n\n    num_roof_frames = 2\n    roof_frame_price = 10\n\n    # Calculate the total cost of all wooden tables\n    total_wooden_table_cost = num_wooden_tables * wooden_table_price\n\n    # Calculate the total cost of all roof frames\n    total_roof_frame_cost = num_roof_frames * roof_frame_price\n\n    # Calculate the total cost of all items\n    total_cost = total_wooden_table_cost + total_roof_frame_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the board\n    board_length = 40\n\n    # Calculate the length of the shorter piece\n    shorter_piece = board_length / 4\n\n    # Calculate the length of the longer piece\n    longer_piece = shorter_piece * 4\n\n    # Display the length of the longer piece\n    result = longer_piece\n    return result"}
{"output": "def solution():\n    \n    meatballs_per_pound = 16\n    tablespoons_per_pound = 2\n    total_meatballs = 80\n    meatballs_per_season = meatballs_per_pound * tablespoons_per_pound\n    seasoning_needed = total_meatballs / meatballs_per_season\n    result = seasoning_needed\n    return result"}
{"output": "def solution():\n    \n    windows = 5\n    width_per_window = 35\n    total_width = windows * width_per_window\n    fabric_ratio = 2\n    fabric_needed = total_width * fabric_ratio\n    result = fabric_needed\n    return result"}
{"output": "def solution():\n    # Calculate the cost of a 36-minute call\n    cost_first_half = 0.25 * 36  # $0.25 per minute for 36 minutes\n    cost_second_half = 0.2 * 36  # $0.2 per minute for 36 minutes\n    total_cost = cost_first_half + cost_second_half\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of rain on Monday\n    monday_rain = 2\n\n    # Calculate the amount of rain on Tuesday\n    tuesday_rain = (monday_rain + 1) / 2\n\n    # Display the amount of rain on Tuesday\n    result = tuesday_rain\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and treats per person\n    num_people = 5\n    treats_per_person = 2\n\n    # Calculate the number of brownies\n    num_brownies = (num_people * treats_per_person) - 2\n\n    # Calculate the total number of treats\n    total_treats = num_people * treats_per_person\n\n    # Calculate the number of cupcakes\n    num_cupcakes = total_treats // 4\n\n    # Display the number of cupcakes\n    result = num_cupcakes\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the manicure and pedicure\n    MANICURE_PRICE = 35\n    PEDICURE_PRICE = 40\n\n    # Calculate the total cost before the discount\n    total_cost = MANICURE_PRICE + PEDICURE_PRICE\n\n    # Calculate the discount amount\n    discount = total_cost * 0.2\n\n    # Calculate the total cost after the discount\n    total_cost_after_discount = total_cost - discount\n\n    # Calculate the total cost with nail art\n    total_cost_with_nails = total_cost_after_discount * 3\n\n    # Display the total cost with nail art\n    result = total_cost_with_nails\n    return result"}
{"output": "def solution():\n    \n    # Define the number of issues sent per year and the number of magazines ordered\n    issues_per_year = 12\n    magazines_ordered = 3\n\n    # Define the number of issues sent per year and the number of magazines last\n    issues_last = 6\n    magazines_last = 4 * issues_last\n\n    # Calculate the total number of magazines\n    total_magazines = (issues_per_year * magazines_ordered) + (issues_last * magazines_last)\n\n    # Display the total number of magazines\n    result = total_magazines\n    return result"}
{"output": "def solution():\n    \n    samantha_paintings = 27\n    shelley_paintings = samantha_paintings - 12\n    kim_paintings = shelley_paintings + 8\n    result = kim_paintings\n    return result"}
{"output": "def solution():\n    \n    november_price = 40\n    december_price = november_price * 1.8\n    january_price = december_price * 0.5\n    result = january_price\n    return result"}
{"output": "def solution():\n    standard_fee = 80  # Charlie's standard fee is $80 per hour\n    veteran_fee = standard_fee * 0.75  # Charlie reduces his rate by 25% when he is giving lessons to a veteran\n    num_standard_lessons = 4  # Charlie has 4 1-hour lessons at his standard rate\n    num_veteran_lessons = 2  # Charlie has 2 1-hour lessons with a veteran\n\n    # Calculate Charlie's total earnings from standard lessons\n    standard_earnings = standard_fee * num_standard_lessons\n\n    # Calculate Charlie's total earnings from veteran lessons\n    veteran_earnings = veteran_fee * num_veteran_lessons\n\n    # Calculate the total earnings for the day\n    total_earnings = standard_earnings + veteran_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the scores of each quiz\n    quiz1_score = 50\n    quiz2_score = 80\n    quiz3_score = 80\n    quiz4_score = 40\n    quiz5_score = 100\n    quiz6_score = 70\n    quiz7_score = 60\n\n    # Calculate the average score\n    average_score = (quiz1_score + quiz2_score + quiz3_score + quiz4_score + quiz5_score + quiz6_score) / 3\n\n    # Display the average score\n    result = average_score\n    return result"}
{"output": "def solution():\n    \n    initial_pomelos = 20\n    remaining_pomelos = initial_pomelos / 4\n    given_away_pomelos = initial_pomelos - remaining_pomelos\n    result = given_away_pomelos\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of apples\n    initial_apples = 60\n\n    # Calculate the number of apples Walter ate\n    ate_apples = initial_apples * (2/5)\n\n    # Calculate the number of apples Walter has left\n    remaining_apples = initial_apples - ate_apples\n\n    # Calculate the number of apples Walter gave to his sister\n    sister_apples = remaining_apples * 0.25\n\n    # Calculate the number of apples Walter has left\n    remaining_apples -= sister_apples\n\n    # Calculate the total amount of money Walter received\n    total_money = remaining_apples * 3\n\n    # Display the total amount of money Walter received\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    last_year_novels = 9\n    this_year_novels = last_year_novels * 0.75\n    result = this_year_novels\n    return result"}
{"output": "def solution():\n    \n    # Define the average speed of Michael and the distance between Alaska and Texas\n    AVERAGE_SPEED = 50\n    DAYS = 3\n\n    # Define the distance between Alaska and Texas\n    distance = 6000\n\n    # Calculate the total distance covered in 3 days\n    total_distance = distance * AVERAGE_SPEED * DAYS\n\n    # Calculate the percentage of the distance covered by Michael\n    percentage_covered = (total_distance / 6000) * 100\n\n    # Display the percentage of the distance covered\n    result = percentage_covered\n    return result"}
{"output": "def solution():\n    \n    madeline_grapes = 6\n    brother_grapes = madeline_grapes * 5\n    remaining_grapes = madeline_grapes - brother_grapes\n    pies = 4\n    grapes_per_pie = 12\n    total_grapes = remaining_grapes * pies\n    result = total_grapes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of teachers and the number of teachers who were sick\n    initial_teachers = 13\n    sick_teachers = 82\n\n    # Calculate the number of teachers at school\n    school_teachers = initial_teachers - sick_teachers + 9\n\n    # Display the number of teachers at school\n    result = school_teachers\n    return result"}
{"output": "def solution():\n    \n    pasta_cost = 1\n    cheddar_cost = 3\n    gruyere_cost = 2 * cheddar_cost\n    total_cost_per_week = pasta_cost + cheddar_cost + gruyere_cost\n    total_cost_per_year = total_cost_per_week * 52\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    total_classrooms = 80  # The custodian has to clean a school with 80 classrooms\n    num_days = 5  # The custodian has 5 days to clean the school\n    time_per_classroom = 15  # It takes the custodian 15 minutes per classroom\n    hours_per_day = 8  # They work an 8 hour day\n\n    # Calculate the total time spent cleaning classrooms\n    total_time = num_days * time_per_classroom * hours_per_day\n\n    # Calculate the total time spent cleaning classrooms\n    total_time = total_classrooms * time_per_classroom\n\n    # Calculate the average time spent cleaning classrooms per day\n    average_time_per_day = total_time / total_time\n\n    # Calculate the percentage of the day spent cleaning classrooms\n    percentage_spent_per_day = (total_time / total_time) * 100\n    result = percentage_spent_per_day\n    return result"}
{"output": "def solution():\n    \n    middle_shelf_books = 10\n    bottom_shelf_books = middle_shelf_books * 2\n    top_shelf_books = bottom_shelf_books - 5\n    total_books = 110\n    bookcases_needed = total_books // (middle_shelf_books + bottom_shelf_books + top_shelf_books)\n    result = bookcases_needed\n    return result"}
{"output": "def solution():\n    num_dozens = 5\n    cost_per_dozen = 2.4\n    num_eggs_per_dozen = 12\n    price_per_egg = 1\n    num_eggs_sold = 3\n\n    # Calculate the total cost of all eggs\n    total_cost = num_dozens * cost_per_dozen\n\n    # Calculate the total revenue from selling all eggs\n    total_revenue = num_eggs_sold * price_per_egg\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    total_hats = 100\n    red_hats = total_hats / 2\n    remaining_hats = total_hats - red_hats\n    blue_hats = (3/5) * remaining_hats\n    white_hats = total_hats - red_hats - blue_hats\n    result = white_hats\n    return result"}
{"output": "def solution():\n    \n    sticks_per_bag = 30\n    cost_per_bag = 18\n    discount_per_bag = 3\n    num_bags = 1\n    total_cost = (num_bags - discount_per_bag) * cost_per_bag\n    cost_per_stick = total_cost / sticks_per_bag\n    result = cost_per_stick\n    return result"}
{"output": "def solution():\n    \n    total_questions = 70 + 40\n    correct_questions = total_questions * 0.6\n    questions_left = total_questions - correct_questions\n    result = questions_left\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of ice cubes made\n    total_cubes = 116\n\n    # Define the ratio of blueberry cubes to strawberry cubes\n    blueberry_to_strawberry_ratio = 5/4\n\n    # Calculate the number of strawberry cubes made\n    strawberry_cubes = total_cubes / (1 + blueberry_to_strawberry_ratio)\n\n    # Calculate the number of blueberry cubes made\n    blueberry_cubes = blueberry_to_strawberry_ratio * strawberry_cubes\n\n    # Display the number of blueberry cubes made\n    result = blueberry_cubes\n    return result"}
{"output": "def solution():\n    \n    games_per_year = 40\n    points_per_game = 21\n    total_points = games_per_year * points_per_game * 4\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    initial_marbles = 10\n    pebble_marbles = initial_marbles / 2\n    scrambled_marbles = 3\n    remaining_marbles = initial_marbles - pebble_marbles - scrambled_marbles - 1\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Jason needs to sell\n    cars_to_sell = 15\n\n    # Define the average number of telephone calls per customer\n    tvs_per_customer = 25 / 2\n\n    # Calculate the total number of telephone calls needed\n    total_tvs = cars_to_sell * tvs_per_customer\n\n    # Display the total number of telephone calls needed\n    result = total_tvs\n    return result"}
{"output": "def solution():\n    \n    num_rooms = 8\n    num_people = 4\n    num_flashlights = 2\n    small_candles_per_room = 4\n    medium_candles_per_room = 5\n    total_candles = (num_rooms // 2) * small_candles_per_room + (num_people // 2) * medium_candles_per_room\n    total_flashlights = num_people * num_flashlights\n    total_candles_and_flashlights = total_candles + total_flashlights\n    result = total_candles_and_flashlights\n    return result"}
{"output": "def solution():\n    \n    bags_of_chips = 2\n    chips_per_bag = 55\n    total_chips = bags_of_chips * chips_per_bag\n    members = 5\n    chips_per_person = total_chips / members\n    result = chips_per_person\n    return result"}
{"output": "def solution():\n    \n    first_side_time = 5\n    second_side_time = 2 * first_side_time\n    third_side_time = 2 * first_side_time\n    last_side_time = 0.5 * first_side_time\n    total_time = first_side_time + second_side_time + third_side_time + last_side_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of helmets\n    helmets = 20\n\n    # Calculate the number of robots\n    robots = helmets / 2\n\n    # Calculate the number of footballs\n    footballs = helmets / 2\n\n    # Calculate the total number of items\n    total_items = helmets + robots + footballs\n\n    # Display the total number of items\n    result = total_items\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 6\n    minutes_per_call = 15\n    days_per_week = 5\n    total_hours = hours_per_day * days_per_week\n    total_calls = total_hours * minutes_per_call\n    result = total_calls\n    return result"}
{"output": "def solution():\n    \n    old_time_per_painting = 7\n    new_time_per_painting = 12\n    old_paintings = 6\n    total_old_time = old_time_per_painting * old_paintings\n    total_new_time = new_time_per_painting * new_paintings\n    time_difference = total_new_time - total_old_time\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of plants and the amount of water needed for each type of plant\n    num_plants = 20\n    half_water_per_plant = 0.5\n    one_cup_water_per_plant = 1\n    quarter_water_per_plant = 0.25\n\n    # Calculate the total amount of water needed for each type of plant\n    total_half_water = 4 * half_water_per_plant\n    total_one_cup_water = 8 * one_cup_water_per_plant\n    total_quarter_water = (num_plants - 4 - 8) * quarter_water_per_plant\n\n    # Calculate the total amount of water needed for all the plants\n    total_water = total_half_water + total_one_cup_water + total_quarter_water\n\n    # return the result\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    total_distance = 200\n    land_speed = 20\n    water_speed = 10\n    land_distance = total_distance / 2\n    water_distance = total_distance / 2\n    time_to_return_home = (land_distance / land_speed) + (water_distance / water_speed)\n    result = time_to_return_home\n    return result"}
{"output": "def solution():\n    \n    sticks_needed = 56\n    popsicles_per_box = 8\n    cost_per_box = 2\n    boxes_needed = sticks_needed / popsicles_per_box\n    total_cost = boxes_needed * cost_per_box\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    main_phone_cost = 20\n    additional_phone_cost = main_phone_cost / 2\n    total_cost = main_phone_cost + (2 * additional_phone_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    doughnuts_per_day = 10 * 12  # Derrick makes 10 dozen doughnuts every day\n    price_per_doughnut = 2  # Derrick sells each doughnut for $2\n    days_in_june = 30  # There are 30 days in June\n\n    # Calculate the total number of doughnuts Derrick makes in June\n    total_doughnuts = doughnuts_per_day * days_in_june\n\n    # Calculate the total amount of money Derrick makes in June\n    total_money = total_doughnuts * price_per_doughnut\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    total_photos = 210\n    photos_per_batch = 7\n    batches_per_day = 6\n    total_photos_per_day = photos_per_batch * batches_per_day\n    days_to_upload = total_photos / total_photos_per_day\n    result = days_to_upload\n    return result"}
{"output": "def solution():\n    \n    blouses_per_week = 5\n    pants_per_week = 2\n    skirts_per_week = 1\n    cost_per_blouse = 5\n    cost_per_skirt = 6\n    cost_per_pants = 8\n    weeks = 5\n    total_cost = (blouses_per_week * cost_per_blouse) + (pants_per_week * cost_per_pants) + (skirts_per_week * cost_per_skirt)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    starting_speed = 150\n    training_speed = starting_speed * 2.5\n    words_per_page = 450\n    pages_to_speak = 10\n    total_words_to_speak = words_per_page * pages_to_speak\n    time_in_hours = total_words_to_speak / starting_speed\n    result = time_in_hours\n    return result"}
{"output": "def solution():\n    \n    first_day = 50\n    second_day = first_day + 20\n    third_day = 2 * second_day\n    total_people = first_day + second_day + third_day\n    result = total_people\n    return result"}
{"output": "def solution():\n    # Calculate the number of popped in the first 30 seconds\n    popped_first_30_seconds = 20\n\n    # Calculate the number of popped in the next 30 seconds\n    popped_next_30_seconds = 3 * popped_first_30_seconds\n\n    # Calculate the number of popped in the next 30 seconds\n    popped_next_30_seconds = 4 * popped_next_30_seconds\n\n    # Calculate the number of popped in the final 30 seconds\n    popped_final_30_seconds = popped_next_30_seconds / 2\n\n    # Calculate the number of popped in the final 30 seconds\n    popped_final_30_seconds = popped_final_30_seconds / 4\n\n    # Calculate the number of popped in the final 30 seconds\n    popped_final_30_seconds = popped_final_30_seconds - popped_final_30_seconds\n\n    # Calculate the number of popped in the final 30 seconds\n    popped_final_30_seconds = popped_final_30_seconds / 4\n\n    result = popped_final_30_seconds\n    return result"}
{"output": "def solution():\n    \n    cups_per_gallon = 1\n    lemons_per_cup = 6\n    gallons_needed = 4\n    extra_gallons = gallons_needed / 2\n    total_cups_needed = gallons_needed - extra_gallons\n    total_lemons_needed = (total_cups_needed / cups_per_gallon) * lemons_per_cup\n    result = total_lemons_needed\n    return result"}
{"output": "def solution():\n    german_shepherds = 3\n    bulldogs = 2\n    german_shepherd_food_per_day = 5\n    bulldog_food_per_day = 3\n    days_per_week = 7\n\n    # Calculate the total amount of dog food needed for German Shepherds in a week\n    german_shepherd_food_per_week = german_shepherds * german_shepherd_food_per_day * days_per_week\n\n    # Calculate the total amount of dog food needed for Bulldogs in a week\n    bulldog_food_per_week = bulldogs * bulldog_food_per_day * days_per_week\n\n    # Calculate the total amount of dog food needed in a week\n    total_food_per_week = german_shepherd_food_per_week + bulldog_food_per_week\n    result = total_food_per_week"}
{"output": "def solution():\n    num_2_legged_animals = 10\n    num_4_legged_animals = 15\n\n    # Calculate the total number of 2-legged animals\n    total_2_legged_animals = num_2_legged_animals * 2\n\n    # Calculate the total number of 4-legged animals\n    total_4_legged_animals = num_4_legged_animals * 4\n\n    # Calculate the total number of pairs of animal legs on the farm\n    total_pairs_of_legs = total_2_legged_animals + total_4_legged_animals\n    result = total_pairs_of_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue blocks\n    blue_blocks = 4\n\n    # Calculate the number of yellow blocks\n    yellow_blocks = 2 * blue_blocks\n\n    # Calculate the total number of blocks\n    total_blocks = blue_blocks + yellow_blocks\n\n    # Calculate the number of red blocks\n    red_blocks = 32 - total_blocks\n\n    # Display the number of red blocks\n    result = red_blocks\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance Elvis traveled in the first 5 hours\n    distance1 = 5 * 18\n\n    # Calculate the distance Elvis traveled in the next 8 hours\n    distance2 = 8 * 18\n\n    # Calculate the total distance Elvis traveled\n    total_distance = distance1 + distance2\n\n    # Display the total distance Elvis traveled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the boat\n    boat_cost = 9000\n\n    # Calculate the value of the boat after the first year\n    year1_depreciation = boat_cost * 0.3\n\n    # Calculate the value of the boat after the second year\n    year2_depreciation = boat_cost * 0.3\n\n    # Calculate the value of the boat after the third year\n    year3_depreciation = boat_cost * 0.2\n\n    # Calculate the total value of the boat after the three years\n    total_value = year1_depreciation + year2_depreciation + year3_depreciation\n\n    # return the result\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red candies\n    red_candies = 54\n\n    # Calculate the number of orange candies\n    orange_candies = red_candies * 2\n\n    # Calculate the number of yellow candies\n    yellow_candies = red_candies / 2\n\n    # Calculate the total number of candies\n    total_candies = red_candies + orange_candies + yellow_candies\n\n    # Calculate the number of pink candies\n    pink_candies = 232 - total_candies\n\n    # Display the number of pink candies\n    result = pink_candies\n    return result"}
{"output": "def solution():\n    \n    nights_at_hotel = 3\n    cost_per_night = 80\n    bus_trips_per_night = 7\n    cost_per_bus_trip = cost_per_night * 0.1\n    total_cost = (nights_at_hotel * cost_per_night) + (bus_trips_per_night * cost_per_bus_trip)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles Mazie has\n    marbles = 52\n\n    # Calculate the number of marbles Dallas has after dropping 4\n    dallas_marbles = 21 - 4\n\n    # Calculate the number of marbles Mazie gives to Darla\n    darla_marbles = marbles - dallas_marbles\n\n    # Display the number of marbles Mazie gives to Darla\n    result = darla_marbles\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of adult tickets and child tickets\n    adult_ticket_cost = 12\n    child_ticket_cost = 8\n    total_adult_ticket_cost = adult_ticket_cost + child_ticket_cost\n\n    # Calculate the total cost of popcorns\n    popcorn_cost = 2 * 3\n    total_popcorn_cost = popcorn_cost * 2\n\n    # Calculate the total cost of all tickets\n    total_cost = total_adult_ticket_cost + total_child_ticket_cost + total_popcorn_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    car_weight = 1200\n    luggage_weight = 250\n    young_children_weight = 75 * 2\n    total_weight = car_weight + luggage_weight + young_children_weight\n    force_needed = total_weight * 0.01\n    result = force_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the length and width of the backyard fence\n    backyard_side_length = 20\n    backyard_side_width = 15\n\n    # Calculate the perimeter of the backyard fence\n    backyard_side_perimeter = backyard_side_length * backyard_side_width\n\n    # Calculate the total length of crepe paper needed\n    total_length = backyard_side_perimeter + backyard_side_perimeter\n\n    # return the result\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    mia_age = 40\n    emma_age = mia_age + 16\n    total_age = mia_age + emma_age\n    average_age = total_age / 2\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of seashells found by each person\n    tom_seashells = 214\n    nancy_seashells = 432\n    benny_seashells = 86\n\n    # Calculate the total number of seashells found\n    total_seashells = tom_seashells + nancy_seashells + benny_seashells\n\n    # Calculate the number of good seashells\n    good_seashells = total_seashells - 67\n\n    # Display the number of good seashells\n    result = good_seashells\n    return result"}
{"output": "def solution():\n    num_people = 12\n    dinner_plate_cost = 6.0\n    bowl_cost = 5.0\n    salad_plate_cost = 4.0\n\n    # Calculate the total cost of dinner plates\n    total_dinner_plate_cost = num_people * dinner_plate_cost\n\n    # Calculate the total cost of bowls\n    total_bowl_cost = num_people * bowl_cost\n\n    # Calculate the total cost of salad plates\n    total_salad_plate_cost = num_people * salad_plate_cost\n\n    # Calculate the total cost of all place settings\n    total_cost = total_dinner_plate_cost + total_bowl_cost + total_salad_plate_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    steve_time = 10\n    anna_time = (steve_time / 2) + 2\n    result = anna_time\n    return result"}
{"output": "def solution():\n    \n    pigs = 5\n    feed_per_pig_per_day = 4 * 2\n    total_feed_per_day = pigs * feed_per_pig_per_day\n    feed_ordered = 300\n    feed_left = total_feed_per_day - feed_ordered\n    result = feed_left\n    return result"}
{"output": "def solution():\n    num_guests = 20\n    hot_dogs_per_guest = 2\n    hot_dogs_left_over = 4\n    hot_dogs_per_pack = 6\n    cost_per_pack = 2\n\n    # Calculate the total number of hot dogs needed\n    total_hot_dogs_needed = num_guests * hot_dogs_per_guest\n\n    # Calculate the total number of hot dogs already eaten\n    total_hot_dogs_eaten = total_hot_dogs_needed - hot_dogs_left_over\n\n    # Calculate the total number of hot dogs needed in packs\n    total_hot_dogs_packs = total_hot_dogs_needed / hot_dogs_per_pack\n\n    # Calculate the total cost of all hot dogs needed\n    total_cost = total_hot_dogs_packs * cost_per_pack\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_cupcakes = 20\n    cupcake_price = 2\n\n    num_cookies = 40\n    cookie_price = 1\n\n    num_trays = 5\n    tray_price = 4\n\n    # Calculate the total earnings from selling cupcakes\n    cupcake_earnings = num_cupcakes * cupcake_price\n\n    # Calculate the total earnings from selling cookies\n    cookie_earnings = num_cookies * cookie_price\n\n    # Calculate the total earnings from selling trays\n    tray_earnings = num_trays * tray_price\n\n    # Calculate the total earnings\n    total_earnings = cupcake_earnings + cookie_earnings + tray_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of children\n    initial_children = 5\n\n    # Calculate the number of children after the first street\n    children_after_first_street = initial_children\n\n    # Calculate the number of children after the second street\n    children_after_second_street = children_after_first_street + 2\n\n    # Calculate the number of children after the third street\n    children_after_third_street = children_after_second_street + 2\n\n    # Calculate the total number of children after the third street\n    total_children = children_after_third_street + children_after_third_street\n\n    # Return the result\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of meals Mamou has to distribute\n    total_meals = 1236\n\n    # Define the number of meals Mamou gave out\n    friday_meals = 64\n    saturday_meals = 30\n    sunday_meals = 48\n\n    # Calculate the total number of meals Mamou gave out\n    total_given_away = friday_meals + saturday_meals + sunday_meals\n\n    # Calculate the number of meals Mamou has left to distribute\n    meals_left = total_meals - total_given_away\n\n    # Display the number of meals Mamou has left to distribute\n    result = meals_left\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin in cents\n    quarter_value = 25\n    nickel_value = 5\n    dime_value = 10\n\n    # Calculate the total value of the coins in cents\n    total_value = quarter_value + (2 * nickel_value) + (7 * dime_value)\n\n    # Display the total value in cents\n    result = total_value\n    return result"}
{"output": "def solution():\n    num_brothers = 2\n    brother_age = 12\n\n    num_sisters = 3\n    sister_age = 16\n\n    # Calculate the age of one brother\n    brother_age_half = brother_age / 2\n\n    # Calculate the total age of all brothers\n    total_brothers_age = num_brothers * brother_age_half\n\n    # Calculate the total age of all sisters\n    total_sisters_age = num_sisters * sister_age\n\n    # Calculate the total age of all siblings\n    total_age = total_brothers_age + total_sisters_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    meditation_time_per_day = 15\n    wake_up_time_per_week = 5\n    yoga_practice_time_per_week = 60\n    weeks = 4\n    total_meditation_time = meditation_time_per_day * wake_up_time_per_week * weeks\n    total_yoga_practice_time = yoga_practice_time_per_week * weeks\n    total_time = total_meditation_time + total_yoga_practice_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    small_shirt_fabric = 3\n    medium_shirt_fabric = 4\n    large_shirt_fabric = 6\n\n    num_small_shirts = 11\n    num_medium_shirts = 8\n    num_large_shirts = 6\n\n    # Calculate the total fabric of all small shirts\n    total_small_shirt_fabric = num_small_shirts * small_shirt_fabric\n\n    # Calculate the total fabric of all medium shirts\n    total_medium_shirt_fabric = num_medium_shirts * medium_shirt_fabric\n\n    # Calculate the total fabric of all large shirts\n    total_large_shirt_fabric = num_large_shirts * large_shirt_fabric\n\n    # Calculate the total fabric of the quilt\n    total_fabric_fabric = total_small_shirt_fabric + total_medium_shirt_fabric + total_large_shirt_fabric\n    result = total_fabric_fabric\n    return result"}
{"output": "def solution():\n    \n    small_sunflower_seeds = 3 * 12\n    large_sunflower_seeds = small_sunflower_seeds * 1.5\n    total_seeds = small_sunflower_seeds + large_sunflower_seeds\n    result = total_seeds\n    return result"}
{"output": "def solution():\n    \n    george_pens = 18\n    timothy_pens = 3 * george_pens\n    sarah_pens = timothy_pens / 2\n    result = sarah_pens\n    return result"}
{"output": "def solution():\n    \n    albert_height = 36\n    anne_height = 2 * albert_height - 2\n    jackie_height = anne_height - 3\n    result = jackie_height\n    return result"}
{"output": "def solution():\n    \n    bars_per_day = 5000\n    days_per_week = 7\n    weeks = 2\n    total_bars = bars_per_day * days_per_week * weeks\n    price_per_bar = 2\n    total_money = total_bars * price_per_bar\n    result = total_money\n    return result"}
{"output": "def solution():\n    num_tshirts = 2\n    tshirt_price = 8\n    shoes_price = 40\n    shoes_discount = 0.4\n\n    # Calculate the discounted price of each T-shirt\n    tshirt_discounted_price = tshirt_price * (1 - shoes_discount)\n\n    # Calculate the total cost of all T-shirts\n    total_tshirt_cost = num_tshirts * tshirt_price\n\n    # Calculate the discounted price of the shoes\n    shoes_discounted_price = shoes_price * (1 - shoes_discount)\n\n    # Calculate the total cost of all shoes\n    total_shoes_cost = num_tshirts * shoes_discounted_price\n\n    # Calculate the total amount spent\n    total_cost = total_tshirt_cost + total_shoes_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Ryan's weekly allowance\n    WEEKLY_ALLOWANCE = 6\n\n    # Define the number of weeks Ryan completed his chores\n    weeks_completed = 3\n\n    # Define the cost of ice cream cones and friends\n    ice_cream_cost = 1.25\n    friends_cost = 3\n\n    # Calculate Ryan's total earnings from his chores\n    total_earnings = weeks_completed * WEEKLY_ALLOWANCE\n\n    # Calculate Ryan's total earnings from ice cream cones and friends\n    total_earnings += ice_cream_cost * 2 + friends_cost * 3\n\n    # Calculate the cost of the movies\n    movie_cost = 6.5\n\n    # Calculate the number of movie tickets Ryan can buy\n    num_movies = total_earnings // movie_cost\n\n    # Display the number of movie tickets Ryan can buy\n    result = num_movies\n    return result"}
{"output": "def solution():\n    \n    ellen_leggings_cost = 100\n    ellen_photo_frame_cost = 5\n    lani_sunglasses_cost = 30\n    lani_bathrobes_cost = 100\n    total_leggings_cost = ellen_leggings_cost\n    total_photo_frame_cost = ellen_photo_frame_cost\n    total_sunglasses_cost = lani_sunglasses_cost\n    total_bathrobes_cost = 2 * lani_bathrobes_cost\n    total_cost = total_leggings_cost + total_photo_frame_cost + total_sunglasses_cost + total_bathrobes_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    passion_fruit_per_jar = 2\n    jackfruit_per_jar = 1.5\n    honey_per_jar = 10\n    passion_fruit_cost = 6\n    jackfruit_cost = 8\n    honey_cost = 10\n    total_passion_fruit_cost = passion_fruit_per_jar * passion_fruit_cost\n    total_jackfruit_cost = jackfruit_per_jar * jackfruit_cost\n    total_honey_cost = honey_per_jar * honey_cost\n    total_cost = total_passion_fruit_cost + total_jackfruit_cost + total_honey_cost\n    total_sales = total_sales * 10\n    profit = total_sales - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    quarters = 32\n    dimes = 95\n    nickels = 120\n    pennies = 750\n    total_quarters = quarters * 25\n    total_dimes = dimes * 10\n    total_nickels = nickels * 5\n    total_pennies = pennies * 1\n    total_cents = total_quarters + total_dimes + total_nickels + total_pennies\n    result = total_cents\n    return result"}
{"output": "def solution():\n    \n    ice_cream_cost = 3.5\n    movie_cost = 7.5\n    bracelet_cost = 8.5\n    total_cost = ice_cream_cost + movie_cost + bracelet_cost\n    money_left = 40 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    num_cars_per_day = 3\n    num_days_per_week = 7\n    num_weeks = 2\n    pay_per_car = 4\n\n    # Calculate the total number of cars Josh services in 2 weeks\n    total_cars_services = num_cars_per_day * num_days_per_week * num_weeks\n\n    # Calculate the total number of cars Josh is open in 2 weeks\n    total_open_days = num_days_per_week - 2\n    total_cars_open = total_cars_services * num_weeks\n\n    # Calculate Josh's total earnings in 2 weeks\n    total_earnings = total_open_days * pay_per_car\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies\n    oatmeal_cookies = 9\n    chocolate_chip_cookies = 4\n    sugar_cookies = 5\n\n    # Subtract the cookies eaten for the early day snack\n    oatmeal_cookies -= 3\n\n    # Subtract the cookies eaten for lunch\n    oatmeal_cookies -= 2\n\n    # Subtract the cookies eaten for dinner\n    sugar_cookies -= 4\n\n    # Calculate the total number of cookies Randy has now\n    total_cookies = oatmeal_cookies + chocolate_chip_cookies + sugar_cookies\n\n    # Display the total number of cookies Randy has now\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toy soldiers and the prices\n    num_toy_soldiers = 12\n    price_per_toy_1 = 5\n    price_per_toy_2 = 7\n\n    # Calculate the total earnings from selling half the collection\n    earnings_from_half_collection = num_toy_soldiers * price_per_toy_1\n\n    # Calculate the total earnings from selling half the collection\n    earnings_from_half_collection = num_toy_soldiers * price_per_toy_2\n\n    # Calculate the total earnings from selling all the items\n    total_earnings = earnings_from_half_collection + earnings_from_half_collection\n\n    # Calculate the amount Matthew would agree to offer\n    amount_to_offer = total_earnings / 2\n\n    # Display the amount Matthew would earn\n    result = amount_to_offer\n    return result"}
{"output": "def solution():\n    \n    holes_per_day = 6\n    days_on_vacation = 14\n    holes_per_week = holes_per_day * days_on_vacation\n    holes_per_day_to_fill = 9\n    new_holes_per_night = 6\n    total_holes_to_fill = holes_per_day_to_fill + new_holes_per_night\n    weeks_to_fill = total_holes_to_fill / total_holes_to_fill\n    result = weeks_to_fill\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students enrolled by Norman High School\n    normal_school_students = 4000\n\n    # Calculate the number of students enrolled by Butler High School\n    butler_school_students = (3/4) * normal_school_students\n\n    # Calculate the difference in the number of students enrolled by Norman High School and Butler High School\n    difference = normal_school_students - butler_school_students\n\n    # Display the difference in the number of students enrolled by Norman High School and Butler High School\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 7995\n    rainbow_cookies = 2595\n    oatmeal_cookies = 3075\n    chocolate_cookies = total_cookies - rainbow_cookies - oatmeal_cookies\n    result = chocolate_cookies\n    return result"}
{"output": "def solution():\n    num_test_tubes = 16\n    num_beakers = 7\n    num_petri_dishes = 14\n\n    # Calculate the number of test tubes Igor gathered\n    num_test_tubes_gathered = num_test_tubes / 2\n\n    # Calculate the number of Petri dishes Igor gathered\n    num_petri_dishes_gathered = num_petri_dishes + 2\n\n    # Calculate the total number of test tubes Igor gathered\n    total_test_tubes_gathered = num_test_tubes_gathered + num_petri_dishes_gathered\n\n    # Calculate the number of beakers Igor lost\n    num_beakers_lost = num_beakers - num_beakers_gathered\n\n    # Calculate the total number of dishes Igor gathered\n    total_dishes_gathered = num_test_tubes_gathered + num_petri_dishes_gather"}
{"output": "def solution():\n    num_tables = 4\n    legs_per_table = 4\n    screws_per_leg = 2\n    total_screws = 40\n\n    # Calculate the total number of screws needed for all tables\n    total_screws_needed = num_tables * legs_per_table * screws_per_leg\n\n    # Calculate the number of screws left over\n    screws_left_over = total_screws - total_screws_needed\n    result = screws_left_over\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in the first basket\n    eggs_1 = 10\n\n    # Calculate the number of eggs in the second basket\n    eggs_2 = eggs_1 * 2\n\n    # Calculate the total number of eggs\n    total_eggs = eggs_1 + eggs_2\n\n    # Display the total number of eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    alexandra_raised = 430\n    kim_raised = alexandra_raised + 320\n    sarah_raised = 300\n    maryam_raised = sarah_raised + 400\n    total_raised = alexandra_raised + kim_raised + sarah_raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    aaron_speed = 2\n    vanessa_speed = 4\n    aaron_time = 16\n    aaron_distance = aaron_speed * aaron_distance\n    vanessa_distance = aaron_distance / vanessa_speed\n    vanessa_time = vanessa_distance / vanessa_speed\n    result = vanessa_time\n    return result"}
{"output": "def solution():\n    \n    dock_length = 200\n    new_line_length = 6\n    line_per_foot = 3\n    total_line_needed = (dock_length - new_line_length) * line_per_foot\n    result = total_line_needed\n    return result"}
{"output": "def solution():\n    num_reservations_per_night = 6\n    num_meals_per_day = 2\n    cost_per_meal = 5\n    cost_per_bottle_of_wine = 5\n    num_days_per_week = 2\n\n    # Calculate the total cost of all meals per week\n    total_meal_cost_per_week = num_meals_per_day * cost_per_meal\n\n    # Calculate the total cost of all bottles of wine per week\n    total_wine_cost_per_week = num_days_per_week * cost_per_bottle_of_wine\n\n    # Calculate the total earnings per week\n    total_earnings_per_week = total_meal_cost_per_week + total_wine_cost_per_week\n    result = total_earnings_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost and selling price of each watermelon\n    INITIAL_COST = 80\n    SELLING_PRICE = INITIAL_COST * 1.25\n\n    # Calculate the number of watermelons sold\n    watermelons_sold = 50\n\n    # Calculate the profit earned per watermelon\n    profit_earned = SELLING_PRICE - INITIAL_COST\n\n    # Calculate the earnings per watermelon\n    earnings_per_watermelon = profit_earned / watermelons_sold\n\n    # Display the earnings per watermelon\n    result = earnings_per_watermelon\n    return result"}
{"output": "def solution():\n    \n    james_age_when_john_was_19 = 19\n    dora_age_when_james_is_twice_as_old = 12\n    dora_age_in_3_years = dora_age_when_james_is_twice_as_old + 3\n    james_age_in_3_years = james_age_when_james_was_19 + 3\n    john_age_when_john_was_32 = 32\n    john_age_in_3_years = john_age_when_john_was_32 - james_age_in_3_years\n    result = john_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes Ana and Jane to peel oranges\n    ana_time = 3\n    jane_time = 4\n\n    # Calculate the total time it takes Ana and Jane to peel oranges\n    total_time = ana_time + jane_time\n\n    # Calculate the number of oranges Ana will peel in an hour\n    ana_oranges = total_time / 60\n\n    # Calculate the number of oranges Jane will peel in an hour\n    jane_oranges = total_time / 60\n\n    # Calculate the difference between the number of oranges Ana and Jane will peel in an hour\n    difference = ana_oranges - jane_oranges\n\n    # Return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the new radiator and the discount percentage\n    NEW_RADATOR_COST = 400\n    DISCOUNT_PERCENTAGE = 80\n\n    # Calculate the discounted cost of the new radiator\n    discounted_cost = NEW_RADATOR_COST * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the cost of the mechanic\n    mechanic_cost = 3 * 50\n\n    # Calculate the total cost\n    total_cost = discounted_cost + mechanic_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_animals = 20\n    total_legs = 70\n    chicken_legs = (total_legs - total_legs) / 2\n    result = chicken_legs\n    return result"}
{"output": "def solution():\n    \n    num_people = 4\n    num_pizzas = 7\n    slices_per_pizza = 8\n    total_slices = num_pizzas * slices_per_pizza\n    slices_per_person = total_slices / num_people\n    result = slices_per_person\n    return result"}