{"output": "def solution():\n    \n    # Define the amount of feed each chicken feeds\n    feed_per_chicken = 3\n\n    # Calculate the total amount of feed needed\n    total_feed = feed_per_chicken * 3\n\n    # Calculate the amount of feed given in the morning\n    morning_feed = 15\n\n    # Calculate the amount of feed given in the afternoon\n    afternoon_feed = 25\n\n    # Calculate the total amount of feed needed in the final meal\n    final_feed = total_feed - morning_feed - afternoon_feed\n\n    # Display the amount of feed needed in the final meal\n    result = final_feed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of one glass and the discount percentage\n    GLASS_PRICE = 5\n    DISCOUNT_PERCENTAGE = 0.6\n\n    # Define the number of glasses Kylar wants to buy\n    num_glasses = 16\n\n    # Calculate the total cost of the first glasses\n    first_glass_cost = num_glasses * GLASS_PRICE\n\n    # Calculate the total cost of the second glasses\n    second_glass_cost = num_glasses * GLASS_PRICE * DISCOUNT_PERCENTAGE\n\n    # Calculate the total cost of all the glasses\n    total_cost = first_glass_cost + second_glass_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sheep Seattle has\n    seattle_sheep = 20\n\n    # Calculate the number of sheep Charleston has\n    charleston_sheep = seattle_sheep * 4\n\n    # Calculate the number of sheep Toulouse has\n    toulouse_sheep = charleston_sheep * 2\n\n    # Calculate the total number of sheep\n    total_sheep = seattle_sheep + charleston_sheep + toulouse_sheep\n\n    # Display the total number of sheep\n    result = total_sheep\n    return result"}
{"output": "def solution():\n    \n    # Define the size of the file and the download speed\n    file_size = 200\n    download_speed = 2\n\n    # Calculate the time it takes to download the file without the restart\n    time_without_restart = file_size / download_speed\n\n    # Calculate the time it takes to download the file with the restart\n    time_with_restart = time_without_restart * 0.4\n\n    # Calculate the total time to download the file with the restart\n    total_time = time_with_restart + 20\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance covered in the first 2 hours\n    distance_first_2_hours = 2 * 60\n\n    # Calculate the distance covered in the next half-hours\n    distance_next_half_hours = 0.5 * 30 * 4\n\n    # Calculate the total distance covered\n    total_distance = distance_first_2_hours + distance_next_half_hours\n\n    # Calculate the distance covered in the remaining 4 hours\n    distance_remaining_4_hours = 80 * 4\n\n    # Calculate the total distance covered\n    total_distance = total_distance + distance_remaining_4_hours\n\n    # Display the total distance covered\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    regular_rate = 10\n    regular_hours = 40\n    overtime_rate = regular_rate * 1.2\n    regular_pay = regular_rate * regular_hours\n    overtime_pay = overtime_rate * 45\n    total_pay = regular_pay + overtime_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the number of downloads in the first month\n    first_month_downloads = 60\n\n    # Calculate the number of downloads in the second month\n    second_month_downloads = first_month_downloads * 3\n\n    # Calculate the number of downloads in the third month\n    third_month_downloads = second_month_downloads * 0.7\n\n    # Calculate the total number of downloads over the three months\n    total_downloads = first_month_downloads + second_month_downloads + third_month_downloads\n\n    # Display the total number of downloads\n    result = total_downloads\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of pastry\n    donut_cost = 68\n    cupcake_cost = 80\n    cheesecake_cost = 55\n\n    # Define the number of each type of pastry purchased\n    donut_dozen = 3\n    cupcake_dozen = 2\n    cheesecake_dozen = 6\n\n    # Calculate the total cost of the donuts\n    donut_total = donut_dozen * donut_cost\n\n    # Calculate the total cost of the cupcakes\n    cupcake_total = cupcake_dozen * cupcake_cost\n\n    # Calculate the total cost of the cheesecakes\n    cheesecake_total = cheesecake_dozen * cheesecake_cost\n\n    # Calculate the total cost of all the pastries\n    total_cost = donut_total + cupcake_total + cheesecake_total\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost to plant the tree and the revenue per lemon\n    INITIAL_COST = 90\n    REVENUE_PER_LEMON = 1.5\n\n    # Define the cost to water and feed the tree each year\n    WATER_COST = 3\n\n    # Calculate the number of lemons needed to reach the initial cost\n    lemons_needed = INITIAL_COST / REVENUE_PER_LEMON\n\n    # Calculate the number of years needed to reach the initial cost\n    years_needed = lemons_needed / 7\n\n    # Display the number of years needed\n    result = years_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vacuum cleaners left\n    vacuum_cleaners_left = 5\n\n    # Calculate the number of vacuum cleaners sold at the green house\n    green_cleaners = vacuum_cleaners_left / 3\n\n    # Calculate the number of vacuum cleaners sold to the red house\n    red_cleaners = green_cleaners + 2\n\n    # Calculate the number of vacuum cleaners sold at the orange house\n    orange_cleaners = vacuum_cleaners_left / 2\n\n    # Calculate the total number of vacuum cleaners sold\n    total_cleaners = green_cleaners + red_cleaners + orange_cleaners\n\n    # Display the total number of vacuum cleaners sold\n    result = total_cleaners\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students\n    total_students = 20\n\n    # Calculate the number of students who enrolled in contemporary dance\n    contemporary_students = total_students * 0.2\n\n    # Calculate the number of students who enrolled in jazz dance\n    remaining_students = total_students - contemporary_students\n    jazz_students = remaining_students * 0.25\n\n    # Calculate the number of students who enrolled in hip-hop dance\n    hip_hop_students = total_students - contemporary_students - jazz_students\n\n    # Calculate the percentage of students who enrolled in hip-hop dance\n    hip_hop_percentage = (hip_hop_students / total_students) * 100\n\n    # return the result\n    result = hip_hop_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of jewelry and electronic gadgets\n    jewelry_price = 5000\n    gadgets_price = 8000\n\n    # Calculate the total cost of each purchase\n    jewelry_cost = jewelry_price * 1.5\n    gadgets_cost = gadgets_price * 1.2\n\n    # Calculate the total revenue from each purchase\n    jewelry_revenue = jewelry_price * 1.5\n    gadgets_revenue = gadgets_price * 1.2\n\n    # Calculate the total profit\n    total_profit = (jewelry_revenue + gadgets_revenue) - (jewelry_cost + gadgets_cost)\n\n    # Display the total profit\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance covered by each train in the first day\n    day1_distance = 80 + 150\n\n    # Calculate the distance covered by each train in the second day\n    day2_distance = 150 + 150\n\n    # Calculate the total distance covered by both trains\n    total_distance = day1_distance + day2_distance\n\n    # Display the total distance covered\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    teacher_salary = 20 * 35 * 50\n    coach_salary = 30 * 15 * 50\n    total_salary = teacher_salary + coach_salary\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days in a week and the number of weeks\n    DAYS_IN_WEEK = 7\n    WEEKS = 4\n\n    # Calculate the total number of eggs eaten\n    total_eggs = 3 * DAYS_IN_WEEK * WEEKS\n\n    # Calculate the total number of dozens of eggs eaten\n    total_dozens = total_eggs / 12\n\n    # Display the total number of dozens of eggs eaten\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    total_distance = 12  # Marissa is hiking a 12-mile trail\n    distance_1 = 4  # Marissa walks 4 miles in the first 4 miles\n    distance_2 = 2  # Marissa walks 2 miles in the next 2 miles\n    average_speed = 4  # Marissa wants her average speed to be 4 miles per hour\n\n    # Calculate the time taken to walk the first 4 miles\n    time_1 = 1  # Marissa takes 1 hour to walk the first 4 miles\n\n    # Calculate the time taken to walk the next 2 miles\n    time_2 = 2  # Marissa takes 2 hours to walk the next 2 miles\n\n    # Calculate the total time taken to walk all 4 miles\n    total_time = time_1 + time_2\n\n    # Calculate the remaining distance\n    remaining_distance = total_distance - total_time\n\n    # Calculate the required speed to walk the remaining distance\n    required_speed = remaining_distance / (average_speed - time_1)\n    result = required"}
{"output": "def solution():\n    \n    orange_water = 10 * (2/3)\n    pineapple_water = 15 * (3/5)\n    total_water = orange_water + pineapple_water\n    remaining_water = 24 - total_water\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    \n    # Define the current age of Samantha\n    samantha_age = 31\n\n    # Calculate the age difference between Raymond and Samantha\n    age_diff = samantha_age - 6\n\n    # Calculate the current age of Raymond's son\n    son_age = 23\n\n    # Calculate the age difference between Raymond and Samantha\n    son_age_diff = son_age - age_diff\n\n    # Calculate the number of years ago Raymond's son was born\n    years_ago = son_age_diff - 6\n\n    # return the result\n    result = years_ago\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers and the number of DVDs sold\n    num_customers = 8\n    dVDs_sold = 0\n\n    # Calculate the number of DVDs sold in the first 3 customers\n    dVDs_sold += 3\n\n    # Calculate the number of DVDs sold in the next 2 customers\n    dVDs_sold += 2 * 2\n\n    # Calculate the number of DVDs sold in the last 3 customers\n    dVDs_sold += 3\n\n    # Display the total number of DVDs sold\n    result = dVDs_sold\n    return result"}
{"output": "def solution():\n    # Calculate the amount of time the candle burns in minutes\n    time_in_minutes = (5 - 1) * 60\n\n    # Calculate the amount of time the candle melts in minutes\n    time_in_minutes = time_in_minutes * 60\n\n    # Calculate the amount of centimeters the candle melts in minutes\n    melts_in_minutes = 2 * time_in_minutes\n\n    # Calculate the total amount of centimeters the candle melts in minutes\n    total_melts = melts_in_minutes\n\n    # Calculate the amount of centimeters shorter the candle will be after burning in minutes\n    shorter_melts = total_melts - total_melts\n    result = shorter_melts\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the book and the discount percentage\n    book_price = 19.5\n    discount_percentage = 25\n\n    # Calculate the original price of the book\n    original_price = book_price / (1 - discount_percentage/100)\n\n    # Display the original price of the book\n    result = original_price\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    CHICKEN_MEAL_PRICE = 12\n    MILK_PRICE = 3\n    APPLE_PRICE = 1.5\n    PIZZA_PRICE = 8.5\n\n    # Define the quantities of each item ordered\n    chicken_meal_quantity = 1\n    milk_quantity = 5\n    apple_quantity = 4\n\n    # Calculate the total cost of each item\n    chicken_meal_cost = chicken_meal_quantity\n    milk_cost = milk_quantity * MILK_PRICE\n    apple_cost = apple_quantity * APPLE_PRICE\n\n    # Calculate the total cost of all items\n    total_cost = chicken_meal_cost + milk_cost + apple_cost\n\n    # Calculate the number of boxes of pizza ordered\n    pizza_boxes = (50 - total_cost) / PIZZA_PRICE\n\n    # Display the number of boxes of piz"}
{"output": "def solution():\n    num_shorts = 3\n    shorts_price = 16.5\n\n    num_pants = 3\n    pants_price = 22.5\n\n    num_shoes = 3\n    shoes_price = 42\n\n    # Calculate the total cost of all shorts\n    total_shorts_cost = num_shorts * shorts_price\n\n    # Calculate the total cost of all pants\n    total_pants_cost = num_pants * pants_price\n\n    # Calculate the total cost of all shoes\n    total_shoes_cost = num_shoes * shoes_price\n\n    # Calculate the total cost of all clothing items\n    total_cost = total_shorts_cost + total_pants_cost + total_shoes_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    servings_per_carton = 15\n    cost_per_carton = 4.0\n    num_days = 60\n\n    # Calculate the total number of servings of ice cream Cynthia will eat in 60 days\n    total_servings = servings_per_carton * num_days\n\n    # Calculate the total number of cartons of ice cream Cynthia will buy\n    total_cartons = total_servings / servings_per_carton\n\n    # Calculate the total cost of all cartons of ice cream Cynthia will buy\n    total_cost = total_cartons * cost_per_carton\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_distance = 60\n    first_stop_distance = 20\n    second_stop_distance = total_distance - first_stop_distance - 15\n    result = first_stop_distance + second_stop_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pair of high heels\n    HEEL_COST = 33\n\n    # Calculate the total cost of the high heels\n    high_heels_total_cost = 2 * HEEL_COST\n\n    # Calculate the cost of the boots\n    boots_cost = (high_heels_total_cost + 5) / 2\n\n    # Display the cost of the boots\n    result = boots_cost\n    return result"}
{"output": "def solution():\n    \n    total_ratio = 7 + 11\n    allen_ratio = 11\n    total_age = 162\n    allen_age = (allen_ratio / total_ratio) * total_age\n    allen_age_in_10_years = allen_age + 10\n    result = allen_age_in_10_years\n    return result"}
{"output": "def solution():\n    \n    first_guess = 80\n    second_guess = (first_guess / 2) + 20\n    third_guess = first_guess * 1.25\n    total_guess = first_guess + second_guess + third_guess\n    average_guess = total_guess / 3\n    result = average_guess\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and the time per dog\n    num_dogs = 10\n    time_per_dog = 0.5\n\n    # Calculate the total time spent taking care of all dogs per day\n    total_time_per_day = num_dogs * time_per_dog\n\n    # Calculate the total time spent taking care of all dogs per week\n    total_time_per_week = total_time_per_day * 7\n\n    # return the result\n    result = total_time_per_week\n    return result"}
{"output": "def solution():\n    \n    total_coins = 110\n    silver_coins = (total_coins - 30) / 2\n    gold_coins = silver_coins + 30\n    result = gold_coins\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jewels Raymond has\n    raymond_jewels = 40\n\n    # Calculate the number of jewels Aaron has\n    aaron_jewels = (raymond_jewels / 2) + 5\n\n    # Calculate the number of jewels Siobhan has\n    siobhan_jewels = aaron_jewels - 2\n\n    # Display the number of jewels Siobhan has\n    result = siobhan_jewels\n    return result"}
{"output": "def solution():\n    \n    first_20_minutes_points = 4\n    second_20_minutes_points = first_20_minutes_points * 1.25\n    total_points = first_20_minutes_points + second_20_minutes_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of yogurts eaten per day and the price per yogurt\n    YOGURTS_PER_DAY = 2\n    PRICE_PER_YOGURT = 5.0\n\n    # Calculate the total number of yogurts eaten over 30 days\n    total_yogurts = YOGURTS_PER_DAY * 30\n\n    # Calculate the total cost of the yogurts\n    total_cost = total_yogurts * PRICE_PER_YOGURT\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of buying 8 video games\n    total_cost = 8 * 20\n\n    # Calculate the total amount of money John earns from selling the video games\n    total_money = total_cost + 5\n\n    # Calculate the number of lego sets John still has\n    lego_sets = 13 - total_money\n    result = lego_sets\n    return result"}
{"output": "def solution():\n    \n    total_miles = 60\n    days_per_week = 3\n    first_day_hours = 3\n    second_day_hours = (total_miles - first_day_hours) / 2\n    total_hours = first_day_hours + second_day_hours\n    fast_miles = total_miles / total_hours\n    result = fast_miles\n    return result"}
{"output": "def solution():\n    # Calculate the distance Dana can run in 6 hours\n    distance_running = (1/3) * 6  # one-third of the time running\n    distance_walking = (2/3) * 6  # two-thirds of the time walking\n    distance_running = distance_running * 4  # Dana can run at a rate of speed four times faster than she can walk\n    distance_walking = distance_walking * 4  # Dana can run at a rate of speed four times faster than she can walk\n    total_distance = distance_running + distance_walking + distance_skiping\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define Suzy's iPhone's age\n    suzy_age = 1\n\n    # Calculate Ben's iPhone's age\n    ben_age = suzy_age * 2\n\n    # Calculate Brandon's iPhone's age\n    brandon_age = ben_age * 4\n\n    # Display Brandon's iPhone's age\n    result = brandon_age\n    return result"}
{"output": "def solution():\n    \n    total_distance = 1000\n    distance_without_gemstone = 400\n    distance_with_gemstone = distance_without_gemstone * 3\n    distance_outside_gemstone = total_distance - distance_with_gemstone\n    result = distance_outside_gemstone\n    return result"}
{"output": "def solution():\n    \n    total_pies = 5\n    pieces_per_pie = 8\n    total_pieces = total_pies * pieces_per_pie\n    eaten_pieces = 14\n    taken_pieces = total_pieces - eaten_pieces\n    result = taken_pieces\n    return result"}
{"output": "def solution():\n    \n    calories_per_serving = 250\n    servings_per_bag = 5\n    total_calories = calories_per_serving * servings_per_bag\n    daily_calorie_target = 2000\n    consumed_calories = 1800\n    remaining_calories = total_calories - consumed_calories\n    grams_can_eat = remaining_calories / daily_calorie_target\n    result = grams_can_eat\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of supplies per pound of beeswax\n    COST_PER_POUND = 10\n\n    # Calculate the number of pounds of beeswax that can be made\n    pounds_of_beeswax = 20 / 10\n\n    # Calculate the total revenue from selling the candles\n    total_revenue = pounds_of_beeswax * 2\n\n    # Calculate the total cost of supplies\n    total_cost = pounds_of_beeswax * COST_PER_POUND\n\n    # Calculate the net profit\n    net_profit = total_revenue - total_cost\n\n    # Display the net profit\n    result = net_profit\n    return result"}
{"output": "def solution():\n    # Calculate the total number of hours spent writing articles on Monday\n    monday_hours = 5 * 4\n\n    # Calculate the total number of hours spent writing articles on Tuesday\n    tuesday_hours = (2/5) * 5 * 4\n\n    # Calculate the total number of hours spent writing articles on Wednesday\n    wednesday_hours = 2 * tuesday_hours\n\n    # Calculate the total number of hours spent writing articles in three days\n    total_hours = monday_hours + tuesday_hours + wednesday_hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of post-it notes\n    initial_notes = 80\n\n    # Define the number of cups of coffee\n    cups_of_coffee = 220\n\n    # Calculate the total number of post-it notes\n    total_notes = cups_of_coffee * 1\n\n    # Calculate the number of post-it notes in the package\n    notes_in_package = initial_notes + total_notes - 23\n\n    # return the result\n    result = notes_in_package\n    return result"}
{"output": "def solution():\n    num_blue_ties = 200\n    blue_tie_cost = 40\n    num_red_ties = num_blue_ties * 2\n    red_tie_cost = blue_tie_cost * 1.5\n\n    # Calculate the total cost of all blue ties\n    total_blue_tie_cost = num_blue_ties * blue_tie_cost\n\n    # Calculate the total cost of all red ties\n    total_red_tie_cost = num_red_ties * red_tie_cost\n\n    # Calculate the total cost of all ties\n    total_cost = total_blue_tie_cost + total_red_tie_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Convert the length of the wire from feet to inches\n    length_inches = 4 * 12\n\n    # Calculate the number of pieces\n    num_pieces = length_inches // 6\n\n    # Display the number of pieces\n    result = num_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the number of floors and units per floor\n    FLOORS = 15\n    UNITS_PER_FLOOR = 8\n\n    # Calculate the total number of units in the building\n    total_units = FLOORS * UNITS_PER_FLOOR\n\n    # Calculate the number of occupied units in the building\n    occupied_units = int(total_units * 0.75)\n\n    # Calculate the number of unoccupied units in the building\n    unoccupied_units = total_units - occupied_units\n\n    # Display the total number of unoccupied units\n    result = unoccupied_units\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced per day and the price per dozen\n    EGGS_PER_DAY = 252\n    PRICE_PER_DOZEN = 2\n\n    # Calculate the number of dozens of eggs produced per day\n    dozens_per_day = EGGS_PER_DAY / 12\n\n    # Calculate the total earnings per day\n    earnings_per_day = dozens_per_day * PRICE_PER_DOZEN\n\n    # Calculate the total earnings per week\n    earnings_per_week = earnings_per_day * 7\n\n    # Display the total earnings per week\n    result = earnings_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of the ship\n    SHIPPING_SPEED = 10\n\n    # Define the time it takes to travel from 1 to 4 PM\n    time_1 = 1 / SHIPPING_SPEED\n\n    # Define the speed of the ship to travel back\n    SPEED_BACK = 6\n\n    # Calculate the time it takes to travel back\n    time_2 = time_1 / SPEED_BACK\n\n    # Display the time it takes to travel back\n    result = time_2\n    return result"}
{"output": "def solution():\n    total_weight = 15\n    num_comic_books = 30\n    comic_book_weight = 1/4\n    toy_weight = 1/2\n\n    # Calculate the total weight of all comic books\n    total_comic_weight = num_comic_books * comic_book_weight\n\n    # Calculate the total weight of all toys\n    total_toy_weight = total_weight - total_comic_weight\n\n    # Calculate the number of toys to remove\n    num_toys = total_toy_weight / toy_weight\n    result = num_toys\n    return result"}
{"output": "def solution():\n    # Calculate the total revenue earned on Thursday\n    thursday_revenue = 6 * 60 + 4 * 40\n\n    # Calculate the total revenue earned on Friday\n    friday_revenue = 12 * 40\n\n    # Calculate the difference in revenue between Thursday and Friday\n    revenue_difference = thursday_revenue - friday_revenue\n    result = revenue_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of kittens adopted by each cat\n    cat1_kittens = 3 * 7\n    cat2_kittens = 12\n\n    # Calculate the total number of kittens\n    total_kittens = cat1_kittens + cat2_kittens\n\n    # Display the total number of kittens\n    result = total_kittens\n    return result"}
{"output": "def solution():\n    \n    total_lollipops = 30\n    eaten_lollipops = 2\n    remaining_lollipops = total_lollipops - eaten_lollipops\n    bags = remaining_lollipops // 2\n    result = bags\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a ticket and popcorn\n    TICKET_PRICE = 7\n    POPCORN_PRICE = 7\n\n    # Define the total amount of money Peter has\n    total_money = 42\n\n    # Calculate the maximum number of times Peter can go to the movies\n    max_movies = (total_money - (TICKET_PRICE + POPCORN_PRICE)) // TICKET_PRICE\n\n    # Display the maximum number of times Peter can go to the movies\n    result = max_movies\n    return result"}
{"output": "def solution():\n    \n    bridge_limit = 5000\n    box_weight = 15\n    total_weight = 3755\n    remaining_weight = total_weight - box_weight\n    max_boxes = remaining_weight // box_weight\n    result = max_boxes\n    return result"}
{"output": "def solution():\n    \n    bill = 40\n    delivery_fee = 3\n    tip = 4\n    total_fee = bill + delivery_fee + tip\n    final_price = total_fee / 0.25\n    result = final_price\n    return result"}
{"output": "def solution():\n    num_clusters = 6\n    num_fruit_per_cluster = 20\n    num_scattered_fruit = 67\n\n    # Calculate the total number of fruit across all clusters\n    total_fruit = num_clusters * num_fruit_per_cluster\n\n    # Calculate the total number of raspberries\n    total_raspberries = total_fruit + num_scattered_fruit\n    result = total_raspberries\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of oranges in the basket\n    total_oranges = 25\n\n    # Calculate the number of unripe oranges\n    unripe_oranges = total_oranges * 0.2\n\n    # Calculate the number of good oranges\n    good_oranges = total_oranges - unripe_oranges - 2\n\n    # Display the number of good oranges\n    result = good_oranges\n    return result"}
{"output": "def solution():\n    \n    material_cost = 500\n    jeweler_cost = 800\n    total_cost = material_cost + jeweler_cost\n    insured_percent = 10\n    insured_amount = total_cost * (insured_percent / 100)\n    final_cost = total_cost - insured_amount\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial annual pension value and the percentage increase\n    INITIAL_VALUE = 50000\n    PERCENTAGE_INCREASE = 0.05\n\n    # Calculate the annual pension value after 20 years\n    annual_value_20_years = INITIAL_VALUE * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate the annual pension value after 30 years\n    annual_value_30_years = annual_value_20_years * (1 - PERCENTAGE_INCREASE)\n\n    # Display the annual pension value\n    result = annual_value\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per month and the number of months in a year\n    COST_PER_MONTH = 140\n    MONTHS_IN_YEAR = 12\n\n    # Calculate the total cost for the first half of the year\n    first_half_cost = COST_PER_MONTH * (MONTHS_IN_YEAR / 2)\n\n    # Calculate the cost for the second half of the year\n    second_half_cost = (COST_PER_MONTH * (1 - 0.1)) * (MONTHS_IN_YEAR / 2)\n\n    # Calculate the total cost for the entire year\n    total_cost = first_half_cost + second_half_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the distance traveled and the amount of gas needed to fill the tank\n    distance_traveled = 100\n    gas_needed = 4\n\n    # Define the volume of gas in the tank\n    gas_volume = 12\n\n    # Calculate the total distance traveled\n    total_distance = distance_traveled + (gas_volume / gas_volume)\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the time spent watching TV\n    tv_time = 2\n\n    # Calculate the time spent going to bed and reading\n    bed_reading_time = tv_time / 2\n\n    # Calculate the total time spent watching TV and reading in one week\n    weekly_reading_time = (tv_time + bed_reading_time) * 3\n\n    # Calculate the total time spent watching TV and reading in four weeks\n    total_time = weekly_reading_time * 4\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of schools and players per school\n    NUM_SCHOOLS = 4\n    GIRLS_PLAYERS_PER_SCHOOL = 1\n    BOYS_PLAYERS_PER_SCHOOL = 1\n    PLAYERS_PER_SCHOOL = 5\n    COACHS_PER_SCHOOL = 1\n\n    # Calculate the total number of players\n    total_players = NUM_SCHOOLS * (GIRLS_PLAYERS_PER_SCHOOL + BOYS_PLAYERS_PER_SCHOOL) * PLAYERS_PER_SCHOOL\n\n    # Calculate the total number of coachs\n    total_coachs = NUM_SCHOOLS * COACHS_PER_SCHOOL\n\n    # Calculate the total number of people\n    total_people = total_players + total_coachs\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of diamonds\n    diamonds = 175\n\n    # Calculate the number of rubies\n    rubies = diamonds - 35\n\n    # Calculate the number of emeralds\n    emeralds = 2 * rubies\n\n    # Calculate the total number of gems\n    total_gems = diamonds + rubies + emeralds\n\n    # Display the total number of gems\n    result = total_gems\n    return result"}
{"output": "def solution():\n    \n    # Define the number of girls and boys\n    num_girls = 60\n    num_boys = num_girls * 2\n\n    # Calculate the total number of students\n    total_students = num_girls + num_boys\n\n    # Calculate the number of teachers\n    num_teachers = total_students // 5\n\n    # Display the number of teachers\n    result = num_teachers\n    return result"}
{"output": "def solution():\n    \n    # Define the weekly allowance and the number of weeks\n    weekly_allowance = 5\n    weeks = 8\n\n    # Calculate the total amount of money Bailey receives\n    total_money = weekly_allowance * weeks\n\n    # Calculate the amount of money Bailey started with\n    starting_money = 100 - total_money\n\n    # return the result\n    result = starting_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classes and students per class\n    dance_classes = 5\n    weekdays = 5\n    saturday_classes = 8\n    students_per_class = 15\n\n    # Calculate the total number of students\n    total_students = (dance_classes * weekdays) + (saturday_classes * students_per_class)\n\n    # Calculate the total earnings\n    earnings = total_students * 15\n\n    # return the result\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of instructions in the first recipes\n    first_recipes = 20\n\n    # Define the number of instructions in the second recipes\n    second_recipes = first_recipes * 2\n\n    # Calculate the total number of instructions to be read\n    total_instructions = first_recipes + second_recipes\n\n    # return the result\n    result = total_instructions\n    return result"}
{"output": "def solution():\n    \n    # Define the price of brownies and cheesecakes\n    brownie_price = 3\n    cheesecake_price = 4\n\n    # Calculate the total amount raised from selling brownies and cheesecakes\n    brownie_sales = 43 * brownie_price\n    cheesecake_sales = 23 * cheesecake_price\n    total_sales = brownie_sales + cheesecake_sales\n\n    # return the result\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each cell phone and the interest rate\n    PHONE_COST = 150\n    INTEREST_RATE = 0.02\n\n    # Calculate the total cost of the cell phones for 3 months\n    total_cost = PHONE_COST * 5 * 3\n\n    # Calculate the interest charged for each unit\n    interest_charged = total_cost * INTEREST_RATE\n\n    # Calculate the total cost per month\n    monthly_cost = total_cost + interest_charged\n\n    # Display the monthly cost\n    result = monthly_cost\n    return result"}
{"output": "def solution():\n    \n    marigold_price = 2.74\n    petunias_price = 1.87\n    begonias_price = 2.12\n    marigold_pots = 12\n    petunias_pots = 9\n    begonias_pots = 17\n    total_marigold_price = marigold_price * marigold_pots\n    total_petunias_price = petunias_price * petunias_pots\n    total_begonias_price = begonias_price * begonias_pots\n    total_sales = total_marigold_price + total_petunias_price + total_begonias_price\n    result = round(total_sales, 2)\n    return result"}
{"output": "def solution():\n    \n    top_level = 16\n    second_level = top_level / 2\n    third_level = second_level / 2\n    fourth_level = third_level / 2\n    total_square_footage = top_level + second_level + third_level + fourth_level\n    average_square_footage = total_square_footage / 4\n    result = average_square_footage\n    return result"}
{"output": "def solution():\n    \n    first_half_days = 180\n    first_half_cups = first_half_days * 1\n    second_half_days = 180 - first_half_days\n    second_half_cups = second_half_days * 2\n    total_cups = first_half_cups + second_half_cups\n    bags_per_year = total_cups / 110\n    result = bags_per_year\n    return result"}
{"output": "def solution():\n    \n    sarah_laundry = 400\n    raymond_laundry = sarah_laundry / 2\n    david_laundry = sarah_laundry / 4\n    difference = raymond_laundry - david_laundry\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Calculate the cost of buying 18 flowers in packages of 3\n    package_3_cost = 2.5 / 3\n\n    # Calculate the cost of buying 18 flowers in packages of 2\n    package_2_cost = 1 / 2\n\n    # Calculate the total cost of buying 18 flowers in packages of 3\n    total_cost_3 = package_3_cost * 18\n\n    # Calculate the total cost of buying 18 flowers in packages of 2\n    total_cost_2 = package_2_cost * 18\n\n    # Calculate the amount saved by buying 18 flowers at the better price\n    amount_saved = total_cost_3 - total_cost_2\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the dog and the discount percentage\n    ORIGINAL_PRICE = 100\n    DISCOUNT_PERCENTAGE = 0.3\n\n    # Calculate the discount amount\n    discount_amount = ORIGINAL_PRICE * DISCOUNT_PERCENTAGE\n\n    # Calculate the final price after the discount\n    final_price = ORIGINAL_PRICE - discount_amount\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    total_water = 24\n    girl_water = total_water / 6\n    boy_water = 6\n    remaining_water = total_water - (2 * girl_water) - boy_water\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    \n    initial_stickers = 10\n    bought_stickers = 21\n    birthday_stickers = 23\n    remaining_stickers = initial_stickers + bought_stickers + birthday_stickers - 9 - 28\n    result = remaining_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define Grace's weight\n    grace_weight = 125\n\n    # Calculate Alex's weight\n    alex_weight = 4 * grace_weight - 2\n\n    # Calculate the combined weight of Grace and Alex\n    combined_weight = grace_weight + alex_weight\n\n    # Display the combined weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    num_rose_bushes = 3\n    num_roses_per_bush = 25\n    num_thorns_per_rose = 8\n\n    # Calculate the total number of roses\n    total_roses = num_rose_bushes * num_roses_per_bush\n\n    # Calculate the total number of thorns\n    total_thorns = total_roses * num_thorns_per_rose\n    result = total_thorns\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of games played\n    total_games = 22\n\n    # Calculate the number of games won\n    games_won = (total_games - 8) / 2\n\n    # Display the number of games won\n    result = games_won\n    return result"}
{"output": "def solution():\n    \n    # Define the number of years Gene has been vacationing\n    years_vacationing = 34 - 23\n\n    # Define the number of shirts Gene has from each vacation\n    shirts_per_vacation = 1\n\n    # Calculate the total number of shirts Gene has\n    total_shirts = years_vacationing * shirts_per_vacation\n\n    # Calculate the total number of quilt blocks Gene has\n    total_blocks = total_shirts * 4 * 4\n\n    # Display the total number of quilt blocks\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the alarm rangs each time\n    rang_1 = 4\n    rang_2 = 3 * rang_1\n    rang_3 = rang_2 / 2\n\n    # Calculate the total number of times the alarm rangs\n    total_rangs = rang_1 + rang_2 + rang_3\n\n    # Display the total number of times the alarm rangs\n    result = total_rangs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial salary and the percentage increase\n    INITIAL_SALARY = 600\n    PERCENTAGE_INCREASE = 0.1\n\n    # Calculate the annual salary after 5 years\n    annual_salary = INITIAL_SALARY * 12 * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate the annual salary after 3 years of service\n    annual_salary_after_3_years = annual_salary * 12 * (1 + 3)\n\n    # Display the annual salary after 3 years of service\n    result = annual_salary_after_3_years\n    return result"}
{"output": "def solution():\n    \n    total_copies = 88000\n    marilyn_copies = total_copies / 10\n    harald_copies = marilyn_copies / 1\n    result = harald_copies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and the number of gift bags needed per guest\n    num_friends = 16\n    gift_bags_per_guest = 0.75\n\n    # Calculate the total number of gift bags needed\n    total_gift_bags = num_friends * gift_bags_per_guest\n\n    # Calculate the number of gift bags that don't show up\n    no_show = total_gift_bags / 4\n\n    # Calculate the total cost of the gift bags\n    total_cost = total_gift_bags * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of potato salad each dinosaur will eat\n    ADULT_SALAD = 10\n    CHILD_SALAD = ADULT_SALAD / 2\n\n    # Define the number of dinosaurs and children at the picnic\n    num_adults = 20\n    num_children = 5\n\n    # Calculate the total amount of potato salad needed\n    total_salad = (num_adults * ADULT_SALAD) + (num_children * CHILD_SALAD)\n\n    # Convert the total amount of potato salad to pounds\n    total_weight = total_salad / 16\n\n    # Display the total weight of potato salad needed\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pets Cindy has\n    cindy_pets = 4\n\n    # Calculate the number of pets Marcia has\n    marcia_pets = cindy_pets + 2\n\n    # Calculate the number of pets Jan has\n    jan_pets = marcia_pets * 3\n\n    # Calculate the total number of pets\n    total_pets = cindy_pets + marcia_pets + jan_pets\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    # Define the age of James\n    james_age = 10\n\n    # Calculate the age of Corey\n    corey_age = james_age + 1\n\n    # Calculate the age of Amy\n    amy_age = james_age + 2\n\n    # Calculate the age of Jackson\n    jackson_age = amy_age - 5\n\n    # Display the age of Jackson\n    result = jackson_age\n    return result"}
{"output": "def solution():\n    \n    lee_time = 38\n    gerald_time = lee_time - 2\n    gerald_speed = gerald_time / 10\n    result = gerald_speed\n    return result"}
{"output": "def solution():\n    \n    dogs = 60\n    cats = dogs * 2\n    rabbits = (dogs + cats) - 12\n    total_pets = dogs + cats + rabbits\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    total_students = 200\n    boys = (2/5) * total_students\n    girls = total_students - boys\n    girls_in_scout = (2/3) * girls\n    girls_not_in_scout = girls - girls_in_scout\n    result = girls_not_in_scout\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Harry slept\n    harry_hours = 9\n\n    # Calculate the number of hours James slept\n    james_hours = harry_hours * (2/3)\n\n    # Calculate the difference in hours slept between Harry and James\n    difference = harry_hours - james_hours\n\n    # Display the difference in hours slept\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    ounces_per_can = 16\n    tomatoes_per_ounce = 3\n    total_ounces = 32\n    total_tomatoes = (total_ounces / ounces_per_can) * tomatoes_per_ounce\n    result = total_tomatoes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cars\n    initial_cars = 30\n\n    # Calculate the number of cars that drive through in the first 15 minutes\n    first_15_min_cars = initial_cars - 20\n\n    # Calculate the number of cars that drive through in the remaining 15 minutes\n    remaining_cars = 20\n    remaining_15_min_cars = remaining_cars - 5\n\n    # Calculate the number of cars that drive through in the first 15 minutes\n    first_15_min_cars = first_15_min_cars + remaining_15_min_cars\n\n    # return the result\n    result = first_15_min_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of potted plants\n    initial_plants = 2 * 40\n\n    # Define the number of potted plants given to friends and family\n    given_plants = 1 * 40\n\n    # Calculate the remaining number of potted plants\n    remaining_plants = initial_plants + given_plants\n\n    # return the result\n    result = remaining_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the number of doorbell rings for each friend\n    friend1_rings = 20\n    friend2_rings = friend1_rings * (1 + 1/4)\n    friend3_rings = friend4_rings * 10\n\n    # Calculate the total number of doorbell rings\n    total_rings = friend1_rings + friend2_rings + friend3_rings + 60\n\n    # Display the total number of doorbell rings\n    result = total_rings\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pages Solo has to read\n    total_pages = 4 + 20 + 7 + 8\n\n    # Define the number of pages Solo has already read\n    pages_read = 15\n\n    # Calculate the number of pages Solo still needs to read\n    pages_left = total_pages - pages_read\n\n    # Calculate the average number of pages Solo needs to read per day\n    avg_pages_per_day = pages_left / 4\n\n    # Display the average number of pages Solo needs to read per day\n    result = avg_pages_per_day\n    return result"}
{"output": "def solution():\n    \n    glasses_per_weekday = 4\n    glasses_per_weekend = 2\n    total_glasses = glasses_per_weekday * 5 + glasses_per_weekend * 2\n    result = total_glasses\n    return result"}
{"output": "def solution():\n    \n    miles_per_minute = 3\n    minutes_per_mile = 10\n    total_miles = 42\n    total_minutes = (total_miles / miles_per_minute) * minutes_per_mile\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 1000\n    board_pieces = total_pieces / 4\n    remaining_pieces = total_pieces - board_pieces\n    mom_pieces = remaining_pieces / 3\n    pieces_left = remaining_pieces - mom_pieces\n    result = pieces_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Amir eats\n    amir_cookies = 5\n\n    # Calculate the number of cookies Cody eats\n    cody_cookies = amir_cookies * 3\n\n    # Calculate the total number of cookies eaten\n    total_cookies = amir_cookies + cody_cookies\n\n    # Display the total number of cookies eaten\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each box and the thickness of the walls\n    length = 5\n    width = 6\n    height = 4\n    wall_thickness = 1\n\n    # Calculate the volume of each box and the total volume of all 3 boxes\n    box_volume = length * width * height\n    total_box_volume = box_volume * 3\n\n    # Calculate the total volume of all the walls\n    total_wall_volume = wall_thickness * 3\n\n    # Calculate the total volume of all the boxes\n    total_volume = total_box_volume + total_wall_volume\n\n    # return the result\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    monday_tuesday_episodes = 2\n    wednesday_episodes = 1\n    thursday_episodes = 1\n    friday_episodes = 2\n    total_minutes = 7 * 60\n    total_minutes += (monday_tuesday_episodes * 1) + (wednesday_episodes * 0.5) + (thursday_episodes * 1) + (friday_episodes * 1)\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 110\n    last_year_cookies = (total_cookies - 15 - 5) / 2\n    result = last_year_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the price per gallon and the cashback per gallon\n    PRICE_PER_GALLON = 3.00\n    CASHBACK_PER_GALLON = 0.20\n\n    # Define the number of gallons purchased\n    gallons_purchased = 10\n\n    # Calculate the total cost of the gas\n    gas_cost = gallons_purchased * PRICE_PER_GALLON\n\n    # Calculate the total cashback\n    cashback = gallons_purchased * CASHBACK_PER_GALLON\n\n    # Calculate the final amount with the gas\n    final_amount = gas_cost - cashback\n\n    # Display the final amount\n    result = final_amount\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of roll-ups eaten\n    total_rollups = 2*24 + 3*14\n\n    # Calculate the average number of roll-ups eaten\n    average_rollups = total_rollups / 2\n\n    # Display the average number of roll-ups eaten\n    result = average_rollups\n    return result"}
{"output": "def solution():\n    water_per_feet = 2  # The boat takes 2 liters of water for every 10 feet of water\n    distance = 20  # The boat rowed 20 feet\n    shore_time = 64  # The shore was 64 seconds away\n\n    # Calculate the total amount of water the boat was taking on\n    total_water = water_per_feet * distance / 10 * shore_time\n\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the number of teachers and lessons per day\n    NUM_TEACHERS = 4\n    LESSONS_PER_TEACHER = 2\n\n    # Calculate the total number of lessons used per day\n    total_lessons = NUM_TEACHERS * LESSONS_PER_TEACHER\n\n    # Calculate the number of times the whiteboard is cleaned per lesson\n    cleaned_times_per_lesson = 3\n\n    # Calculate the total number of times the whiteboard is cleaned per day\n    cleaned_times_per_day = total_lessons * cleaned_times_per_lesson\n\n    # Display the total number of times the whiteboard is cleaned per day\n    result = cleaned_times_per_day\n    return result"}
{"output": "def solution():\n    flowers_per_day = 2  # Ryan plants 2 flowers a day\n    days = 15  # Ryan plants flowers for 15 days\n\n    # Calculate the total number of flowers Ryan plants\n    total_flowers = flowers_per_day * days\n\n    # Calculate the number of flowers that Ryan did not grow\n    empty_flowers = 5\n\n    # Calculate the total number of flowers Ryan has after 15 days\n    total_flowers_after_15_days = total_flowers + empty_flowers\n    result = total_flowers_after_15_days\n    return result"}
{"output": "def solution():\n    \n    # Define the maximum number of photographs that Jamal's phone can hold\n    jamal_max = 1800\n\n    # Calculate the maximum number of photographs that Brittany's phone can hold\n    brittany_max = jamal_max / 6\n\n    # Calculate the maximum number of birds in Jamal's phone can hold\n    jamal_birds = brittany_max / 50\n\n    # Calculate the maximum number of ducks in Jamal's phone\n    jamal_ducks = jamal_max / jamal_max\n\n    # Display the maximum number of ducks in Jamal's phone\n    result = jamal_ducks\n    return result"}
{"output": "def solution():\n    \n    # Calculate the cost of the first 10 boards\n    first_10_cost = 10 * 2 * 4 * 10\n\n    # Calculate the cost of the remaining 10 boards\n    remaining_10_cost = 10 * 2 * 4 * 10\n\n    # Calculate the cost of the remaining 10 boards\n    remaining_10_cost = 5 * 4 * 10\n\n    # Calculate the total cost of all the boards\n    total_cost = first_10_cost + remaining_10_cost\n\n    # Calculate the total revenue from selling all the boards\n    total_revenue = total_cost + remaining_10_cost\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    # Calculate the ratio of sugar to water\n    sugar_ratio = 7\n    water_ratio = 13\n\n    # Calculate the total ratio\n    total_ratio = sugar_ratio + water_ratio\n\n    # Calculate the amount of sugar used\n    sugar_used = (sugar_ratio / total_ratio) * 120\n\n    # Calculate the amount of water used\n    water_used = (water_ratio / total_ratio) * 120\n\n    # Calculate the amount of teaspoons of sugar used\n    sugar_teaspoons = sugar_used / (sugar_ratio / total_ratio)\n    result = sugar_teaspoons\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pair of shoes\n    SHOE_COST = 60\n\n    # Define the number of children\n    num_children = 3\n\n    # Calculate the total number of pairs of shoes\n    total_shoes = 2 * num_children\n\n    # Calculate the total cost\n    total_cost = total_shoes * SHOE_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of vehicles in the first two containers\n    total_vehicles_first_two_containers = 2 * 5\n\n    # Calculate the total number of vehicles in the second day\n    total_vehicles_second_day = 30 - total_vehicles_first_two_containers\n\n    # Calculate the number of containers imported on the second day\n    containers_imported_second_day = total_vehicles_second_day / 5\n    result = containers_imported_second_day\n    return result"}
{"output": "def solution():\n    \n    adrien_salary_four_years_ago = 40000\n    lylah_salary_four_years_ago = adrien_salary_four_years_ago * 1.3\n    total_salary_four_years_later = adrien_salary_four_years_ago + lylah_salary_four_years_ago\n    result = total_salary_four_years_later\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pads of paper used per week and the number of sheets of paper per pad\n    pads_per_week = 2\n    sheets_per_pad = 30\n\n    # Calculate the total number of sheets of paper used per week\n    total_sheets_per_week = pads_per_week * sheets_per_pad\n\n    # Calculate the total number of sheets of paper used per month\n    total_sheets_per_month = total_sheets_per_week * 4\n\n    # return the result\n    result = total_sheets_per_month\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples and oranges brought by Morisette\n    morisette_apples = 5\n    morisette_oranges = 8\n\n    # Calculate the number of apples and oranges brought by Kael\n    kael_apples = morisette_apples * 2\n    kael_oranges = morisette_oranges / 2\n\n    # Calculate the total number of fruits brought\n    total_fruits = morisette_apples + morisette_oranges + kael_apples + kael_oranges\n\n    # return the result\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Sadie slept on Monday\n    monday_hours = 8\n\n    # Define the number of hours Sadie slept on the next two days\n    next_two_days_hours = monday_hours - 2\n\n    # Define the number of hours Sadie slept on the remaining days\n    remaining_days_hours = (monday_hours + next_two_days_hours) + 1\n\n    # Calculate the total number of hours Sadie slept throughout the week\n    total_hours = monday_hours + next_two_days_hours + remaining_days_hours\n\n    # Display the total number of hours Sadie slept\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    speed1 = 10\n    time1 = 3\n    speed2 = 5\n    time2 = 7 - time1\n    distance1 = speed1 * time1\n    distance2 = speed2 * time2\n    total_distance = distance1 + distance2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of letters in the pile\n    total_letters = 60\n\n    # Calculate the number of letters needing stamps\n    needing_stamps = total_letters // 3\n\n    # Calculate the number of letters already stamped\n    stamped_letters = 30\n\n    # Calculate the number of letters remaining in the pile\n    remaining_letters = total_letters - needing_stamps - stamped_letters\n\n    # Display the number of letters in the pile when Jennie began\n    result = remaining_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spoons in a package\n    SPOONS_PER_PACKAGE = 5\n\n    # Calculate the total number of spoons Julia had initially\n    total_spoons = 12\n\n    # Calculate the number of spoons Julia used to sample her stew\n    used_spoons = 3\n\n    # Calculate the number of spoons Julia gave to her husband\n    given_spoons = SPOONS_PER_PACKAGE - used_spoons\n\n    # Calculate the number of spoons Julia has left\n    remaining_spoons = total_spoons - given_spoons\n\n    # Display the number of spoons Julia has left\n    result = remaining_spoons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of chicken sausages\n    chicken_sausages = 38\n\n    # Calculate the number of fish sausages\n    fish_sausages = chicken_sausages + 6\n\n    # Calculate the total number of sausages\n    total_sausages = chicken_sausages + fish_sausages\n\n    # Display the total number of sausages\n    result = total_sausages\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends Lily made\n    lily_friends = 50\n\n    # Calculate the number of friends Amy made\n    amy_friends = lily_friends + 20\n\n    # Calculate the total number of friends they have together\n    total_friends = lily_friends + amy_friends\n\n    # Display the total number of friends\n    result = total_friends\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pepper\n    PEPPER_PRICE = 15\n\n    # Calculate the cost of each watermelon\n    watermelon_cost = 3 * PEPPER_PRICE\n\n    # Calculate the cost of each orange\n    orange_cost = watermelon_cost - 5\n\n    # Calculate the total cost of the watermelons\n    watermelon_total = 4 * watermelon_cost\n\n    # Calculate the total cost of the peppers\n    pepper_total = 20 * PEPPER_PRICE\n\n    # Calculate the total cost of the oranges\n    orange_total = 10 * orange_cost\n\n    # Calculate the total cost of all the items\n    total_cost = watermelon_total + pepper_total + orange_total\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the time per patient\n    num_people = 500\n    time_per_patient = 24\n\n    # Calculate the total time the hospital spends patients\n    total_patient_time = num_people * time_per_patient\n\n    # Calculate the total cost of the doctors\n    total_doctors_cost = total_patient_time * 150\n\n    # Calculate the total cost of the patients\n    total_patient_cost = total_patient_time * 200\n\n    # Calculate the total revenue from all visits\n    total_revenue = total_doctors_cost + total_patient_cost\n\n    # Calculate the profit\n    profit = total_revenue - total_patient_cost\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of elves\n    initial_elves = 60\n\n    # Calculate the number of elves who quit after children vomit\n    children_quit = initial_elves // 3\n\n    # Calculate the number of remaining elves\n    remaining_elves = initial_elves - children_quit\n\n    # Calculate the number of elves who quit after kids kick their shins\n    kids_quit = 10\n\n    # Calculate the final number of elves\n    final_elves = remaining_elves - kids_quit\n\n    # return the result\n    result = final_elves\n    return result"}
{"output": "def solution():\n    # Calculate Joseph's expenditure in May\n    may_expenditure = 500\n\n    # Calculate Joseph's expenditure in June\n    june_expenditure = may_expenditure - 60\n\n    # Calculate the total expenditure for both months\n    total_expenditure = may_expenditure + june_expenditure\n    result = total_expenditure\n    return result"}
{"output": "def solution():\n    \n    pam_rides = 2\n    fred_rides = 4\n    total_rides = pam_rides + fred_rides\n    total_tickets = total_rides * 6\n    result = total_tickets\n    return result"}
{"output": "def solution():\n    \n    # Define the number of miles Walt walked on Monday\n    monday_miles = 4\n\n    # Calculate the number of miles Walt walked on Tuesday\n    tuesday_miles = monday_miles * 6\n\n    # Calculate the total number of miles Walt walked on Monday and Tuesday\n    total_miles = monday_miles + tuesday_miles\n\n    # Calculate the number of miles Walt walked on Wednesday\n    wednesday_miles = 41 - total_miles\n\n    # Display the number of miles Walt walked on Wednesday\n    result = wednesday_miles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of car washes Tom gets per month and the cost per car wash\n    CAR_WASHS_PER_MONTH = 4\n    CAR_WASH_COST = 15\n\n    # Calculate the total cost of car washes per month and per year\n    total_cost = CAR_WASHS_PER_MONTH * CAR_WASH_COST * 12\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of video games Brian has after losing 5\n    brian_games = 20 - 5\n\n    # Calculate the number of video games Bobby has\n    bobby_games = 3 * brian_games - 5\n\n    # Display the number of video games Bobby has\n    result = bobby_games\n    return result"}
{"output": "def solution():\n    \n    total_unicorns = 27\n    scottish_unicorns = total_unicorns / 3\n    female_scottish_unicorns = (2 / 3) * scottish_unicorns\n    result = female_scottish_unicorns\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    SUB_PRICE = 7.5\n    CHIPS_PRICE = 1.5\n    COOKIE_PRICE = 1.0\n\n    # Define the quantities of each item\n    sub_quantity = 2\n    chip_quantity = 2\n    cookie_quantity = 2\n\n    # Calculate the total cost of each item\n    sub_cost = sub_quantity * SUB_PRICE\n    chip_cost = chip_quantity * CHIPS_PRICE\n    cookie_cost = cookie_quantity * COOKIE_PRICE\n\n    # Calculate the total cost of the order\n    total_cost = sub_cost + chip_cost + cookie_cost\n\n    # Calculate the 20% delivery fee\n    delivery_fee = total_cost * 0.2\n\n    # Add the delivery fee to the total cost\n    total_cost_with_tip = total_cost + delivery_fee + 5.0\n\n    # Display the total cost with the delivery fee\n    result = total_cost_with_tip\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of questions\n    initial_questions = 75\n\n    # Calculate the number of questions completed in the first test\n    first_test_questions = 5 * 8\n\n    # Calculate the number of questions completed in the second test\n    second_test_questions = 5 * 6\n\n    # Calculate the total number of questions completed\n    total_questions = first_test_questions + second_test_questions\n\n    # Calculate the number of questions left\n    questions_left = initial_questions - total_questions\n\n    # return the result\n    result = questions_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue gumballs\n    blue_gumballs = 12\n\n    # Calculate the number of pink gumballs\n    pink_gumballs = 4 * blue_gumballs + 22\n\n    # Display the number of pink gumballs\n    result = pink_gumballs\n    return result"}
{"output": "def solution():\n    total_cars = 20\n    automatic_cars = 12\n    manual_cars = 4\n\n    # Calculate the number of semi-automatic cars\n    semi_automatic_cars = total_cars - automatic_cars - manual_cars\n\n    # Calculate the percentage of semi-automatic cars\n    semi_automatic_percentage = (semi_automatic_cars / total_cars) * 100\n    result = semi_automatic_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of bees\n    total_bees = 700\n\n    # Calculate the number of baby bees\n    baby_bees = total_bees / 3\n\n    # Calculate the number of worker bees\n    worker_bees = baby_bees * 2\n\n    # Display the number of worker bees\n    result = worker_bees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Jordan plays video games per day and the hourly rate of his part-time job\n    GAME_HOURS_PER_DAY = 2\n    PART_TIME_RATE = 10\n\n    # Calculate the total number of hours Jordan plays video games in a week\n    total_game_hours = GAME_HOURS_PER_DAY * 7\n\n    # Calculate the total earnings if Jordan spent his video game time working\n    total_earnings = total_game_hours * PART_TIME_RATE\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    milk_cost = 2\n    egg_cost = 3\n    light_bulb_cost = 3\n    cup_cost = 3\n    roach_cost = 4\n    subtotal = milk_cost + egg_cost + light_bulb_cost + cup_cost + roach_cost\n    tax_rate = 0.1\n    total_cost = subtotal * (1 + tax_rate)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_clients = 3 + 5  # Kim has 3 clients and 5 potential clients\n    num_bleach_bottles = 2\n    bleach_price = 2\n    num_cloths_packs = 1\n    cloths_price = 5\n    total_income = 92\n\n    # Calculate the total cost of all bleach bottles\n    total_bleach_cost = num_clients * num_bleach_bottles * bleach_price\n\n    # Calculate the total cost of all cloths packs\n    total_cloths_cost = num_clients * num_cloths_packs * cloths_price\n\n    # Calculate the total cost of all items\n    total_cost = total_bleach_cost + total_cloths_cost\n\n    # Calculate the profit\n    profit = total_income - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hectares and pineapples per hectare\n    hectares = 10\n    pineapples_per_hectare = 100\n\n    # Calculate the total number of pineapples in a year\n    total_pineapples = hectares * pineapples_per_hectare * 12\n\n    # Calculate the number of pineapples harvested in 3 months\n    harvested_pineapples = total_pineapples // 3\n\n    # return the result\n    result = harvested_pineapples\n    return result"}
{"output": "def solution():\n    \n    # Define the number of legos in the boxed set\n    legos = 500\n\n    # Calculate the number of legos in the second set\n    legos_second_set = 3 * legos\n\n    # Calculate the number of legos in the third set\n    legos_third_set = legos / 4\n\n    # Calculate the total number of legos\n    total_legos = legos + legos_second_set + legos_third_set\n\n    # Calculate the total number of blocks\n    total_blocks = total_legos * 2\n\n    # Display the total number of blocks\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of bees left in the first 6 hours\n    first_six_hours = 30\n\n    # Calculate the number of bees that leave in the next 6 hours\n    next_six_hours = first_six_hours * 2\n\n    # Calculate the number of bees left in the last 6 hours\n    last_six_hours = first_six_hours + next_six_hours\n\n    # Calculate the number of bees that return to the hive in the last 6 hours\n    return_to_hive = last_six_hours * 2\n\n    # Display the number of bees that return to the hive in the last 6 hours\n    result = return_to_hive\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of adults and children\n    ADULT_PRICE = 12\n    CHILD_PRICE = 10\n\n    # Calculate the total cost of admission\n    total_cost = ADULT_PRICE + CHILD_PRICE\n\n    # Calculate the amount of change received\n    change = 8\n\n    # Calculate the amount of money given\n    money_given = total_cost + change\n\n    # Display the amount of money given\n    result = money_given\n    return result"}
{"output": "def solution():\n    \n    charlie_friends = 12\n    dorothy_friends = charlie_friends / 3\n    james_friends = dorothy_friends * 4\n    result = james_friends\n    return result"}
{"output": "def solution():\n    \n    steve_distance = 3\n    steve_speed = 440\n    tim_distance = 2\n    tim_speed = 264\n    steve_time = steve_distance / steve_speed\n    tim_time = tim_distance / tim_speed\n    winner_time = steve_time - tim_time\n    result = winner_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each tire\n    TIRE_COST = 0.25\n\n    # Calculate the total amount earned from the bikes\n    bike_earnings = 5 * TIRE_COST\n\n    # Calculate the total amount earned from the tricycle tires\n    tricycle_earnings = 3 * TIRE_COST\n\n    # Calculate the total amount earned from the unicycle tires\n    unicycle_earnings = 1 * TIRE_COST\n\n    # Calculate the total amount earned\n    total_earnings = bike_earnings + tricycle_earnings + unicycle_earnings\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    packs = 10\n    cookies_per_pack = 6\n    price_per_cookie = 0.10\n    total_cookies = packs * cookies_per_pack\n    total_cost = total_cookies * price_per_cookie\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of french fries\n    initial_fries = 14\n\n    # Calculate the number of french fries left after the seagull landed\n    remaining_fries = initial_fries / 2\n\n    # Calculate the number of french fries eaten by the pigeons\n    pigeon_fries = 3 * 3\n\n    # Calculate the number of french fries left after the pigeons eat their share\n    remaining_fries -= pigeon_fries\n\n    # Calculate the number of french fries eaten by the raccoon\n    raccoon_fries = (2/3) * remaining_fries\n\n    # Calculate the final number of french fries\n    final_fries = remaining_fries - raccoon_fries\n\n    # Display the final number of french fries\n    result = final_fries\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classes on each day\n    monday_wednesday_friday = 3\n    tuesday_thursday = 2\n\n    # Calculate the total number of classes in one semester\n    total_classes = (monday_wednesday_friday * 3) + (tuesday_thursday * 2)\n\n    # Calculate the total number of hours in one semester\n    total_hours = total_classes * 16\n\n    # return the result\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    rolls = 300\n    croissants = 120\n    baguettes = 60\n    roll_length = 4\n    croissant_length = 6\n    baguette_length = 2\n    total_length = (rolls * roll_length) + (croissants * croissant_length) + (baguettes * baguette_length)\n    result = total_length / 12\n    return result"}
{"output": "def solution():\n    \n    monkey_bananas = 200\n    gorillas_bananas = 400\n    baboon_bananas = 100\n    total_bananas = monkey_bananas + gorillas_bananas + baboon_bananas\n    bananas_per_two_months = total_bananas * 2\n    result = bananas_per_two_months\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the football field\n    field_distance = 100\n\n    # Calculate the distance run by Blake\n    blake_distance = field_distance * 2 * 15\n\n    # Calculate the distance run by Kelly\n    kelly_distance = field_distance * 2\n\n    # Calculate the total distance run by Kelly\n    kelly_total_distance = kelly_distance + 40\n\n    # Calculate the total distance run by both of them\n    total_distance = blake_distance + kelly_total_distance\n\n    # Calculate the difference in distance between the winner and loser\n    difference = total_distance - 15\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    num_pens = 4\n    pen_price = 1.5\n\n    num_notebooks = 2\n    notebook_price = 4\n\n    num_bond_paper = 1\n    bond_paper_price = 20\n\n    # Calculate the total cost of all pens\n    total_pen_cost = num_pens * pen_price\n\n    # Calculate the total cost of all notebooks\n    total_notebook_cost = num_notebooks * notebook_price\n\n    # Calculate the total cost of the bond paper\n    total_bond_paper_cost = num_bond_paper * bond_paper_price\n\n    # Calculate the total cost of all supplies\n    total_cost = total_pen_cost + total_notebook_cost + total_bond_paper_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    initial_tadpoles = 11\n    lily_pad_tadpoles = 6\n    rock_tadpoles = 2\n    remaining_tadpoles = initial_tadpoles - lily_pad_tadpoles - rock_tadpoles\n    result = remaining_tadpoles\n    return result"}
{"output": "def solution():\n    \n    # Define the depth of the water on Monday\n    monday_depth = 17\n\n    # Define the depth of the water on Tuesday\n    tuesday_depth = monday_depth + 7\n\n    # Define the depth of the water on Wednesday\n    wednesday_depth = tuesday_depth * (2/3)\n\n    # Display the depth of the water on Wednesday\n    result = wednesday_depth\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish caught by Anakin\n    anakin_starfish = 10\n    anakin_sea_horses = 6\n    anakin_clownfish = 3\n\n    # Calculate the number of fish caught by Locsin\n    Locsin_starfish = anakin_starfish - 5\n    Locsin_sea_horses = anakin_sea_horses - 3\n    Locsin_clownfish = anakin_clownfish + 2\n\n    # Calculate the total number of fish caught\n    total_fish = anakin_starfish + anakin_sea_horses + anakin_clownfish + Locsin_starfish + Locsin_sea_horses + Locsin_clownfish\n\n    # Display the total number of fish caught\n    result = total_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the bag of marbles\n    original_price = 20\n\n    # Calculate the new price of the bag of marbles after 2 months\n    new_price = original_price * 1.2\n\n    # Calculate the total cost of the bag of marbles after 36 months\n    total_cost = new_price * 36\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_red_cars = 5\n    red_car_price = 4\n\n    num_doll_figures = 3\n    doll_price = 1\n\n    # Calculate the total cost of all red cars\n    total_red_car_cost = num_red_cars * red_car_price\n\n    # Calculate the total cost of all doll figures\n    total_doll_cost = num_doll_figures * doll_price\n\n    # Calculate the total cost of all action figures\n    total_action_figure_cost = total_red_car_cost + total_doll_cost\n\n    # Calculate the cost per action figure\n    cost_per_figure = 5\n\n    # Calculate the total cost of all toys of all action figures\n    total_cost = total_action_figure_cost / num_doll_figures\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the accountant\n    accountant_cost = 90\n\n    # Calculate the cost of the freelance work\n    freelance_cost = accountant_cost - 3 * 35\n\n    # Calculate the difference in income\n    income_difference = freelance_cost - accountant_cost\n\n    # return the result\n    result = income_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial budget and the cost of each item\n    initial_budget = 1500\n    machine_cost = 1090\n    scanner_cost = 159\n    cd_burner_cost = 74\n    printer_cost = 102\n\n    # Calculate the total cost of the garment\n    total_cost = initial_budget + machine_cost + scanner_cost + cd_burner_cost + printer_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    eggs_per_flan = 3\n    total_flans = 15\n    total_eggs = total_flans * eggs_per_flan\n    babysitting_eggs = total_eggs // 9\n    result = babysitting_eggs\n    return result"}
{"output": "def solution():\n    \n    total_age_in_2_years = 28\n    brooke_age_in_2_years = total_age_in_2_years - 2\n    seth_age_in_2_years = brooke_age_in_2_years * 2\n    result = seth_age_in_2_years\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Ethel has\n    elhel_money = 8\n\n    # Calculate the amount of money Jimmy has\n    jimmy_money = 2 + 2 * elhel_money\n\n    # Display the amount of money Jimmy has\n    result = jimmy_money\n    return result"}
{"output": "def solution():\n    \n    miles_per_weekday = 20 * 5\n    miles_per_weekend = 10 * 2\n    total_miles = miles_per_weekday + miles_per_weekend\n    result = total_miles\n    return result"}
{"output": "def solution():\n    # Define the cost of each uniform\n    hat_cost = 25\n    jacket_cost = 3 * hat_cost\n    pant_cost = (hat_cost + jacket_cost) / 2\n\n    # Calculate the total cost of each uniform\n    total_cost = hat_cost + jacket_cost + pant_cost\n    cost_per_uniform = total_cost / 4\n    result = cost_per_uniform\n    return result"}
{"output": "def solution():\n    num_spiders = 80\n    spider_legs = 8\n\n    num_insects = 90\n    insect_legs = 6\n\n    num_invertebrates = 3\n    invertebrate_legs = 10\n\n    # Calculate the total number of legs from all spiders\n    total_spider_legs = num_spiders * spider_legs\n\n    # Calculate the total number of legs from all insects\n    total_insect_legs = num_insects * insect_legs\n\n    # Calculate the total number of legs from all invertebrates\n    total_invertebrate_legs = num_invertebrates * invertebrate_legs\n\n    # Calculate the total number of legs Jake sees\n    total_legs = total_spider_legs + total_insect_legs + total_invertebrate_legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    sally_thirtytwo_age = 8\n    sally_four_age = sally_thirtytwo_age\n    granny_red_age = 2 * sally_four_age\n    sally_two_age = granny_red_age + 3\n    total_age = sally_thirtytwo_age + sally_four_age + granny_red_age + sally_two_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum payment and the number of months in a year\n    MINIMUM_PAYMENT = 300\n    MINUTES_IN_YEAR = 12\n\n    # Calculate the annual cost of the debts in a year\n    annual_cost = (MINIMUM_PAYMENT * MINUTES_IN_YEAR) + (200 * MINUTES_IN_YEAR) + (500 * MINUTES_IN_YEAR)\n\n    # Display the annual cost\n    result = annual_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of potatoes and the time it takes to peel and cut one potato\n    NUM_POTATOES = 60\n    PEEL_TIME = 0.5\n    CUT_TIME = 5\n\n    # Calculate the total time to prepping all the potatoes\n    total_time = NUM_POTATOES * PEEL_TIME + NUM_POTATOES * CUT_TIME\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of lemons and sugar\n    lemon_cost = 3\n    sugar_cost = 2\n\n    # Define the selling price of each glass and the number of glasses per gallon\n    glass_price = 0.5\n    glasses_per_gallon = 20\n\n    # Calculate the total revenue from selling glasses\n    total_revenue = glasses_per_gallon * glass_price * glasses_per_gallon\n\n    # Calculate the cost of making the profit\n    profit = 25\n\n    # Calculate the total cost of making the profit\n    total_cost = profit + total_revenue\n\n    # Calculate the cost of making the lemons\n    lemon_cost = total_cost - lemon_cost\n\n    # return the result\n    result = lemon_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of Asians and Japanese\n    total_asians = 240\n    japanese = 80\n\n    # Calculate the number of Chinese\n    chinese = total_asians - japanese\n\n    # Calculate the number of boys on the Chinese team\n    boys = 60\n\n    # Calculate the number of girls on the Chinese team\n    girls = chinese - boys\n\n    # return the result\n    result = girls\n    return result"}
{"output": "def solution():\n    \n    monthly_salary = 6000\n    rent = monthly_salary / 4\n    car_fuel = monthly_salary / 3\n    remaining_salary = monthly_salary - rent - car_fuel\n    donated_charity = remaining_salary / 2\n    daughter_expenses = 200\n    wife_budget = 700\n    total_expenses = daughter_expenses + wife_budget\n    remaining_money = remaining_salary - total_expenses - donated_charity\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of crabs Bo has\n    bo_crabs = 40\n\n    # Calculate the number of crabs Monic has\n    monic_crabs = bo_crabs - 4\n\n    # Calculate the number of crabs Rani has\n    rani_crabs = monic_crabs + 10\n\n    # Calculate the total number of crabs the three have together\n    total_crabs = bo_crabs + monic_crabs + rani_crabs\n\n    # Display the total number of crabs\n    result = total_crabs\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 10\n    first_week_hours = 5\n    second_week_hours = 8\n    first_week_earnings = hourly_rate * first_week_hours\n    second_week_earnings = hourly_rate * second_week_hours\n    total_earnings = first_week_earnings + second_week_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students who voted\n    total_students = 80\n\n    # Calculate the number of votes received by the winner\n    winner_votes = total_students * 3/4\n\n    # Calculate the number of votes received by the loser\n    loser_votes = total_students - winner_votes\n\n    # Display the number of votes received by the loser\n    result = loser_votes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of white carnations\n    white_carnations = 200 / 5\n\n    # Calculate the number of red roses\n    red_roses = 4 * white_carnations\n\n    # Calculate the number of missing red roses\n    missing_red_roses = red_roses - 5\n\n    # Display the number of missing red roses\n    result = missing_red_roses\n    return result"}
{"output": "def solution():\n    \n    # Define Jan's age\n    jan_age = 30\n\n    # Calculate Mark's age\n    mark_age = (jan_age - 2) / 2 + 5\n\n    # Calculate Jean's age\n    jean_age = mark_age + 2\n\n    # Display Jean's age\n    result = jean_age\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total distance of the race\n    total_distance = 4 * 400\n\n    # Calculate the time taken by the first runner\n    first_runner_time = 60\n\n    # Calculate the time taken by the second runner\n    second_runner_time = first_runner_time + 3\n\n    # Calculate the time taken by the first runner\n    first_runner_distance = 4 * 400\n\n    # Calculate the time taken by the second runner\n    second_runner_distance = 4 * 400\n\n    # Calculate the time taken by the third runner\n    third_runner_time = second_runner_distance - first_runner_distance\n\n    # Calculate the time taken by the faster team\n    faster_team_time = (total_distance - first_runner_distance - second_runner_distance) / 4\n\n    # Display the time taken by the faster team\n    result = faster_team_time\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage increase and the number of even numbers\n    increase = 1\n    even_numbers = 2\n\n    # Calculate the percentage increase\n    percentage_increase = ((even_numbers - 3) / even_numbers) * 100\n\n    # Round the result to 2 decimal places\n    result = round(percentage_increase, 2)\n    return result"}
{"output": "def solution():\n    \n    mom_apples = 20\n    jenna_apples = mom_apples / 2\n    total_apples = mom_apples + jenna_apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cages and pieces of straw each group gets\n    cages_per_group = 3\n    pieces_per_rating = 6\n    cages_per_hamster = 10\n    pieces_per_hamster = 5\n    pieces_per_rabbit = 20\n\n    # Calculate the total number of pieces of straw used in each group\n    total_pieces_per_group = (cages_per_group * pieces_per_rating) + (cages_per_hamster * pieces_per_hamster) + pieces_per_rabbit\n\n    # Calculate the total number of pieces of straw used in all groups\n    total_pieces_all_groups = total_pieces_per_group * cages_per_group\n\n    # Calculate the number of rats\n    rats = total_pieces_all_groups // total_pieces_per_group\n\n    # Display the number of rats\n    result = rats\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount owed\n    initial_amount = 100\n\n    # Calculate the monthly interest\n    monthly_interest = initial_amount * 0.02\n\n    # Calculate the total amount owed after 3 months\n    total_amount_owed = initial_amount + monthly_interest\n\n    # Display the total amount owed\n    result = total_amount_owed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and transport cost of each bag\n    COST_PER_BAG = 2\n\n    # Define the selling price per bag\n    SELLING_PRICE_PER_BAG = 30\n\n    # Calculate the total cost of transporting all the bags\n    total_cost = 400\n\n    # Calculate the total revenue from selling all the bags\n    total_revenue = total_cost + (total_cost / COST_PER_BAG)\n\n    # Calculate the number of bags sold\n    num_bags = int(total_revenue / SELLING_PRICE_PER_BAG)\n\n    # Display the number of bags sold\n    result = num_bags\n    return result"}
{"output": "def solution():\n    num_tickets = 3\n    ticket_price = 20.25\n    food_price = ticket_price - 4.5\n    num_rides = 2\n    ride_price = 33\n\n    # Calculate the total cost of all tickets\n    total_ticket_cost = num_tickets * ticket_price\n\n    # Calculate the total cost of all food\n    total_food_cost = num_tickets * food_price\n\n    # Calculate the total cost of all rides\n    total_ride_cost = num_rides * ride_price\n\n    # Calculate the total cost of all items\n    total_cost = total_ticket_cost + total_food_cost + total_ride_cost\n\n    # Calculate the cost per person\n    num_people = 3\n    cost_per_person = total_cost / num_people\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes in 3 hours\n    MINUTES = 3 * 60\n\n    # Define the number of peaches John can collect per minute\n    PEACHES_PER_MINUTE = 2\n\n    # Calculate the total number of peaches John collects\n    total_peaches = MINUTES * PEACHES_PER_MINUTE\n\n    # Display the total number of peaches John collects\n    result = total_peaches\n    return result"}
{"output": "def solution():\n    \n    weekly_insects = 3.5\n    num_ducks = 10\n    total_insects = weekly_insects * num_ducks\n    insects_per_day = total_insects / 7\n    result = insects_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of trees\n    initial_trees = 50\n\n    # Define the number of trees planted per year and the number of trees chopped down per year\n    planted_trees_per_year = 10\n    chopped_trees_per_year = 2\n\n    # Calculate the total number of trees planted over 10 years\n    total_planted_trees = planted_trees_per_year * 10\n\n    # Calculate the total number of trees chopped down over 10 years\n    total_chopped_trees = chopped_trees_per_year * 10\n\n    # Calculate the total number of trees left\n    total_trees_left = initial_trees - total_planted_trees + total_chopped_trees\n\n    # Calculate the number of trees that die after 10 years\n    trees_die = total_trees_left * 0.3\n\n    # Calculate the final number of trees left\n    final_trees_left = total_trees_left - trees_die\n\n    result = final_trees_left"}
{"output": "def solution():\n    \n    friday_flamingos = 18\n    saturday_flamingos = friday_flamingos / 3\n    sunday_flamingos = 18\n    total_flamingos = friday_flamingos + saturday_flamingos + sunday_flamingos\n    result = total_flamingos\n    return result"}
{"output": "def solution():\n    \n    # Define the number of colors and the cost per crayon\n    NUM_COLORS = 5\n    CRAYON_PRICE = 2\n\n    # Calculate the total cost of the crayons\n    total_cost = NUM_COLORS * CRAYON_PRICE\n\n    # Calculate the amount of change\n    change = 20 - total_cost\n\n    # Display the amount of change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    pencil_cost = 1.20\n    eraser_cost = 0.30\n    total_cost = (pencil_cost + eraser_cost) * 8\n    result = total_cost\n    return result"}
{"output": "def solution():\n    total_carrots = 200\n    num_restaurants = 40\n    carrots_per_restaurant = 2\n\n    # Calculate the total amount of carrots needed for all restaurants\n    total_carrots_needed = num_restaurants * carrots_per_restaurant\n\n    # Calculate the amount of carrots that will not be used\n    carrots_not_used = total_carrots - total_carrots_needed\n    result = carrots_not_used\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of inhabitants and the number of men and women\n    total_inhabitants = 23786\n    men = 8417\n    women = 9092\n\n    # Calculate the number of children\n    children = total_inhabitants - men - women\n\n    # Calculate the total number of kids\n    total_kids = children * 2\n\n    # Display the total number of kids\n    result = total_kids\n    return result"}
{"output": "def solution():\n    \n    initial_cards = 20\n    first_month_cards = initial_cards * 3\n    second_month_cards = first_month_cards - 20\n    third_month_cards = (first_month_cards + second_month_cards) * 2\n    total_cards = initial_cards + first_month_cards + second_month_cards + third_month_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sentences each publisher pays per week\n    A_SENTENCES = 1000 / 2\n    B_SENTENCES = A_SENTENCES * 2\n\n    # Calculate the total amount earned by each publisher\n    A_earnings = A_SENTENCES * 0.05\n    B_earnings = B_SENTENCES * 0.05\n\n    # Calculate the total amount earned by Mark\n    total_earnings = (A_earnings + B_earnings) * 100\n\n    # Display the total amount earned\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    pails_per_morning = 5\n    pails_per_afternoon = 6\n    water_per_pail = 5\n    total_water = (pails_per_morning * water_per_pail) + (pails_per_afternoon * water_per_pail)\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the initial salary and the percentage increase\n    INITIAL_SALARY = 5000\n    PERCENTAGE_INCREASE = 0.05\n\n    # Calculate the new salary after the raise\n    new_salary = INITIAL_SALARY * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate the total salary over the year\n    total_salary = new_salary * 2000\n\n    # Calculate John's yearly earnings\n    yearly_earnings = total_salary + INITIAL_SALARY\n\n    # Display John's yearly earnings\n    result = yearly_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of acre and the amount of grapes produced per acre per year\n    acre_count = 10\n    grapes_per_acre = 5\n\n    # Calculate the total amount of grapes produced per year\n    total_grapes = acre_count * grapes_per_acre\n\n    # Calculate the total amount of wine produced per year\n    total_wine = total_grapes * 2\n\n    # Display the total amount of wine produced per year\n    result = total_wine\n    return result"}
{"output": "def solution():\n    \n    sandwich_days = 3\n    slices_per_sandwich = 2\n    egg_omelet_days = 3\n    slices_per_omelet = slices_per_sandwich + 1\n    macaroni_slices = 8\n    total_slices = (sandwich_days * slices_per_sandwich) + (egg_omelet_days * slices_per_omelet) + macaroni_slices\n    result = total_slices\n    return result"}
{"output": "def solution():\n    \n    green_pens = 22\n    yellow_pens = 10\n    blue_pens = 6 * 9\n    red_pens = 2 * 6\n    total_pens = green_pens + yellow_pens + blue_pens + red_pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    num_tests = 6\n    current_total = 89 + 71 + 92 + 100 + 86\n    desired_average = 93\n\n    # Calculate the minimum score needed on the sixth test to achieve the desired average\n    min_score = (desired_average * num_tests) - current_total\n    result = min_score\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Micheal rode in 4 weeks\n    distance_first_leg = 5 * 25 * 4\n\n    # Calculate the total distance Micheal rode in 2 weeks\n    distance_second_leg = 2 * 60 * 3\n\n    # Calculate the total distance Micheal rode in 3 weeks\n    total_distance = distance_first_leg + distance_second_leg\n    result = total_distance\n    return result"}
{"output": "def solution():\n    num_chocolate_bars = 25\n    num_candied_apples = 80\n    weight_per_chocolate_bar = 40\n    weight_per_candied_apple = weight_per_chocolate_bar / 2\n\n    # Calculate the total weight of all chocolate bars\n    total_weight_of_chocolate_bars = num_chocolate_bars * weight_per_chocolate_bar\n\n    # Calculate the total weight of all candied apples\n    total_weight_of_candied_apples = num_candied_apples * weight_per_candied_apple\n\n    # Calculate the total weight of all candies in grams\n    total_weight_of_candies = total_weight_of_chocolate_bars + total_weight_of_candied_apples\n    result = total_weight_of_candies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cakes bought on each day\n    cakes_monday = 4\n    cakes_tuesday = cakes_monday * 3\n    cakes_wednesday = cakes_tuesday * 5\n\n    # Calculate the total number of cakes bought\n    total_cakes = cakes_monday + cakes_tuesday + cakes_wednesday\n\n    # Display the total number of cakes bought\n    result = total_cakes\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of half a dozen plates sold\n    total_cost_half_dozen = 6000 * 2\n\n    # Calculate the cost of 20 dozen cups\n    cost_20_dozen = total_cost_half_dozen - 1200\n\n    # Calculate the cost of one cup\n    cost_per_cup = cost_20_dozen / 12\n    result = cost_per_cup\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the jacket and shoes\n    jacket_price = 30\n    shoe_price = 20\n\n    # Calculate the total cost of the jacket and shoes\n    total_cost = jacket_price + (2 * shoe_price)\n\n    # Calculate the earnings from babysitting the neighbor's kids\n    babysitting_earnings = 4 * 5\n\n    # Calculate the total earnings from mowing the lawn\n    lawn_earnings = total_earnings - 10\n\n    # Calculate the number of times Sara needs to mow the lawn to afford the jacket and shoes\n    mowing_times = (total_cost - babysitting_earnings - lawn_earnings) / 4\n\n    result = mowing_times\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced per red and white chicken per day\n    RED_EGGS_PER_DAY = 3\n    WHITE_EGGS_PER_DAY = 5\n\n    # Calculate the total number of eggs produced per day\n    total_eggs_per_day = 42\n\n    # Calculate the number of red chickens per day\n    red_chickens_per_day = total_eggs_per_day / (RED_EGGS_PER_DAY + WHITE_EGGS_PER_DAY)\n\n    # Calculate the number of white chickens\n    white_chickens = red_chickens_per_day + 2\n\n    # Calculate the total number of red chickens\n    red_chickens = red_chickens_per_day * red_chickens_per_day\n\n    # Display the number of red chickens\n    result = red_chickens\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the rectangle\n    length = 1.5\n    width = 6\n\n    # Calculate the total distance\n    total_distance = length * width\n\n    # Calculate the time spent walking\n    time = total_distance / 3\n\n    # Display the time spent walking\n    result = time\n    return result"}
{"output": "def solution():\n    \n    first_day_customers = 100\n    second_day_customers = first_day_customers + 50\n    total_customers = 500\n    third_day_customers = total_customers - first_day_customers - second_day_customers\n    result = third_day_customers\n    return result"}
{"output": "def solution():\n    \n    # Define the leakage rate of the pool\n    leakage_rate = 4\n\n    # Calculate the amount of water in the first pool\n    first_pool_water = 0\n    first_pool_water = first_pool_water * leakage_rate\n\n    # Calculate the amount of water in the second pool\n    second_pool_water = first_pool_water * 2\n\n    # Calculate the amount of water in the third pool\n    third_pool_water = second_pool_water * 4\n\n    # Calculate the total amount of water in both pools\n    total_water = first_pool_water + second_pool_water + third_pool_water\n\n    # Display the total amount of water\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the shoes and matching belt\n    shoe_price = 32\n    belt_price = 32\n\n    # Calculate the total cost of the shoes and matching belt\n    total_cost = shoe_price + belt_price\n\n    # Calculate the number of hours needed to pay off the total cost\n    hours_needed = total_cost / 8\n\n    # Round up to the nearest whole number of hours\n    hours_needed = int(hours_needed) + (hours_needed % 1 > 0)\n\n    # return the result\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    borrowed_amount = 2000\n    promised_amount = borrowed_amount * 0.1\n    remaining_amount = borrowed_amount - promised_amount\n    monthly_payment = 165\n    num_months = 12\n    total_payment = monthly_payment * num_months\n    remaining_balance = remaining_amount - total_payment\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roses and dahlias\n    roses = 4\n    dahlias = roses + 7\n\n    # Calculate the total number of flowers\n    total_flowers = roses + dahlias\n\n    # Display the total number of flowers\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define Harriet's current age\n    harriet_age = 21\n\n    # Calculate Adrian's current age\n    adrian_age = harriet_age * 3\n\n    # Calculate Zack's current age\n    zack_age = harriet_age / 2\n\n    # Calculate the average age of the three\n    average_age = (harriet_age + adrian_age + zack_age) / 3\n\n    # Display the average age\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of points and the number of points scored by Naomi\n    total_points = 251\n    naomi_points = 68\n\n    # Calculate the number of points scored by Yuri\n    yuri_points = 0.5 * naomi_points + 10\n\n    # Calculate the number of points scored by Brianna\n    brianna_points = naomi_points + 17\n\n    # Calculate the number of points scored by Jojo\n    jojo_points = total_points - naomi_points - yuri_points - brianna_points\n\n    # return the result\n    result = jojo_points\n    return result"}
{"output": "def solution():\n    time_per_crossword_puzzle = 10  # It takes 10 minutes to finish a crossword puzzle\n    time_per_sudoku_puzzle = 5  # It takes 5 minutes to finish a sudoku puzzle\n    num_crossword_puzzles = 3  # Carmen solved 3 crossword puzzles\n    num_sudoku_puzzles = 8  # Carmen solved 8 sudoku puzzles\n\n    # Calculate the total time Carmen spent playing the games\n    total_time = (time_per_crossword_puzzle * num_crossword_puzzles) + (time_per_sudoku_puzzle * num_sudoku_puzzles)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    initial_water = 120\n    used_water = 90\n    remaining_water = initial_water - used_water\n    rainwater = remaining_water * 2\n    final_water = remaining_water + rainwater\n    result = final_water\n    return result"}
{"output": "def solution():\n    \n    geraniums = 90\n    petunias = geraniums - 40\n    total_flowers = geraniums + petunias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define the amount spent on advertising for the first year\n    year1_spending = 15000\n\n    # Calculate the amount spent on advertising for the second year\n    year2_spending = year1_spending / 3\n\n    # Calculate the total amount spent on advertising for both years\n    total_spending = year1_spending + year2_spending\n\n    # Display the total amount spent\n    result = total_spending\n    return result"}
{"output": "def solution():\n    \n    carlos_rate = 30\n    benji_rate = 18\n    carlos_hours = 3\n    benji_hours = 5\n    total_carlos_cost = carlos_rate * carlos_hours\n    total_benji_cost = benji_rate * benji_hours\n    total_cost = total_carlos_cost + total_benji_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    bus_days = 6\n    car_days = bus_days / 2\n    total_days = bus_days + car_days\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    fire_type = 30\n    grass_type = 20\n    water_type = 40\n    lost_water_type = 8\n    bought_grass_type = 14\n    total_cards = fire_type + grass_type + water_type - lost_water_type + bought_grass_type\n    percentage_water_type = (total_cards / total_cards) * 100\n    result = percentage_water_type\n    return result"}
{"output": "def solution():\n    \n    base_burrito = 6.5\n    extra_meat = 2\n    extra_cheese = 1\n    avocado = 1\n    sauces = 2\n    sauces_price = 0.25\n    upgrade_amount = 3\n    gift_card = 5\n    total_spent = base_burrito + extra_meat + extra_cheese + avocado + (2 * sauces_price) + upgrade_amount + gift_card\n    remaining_amount = total_spent - total_spent\n    result = remaining_amount\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 360\n    kalinda_pieces_per_minute = 4\n    mom_pieces_per_minute = kalinda_pieces_per_minute / 2\n    total_time_in_minutes = total_pieces / (kalinda_pieces_per_minute + mom_pieces_per_minute)\n    total_time_in_hours = total_time_in_minutes / 60\n    result = total_time_in_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of watermelons\n    total_watermelons = 120\n\n    # Calculate the number of watermelons ready for harvest\n    ready_watermelons = total_watermelons * 0.3\n\n    # Calculate the number of watermelons remaining after the two weeks\n    remaining_watermelons = total_watermelons - ready_watermelons\n\n    # Calculate the number of watermelons harvested\n    harvested_watermelons = remaining_watermelons * (3/4)\n\n    # Calculate the number of watermelons not ready for harvest\n    not_ready_watermelons = total_watermelons - ready_watermelons - harvested_watermelons\n\n    # Display the number of watermelons not ready for harvest\n    result = not_ready_watermelons\n    return result"}
{"output": "def solution():\n    \n    num_cars = 12\n    car_price = 20000\n    tax_rate = 0.1\n    registration_cost = 1000\n    subtotal = num_cars * car_price * (1 + tax_rate) + (num_cars * registration_cost)\n    result = subtotal\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shells collected by Robert\n    robert_shells = 20\n\n    # Calculate the number of shells collected by Kylie on Monday\n    kylie_shells_monday = robert_shells + 5\n\n    # Calculate the number of shells collected by Kylie on Tuesday\n    kylie_shells_tuesday = kylie_shells_monday * 2\n\n    # Display the number of shells collected on Tuesday\n    result = kylie_shells_tuesday\n    return result"}
{"output": "def solution():\n    \n    ants = 50\n    bugs = ants / 2\n    total_insects = ants + bugs\n    result = total_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of penguins\n    initial_penguins = 36\n\n    # Calculate the number of penguins that jump in and swim in the ocean\n    ocean_penguins = initial_penguins // 3\n\n    # Calculate the number of penguins that go inside the cave\n    cave_penguins = initial_penguins // 3\n\n    # Calculate the number of penguins that are still left sunbathing\n    remaining_penguins = initial_penguins - ocean_penguins - cave_penguins\n\n    # return the result\n    result = remaining_penguins\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tomatoes eaten per day\n    TOMATOES_PER_DAY = 6\n\n    # Calculate the number of tomatoes eaten per week\n    tomatoes_per_week = TOMATOES_PER_DAY * 7\n\n    # Calculate the number of vines needed per week\n    vines_per_week = tomatoes_per_week / 3\n\n    # Display the number of vines needed per week\n    result = vines_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and slices per friend\n    num_friends = 20\n    slices_per_friend = 4\n\n    # Calculate the total number of slices needed\n    total_slices = num_friends * slices_per_friend\n\n    # Calculate the total number of pizzas needed\n    total_pizzas = total_slices / 8\n\n    # Display the total number of pizzas needed\n    result = total_pizzas\n    return result"}
{"output": "def solution():\n    \n    empty_pens = 5\n    pens_bought = 25\n    pens_used = 25 - pens_bought\n    total_pens = pens_bought + pens_used\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define Johnny's initial allowance and the amount added\n    initial_allowance = 20\n    additional_amount = 10\n\n    # Calculate Johnny's total allowance after a year\n    total_allowance = initial_allowance + additional_amount\n\n    # Calculate the amount of money Johnny invested in a year\n    investment_amount = total_allowance * 3\n\n    # Calculate Johnny's final amount after a year\n    final_amount = total_allowance - investment_amount\n\n    # Display Johnny's final amount\n    result = final_amount\n    return result"}
{"output": "def solution():\n    \n    jessa_age = 20\n    joan_age = jessa_age + 5\n    mary_age = joan_age - 2\n    sum_of_ages = jessa_age + joan_age + mary_age\n    result = sum_of_ages\n    return result"}
{"output": "def solution():\n    # Calculate the number of students who went out of the building through exit A\n    students_out_A = 0.3 * 1000\n\n    # Calculate the number of students who went out of the building through exit B\n    students_out_B = (3/5) * students_out_A\n\n    # Calculate the number of students who went out of the building through exit C\n    students_out_C = 1000 - students_out_A - students_out_B\n    result = students_out_C\n    return result"}
{"output": "def solution():\n    \n    john_candies = 54\n    robert_candies = john_candies / 2\n    james_candies = robert_candies + 6\n    difference = john_candies - james_candies\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    dolly_books = 2\n    candora_books = 1\n    total_books = dolly_books + candora_books\n    result = total_books\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and pages per letter\n    num_people = 5\n    num_letters = 2\n    num_pages = 5\n\n    # Calculate the total number of pages written per week\n    total_pages = num_people * num_letters * num_pages\n\n    # Calculate the total time spent writing per week in minutes\n    total_time_minutes = total_pages * 6\n    total_time_hours = total_time_minutes / 60\n\n    # Display the total time spent writing per week in hours\n    result = total_time_hours\n    return result"}
{"output": "def solution():\n    \n    monthly_plan = 1000\n    call_length = 15\n    extra_minutes = 300\n    days = 30\n    total_call_time = (call_length + extra_minutes) * days\n    remaining_plan = monthly_plan - total_call_time\n    result = remaining_plan\n    return result"}
{"output": "def solution():\n    \n    griffin_fries = 24\n    kyle_fries = 5\n    billy_fries = kyle_fries * 2\n    ginger_fries = griffin_fries - kyle_fries - billy_fries - 3\n    result = ginger_fries\n    return result"}
{"output": "def solution():\n    \n    # Define the number of snails in each aquarium\n    snails_1 = 4\n    snails_2 = 32\n\n    # Calculate the difference in the number of snails\n    snails_diff = snails_2 - snails_1\n\n    # Calculate the total number of fish in both aquariums\n    total_fish = snails_1 + snails_2\n\n    # Calculate the number of fish in each aquarium\n    fish_per_aquarium = total_fish / 2\n\n    # Display the number of fish in each aquarium\n    result = fish_per_aquarium\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 250\n    hours_per_day = 6\n    days_per_week = 4\n    weeks = 5\n    total_hours = hours_per_day * days_per_week * weeks\n    total_cost = total_hours * hourly_rate\n    discount = total_cost * 0.1\n    final_cost = total_cost - discount\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    total_cost = 12 + 43 + 15 + 4 + 22\n    num_people = 3\n    cost_per_person = total_cost / num_people\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    bags_of_onions = 4\n    weight_per_bag = 50\n    cost_per_pound = 1.5\n    total_weight = bags_of_onions * weight_per_bag\n    total_cost = total_weight * cost_per_pound\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies eaten on each day\n    monday_cookies = 5\n    tuesday_cookies = monday_cookies * 2\n\n    # Calculate the total number of cookies eaten\n    total_cookies = monday_cookies + tuesday_cookies + 5 + 13\n\n    # Calculate the number of calories consumed by each day\n    monday_calories = monday_cookies * 200\n    sue_calories = tuesday_cookies * 200\n\n    # Calculate the difference in calories consumed\n    calories_difference = sue_calories - monday_calories\n\n    # return the result\n    result = calories_difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of students in the school\n    total_students = 20 * 3\n\n    # Calculate the number of girls in the first class\n    first_class_girls = 15\n\n    # Calculate the number of girls in the second class\n    second_class_girls = 12\n\n    # Calculate the number of boys in the first class\n    first_class_boys = total_students * 0.5\n\n    # Calculate the number of boys in the second class\n    second_class_boys = total_students * 0.5\n\n    # Calculate the number of boys in the third class\n    third_class_boys = first_class_boys * 0.5\n\n    result = third_class_boys\n    return result"}
{"output": "def solution():\n    \n    initial_apps = 61\n    deleted_apps = 9\n    downloaded_apps = 18\n    remaining_apps = initial_apps - deleted_apps + downloaded_apps\n    result = remaining_apps\n    return result"}
{"output": "def solution():\n    \n    # Define the number of wolves and cougars killed last night\n    wolves_last_night = 10\n    cougars_last_night = 15\n\n    # Calculate the number of wolves and cougars killed today\n    wolves_today = wolves_last_night * 3\n    cougars_today = cougars_last_night - 3\n\n    # Calculate the total number of animals killed\n    total_animals = wolves_last_night + cougars_last_night + wolves_today + cougars_today\n\n    # Display the total number of animals killed\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    starting_floor = 3\n    elevator_floor = 4 * starting_floor + 6\n    total_floor = starting_floor + elevator_floor\n    result = total_floor\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Mitchel went down the water slide\n    mitchel_slide = 30\n\n    # Calculate the number of times Anne went down the water slide\n    anne_slide = mitchel_slide * 0.7\n\n    # Calculate the number of times Robert went down the water slide\n    robert_slide = anne_slide * 4\n\n    # Display the number of times Robert went down the water slide\n    result = robert_slide\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stalls and cows per stall\n    num_stalls = 10\n    cows_per_stall = 20\n\n    # Calculate the total number of cows\n    total_cows = num_stalls * cows_per_stall\n\n    # Divide the new cows equally\n    new_cows = 40 / num_stalls\n\n    # Calculate the number of new cows in each stall\n    new_cows_per_stall = new_cows / 20\n\n    # Calculate the total number of cows in 8 stalls\n    total_cows_in_8_stalls = new_cows_per_stall * 8\n\n    # Display the total number of cows in 8 stalls\n    result = total_cows_in_8_stalls\n    return result"}
{"output": "def solution():\n    num_pennies = 100\n    num_nickels = 40\n    num_dimes = 20\n    num_dollars = 40\n\n    # Calculate the total value of all the pennies\n    total_pennies_value = num_pennies * 0.01\n\n    # Calculate the total value of all the nickels\n    total_nickels_value = num_nickels * 0.05\n\n    # Calculate the total value of all the dimes\n    total_dimes_value = num_dimes * 0.1\n\n    # Calculate the total value of all the dollars\n    total_dollars_value = total_pennies_value + total_nickels_value + total_dimes_value + num_dollars\n    result = total_dollars_value\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each section of the redwood\n    SECTION_WEIGHT = 400\n\n    # Define the height of the redwood\n    height = 200\n\n    # Calculate the weight of each section of the redwood\n    section_weight = SECTION_WEIGHT * (height * 0.3)\n\n    # Calculate the total weight of the redwood\n    total_weight = section_weight * height\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per book and the number of books\n    BOOK_COST = 0.5\n    NUM_BOOKS = 8\n\n    # Calculate the total cost of the books\n    total_cost = BOOK_COST * NUM_BOOKS + 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples Andrea has\n    andrea_apples = 52\n\n    # Calculate the number of apples Jamal has\n    jamal_apples = andrea_apples - 8\n\n    # Calculate the number of bananas Jamal has\n    jamal_bananas = jamal_apples + 4\n\n    # Calculate the number of bananas Andrea has\n    andrea_bananas = jamal_bananas / 2\n\n    # Calculate the total number of fruits\n    total_fruits = andrea_apples + jamal_apples + andrea_bananas\n\n    # Display the total number of fruits\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of flour needed per dozen cookies\n    FLOUR_PER_DOZEN = 2\n\n    # Define the number of cookies Carla is making\n    cookies_today = 36\n    cookies_tomorrow = 30\n\n    # Calculate the total amount of flour needed\n    total_flour = (cookies_today + cookies_tomorrow) * FLOUR_PER_DOZEN\n\n    # Display the total amount of flour needed\n    result = total_flour\n    return result"}
{"output": "def solution():\n    \n    total_pennies = 9300\n    fraction_of_pennies = 2/3\n    pennies_in_stack = total_pennies * fraction_of_pennies\n    result = pennies_in_stack\n    return result"}
{"output": "def solution():\n    \n    boxes = 5\n    marbles_per_box = 50\n    total_marbles = boxes * marbles_per_box\n    marbles_from_friend = 20\n    remaining_marbles = total_marbles - marbles_from_friend\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees in Chris's yard\n    CHRIS_TREES = 6\n\n    # Calculate the number of trees in Ferdinand's yard\n    FERDINAND_TREES = CHRIS_TREES / 2\n\n    # Calculate the number of trees in Harry's yard\n    HARRY_TREES = 2 * FERDINAND_TREES + 5\n\n    # Calculate the difference in the number of trees between Harry and Ferdinand's yard\n    DIFFERENCE = HARRY_TREES - FERDINAND_TREES\n\n    # Display the difference in the number of trees\n    result = DIFFERENCE\n    return result"}
{"output": "def solution():\n    \n    carmen_money = 100\n    samantha_money = carmen_money + 25\n    daisy_money = samantha_money + 50\n    total_money = carmen_money + samantha_money + daisy_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial budget and the selling price of the property\n    INITIAL_BUDGET = 400000\n    PROPERTY_PRICE = 350000\n\n    # Calculate the amount of the brokerage fee\n    brokerage_fee = INITIAL_BUDGET * 0.05\n\n    # Calculate the amount of the transfer fee\n    transfer_fee = INITIAL_BUDGET * 0.12\n\n    # Calculate the total price of the house\n    total_price = INITIAL_BUDGET + PROPERTY_PRICE + brokerage_fee + transfer_fee\n\n    # Calculate the difference between the total price and the initial budget\n    difference = total_price - INITIAL_BUDGET\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    sold_price = 40000\n    transfer_fee = 0.3 * sold_price\n    brokerage_fee = 0.05 * sold_price\n    remaining_balance = 250000\n    net_proceeds = sold_price - transfer_fee - brokerage_fee - remaining_balance\n    result = net_proceeds\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to heat up to 300 degrees\n    heat_up_300 = 20\n\n    # Calculate the time it takes to heat up to 400 degrees\n    heat_up_400 = heat_up_300 * 1.4\n\n    # Calculate the time it takes to warm up the oil\n    warm_up_300 = 300\n\n    # Calculate the time it takes to cook the oil\n    cook_time = warm_up_300 - 5\n\n    # Calculate the time passed from starting the oil to have cooked chicken\n    time_passed = heat_up_300 + heat_up_400 + cook_time\n\n    # Display the time passed\n    result = time_passed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each type of ad\n    NEWSPAPER_PRICE = 5\n    TV_PRICE = 75\n\n    # Define the number of each type of ad purchased\n    newspaper_ads = 50\n    tv_ads = 15\n\n    # Calculate the total cost of the newspaper ads\n    newspaper_cost = newspaper_ads * NEWSPAPER_PRICE\n\n    # Calculate the total cost of the television ads\n    tv_cost = tv_ads * TV_PRICE\n\n    # Calculate the total cost of all the ads\n    total_cost = newspaper_cost + tv_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_balls = 16\n    golf_balls = total_balls / 2\n    blue_golf_balls = golf_balls / 2\n    result = blue_golf_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of M&Ms in the first bag\n    first_bag = 300\n\n    # Calculate the number of M&Ms in the second bag\n    second_bag = first_bag + 12\n\n    # Calculate the number of M&Ms in the third bag\n    third_bag = first_bag / 2\n\n    # Calculate the total number of M&Ms\n    total_mms = first_bag + second_bag + third_bag\n\n    # Display the total number of M&Ms\n    result = total_mms\n    return result"}
{"output": "def solution():\n    \n    houses = 2\n    bedrooms_per_house = 3\n    windows_per_bedroom = 2\n    extra_windows_per_house = 4\n    total_windows = (houses * bedrooms_per_house * windows_per_bedroom) + (houses * extra_windows_per_house)\n    result = total_windows\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the items\n    cocoa_price = 4.20\n    laundry_price = 9.45\n    pasta_price = 1.35\n\n    # Calculate the total cost of the items\n    total_cost = cocoa_price + laundry_price + pasta_price\n\n    # Calculate the change the cashier gave back\n    change = 20 - total_cost\n\n    # return the result\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stitches taken by the body\n    body_stitches = 900\n\n    # Calculate the number of stitches taken by the collar\n    collar_stitches = body_stitches / 10\n\n    # Calculate the number of stitches taken by the rosette\n    rosette_stitches = collar_stitches * 2\n\n    # Calculate the total number of stitches taken\n    total_stitches = body_stitches + collar_stitches + rosette_stitches\n\n    # Calculate the number of stitches taken by each sleeve\n    sleeve_stitches = 1800 - total_stitches\n\n    # Display the number of stitches taken by each sleeve\n    result = sleeve_stitches\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of seed\n    TOMATO_PRICE = 40\n    CELERY_PRICE = 30\n\n    # Define the number of packets of each type of seed bought\n    tomato_packets = 20\n    celery_packets = 80\n\n    # Calculate the total cost of the tomato seeds\n    tomato_cost = tomato_packets * TOMATO_PRICE\n\n    # Calculate the total cost of the celery seeds\n    celery_cost = celery_packets * CELERY_PRICE\n\n    # Calculate the total cost of all the seeds\n    total_cost = tomato_cost + celery_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_lines_song = 54\n\n    # Calculate the number of lines in the first scene\n    num_lines_first_scene = num_lines_song * 2\n\n    # Calculate the number of lines in the second scene\n    num_lines_second_scene = num_lines_song + 6\n\n    # Calculate the number of lines in the first scene\n    num_lines_first_scene = num_lines_first_scene / 3\n\n    # Calculate the number of lines in the second scene\n    num_lines_second_scene = num_lines_second_scene * 4 / 5\n\n    # Calculate the total number of lines that Sean has to memorize\n    total_lines = num_lines_song + num_lines_first_scene + num_lines_second_scene\n    result = total_lines\n    return result"}
{"output": "def solution():\n    \n    total_cards = 80\n    a_cards = (2/5) * total_cards\n    remaining_cards = total_cards - a_cards\n    b_cards = (1/2) * remaining_cards\n    c_cards = (5/8) * remaining_cards\n    d_cards = remaining_cards - c_cards\n    result = d_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to dig a small hole and a large hole\n    SMALL_HOLE_TIME = 3\n    LARGE_HOLE_TIME = 10\n\n    # Define the number of small and large holes to dig\n    small_holes = 30\n    large_holes = 15\n\n    # Calculate the total time to dig all the small and large holes\n    total_time = (small_holes * SMALL_HOLE_TIME) + (large_holes * LARGE_HOLE_TIME)\n\n    # Convert the total time to hours\n    hours = total_time / 60\n\n    # Display the total time in hours\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the sum of their ages and the number of years\n    sum_of_ages = 20\n    years = 10\n\n    # Calculate the sum of their ages in 10 years\n    sum_of_ages_in_10_years = sum_of_ages + (years * 2)\n\n    # Display the sum of their ages in 10 years\n    result = sum_of_ages_in_10_years\n    return result"}
{"output": "def solution():\n    \n    ruby_age_in_9_years = 3 * (9 + 6)\n    sam_age_in_9_years = ruby_age_in_9_years / 6\n    result = sam_age_in_9_years\n    return result"}
{"output": "def solution():\n    num_popsicles = 20\n    popsicle_price = 0.25\n\n    num_ice_cream_bars = 4\n    ice_cream_price = 0.5\n\n    # Calculate the total cost of all popsicles\n    total_popsicle_cost = num_popsicles * popsicle_price\n\n    # Calculate the total cost of all ice cream bars\n    total_ice_cream_cost = num_ice_cream_bars * ice_cream_price\n\n    # Calculate the total cost of all items\n    total_cost = total_popsicle_cost + total_ice_cream_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spots in a cobras\n    cobras_spots = 70\n\n    # Calculate the number of spots in a mamba\n    mambas_spots = cobras_spots / 2\n\n    # Calculate the total number of spots\n    total_spots = cobras_spots + mambas_spots\n\n    # Calculate half the number of spots\n    half_spots = total_spots / 2\n\n    # Display half the number of spots\n    result = half_spots\n    return result"}
{"output": "def solution():\n    \n    # Define the number of team members and coaches\n    num_team_members = 12\n    num_coaches = 3\n\n    # Calculate the total number of guests\n    total_guests = num_team_members * 2\n\n    # Calculate the total number of pizzas needed\n    total_pizzas = total_guests // 3 + (1 if total_guests % 3 > 0 else 0)\n\n    # Calculate the total cost of the pizzas\n    total_cost = total_pizzas * 15\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of topaz gemstones used per necklace\n    topaz_gemstones_per_necklace = 8\n\n    # Define the length of each sterling silver bead in inches\n    sterling_silver_bead_length = 0.25\n\n    # Define the total length of each necklace in inches\n    necklace_length = 25\n\n    # Calculate the total length of all the topaz gemstones used\n    total_topaz_gemstones = topaz_gemstones_per_necklace * necklace_length\n\n    # Calculate the total length of all the sterling silver beads used\n    total_sterling_silver_beads = total_topaz_gemstones * sterling_silver_bead_length\n\n    # Calculate the number of sterling silver beads used per necklace\n    sterling_silver_beads_per_necklace = total_sterling_silver"}
{"output": "def solution():\n    \n    alani_week1 = 20\n    braylen_week1 = 40\n    margot_week1 = 60\n    alani_week2 = alani_week1 * 2\n    braylen_week2 = braylen_week1 * 2\n    margot_week2 = margot_week1 * 2\n    total_stories = alani_week1 + braylen_week1 + margot_week1 + alani_week2 + braylen_week2 + margot_week2\n    result = total_stories\n    return result"}
{"output": "def solution():\n    \n    ann_age = 9\n    brother_age = ann_age * 2\n    brother_age_in_3_years = brother_age + 3\n    result = brother_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    quarters = 5\n    dimes = 2\n    total_cents = (quarters * 25) + (dimes * 10)\n    cents_left = 55 - total_cents\n    result = cents_left\n    return result"}
{"output": "def solution():\n    # Calculate the total number of stars on the flag\n    total_stars = 76\n\n    # Calculate the number of stars in the first three rows\n    first_three_rows = 3 * 8\n\n    # Calculate the number of stars in the second two rows\n    second_two_rows = 2 * 6\n\n    # Calculate the number of stars in the remaining rows\n    remaining_rows = total_stars - first_three_rows - second_two_rows\n\n    # Calculate the total number of rows of 5 stars\n    total_5_rows = remaining_rows * 5\n    result = total_5_rows\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each flagstone and the total weight capacity\n    flagstone_weight = 75\n    total_weight_capacity = 2000\n\n    # Calculate the total weight of all the flagstones\n    total_weight = flagstone_weight * 80\n\n    # Calculate the number of trucks needed to transport all the flagstones\n    trucks_needed = total_weight // total_weight_capacity\n    if total_weight % total_weight_capacity!= 0:\n        trucks_needed += 1\n\n    # return the result\n    result = trucks_needed\n    return result"}
{"output": "def solution():\n    \n    fast_lane_speed = 60\n    slow_lane_speed = fast_lane_speed / 2\n    total_distance = 480\n    slow_lane_time = (total_distance / slow_lane_speed) / slow_lane_speed\n    result = slow_lane_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of medals Ali has won\n    ali_medals = 22\n\n    # Calculate the number of medals Izzy has\n    izzy_medals = ali_medals - 5\n\n    # Calculate the total number of medals they have\n    total_medals = ali_medals + izzy_medals\n\n    # Calculate the number of medals given out\n    given_out_medals = total_medals // 10\n\n    # Display the number of medals given out\n    result = given_out_medals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and children and the number of chocolate bars in each packet\n    num_adults = 4\n    num_children = 8\n    chocolate_bars_per_packet = 5\n\n    # Calculate the total number of chocolate bars\n    total_chocolate_bars = num_adults * chocolate_bars_per_packet\n\n    # Calculate the number of chocolate bars each child gets\n    chocolate_bars_per_child = total_chocolate_bars / (num_children * chocolate_bars_per_packet)\n\n    # Display the number of chocolate bars each child gets\n    result = chocolate_bars_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the rate of pay per 10 minutes\n    PAY_RATE = 5\n\n    # Calculate the total earnings in half an hour\n    earnings_half_hour = (8 * PAY_RATE) + (11 * PAY_RATE)\n\n    # Calculate the total earnings for the online task\n    total_earnings = earnings_half_hour * 30\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    mike_points = 21\n    jim_points = mike_points - 3\n    tony_points = mike_points * 2\n    total_points = mike_points + jim_points + tony_points\n    extra_points = 20\n    total_points += extra_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of oranges\n    oranges = 15\n\n    # Calculate the number of oranges washed by the oldest son\n    oldest_son_oranges = 8\n\n    # Calculate the number of oranges washed by the youngest son\n    youngest_son_oranges = oldest_son_oranges / 2\n\n    # Calculate the total number of oranges washed\n    total_oranges_washed = oldest_son_oranges + youngest_son_oranges\n\n    # Calculate the number of oranges left unwashed\n    oranges_left = oranges - total_oranges_washed\n\n    # return the result\n    result = oranges_left\n    return result"}
{"output": "def solution():\n    \n    first_day_pushups = 100\n    first_day_squats = 50\n    first_day_dumbbell_presses = 20\n    second_day_pushups = first_day_pushups + 20\n    second_day_squats = first_day_squats - 10\n    second_day_dumbbell_presses = first_day_dumbbell_presses * 2\n    total_activities = first_day_pushups + first_day_squats + first_day_dumbbell_presses + second_day_pushups + second_day_squats + second_day_dumbbell_presses\n    result = total_activities\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of rice consumed per meal\n    rice_per_meal = 0.2\n\n    # Define the number of people in the household\n    num_people = 5\n\n    # Calculate the total amount of rice consumed per day\n    total_rice_per_day = rice_per_meal * num_people\n\n    # Calculate the total amount of rice consumed per week\n    total_rice_per_week = total_rice_per_day * 7\n\n    # Calculate the number of weeks the 42 kg bag of rice will last\n    num_weeks = 42 / total_rice_per_week\n\n    # Display the number of weeks\n    result = num_weeks\n    return result"}
{"output": "def solution():\n    \n    target_crates = 120\n    sold_crates_weekend = 20\n    sold_crates_tuesday = 15\n    sold_crates_wednesday = 12\n    sold_crates_thursday = 18\n    total_sold_crates = sold_crates_weekend + sold_crates_tuesday + sold_crates_wednesday + sold_crates_thursday\n    crates_off = target_crates - total_sold_crates\n    result = crates_off\n    return result"}
{"output": "def solution():\n    \n    # Define the initial bid and the number of people\n    initial_bid = 200\n    num_people = 4\n\n    # Calculate the new bids after each person\n    new_bid_1 = initial_bid + 50\n    new_bid_2 = new_bid_1 * 2\n    new_bid_3 = new_bid_2 * 2\n    new_bid_4 = new_bid_3 * 2\n\n    # Calculate the total cost of the desk\n    total_cost = new_bid_1 + new_bid_2 + new_bid_3 + initial_bid\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    miles_per_day = 30\n    days_per_week = 5\n    weeks_per_year = 50\n    miles_per_month = miles_per_day * days_per_week * weeks_per_year\n    cost_per_mile = 2\n    bonus_per_month = 150\n    total_cost_per_month = miles_per_month * cost_per_mile + bonus_per_month\n    total_cost_per_year = total_cost_per_month * 12\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    \n    sunday_time = 23\n    monday_time = 16\n    total_time = sunday_time + monday_time\n    tuesday_time = total_time * 2\n    result = tuesday_time\n    return result"}
{"output": "def solution():\n    # Calculate the total number of pieces of paper used in a 32-page tabloid\n    left_back = 1\n    left_front = 2\n    right_back = 32\n    right_front = 31\n    total_pieces = left_back + left_front + right_back + right_front\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money\n    initial_amount = 50\n\n    # Calculate the amount spent on food and snacks\n    food_and_snack_cost = initial_amount / 2\n\n    # Calculate the total amount spent\n    total_spent = food_and_snack_cost + 10\n\n    # Calculate the amount left\n    amount_left = initial_amount - total_spent\n\n    # return the result\n    result = amount_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of books and the price per book\n    INITIAL_BOOKS = 250\n    BOOK_PRICE = 20\n\n    # Calculate the total number of books sold in the first year\n    first_year_books = INITIAL_BOOKS - 50\n\n    # Calculate the total earnings from selling the first year\n    first_year_earnings = first_year_books * BOOK_PRICE\n\n    # Calculate the total earnings from selling the second year\n    second_year_earnings = (INITIAL_BOOKS - 50) * BOOK_PRICE + 45\n\n    # Display the total earnings in the second year\n    result = second_year_earnings\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 10\n    days_per_week = 5\n    hourly_rate = 10\n    bonus_per_week = 300\n    total_hours = hours_per_day * days_per_week * 4\n    total_pay = total_hours * hourly_rate + bonus_per_week * hourly_rate\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people\n    initial_people = 20\n\n    # Calculate the number of people he beats\n    beats = initial_people * 0.8\n\n    # Calculate the number of people he lost\n    lost = initial_people - beats\n\n    # return the result\n    result = lost\n    return result"}
{"output": "def solution():\n    \n    total_loaves = 60\n    morning_sales = (2/3) * total_loaves\n    remaining_loaves = total_loaves - morning_sales\n    afternoon_sales = (1/2) * remaining_loaves\n    result = afternoon_sales\n    return result"}
{"output": "def solution():\n    \n    joey_weight_loss = 8\n    joey_weeks = 4\n    sandy_weight_loss = joey_weight_loss / joey_weeks\n    sandy_weeks = sandy_weight_loss / 4\n    result = sandy_weeks\n    return result"}
{"output": "def solution():\n    \n    ice_cream_cost = 13\n    ice_cream_discount = 11\n    milk_discount = 0.5\n    ice_cream_total_cost = ice_cream_cost * 2\n    milk_total_cost = milk_discount * 4\n    total_savings = (ice_cream_total_cost - ice_cream_discount) + (milk_total_cost - milk_discount)\n    result = total_savings\n    return result"}
{"output": "def solution():\n    \n    total_days = 15\n    extra_arms = total_days // 3\n    extra_legs = total_days // 5\n    total_limbs = (extra_arms * 3) + (extra_legs * 5)\n    result = total_limbs\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the business suits\n    business_suit_cost = 6 * 100\n\n    # Calculate the total cost of the suitcases\n    suitcase_cost = 3 * 50\n\n    # Calculate the total cost of the flight ticket\n    flight_ticket_cost = 5 * business_suit_cost + 700\n\n    # Calculate the total cost of the business trip\n    total_cost = business_suit_cost + suitcase_cost + flight_ticket_cost + 2000\n\n    # Calculate how much more money Theo needs to spend on gifts\n    gift_cost = 6000 - total_cost\n    result = gift_cost\n    return result"}
{"output": "def solution():\n    \n    num_people = 5\n    num_eggs_3 = 3\n    num_eggs_2 = num_people - num_eggs_3\n    eggs_per_day_3 = 3\n    eggs_per_day_2 = 2\n    total_eggs_per_day = (num_eggs_3 * eggs_per_day_3) + (num_eggs_2 * eggs_per_day_2)\n    total_eggs_per_week = total_eggs_per_day * 7\n    result = total_eggs_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define Quinn's age\n    quinn_age = 30\n\n    # Calculate Jane's age\n    jane_age = quinn_age - 3\n\n    # Calculate Trent's age\n    trent_age = jane_age + 5\n\n    # Display Trent's age\n    result = trent_age\n    return result"}
{"output": "def solution():\n    \n    cera_age = 46\n    noah_age_6_years_ago = cera_age / 2\n    noah_age_now = noah_age_6_years_ago + 6\n    chile_age_now = noah_age_now / 2\n    result = chile_age_now\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of players on the football team\n    total_players = 105\n\n    # Calculate the number of players on the offense\n    offense_players = total_players * 2\n\n    # Calculate the number of players on the special teams\n    special_players = total_players / 2\n\n    # Calculate the number of players on the defense\n    defense_players = total_players - offense_players - special_players\n\n    # Display the number of players on the defense\n    result = defense_players\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people in each family\n    family1 = 6\n    family2 = 6\n    family3 = 4\n\n    # Calculate the total number of people who attended the party\n    total_guests = family1 + family2 + family3\n\n    # Calculate the number of people who had previous commitments\n    previous_commitments = total_guests // 4\n\n    # Calculate the total number of people who actually showed up\n    actual_guests = total_guests - previous_commitments\n\n    # Display the actual number of guests\n    result = actual_guests\n    return result"}
{"output": "def solution():\n    \n    johanna_marbles = 20\n    store_marbles = 50\n    father_marbles = (2/5) * johanna_marbles\n    total_marbles = johanna_marbles + store_marbles + father_marbles\n    weight_per_marble = 2\n    total_weight = total_marbles * weight_per_marble\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    pool_width = 6\n    pool_length = 4\n    pool_depth = 5\n    volume = pool_width * pool_length\n    cost_per_volume = 0.1\n    total_cost = volume * cost_per_volume\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boys\n    boys = 30\n\n    # Calculate the number of girls\n    girls = boys * 3\n\n    # Calculate the number of nongendered children\n    nongendered = boys * 1/10\n\n    # Calculate the total number of children\n    total_children = boys + girls + nongendered\n\n    # Display the total number of children\n    result = total_children\n    return result"}
{"output": "def solution():\n    # Define the ratio of electric poles to electric wires\n    poles_to_wires_ratio = 1/3\n\n    # Calculate the total number of electric wires needed\n    total_wires = 45\n\n    # Calculate the total number of electric poles needed\n    total_poles = total_wires / poles_to_wires_ratio\n    result = total_poles\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of men and women\n    initial_men = 25\n    initial_women = 15\n\n    # Calculate the total number of people at the party\n    total_people = initial_men + initial_women\n\n    # Calculate the number of people who left after an hour\n    people_left = total_people / 4\n\n    # Calculate the number of women left\n    women_left = total_people - people_left - 22\n\n    # Display the number of women left\n    result = women_left\n    return result"}
{"output": "def solution():\n    \n    book_cost = 4\n    magazine_cost = book_cost / 2\n    pen_cost = magazine_cost - 1\n    result = pen_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pencils Jam has\n    jam_pencils = 3 + 2\n\n    # Define the number of pencils Meg has\n    meg_pencils = 46\n\n    # Calculate the total number of pencils\n    total_pencils = jam_pencils + meg_pencils\n\n    # Calculate the number of boxes needed\n    boxes_needed = total_pencils // 26 + (total_pencils % 26 > 0)\n\n    # Display the number of boxes needed\n    result = boxes_needed\n    return result"}
{"output": "def solution():\n    \n    ice_cube_capacity = 13\n    ice_cube_weight = 12\n    added_liquid_weight = 15\n    total_liquid_weight = (65 - ice_cube_capacity) * ice_cube_weight + added_liquid_weight\n    result = total_liquid_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the number of new records they can trade\n    num_people = 5\n    new_records = 7\n\n    # Calculate the total number of new records they can trade\n    total_new_records = new_records * num_people\n\n    # Calculate the total number of old records they can trade\n    total_old_records = total_new_records - 2\n\n    # return the result\n    result = total_old_records\n    return result"}
{"output": "def solution():\n    # Calculate the number of junior programmers\n    num_junior_programmers = 2/5 * 100\n\n    # Calculate the number of senior programmers\n    num_senior_programmers = num_junior_programmers + 400\n\n    # Calculate the total amount paid to all junior programmers\n    total_junior_payment = num_junior_programmers * 2000\n\n    # Calculate the total amount paid to all senior programmers\n    total_senior_payment = num_senior_programmers * 2000\n\n    # Calculate the total amount paid to all programmers\n    total_payment = total_junior_payment + total_senior_payment\n    result = total_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people who got in at the first bus stop\n    first_bus_passengers = 5\n\n    # Define the number of people who got down at the second bus stop\n    second_bus_passengers = 7\n\n    # Define the number of people who got in at the third bus stop\n    third_bus_passengers = 8\n\n    # Calculate the total number of people who got on the bus\n    total_passengers = first_bus_passengers + second_bus_passengers + third_bus_passengers\n\n    # Display the total number of people who got on the bus\n    result = total_passengers\n    return result"}
{"output": "def solution():\n    starting_lollipops = 24  # Oscar starts with 24 lollipops\n    lollipops_given_away = 14  # Oscar gives 14 lollipops to his friends\n    lollipops_bought = 2 * lollipops_given_away  # Oscar buys twice as many lollipops on his way home as he gave to his friends\n    lollipops_eaten_in_night = 3  # Oscar eats 3 more lollipops on his way home\n    lollipops_eaten_in_morning = 2  # Oscar eats 2 more lollipops in the morning\n\n    # Calculate the total number of lollipops Oscar has\n    total_lollipops = starting_lollipops - lollipops_given_away + lollipops_bought + lollipops_eaten_in_night + lollipops_eaten_in_morning\n    result = total_lollipops"}
{"output": "def solution():\n    # Calculate the time it takes to fully charge the phone\n    time_to_fully_charge = 0.6 * 60 / 3  # 60% of 60 minutes is 3 minutes\n\n    # Convert the time to hours\n    time_in_hours = time_to_fully_charge / 60\n\n    result = time_in_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 7\n\n    # Define the number of lollipops given by Erin's mother\n    mother_lollipops = 10\n\n    # Calculate the total number of lollipops\n    total_lollipops = initial_lollipops + mother_lollipops\n\n    # Subtract the number of lollipops given to Ella\n    remaining_lollipops = total_lollipops - 3\n\n    # return the result\n    result = remaining_lollipops\n    return result"}
{"output": "def solution():\n    \n    last_purchase_cost = 80\n    coupon_discount = 2\n    last_purchase_reward = last_purchase_cost // coupon_discount\n    this_purchase_cost = 43\n    this_purchase_reward = this_purchase_cost - last_purchase_reward\n    total_cost = last_purchase_cost + this_purchase_cost + last_purchase_reward + this_purchase_reward\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    job_a_salary = 15 * 2000\n    job_a_tax_rate = 0.2\n    job_b_salary = 42000\n    job_b_tax_rate = 0.1\n    job_a_tax_amount = job_a_salary * job_a_tax_rate\n    job_b_tax_amount = job_b_salary * job_b_tax_rate\n    job_a_net_pay = job_a_salary * job_a_tax_rate\n    job_b_net_pay = job_b_salary * job_b_tax_rate\n    net_pay_difference = job_net_pay - job_a_net_pay\n    result = net_pay_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of castles and the percentage of ruins\n    total_castles = 220\n    ruin_percentage = 0.4\n\n    # Calculate the number of ruin castles\n    ruin_castles = total_castles * ruin_percentage\n\n    # Calculate the number of unmanned ruin castles\n    unmanned_ruin_castles = ruin_castles / 2\n\n    # return the result\n    result = unmanned_ruin_castles\n    return result"}
{"output": "def solution():\n    furniture_advance = 150\n    furniture_installments = 6\n    furniture_price = 350\n    cozy_homes_advance = 1100\n    cozy_homes_installments = 9\n    cozy_homes_price = 250\n\n    # Calculate the total cost of Furniture's offer\n    furniture_total_cost = furniture_advance + (furniture_installments * furniture_price)\n\n    # Calculate the total cost of Cozy Homes' offer\n    cozy_homes_total_cost = cozy_homes_advance + (cozy_homes_installments * cozy_homes_price)\n\n    # Calculate the difference in cost between the two offers\n    cost_difference = furniture_total_cost - cozy_homes_total_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    total_guns = 8 + 10 + 1 + 5\n    num_people = 3\n    guns_per_person = total_guns / num_people\n    result = guns_per_person\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of sugar needed to make 8 batches of suckers\n    sugar_for_suckers = 30 * 8  # 30 ounces of sugar needed to make 1 batch of suckers\n\n    # Calculate the total amount of sugar needed to make 1 batch of fudge\n    sugar_for_fudge = 70\n\n    # Calculate the total amount of sugar needed to make 8 batches of suckers and 1 batch of fudge\n    total_sugar = sugar_for_suckers + sugar_for_fudge\n    result = total_sugar\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of each share\n    initial_price = 8\n\n    # Calculate the price after the first year\n    first_year_price = initial_price * 1.5\n\n    # Calculate the price after the second year\n    second_year_price = first_year_price * 0.75\n\n    # Calculate the final value of all the shares\n    final_value = first_year_price + second_year_price\n\n    # return the result\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hot dogs eaten by Luke\n    luke_dogs = 2\n\n    # Define the number of hot dogs eaten by Thomas\n    thomas_dogs = luke_dogs * 3\n\n    # Define the number of hot dogs eaten by John\n    john_dogs = thomas_dogs / 2\n\n    # Calculate the difference between the number of hot dogs eaten by John and Luke\n    difference = john_dogs - luke_dogs\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of equal groups\n    total_students = 200\n    equal_groups = 2\n\n    # Calculate the number of students in the other groups\n    other_groups = equal_groups * 2\n\n    # Calculate the number of students in the smallest group\n    smallest_group = other_groups - 10\n\n    # Calculate the number of students in the smallest group\n    smallest_group = smallest_group\n\n    # return the result\n    result = smallest_group\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of animals and the ratio of chickens to cows\n    total_animals = 60\n    chicken_to_cow_ratio = 2\n\n    # Calculate the total number of cows\n    total_cows = total_animals / (1 + chicken_to_cow_ratio + 1)\n\n    # Calculate the total number of chickens\n    total_chickens = total_cows * chicken_to_cow_ratio\n\n    # Calculate the total number of legs\n    total_legs = total_chickens * 4\n\n    # return the result\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of balls and the number of balls added per week\n    INITIAL_BALLS = 3\n    ADDITIONAL_BALLS_PER_WEEK = 1\n\n    # Calculate the total number of balls after the fourth week\n    total_balls = INITIAL_BALLS + ADDITIONAL_BALLS_PER_WEEK * 4 - 3\n\n    # Calculate the number of balls caught by people who roll off the stage\n    caught_by_people = 2\n\n    # Calculate the number of balls lost\n    lost_balls = 1\n\n    # Calculate the final number of balls\n    final_balls = total_balls - caught_by_people - lost_balls\n\n    # Display the final number of balls\n    result = final_balls\n    return result"}
{"output": "def solution():\n    \n    pink_weight = 50\n    blue_weight = pink_weight\n    green_weight = pink_weight\n    yellow_weight = pink_weight - 10\n    red_weight = pink_weight + 20\n    total_weight = blue_weight + green_weight + yellow_weight + red_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of baby outfits\n    initial_outfits = 24\n\n    # Calculate the number of baby outfits Laurel received\n    new_outfits = initial_outfits * 2\n\n    # Calculate the total number of baby outfits\n    total_outfits = initial_outfits + new_outfits + 15\n\n    # Display the total number of baby outfits\n    result = total_outfits\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Tyson runs each day and the coach runs 1/5 times more meters\n    daily_distance = 5000\n    coach_distance = daily_distance * (1 + 1/5)\n\n    # Calculate the total distance Tyson runs in June\n    total_distance = (daily_distance * 4) + coach_distance\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the value of Juice Box A\n    JUICE_BOX_A_VALUE = 4\n\n    # Calculate the value of Juice Box B\n    JUICE_BOX_B_VALUE = JUICE_BOX_A_VALUE + 5\n\n    # Calculate the value of Juice Box C\n    JUICE_BOX_C_VALUE = JUICE_BOX_A_VALUE + 7\n\n    # Calculate the difference in value between Juice Box C and Juice Box B\n    difference = JUICE_BOX_C_VALUE - JUICE_BOX_B_VALUE\n\n    # Display the difference in value\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tables and legs per table\n    tables_4 = 40\n    tables_3 = 50\n    legs_4 = 4\n    legs_3 = 3\n\n    # Calculate the total number of legs\n    total_legs = (tables_4 * legs_4) + (tables_3 * legs_3)\n\n    # return the result\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies in the bag\n    initial_cookies = 36\n\n    # Calculate the number of cookies Jenny puts in her son's lunch box\n    lunch_cookies = 4 * 5\n\n    # Calculate the number of cookies Jenny's husband eats\n    husband_cookies = 7\n\n    # Calculate the number of cookies Jenny eats\n    jenny_cookies = lunch_cookies - husband_cookies\n\n    # Display the number of cookies Jenny eats\n    result = jenny_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of each shirt and the discount percentage\n    ORIGINAL_PRICE = 30\n    DISCOUNT_PERCENTAGE = 40\n\n    # Calculate the discounted price of each shirt\n    discounted_price = ORIGINAL_PRICE * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the total cost of the 2 shirts\n    total_cost = discounted_price * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tractors_sold_per_day = 10\n    tractor_income_per_day = 100\n    silos_sold_per_day = 5\n    silo_income_per_day = 220\n    tractor_income_total = tractors_sold_per_day * tractor_income_per_day\n    silo_income_total = silos_sold_per_day * silo_income_per_day\n    difference = tractor_income_total - silo_income_total\n    percent_difference = (difference / (tracting_per_day * 100)) * 100\n    result = percent_difference\n    return result"}
{"output": "def solution():\n    \n    food_cost_per_week = 25\n    treats_cost_per_month = 20\n    medicine_cost_per_month = 100\n    total_food_cost_per_month = food_cost_per_week * 4\n    total_treats_cost_per_month = treats_cost_per_month * 4\n    total_medicine_cost_per_month = medicine_cost_per_month * 4\n    total_cost_per_month = total_food_cost_per_month + total_treats_cost_per_month + total_medicine_cost_per_month\n    total_cost_per_year = total_cost_per_month * 12\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the length of time each activity in hours\n    monday_time = 1\n    tuesday_time = monday_time * 3\n    wednesday_time = 0.5\n    thursday_time = monday_time / 2\n    friday_time = 2\n\n    # Calculate the total length of time\n    total_time = monday_time + tuesday_time + wednesday_time + thursday_time + friday_time\n\n    # Display the total length of time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of plant pots for the daisies\n    daisies_pots = 30\n\n    # Define the number of plant pots for the roses\n    roses_pots = daisies_pots * 2\n\n    # Calculate the total number of plant pots needed\n    total_pots = daisies_pots + roses_pots\n\n    # Calculate the number of plant pots left over\n    left_over_pots = total_pots - 100\n\n    # Display the number of plant pots left over\n    result = left_over_pots\n    return result"}
{"output": "def solution():\n    \n    initial_money = 36\n    sweater_cost = 11\n    brother_money = 4\n    remaining_money = initial_money - sweater_cost - brother_money\n    saved_money = remaining_money\n    result = saved_money\n    return result"}
{"output": "def solution():\n    \n    # Calculate the time spent swimming\n    swimming_time = 6 / 2\n\n    # Calculate the total time spent\n    total_time = 6 + swimming_time + 3 * 2\n\n    # Calculate the time spent sightseeing\n    sightseeing_time = total_time * 0.4\n\n    # Display the time spent sightseeing\n    result = sightseeing_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the phone and Annabelle's initial savings\n    PHONE_COST = 400\n    INITIAL_SAVINGS = 80\n\n    # Calculate Annabelle's earnings from her first job\n    job1_earnings = 10 * 20\n\n    # Calculate Annabelle's earnings from her second job\n    job2_earnings = 5 * 15\n\n    # Calculate Annabelle's total earnings\n    total_earnings = job1_earnings + job2_earnings\n\n    # Calculate how much more Annabelle needs to save\n    remaining_cost = PHONE_COST - total_earnings\n\n    # Display how much more Annabelle needs to save\n    result = remaining_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the shortest tree\n    shortest_tree_height = 6\n\n    # Calculate the height of the second tree\n    second_tree_height = shortest_tree_height + 5\n\n    # Calculate the height of the first two trees\n    first_two_trees_height = shortest_tree_height + second_tree_height\n\n    # Calculate the height of the tallest tree\n    tallest_tree_height = 2 * first_two_trees_height\n\n    # Display the height of the tallest tree\n    result = tallest_tree_height\n    return result"}
{"output": "def solution():\n    total_money = 28\n    num_toy_cars = 6\n    toy_car_price = 2\n    num_teddy_bears = 5\n    teddy_bear_price = 1\n    extra_money = 10\n\n    # Calculate the total cost of all toy cars\n    total_toy_car_cost = num_toy_cars * toy_car_price\n\n    # Calculate the total cost of all teddy bears\n    total_teddy_bear_cost = num_teddy_bears * teddy_bear_price\n\n    # Calculate the total cost of all items\n    total_cost = total_toy_car_cost + total_teddy_bear_cost\n\n    # Calculate the remaining money\n    remaining_money = total_money - extra_money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    budget = 90\n    token_cost = 5\n    mini_golf_cost = 5\n    go_kart_cost = 10\n    total_cost = budget - token_cost - mini_golf_cost\n    num_friends = total_cost // go_kart_cost\n    result = num_friends\n    return result"}
{"output": "def solution():\n    pocket_money_per_day = 5  # Marisa gets $5 as pocket money every day\n    lollipops_per_day = 4  # Marisa buys 4 lollipops every day\n    cost_per_lollipop = 0.25  # Each lollipop costs 25 cents\n    days = 5  # Marisa saves for 5 days\n\n    # Calculate the total cost of the lollipops\n    total_cost = lollipops_per_day * cost_per_lollipop * days\n\n    # Calculate the total amount of money Marisa puts in her piggy bank\n    total_money = total_cost + pocket_money_per_day\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the amount of money spent on gumballs\n    gumballs_cost = 0.05 * 40\n\n    # Calculate the amount of money left after buying the gumballs\n    money_left = 10 - gumballs_cost\n\n    # Calculate the cost of one pound of candy\n    candy_cost = 1.5\n\n    # Calculate the amount of pounds of candy Billy bought\n    pounds_of_candy = money_left / candy_cost\n    result = pounds_of_candy\n    return result"}
{"output": "def solution():\n    \n    carver_age = 45\n    son_age = (carver_age + 5) / 2\n    result = son_age\n    return result"}
{"output": "def solution():\n    \n    distance_first_city = 75\n    distance_second_city = 100\n    distance_third_city = (distance_first_city + distance_second_city) - 50\n    total_distance = distance_first_city + distance_second_city + distance_third_city\n    days = total_distance / 18000\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of stuffing for each type of bed\n    ROTTWEILER_STUFFING = 8\n    CHIHUA_STUFFING = 2\n    COLLIE_STUFFING = (ROTTWEILER_STUFFING + CHIHUA_STUFFING) / 2\n\n    # Define the number of each type of bed\n    rottweiler_beds = 4\n    chihuahua_beds = 4\n    collie_beds = 3\n\n    # Calculate the total amount of stuffing needed\n    total_stuffing = (rottweiler_beds * ROTTWEILER_STUFFING) + (chihuahua_beds * CHIHUA_STUFFING) + (collie_beds * COLLIE_STUFFING)\n\n    # Display the total amount of stuffing needed\n    result = total_stuffing\n    return result"}
{"output": "def solution():\n    distance = 200  # John drives 200 miles to his friend's house\n    speed = 70  # John drives at a speed of 70 mph\n    distance_with_detour = distance + 10  # John takes a detour that added 10 miles\n    distance_without_detour = 240  # John takes a route home that is 240 miles\n    speed_with_detour = 80  # John goes 80 mph to his route home\n\n    # Calculate the time taken for the detour\n    time_with_detour = distance_with_detour / speed_with_detour\n\n    # Calculate the total time taken for the trip\n    total_time = time_with_detour + distance_without_detour + speed_with_detour\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_students = 96\n    girls = 43\n    boys = total_students - girls\n    absent_girls = 5\n    absent_boys = 4\n    boys_at_friday = boys - absent_boys\n    result = boys_at_friday\n    return result"}
{"output": "def solution():\n    \n    # Define the number of girls in the park\n    girls = 6\n\n    # Calculate the number of boys in the park\n    boys = girls * 2\n\n    # Calculate the total number of kids in the park\n    total_kids = girls + boys\n\n    # Display the total number of kids\n    result = total_kids\n    return result"}
{"output": "def solution():\n    \n    total_points = 42\n    first_test_points = 15\n    second_test_points = 18\n    third_test_points = total_points - first_test_points - second_test_points\n    result = third_test_points\n    return result"}
{"output": "def solution():\n    \n    refusing_customers = 3\n    shoplifting_customers = (4 * refusing_customers) - 5\n    goods_customers = 3 * shoplifting_customers\n    total_customers = 50\n    other_customers = total_customers - refusing_customers - shoplifting_customers - goods_customers\n    result = other_customers\n    return result"}
{"output": "def solution():\n    \n    # Define the number of points scored by Sara\n    sara_points = 8\n\n    # Calculate the number of points scored by Erin\n    erin_points = sara_points * 3\n\n    # Calculate the number of points scored by Erin before scoring\n    erin_points_before = erin_points - 14\n\n    # Display the number of points scored by Erin before scoring\n    result = erin_points_before\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each picture frame and the percentage increase\n    FRAME_COST = 20\n    PERCENTAGE_INCREASE = 0.2\n\n    # Calculate the total cost of the picture frames\n    total_cost = 44 * FRAME_COST\n\n    # Calculate the cost of the logo\n    logo_cost = total_cost * PERCENTAGE_INCREASE\n\n    # Calculate the cost of the pins\n    pin_cost = 2 * 5\n\n    # Calculate the cost of the cords\n    cord_cost = (1/4) * 12\n\n    # Calculate the total cost of the gifts\n    gift_cost = total_cost + logo_cost + pin_cost + cord_cost\n\n    # Display the total cost\n    result = gift_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each hand-painted wallpaper\n    BOX_COST = 400\n\n    # Calculate the amount saved by DIY\n    DIY_SAVINGS = BOX_COST * 0.2\n\n    # Calculate the total cost\n    total_cost = DIY_SAVINGS + BOX_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shoes sold on each day\n    friday_shoes = 14\n    sunday_shoes = friday_shoes * 2\n    last_day_shoes = sunday_shoes / 2 - 6\n\n    # Calculate the total number of shoes sold\n    total_shoes = friday_shoes + sunday_shoes + last_day_shoes\n\n    # Display the total number of shoes sold\n    result = total_shoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Hallie dance practiced on Tuesdays and Thursdays\n    tuesday_hours = 1\n    thursday_hours = 2\n\n    # Define the number of hours Hallie dance practiced on Saturdays\n    saturday_hours = tuesday_hours * 2\n\n    # Calculate the total number of hours Hallie dance practiced in a week\n    total_hours = (tuesday_hours + thursday_hours + saturday_hours) * 7\n\n    # Display the total number of hours Hallie dance practiced in a week\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the equipment\n    initial_cost = 400000\n\n    # Calculate the number of faulty pieces of equipment\n    num_faulty = int(initial_cost * 0.4)\n\n    # Calculate the cost of the good pieces of equipment\n    good_cost = initial_cost - num_faulty\n\n    # return the result\n    result = good_cost\n    return result"}
{"output": "def solution():\n    num_sheep = 30\n\n    # Calculate the amount of milk collected from the first half of the sheep\n    milk_first_half = num_sheep / 2\n\n    # Calculate the amount of milk collected from the other half of the sheep\n    milk_other_half = (num_sheep / 2) * 2\n\n    # Calculate the total amount of milk collected per day\n    total_milk = milk_first_half + milk_other_half\n    result = total_milk\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bread rolls\n    bread_rolls = 12\n\n    # Calculate the number of rolls fed to the children\n    children_rolls = 6\n\n    # Calculate the number of remaining rolls\n    remaining_rolls = bread_rolls - children_rolls\n\n    # Calculate the number of rolls fed to the chickens\n    chicken_rolls = remaining_rolls // 8\n\n    # Display the number of rolls fed to the chickens\n    result = chicken_rolls\n    return result"}
{"output": "def solution():\n    \n    total_pupils = 40\n    blue_pupils = total_pupils / 2\n    remaining_pupils = total_pupils - blue_pupils\n    green_pupils = remaining_pupils / 4\n    yellow_pupils = remaining_pupils - green_pupils\n    result = yellow_pupils\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each piece of apples\n    APPLE_PRICE = 4\n\n    # Define the number of apples picked on each day\n    monday_apples = 12\n    tuesday_apples = 12\n    wednesday_apples = 2 * (monday_apples + tuesday_apples)\n\n    # Calculate the total number of apples picked over the three days\n    total_apples = monday_apples + tuesday_apples + wednesday_apples\n\n    # Display the total number of apples picked\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    total_socks = 50\n    pairs_of_socks = 10\n    loose_socks = 15\n    missed_socks = total_socks - pairs_of_socks - loose_socks\n    result = missed_socks\n    return result"}
{"output": "def solution():\n    \n    rachel_cookies = 23\n    janet_cookies = 42\n    brother_cookies = 44\n    total_cookies = rachel_cookies + janet_cookies - brother_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount borrowed and the interest rate\n    total_borrowed = 36650\n    interest_rate = 0.1\n\n    # Calculate the monthly interest\n    monthly_interest = total_borrowed * interest_rate\n\n    # Calculate the total amount to be paid\n    total_amount = total_borrowed + monthly_interest\n\n    # Calculate the amount to be paid per month\n    monthly_payment = total_amount / 5\n\n    # Round the result to 2 decimal places\n    result = round(monthly_payment, 2)\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance Cho hiked in 8 hours\n    cho_distance = 14 * 8\n\n    # Calculate the distance Chloe hiked in 5 hours\n    chloe_distance = 9 * 5\n\n    # Calculate the difference in distance between Cho and Chloe\n    difference = cho_distance - chloe_distance\n\n    # Display the difference in distance\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    silver_pesos = 50\n    gold_pesos = 80\n    anna_silver_pesos = silver_pesos * 2\n    anna_gold_pesos = gold_pesos + 40\n    total_pesos = silver_pesos + gold_pesos + anna_silver_pesos + anna_gold_pesos\n    result = total_pesos\n    return result"}
{"output": "def solution():\n    # Calculate the total number of cups of lemonade Millie can make\n    total_cups = 3 * 12  # each pitcher holds 12 cups of lemonade\n\n    # Calculate the total revenue from selling cups of lemonade\n    total_revenue = total_cups * 1  # each cup of lemonade costs $1\n\n    # Calculate the number of cups of lemonade sold per hour\n    cups_per_hour = 4\n\n    # Calculate the total cost of purchasing the lemonade stand\n    total_cost = 18  # Millie spends $18 to buy enough supplies\n\n    # Calculate the profit per hour\n    profit_per_hour = (total_revenue - total_cost) / cups_per_hour\n    result = profit_per_hour\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hectares left\n    hectares_left = 12.8\n\n    # Calculate the number of hectares sold\n    hectares_sold = hectares_left * 3/5\n\n    # Calculate the total number of hectares\n    total_hectares = hectares_sold + hectares_left\n\n    # Calculate the number of hectares at first\n    hectares_at_first = total_hectares / 1\n\n    # Display the number of hectares at first\n    result = hectares_at_first\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of members and the percentage of boys and girls\n    total_members = 52\n    boys_percentage = 0.5\n    girls_percentage = 0.5\n\n    # Calculate the number of boys and girls\n    boys = total_members * boys_percentage\n    girls = total_members * girls_percentage\n\n    # Calculate the number of people who can't make it to the show\n    cancellations = (boys + girls) / 2\n\n    # Calculate the number of people who sang\n    sangations = total_members - boys - girls - cancellations - 3\n\n    # Display the number of people who sang\n    result = sangations\n    return result"}
{"output": "def solution():\n    \n    # Calculate the average score of the math class\n    avg_score = (65 + 94 + 81 + 74) / 5\n\n    # Calculate the current math grade\n    current_grade = avg_score * 5\n\n    # Display the current math grade\n    result = current_grade\n    return result"}
{"output": "def solution():\n    \n    eraser_cost = 2\n    pencil_cost = 3\n    num_erasers = 6\n    num_pencils = 8\n    total_cost = (eraser_cost * num_erasers) + (pencil_cost * num_pencils)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of messages delivered to Ms. Thompson\n    thompson_messages = 66\n\n    # Calculate the number of messages delivered to Mr. Yu\n    yu_messages = thompson_messages / 3\n\n    # Calculate the total number of messages delivered\n    total_messages = thompson_messages + yu_messages\n\n    # Display the total number of messages delivered\n    result = total_messages\n    return result"}
{"output": "def solution():\n    \n    num_rides = 9\n    ride_price = 2\n    num_tickets = num_rides * 2\n    bracelet_price = 30\n    num_bracelets = 1\n    total_cost = (num_tickets * ride_price) + (num_bracelets * bracelet_price)\n    savings = total_cost - (num_tickets * ride_price)\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gifts to wrap\n    family_gifts = 6\n    friend_gifts = 4\n    teacher_gifts = 2\n\n    # Calculate the total number of gifts\n    total_gifts = family_gifts + friend_gifts + teacher_gifts\n\n    # Calculate the total amount of ribbon needed\n    total_ribbon = total_gifts * 144\n\n    # Calculate the amount of ribbon per gift\n    ribbon_per_gift = total_ribbon // total_gifts\n\n    # Display the amount of ribbon per gift\n    result = ribbon_per_gift\n    return result"}
{"output": "def solution():\n    \n    total_popsicles = 165\n    betty_ratio = 5\n    sam_ratio = 6\n    total_ratio = betty_ratio + sam_ratio\n    betty_popsicles = (betty_ratio / total_ratio) * total_popsicles\n    sam_popsicles = (sam_ratio / total_ratio) * total_popsicles\n    difference = sam_popsicles - betty_popsicles\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    netflix_cost = 10\n    hulu_cost = 10\n    disney_cost = 10\n    total_cost = (netflix_cost + (hulu_cost * 2) + (disney_cost * 0.2)) * 60\n    savings = total_cost - 60\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the time spent writing the song\n    writing_time = 4\n\n    # Calculate the time spent recording the song\n    recording_time = writing_time / 2\n\n    # Define the time spent editing the song\n    editing_time = 90\n\n    # Calculate the total time spent editing\n    total_time = writing_time + recording_time + editing_time\n\n    # Calculate the percentage of time spent editing\n    editing_percentage = (editing_time / total_time) * 100\n\n    # Display the percentage of time spent editing\n    result = editing_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and columns\n    rows = 6\n    columns = 6\n\n    # Calculate the number of books needed\n    books = 2 * (rows * columns) + 20\n\n    # Display the number of books needed\n    result = books\n    return result"}
{"output": "def solution():\n    \n    initial_cards = 20\n    pre_made_boxes = 2\n    cards_per_box = 15\n    total_cards = initial_cards + (pre_made_boxes * cards_per_box)\n    passed_out_cards = 24\n    family_cards = 5\n    friend_cards = 17\n    remaining_cards = total_cards - passed_out_cards - family_cards - friend_cards\n    result = remaining_cards\n    return result"}
{"output": "def solution():\n    \n    total_slices = 12\n    bill_slices = total_slices / 3\n    mark_slices = total_slices / 4\n    remaining_slices = total_slices - bill_slices - mark_slices - 2\n    result = remaining_slices\n    return result"}
{"output": "def solution():\n    \n    starting_amount = 50\n    daily_earnings = 10\n    bike_cost = 300\n    days_to_save = (bike_cost - starting_amount) / daily_earnings\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spiders\n    spiders = 90\n\n    # Calculate the number of millipedes\n    millipedes = spiders / 3\n\n    # Calculate the number of stink bugs\n    stink_bugs = 2 * millipedes - 12\n\n    # Calculate the total number of bugs\n    total_bugs = spiders + millipedes + stink_bugs\n\n    # Display the total number of bugs\n    result = total_bugs\n    return result"}
{"output": "def solution():\n    \n    # Define Erica's age\n    erica_age = 30\n\n    # Calculate Beth's age\n    beth_age = erica_age + 5\n\n    # Calculate Alice's age\n    alice_age = beth_age + 7\n\n    # Calculate the difference between Alice and Erica's ages\n    age_difference = alice_age - erica_age\n\n    # Display the age difference\n    result = age_difference\n    return result"}
{"output": "def solution():\n    \n    milk_per_glass = 8\n    glasses_of_milk = 2\n    calories_per_ounce = 3\n    total_calories = milk_per_glass * glasses_of_milk * calories_per_ounce\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    weeks_per_month = 4\n    days_per_week = 6\n    pay_per_day = 50\n    months_per_year = 12\n    total_pay = weeks_per_month * days_per_week * pay_per_day * months_per_year\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    flour_per_batch = 3 / 2\n    milk_per_batch = 1 / 2\n    bags_of_flour = flour_per_batch / 2\n    bags_of_milk = milk_per_batch / 2\n    difference = bags_of_flour - bags_of_milk\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of energy used per hour\n    energy_per_hour = 900\n\n    # Calculate the amount of energy used per day\n    energy_per_day = energy_per_hour * 8\n\n    # Calculate the amount of energy used per day after reducing by 5 hours\n    energy_per_day_after_reduction = energy_per_day - 5\n\n    # Calculate the total amount of energy used in 30 days\n    total_energy_used = energy_per_day_after_reduction * 30\n\n    # Convert the total energy used to kilowatts\n    total_energy_kg = total_energy_used / 1000\n\n    # Display the total energy used in 30 days\n    result = total_energy_kg\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stripes for each zebra\n    zebra_stripes_1 = 17\n    zebra_stripes_2 = 17\n\n    # Define the number of stripes for the first zebra\n    zebra_stripes_1 = 36\n\n    # Define the number of stripes for the second zebra\n    zebra_stripes_2 = zebra_stripes_1 / 2\n\n    # Calculate the total number of stripes\n    total_stripes = (2 * zebra_stripes_1) + (2 * zebra_stripes_2) + zebra_stripes_1 + zebra_stripes_2\n\n    # Calculate the average number of stripes\n    average_stripes = total_stripes / 3\n\n    # Display the average number of stripes\n    result = average_stripes\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of meat and cheese needed per sandwich\n    MEAT_PER_SANDWICH = 1\n    CHEESE_PER_SANDWICH = 3\n\n    # Define the number of people to serve\n    num_people = 20\n\n    # Calculate the total amount of meat and cheese needed\n    total_meat = num_people * MEAT_PER_SANDWICH\n    total_cheese = num_people * CHEESE_PER_SANDWICH\n\n    # Calculate the total cost of the meat and cheese\n    meat_cost = total_meat * MEAT_PER_SANDWICH\n    cheese_cost = total_cheese * CHEESE_PER_SANDWICH\n    total_cost = meat_cost + cheese_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cannolis and calculate the number of corns\n    initial_cantolis = 40\n    initial_corns = initial_cantolis * 2\n\n    # Calculate the number of cannolis bought at the store\n    bought_cantolis = initial_cantolis + 60\n\n    # Calculate the number of corns\n    bought_corns = bought_cantolis - 40\n\n    # Calculate the combined total of the number of corns and cannolis\n    combined_total = initial_corns + bought_corns\n\n    # return the result\n    result = combined_total\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of steps Elliott walks each day\n    total_steps = 10000\n\n    # Calculate the number of steps Elliott finished walking\n    finished_steps = total_steps / 2\n\n    # Calculate the number of steps Elliott went for short walks\n    short_walk_steps = 1000\n\n    # Calculate the number of steps Elliott went for short jog\n    short_jog_steps = total_steps - finished_steps - short_walk_steps - 2000\n\n    # Display the number of steps Elliott took during his jog\n    result = short_jog_steps\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pages and words per page\n    total_pages = 45\n    words_per_page = 200\n\n    # Calculate the total number of words in the book\n    total_words = total_pages * words_per_page\n\n    # Define Toby's reading speed in words per minute\n    words_per_minute = 300\n\n    # Define the time it takes for Toby to get to the airport\n    airport_time = 10\n\n    # Calculate the time it takes for Toby to finish the book\n    remaining_time = 60 - airport_time\n\n    # Calculate the time it takes for Toby to finish the book\n    early_time = (total_words / words_per_minute) - remaining_time\n\n    # Display the time it takes for Toby to finish the book\n    result = early_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of employees and their hourly rate\n    num_employees = 40\n    hourly_rate = 15\n\n    # Calculate the total number of hours worked in May\n    total_hours = 40 * 40\n\n    # Calculate the total amount paid to the employees in May\n    total_pay = num_employees * hourly_rate * total_hours\n\n    # Calculate the number of employees who are expired in June\n    expired_employees = num_employees / 4\n\n    # Calculate the total amount paid to the employees in June\n    total_paid = total_pay - expired_employees\n\n    # Display the total amount paid\n    result = total_paid\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Sally had\n    initial_money = 10\n\n    # Calculate the cost of the seashells\n    seashells_cost = 1.5\n\n    # Calculate the cost of the magnets\n    magnets_cost = 0.25 * 4\n\n    # Calculate the total cost of the seashells\n    seashells_total_cost = seashells_cost + seashells_cost\n\n    # Calculate the total cost of the magnets\n    magnets_total_cost = magnets_cost * 4\n\n    # Calculate the total cost of all the items\n    total_cost = initial_money + seashells_total_cost + magnets_total_cost\n\n    # Calculate the amount of money Sally has left\n    money_left = initial_money - total_cost\n\n    # Display the amount of money Sally has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the fireworks\n    package_price = 400\n    pack_price = 2 * package_price\n    discount = 0.2\n    finale_price = 150\n\n    # Calculate the total cost before discount\n    total_cost_before_discount = (package_price + pack_price) * discount\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost_before_discount - finale_price\n\n    # Display the total cost after discount\n    result = total_cost_after_discount\n    return result"}
{"output": "def solution():\n    \n    cookies_per_day = 2\n    days = 30\n    cookies_per_dozen = 12\n    total_cookies_needed = cookies_per_day * days\n    dozens_needed = total_cookies_needed / cookies_per_dozen\n    result = dozens_needed\n    return result"}
{"output": "def solution():\n    \n    total_candles = 50000\n    non_expensive_candles = total_candles * 0.99\n    remaining_candles = total_candles - non_expensive_candles\n    wet_dog_candles = remaining_candles * 0.05\n    both_candles = total_candles - non_expensive_candles - wet_dog_candles\n    result = both_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the regular price per blouse and the discount percentage\n    REGULAR_PRICE = 20\n    DISCOUNT_PERCENTAGE = 0.3\n\n    # Calculate the discounted price per blouse\n    discounted_price = REGULAR_PRICE * (1 - DISCOUNT_PERCENTAGE)\n\n    # Calculate the total cost of the discounted blouses\n    total_cost = discounted_price * 4\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    joanne_tallest_apples = 30\n    joanne_shortest_apples = joanne_tallest_apples / 2\n    joanne_average_apples = joanne_tallest_apples + joanne_shortest_apples + joanne_average_apples\n    sister_tallest_apples = joanne_tallest_apples * 2\n    sister_shortest_apples = joanne_shortest_apples * 3\n    sister_average_apples = joanne_average_apples + sister_tallest_apples + sister_shortest_apples\n    total_apples = 500\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of heads and bumps\n    total_heads = 180\n    total_bumps = 304\n\n    # Calculate the number of camels and dromedaries\n    camels = total_heads // 2\n    dromedaries = total_bumps - camels\n\n    # Calculate the number of dromedaries\n    dromedaries_per_hump = 1\n    dromedaries = dromedaries // dromedaries_per_hump\n\n    # return the result\n    result = dromedaries\n    return result"}
{"output": "def solution():\n    \n    first_week_distance = 200 * 4\n    second_week_distance = 300 * 2\n    total_distance = first_week_distance + second_week_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define Peter's locker size in cubic inches\n    peter_size = 5\n\n    # Calculate Zack's locker size in cubic inches\n    zack_size = peter_size / 4\n\n    # Calculate Timothy's locker size in cubic inches\n    timothy_size = zack_size / 2\n\n    # Display Timothy's locker size in cubic inches\n    result = timothy_size\n    return result"}
{"output": "def solution():\n    \n    stanley_elevation = 10000\n    oliver_elevation = 3000\n    total_climb_distance = stanley_elevation - oliver_elevation\n    result = total_climb_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of capital\n    initial_cap = 5000\n\n    # Calculate the amount of money given to the first bank\n    bank1_money = 4000\n\n    # Calculate the amount of money given to the second company\n    company2_money = 2 * bank1_money\n\n    # Calculate the total amount of money given to both banks\n    total_money = bank1_money + company2_money\n\n    # Calculate the final amount of capital\n    final_cap = initial_cap + total_money\n\n    # return the result\n    result = final_cap\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cats\n    initial_cats = 50\n\n    # Calculate the number of cats carried away\n    carried_cats = 4 * 5\n\n    # Calculate the number of cats remaining\n    remaining_cats = initial_cats - carried_cats\n\n    # Calculate the number of cats who ran after the mouse\n    ran_cats = int((3/5) * remaining_cats)\n\n    # Calculate the final number of cats\n    final_cats = remaining_cats - ran_cats\n\n    # Display the final number of cats\n    result = final_cats\n    return result"}
{"output": "def solution():\n    # Calculate the total cost for the first 6 months\n    first_six_months = 8 * 6\n\n    # Calculate the total cost for the next 8 months\n    next_six_months = 12 * 8\n\n    # Calculate the total cost for the last 8 months\n    last_six_months = 14 * 8\n\n    # Calculate the total cost for 2 years\n    total_cost = first_six_months + next_six_months + last_six_months\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tattered_cost = 28\n    jogger_cost = tattered_cost - 6\n    total_savings = 6\n    jogger_savings = (1/3) * total_savings\n    tattered_savings = total_savings - jogger_savings\n    difference = jogger_savings - tattered_savings\n    result = difference\n    return result"}
{"output": "def solution():\n    num_buses = 4\n    bus_capacity = 60\n\n    num_minibusses = 6\n    minibusse_capacity = 30\n\n    num_minivans = 10\n    minivans_capacity = 15\n\n    # Calculate the total capacity of all the buses\n    total_capacity = num_buses * bus_capacity\n\n    # Calculate the total capacity of all the minibusses\n    total_minibusse_capacity = num_minibusses * minibusse_capacity\n\n    # Calculate the total capacity of all the minivans\n    total_minivans_capacity = num_minivans * minivans_capacity\n\n    # Calculate the total capacity of all the employees\n    total_capacity = total_capacity + total_minibusse_capacity + total_minivans_capacity\n    result = total_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds attracted by each bird feeder\n    bird_feeder_birds = 20\n\n    # Define the number of birds attracted by each store-bought bird feeder\n    store_bought_birds = bird_feeder_birds + 10\n\n    # Calculate the total number of birds in the garden\n    total_birds = 3 * bird_feeder_birds + 3 * store_bought_birds\n\n    # Calculate the number of birds that can still be attracted\n    birds_attracted = total_birds - 10\n\n    # Display the number of birds that can still be attracted\n    result = birds_attracted\n    return result"}
{"output": "def solution():\n    \n    bagel_price = 4\n    soup_price = bagel_price * 1.25\n    cake_price = bagel_price / 2\n    total_price = bagel_price + soup_price + cake_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the amusement park and the selling price per card\n    ticket_cost = 100\n    selling_price = 1.5\n\n    # Calculate the total number of cards sold\n    total_sold = ticket_cost / selling_price\n\n    # Calculate the number of cards Kenny kept\n    kept_cards = total_sold / 3\n\n    # Calculate the number of cards Kenny started with\n    starting_cards = total_sold - kept_cards + 50\n\n    # Display the number of cards Kenny started with\n    result = starting_cards\n    return result"}
{"output": "def solution():\n    \n    total_guests = 36\n    half_guests = total_guests / 2\n    first_hotdog_guests = half_guests\n    second_hotdog_guests = 40\n    non_second_hotdog_guests = total_guests - first_hotdog_guests - second_hotdog_guests\n    result = non_second_hotdog_guests\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters in Indras' name\n    indras_letters = 6\n\n    # Calculate the number of letters in the sister's name\n    sister_letters = (indras_letters / 2) + 4\n\n    # Calculate the total number of letters\n    total_letters = indras_letters + sister_letters\n\n    # Display the total number of letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    pot_and_pans_price = 120\n    mixing_bowls_price = 20\n    separate_utensils_price = 5\n    total_price = pot_and_pans_price + mixing_bowls_price + (5 * separate_utensils_price)\n    discount = total_price * 0.2\n    final_price = total_price - discount\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the items Dora wants to buy\n    rope_price = 6\n    game_price = 11\n    ball_price = 2\n\n    # Define the amount of money Dora has saved\n    savings = 2\n\n    # Define the amount of money Dora's mother gave her\n    mother_money = 16\n\n    # Calculate the total amount of money Dora has\n    total_money = savings + mother_money\n\n    # Calculate the total cost of the items Dora wants to buy\n    total_cost = rope_price + game_price + ball_price\n\n    # Calculate the amount of money Dora still needs to buy the items\n    remaining_money = total_cost - total_money\n\n    # return the result\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dragons Prince Thaddeus slew\n    thaddeus_dragons = 100\n\n    # Calculate the number of dragons Prince Arthur slew using a spear\n    arthur_dragons = thaddeus_dragons * 3\n\n    # Calculate the number of dragons Prince Walter slew using a rusty iron axe\n    walter_dragons = arthur_dragons * 2\n\n    # Calculate the number of dragons Prince Bruce slew using a nail file\n    bruce_dragons = walter_dragons / 5\n\n    # Calculate the total number of dragons Prince Bruce has\n    total_dragons = thaddeus_dragons + arthur_dragons + walter_dragons + bruce_dragons\n\n    # Display the total number of dragons\n    result = total_dragons\n    return result"}
{"output": "def solution():\n    \n    total_gallons = 15\n    num_containers = 5\n    gallons_per_container = total_gallons / num_containers\n    pints_per_gallon = 8\n    total_pints = gallons_per_container * pints_per_gallon\n    result = total_pints\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of chips and candy bars\n    CHIPS_PRICE = 40\n    CANDY_PRICE = 75\n\n    # Define the amount of money George spent\n    total_spent = 5\n\n    # Calculate the amount of money George had left after buying the chips\n    money_left = total_spent - (3 * CHIPS_PRICE)\n\n    # Calculate the number of candy bars George bought\n    candy_bars_bought = int(money_left / CANDY_PRICE)\n\n    # Display the number of candy bars George bought\n    result = candy_bars_bought\n    return result"}
{"output": "def solution():\n    \n    total_lollipops = 25\n    lollipops_kept = 5\n    lollipops_remaining = total_lollipops - lollipops_kept\n    friends = 4\n    lollipops_per_friend = lollipops_remaining / friends\n    result = lollipops_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the cake and the number of pieces\n    CAKE_WEIGHT = 20\n    NUM_PIECES = 8\n\n    # Calculate the total weight of the cake\n    total_weight = CAKE_WEIGHT * NUM_PIECES\n\n    # Calculate the weight of the remaining cake\n    remaining_weight = total_weight - CAKE_WEIGHT\n\n    # Display the weight of the remaining cake\n    result = remaining_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of oranges Sitti and Juris bought\n    sitti_oranges = 34\n    juris_oranges = 22\n\n    # Calculate the total number of oranges\n    total_oranges = sitti_oranges + juris_oranges\n\n    # Calculate the number of friends\n    num_friends = 6\n\n    # Calculate the number of oranges each friend will get\n    oranges_per_friend = total_oranges // num_friends\n\n    # Display the number of oranges each friend will get\n    result = oranges_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of onions needed per serving\n    pounds_per_serving = 2\n    servings_per_person = 6\n\n    # Calculate the total cost of the onions\n    total_onion_cost = pounds_per_serving * 2 * servings_per_person\n\n    # Calculate the total cost of the beef stock\n    total_beef_stock_cost = 2 * 2 * servings_per_person\n\n    # Calculate the cost per serving\n    cost_per_serving = (total_onion_cost + total_beef_stock_cost) / servings_per_person\n\n    # Round the cost per serving to the nearest integer\n    result = round(cost_per_serving)\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes for Wayne to be driven\n    wayne_time = 4\n\n    # Calculate the time it takes for Bernadette to be driven\n    bernadette_time = 4 * wayne_time\n\n    # Calculate the total time it takes for both Wayne and Bernadette to be driven\n    total_time = wayne_time + bernadette_time\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the area of the bedroom\n    bedroom_area = 360\n\n    # Convert the length of the room from yards to feet\n    room_length = 3 * 3\n\n    # Calculate the perimeter of the room\n    room_perimeter = bedroom_area / room_length\n\n    # Display the perimeter of the room\n    result = room_perimeter\n    return result"}
{"output": "def solution():\n    \n    elizabeth_red_beads = 1 * 20\n    elizabeth_clear_beads = 2 * 20\n    margareth_blue_beads = 3 * 20\n    margareth_red_beads = 4 * 20\n    elizabeth_total_beads = elizabeth_red_beads + elizabeth_clear_beads\n    margareth_total_beads = margareth_blue_beads + margareth_red_beads\n    difference = elizabeth_total_beads - margareth_total_beads\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    starting_temp = 40\n    baking_time = 3\n    oven_temp_increase = 5\n    oven_temp = starting_temp + (baking_time * oven_temp_increase)\n    window_time = 30\n    window_temp_increase = 2 * window_time / 10\n    final_temp = oven_temp + window_temp_increase - window_temp_increase\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    jon_swim_time = 40\n    jon_bike_time = 20\n    jon_run_time = 50\n    jon_total_time = jon_swim_time + jon_bike_time + jon_run_time\n    james_swim_time = jon_swim_time * 1.1\n    james_bike_time = jon_bike_time + 5\n    james_total_time = james_swim_time + james_bike_time\n    result = james_total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of Movie C in minutes\n    c_length = 1.25 * 60\n\n    # Calculate the length of Movie B in minutes\n    b_length = c_length + 5\n\n    # Calculate the length of Movie A in minutes\n    a_length = b_length / 4\n\n    # Display the length of Movie A in minutes\n    result = a_length\n    return result"}
{"output": "def solution():\n    # Calculate the number of miles in 30 minutes\n    total_miles = 30 * 32\n\n    # Calculate the number of birds of hay that Michael eats\n    birds_of_hay = total_miles / 2\n\n    # Calculate the cost of the hay\n    cost_of_hay = birds_of_hay * 3\n\n    # Calculate the total cost of the horse\n    total_cost = cost_of_hay + 6 * 5\n\n    # Calculate the change Michael has after buying the hay\n    change = total_cost - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs used in cases and cupboard\n    cases_eggs = 4 * 12\n    cupboard_eggs = 2\n\n    # Calculate the total number of eggs used\n    total_eggs = cases_eggs + cupboard_eggs\n\n    # Calculate the number of glasses of eggnog\n    glasses_of_eggs = total_eggs // 5\n\n    # Calculate the number of trays\n    trays = glasses_of_eggs // 5\n\n    # Display the number of trays\n    result = trays\n    return result"}
{"output": "def solution():\n    \n    joey_points = 214\n    marcy_points = 225\n    marcy_points_scored = 10\n    total_points_scored = joey_points + marcy_points_scored\n    result = total_points_scored\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each sneaker\n    COST_PER_SNEAKER = 576 / 48\n\n    # Calculate the revenue from selling 17 sneakers at $20 each\n    revenue_from_flash = 17 * 20\n\n    # Calculate the revenue from selling the remaining sneakers at $25 each each\n    revenue_to_department_store = (48 - 17) * 25\n\n    # Calculate the total revenue from selling the remaining sneakers\n    total_revenue = revenue_from_flash + revenue_to_department_store\n\n    # Calculate the total cost of the sneakers\n    total_cost = COST_PER_SNEAKER * 48\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of packets and the number of colors per packet\n    num_packets = 10\n    color_per_packet_1 = 8\n    color_per_packet_2 = 16\n\n    # Calculate the total number of colors\n    total_color = (num_packets * color_per_packet_1) + (num_packets * color_per_packet_2)\n\n    # Display the total number of colors\n    result = total_color\n    return result"}
{"output": "def solution():\n    \n    super_ticket_price = 20\n    soda_price = 3\n    extra_price = 1\n    total_savings = 2\n    regular_price = super_ticket_price + soda_price + (total_savings - extra_price)\n    result = regular_price\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of filling up and the cost increase per balloon\n    INITIAL_COST = 900\n    COST_INCREASE = 20\n\n    # Calculate the new cost of filling up and the new number of balloons\n    new_cost = INITIAL_COST + COST_INCREASE * 20\n    new_num = 20\n\n    # Calculate the total cost of filling up and the new number of balloons\n    total_cost = new_cost * new_num\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the speed of the car during the first 2 hours\n    speed_first_leg = 60 / 2\n\n    # Calculate the speed of the car during the next 1 hour\n    speed_second_leg = 30 / 1\n\n    # Calculate the total speed of the trip\n    total_speed = speed_first_leg + speed_second_leg\n\n    # Calculate the average speed of the car\n    average_speed = total_speed / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each type of jewel in dollars\n    sapphire_value = 800\n    rubie_value = 1200\n\n    # Calculate the new value of the sapphires\n    new_safari_value = 3 * sapphire_value\n\n    # Calculate the new value of the rubies\n    new_rubie_value = 2 * rubie_value\n\n    # Calculate the total value of all the jewels\n    total_value = new_safari_value + new_rubie_value\n\n    # Display the total value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples eaten per day\n    APPLES_PER_DAY = 4\n\n    # Calculate the total number of apples eaten in 30 days\n    total_apples = APPLES_PER_DAY * 2 * 30\n\n    # Display the total number of apples eaten\n    result = total_apples\n    return result"}
{"output": "def solution():\n    num_beds = 10\n    bed_width = 2\n    bed_length = 8\n    bed_height = 2\n    soil_per_bag = 2\n    cost_per_bag = 12\n\n    # Calculate the volume of one raised bed\n    bed_volume = bed_width * bed_length * bed_height\n\n    # Calculate the total volume of all raised beds\n    total_bed_volume = num_beds * bed_volume\n\n    # Calculate the total volume of all potting soil needed\n    total_soil_needed = total_bed_volume * soil_per_bag\n\n    # Calculate the total cost of all potting soil needed\n    total_cost = total_soil_needed * cost_per_bag\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    red_cards = 15\n    green_cards = red_cards * 1.6\n    yellow_cards = red_cards + green_cards\n    total_cards = red_cards + green_cards + yellow_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fairies Katelyn saw\n    katelyn_fairies = 50\n\n    # Calculate the number of fairies each friend saw\n    friend_fairies = katelyn_fairies / 2\n\n    # Calculate the total number of fairies seen\n    total_fairies = katelyn_fairies + friend_fairies\n\n    # Calculate the number of fairies flew away\n    fairies_flew_away = 30\n\n    # Calculate the number of fairies remaining\n    remaining_fairies = total_fairies - fairies_flew_away\n\n    # Display the number of fairies remaining\n    result = remaining_fairies\n    return result"}
{"output": "def solution():\n    \n    jennifer_puppies = 8\n    jennifer_spots = 3\n    brandon_puppies = 12\n    brandon_spots = 4\n    total_puppies = jennifer_puppies + brandon_puppies\n    total_spots = jennifer_spots + brandon_spots\n    percent_spots = (total_spots / total_puppies) * 100\n    result = percent_spots\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each type of vehicle\n    sugar_box_weight = 1\n    carrot_weight = 12\n    hay_weight = 75\n\n    # Calculate the total weight of the sugar cubes\n    total_sugar_weight = 2 * sugar_box_weight\n\n    # Calculate the total weight of the carrots\n    total_carrot_weight = 4 * carrot_weight\n\n    # Calculate the total weight of the horses\n    total_horses_weight = total_sugar_weight + total_carrot_weight + hay_weight\n\n    # Calculate the number of oats\n    oats = total_horses_weight - total_horses_weight\n\n    # return the result\n    result = oats\n    return result"}
{"output": "def solution():\n    \n    aluminum_can_value = 2\n    plastic_bottle_value = 3\n    aluminum_cans_per_week = 3\n    plastic_bottles_per_week = 5\n    total_aluminum_value = aluminum_cans_per_week * aluminum_can_value\n    total_plastic_value = plastic_bottles_per_week * plastic_bottle_value\n    total_earnings = (total_aluminum_value + total_plastic_value) * 4\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    frederick_plants = 10\n    toni_plants = frederick_plants * 1.6\n    shondra_plants = toni_plants - 7\n    result = shondra_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount Ali had\n    initial_amount = 21\n\n    # Define the amount Leila gave Ali\n    leila_amount = 100 / 2\n\n    # Calculate the total amount Ali has now\n    total_amount = initial_amount + leila_amount\n\n    # Display the total amount Ali has now\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the pizza delivery\n    delivery_cost = 15\n\n    # Calculate the amount of the tip\n    tip_amount = delivery_cost / 5\n\n    # Calculate the total amount to be paid, including the tip\n    total_amount = delivery_cost + tip_amount\n\n    # Display the total amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the initial distance of the race\n    distance = 100\n\n    # Calculate the distance after the first part of the race\n    distance_after_first = distance - 5\n\n    # Calculate the distance after the second part of the race\n    distance_after_second = distance_after_first - 2 - 3\n\n    # Calculate the distance after the third part of the race\n    distance_after_third = distance_after_second + 1\n\n    # return the result\n    result = distance_after_third\n    return result"}
{"output": "def solution():\n    \n    basketball_cards = 6 * 25\n    baseball_cards = 5 * 40\n    total_cards = basketball_cards + baseball_cards\n    cards_kept = 50\n    cards_given = total_cards - cards_kept\n    students = cards_given // 10\n    result = students\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total cost of Becky's purchase\n    becky_cost = 20 * 45\n\n    # Calculate the total cost of Kelly's purchase\n    kelly_cost = 20 * 50 * 0.9\n\n    # Calculate the difference in cost between Kelly and Becky\n    cost_difference = kelly_cost - becky_cost\n\n    # Display the difference in cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    num_sheets_per_room = 2\n    num_comforter_per_room = 1\n    num_pillow_cases_per_room = 2\n    num_towels_per_room = 2 * num_pillow_cases_per_room\n    num_rooms = 80\n\n    # Calculate the total number of sheets of laundry\n    total_sheets = num_sheets_per_room * num_rooms\n\n    # Calculate the total number of pillow cases of laundry\n    total_pillow_cases = num_pillow_cases_per_room * num_rooms\n\n    # Calculate the total number of towels of laundry\n    total_towels = num_towels_per_room * num_rooms\n\n    # Calculate the total number of laundry pieces of laundry\n    total_laundry = total_sheets + total_comforter + total_pillow_cases + total_towels\n    result = total_laundry\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of shoes\n    INITIAL_SHOES = 200\n\n    # Calculate the number of shoes after Monday\n    shoes_after_monday = INITIAL_SHOES - 5\n\n    # Calculate the number of shoes after Wednesday\n    shoes_after_wednesday = shoes_after_monday + 15\n\n    # Calculate the number of shoes after Friday\n    shoes_after_friday = shoes_after_wednesday + 30\n\n    # Calculate the number of shoes on Sunday\n    shoes_on_sunday = shoes_after_friday - 180\n\n    # Display the number of shoes on Sunday\n    result = shoes_on_sunday\n    return result"}
{"output": "def solution():\n    \n    jars_of_sprinkles = 6\n    cupcakes_per_jar = 8\n    total_cupcakes = jars_of_sprinkles * cupcakes_per_jar\n    cupcakes_per_pan = 12\n    pans_needed = total_cupcakes / cupcakes_per_pan\n    result = pans_needed\n    return result"}
{"output": "def solution():\n    \n    pen_price = 2\n    paper_price = 3 * pen_price - 1\n    total_cost = pen_price + paper_price\n    cash_given = 10\n    change = cash_given - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    num_students = 30\n    pencils_per_student = 10\n    total_pencils = num_students * pencils_per_student\n    used_pencils = total_pencils // 5\n    remaining_pencils = total_pencils - used_pencils\n    left_pencils = remaining_pencils // 3\n    result = left_pencils\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cookies Matt wants to eat\n    total_cookies = 5\n\n    # Calculate the number of carrot sticks Matt can eat\n    carrot_sticks = (total_cookies - 2) / 2\n\n    # Display the number of carrot sticks Matt has to eat\n    result = carrot_sticks\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the shark and the length of each remora\n    shark_length = 10\n    remora_length = 6\n\n    # Calculate the combined length of the remoras\n    total_length = shark_length + (2 * remora_length)\n\n    # Calculate the percentage of the shark's body length that is the combined length of the remoras\n    percentage = (total_length / shark_length) * 100\n\n    # return the result\n    result = percentage\n    return result"}
{"output": "def solution():\n    # Calculate the number of students with a desktop computer\n    students_with_computer = 0.75 * 20\n\n    # Calculate the total number of students at the grade level\n    total_students = students_with_computer + 20\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    total_time = 240 * 3\n    days_per_week = 4\n    time_per_day = total_time / days_per_week\n    result = time_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each book and the total amount spent\n    BOOK_COST = 15\n    TOTAL_SPENT = 300\n\n    # Calculate the total number of books\n    total_books = TOTAL_SPENT / BOOK_COST\n\n    # Calculate the number of books each child gets\n    num_children = 4\n    books_per_child = total_books // num_children\n\n    # Display the number of books each child gets\n    result = books_per_child\n    return result"}
{"output": "def solution():\n    \n    total_kids = 32\n    dairy_kids = 9\n    peanuts_kids = 6\n    both_kids = 3\n    non_allergic_kids = total_kids - dairy_kids - peanuts_kids - both_kids\n    result = non_allergic_kids\n    return result"}
{"output": "def solution():\n    num_groups = 3\n    num_employees = 200\n    num_tour_guides_per_group = 7\n\n    # Calculate the total number of employees\n    total_employees = num_groups * num_employees\n\n    # Calculate the total number of tour guides\n    total_tour_guides = total_employees * num_tour_guides_per_group\n    result = total_tour_guides\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the plane tickets and the normal price per day\n    plane_ticket_cost = 5000\n    normal_price_per_day = 1500\n\n    # Calculate the cost of the hotel per day\n    hotel_price_per_day = normal_price_per_day * 1.2\n\n    # Calculate the cost of the hotel for 3 days\n    hotel_cost = hotel_price_per_day * 3\n\n    # Calculate the total cost of the trip\n    total_cost = plane_ticket_cost + hotel_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    ben_blue_paint = 4\n    ben_yellow_paint = 3\n    jasper_blue_paint = ben_blue_paint / 2\n    jasper_yellow_paint = ben_yellow_paint * 3\n    total_paint = jasper_blue_paint + jasper_yellow_paint\n    result = total_paint\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the 1959 penny\n    1959_weight = 48\n\n    # Calculate the weight of the 2010 penny\n    2010_weight = 0.75 * 1959_weight\n\n    # Calculate the combined weight of the two pennies\n    combined_weight = 1959_weight + 2010_weight\n\n    # return the result\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    total_goal = 200\n    keegan_earnings = 83\n    tasha_earnings =91\n    total_earnings = keegan_earnings + tasha_earnings\n    money_needed = total_goal - total_earnings\n    result = money_needed\n    return result"}
{"output": "def solution():\n    \n    total_songs = 100\n    gabriel_songs = 20\n    luri_songs = 3 * gabriel_songs\n    difference = total_songs - (gabriel_songs + luri_songs)\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the price per orange\n    PRICE_PER_ORANGE = 10\n\n    # Define the number of oranges picked\n    oranges_picked = 60\n\n    # Calculate the number of oranges Stetson ate\n    oranges_eaten = oranges_picked * (2/5)\n\n    # Calculate the total amount of money Stetson gave up\n    total_money = oranges_eaten * PRICE_PER_ORANGE\n\n    # Display the total amount of money Stetson gave up\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of Jillian's shoes\n    shoes_cost = 80\n\n    # Calculate the cost of Jillian's handbag\n    bag_cost = 3 * shoes_cost - 20\n\n    # Display the cost of Jillian's handbag\n    result = bag_cost\n    return result"}
{"output": "def solution():\n    \n    miles_per_day = 12\n    days_per_week = 5\n    miles_per_hour = 10\n    total_miles = miles_per_day * days_per_week\n    total_hours = total_miles / miles_per_hour\n    result = total_hours\n    return result"}
{"output": "def solution():\n    num_horses = 4\n    oats_per_horse_per_meal = 5\n    meals_per_day = 2\n    oats_per_bag = 50\n    num_days = 5\n\n    # Calculate the total amount of oats needed for all horses for one day\n    total_oats_per_day = num_horses * oats_per_horse_per_meal * meals_per_day\n\n    # Calculate the total amount of oats needed for all horses for five days\n    total_oats_needed = total_oats_per_day * num_days\n\n    # Calculate the number of bags of oats needed\n    num_bags = total_oats_needed / oats_per_bag\n    result = num_bags\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of puppies\n    total_puppies = 27\n\n    # Calculate the number of pomeranians\n    pomeranians = total_puppies * (2/3)\n\n    # Calculate the number of girl Pomeranians\n    girl_pomeranians = pomeranians * (1/3)\n\n    # Display the number of girl Pomeranians\n    result = girl_pomeranians\n    return result"}
{"output": "def solution():\n    \n    # Define the temperatures\n    southlandia_temp = -48\n    northlandia_temp = 21\n    midlandia_temp = -3\n\n    # Calculate the average temperature\n    avg_temp = (southlandia_temp + northlandia_temp + midlandia_temp) / 3\n\n    # Display the average temperature\n    result = avg_temp\n    return result"}
{"output": "def solution():\n    \n    total_cost = 12\n    initial_savings = 4\n    remaining_cost = total_cost - initial_savings\n    daily_savings = 2\n    days_to_save = remaining_cost / daily_savings\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    eggs_per_tray = 24  # Each tray can hold 24 eggs\n    total_eggs = 64  # Jaime has 64 eggs\n    trays = 2  # Jaime has 2 trays\n\n    # Calculate the total number of eggs that can be placed on the trays\n    total_eggs_on_trays = eggs_per_tray * trays\n\n    # Calculate the number of eggs that can't be placed on the trays\n    eggs_not_on_trays = total_eggs - total_eggs_on_trays\n    result = eggs_not_on_trays\n    return result"}
{"output": "def solution():\n    # Define the cost of one small pizza and one family-size pizza\n    small_pizza_cost = 8\n    family_size_pizza_cost = 3 * small_pizza_cost\n\n    # Calculate the total cost\n    total_cost = small_pizza_cost + family_size_pizza_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per pack and the number of packs purchased\n    PACK_PRICE = 4.00\n    PACKS_PURCHASED = 2\n\n    # Calculate the total cost before discount\n    total_cost = PACK_PRICE * PACKS_PURCHASED\n\n    # Apply the discount\n    discounted_cost = total_cost - 2.00\n\n    # Calculate the cost per individual razor\n    cost_per_racor = discounted_cost / PACKS_PURCHASED\n\n    # Display the cost per individual razor\n    result = cost_per_racor\n    return result"}
{"output": "def solution():\n    \"\"\"9 out of 10 cheerleaders are 64\" tall. The 10th cheerleader is 60\" tall. If 3 stand on top of the 4, and 2 stand on top of the 3. The shortest girl is at the top. What is the human pyramid in feet?\"\"\"\n    # Calculate the height of each cheerleader\n    cheerleader_height = (64 - (9 * 10)) / 10\n\n    # Calculate the height of each girl\n    girl_height = (64 - (3 * 4) + (2 * 3)) / 4\n\n    # Calculate the total height of the human pyramid\n    total_height = (cheerleader_height * 4) + (girl_height * 4)\n\n    # Display the total height of the human pyramid\n    result = total_height\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Charisma works per day and the walking time per hour\n    WORK_HOURS_PER_DAY = 8\n    WALKING_TIME_PER_HOUR = 5\n\n    # Calculate the total number of hours Charisma works over 5 days\n    total_work_hours = WORK_HOURS_PER_DAY * 5\n\n    # Calculate the total walking time in minutes\n    total_walking_time = total_work_hours * WALKING_TIME_PER_HOUR\n\n    # Display the total walking time in minutes\n    result = total_walking_time\n    return result"}
{"output": "def solution():\n    \n    # Define Brett's age\n    brett_age = 14\n\n    # Calculate Angela's age in four years\n    angela_age_in_4_years = brett_age * 3\n\n    # Calculate Angela's current age\n    angela_age = angela_age_in_4_years - 4\n\n    # Display Angela's current age\n    result = angela_age\n    return result"}
{"output": "def solution():\n    \n    morning_ride_cost = 6\n    afternoon_ride_cost = 2\n    days_per_week = 14\n    total_morning_cost = morning_ride_cost * days_per_week * 2\n    total_afternoon_cost = afternoon_ride_cost * days_per_week * 2\n    total_cost = total_morning_cost + total_afternoon_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of oranges in each box\n    ORANGES_PER_BOX = 10\n\n    # Calculate the total number of oranges brought by Ashley\n    ashley_oranges = 5 * ORANGES_PER_BOX\n\n    # Calculate the total number of oranges brought by Brianne\n    brianne_oranges = ashley_oranges + 20\n\n    # Calculate the total number of oranges brought by both of them\n    total_oranges = ashley_oranges + brianne_oranges\n\n    # Calculate the number of greek orange pies they can make\n    pies = total_oranges // 3\n\n    # Display the number of greek orange pies they can make\n    result = pies\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the first venue\n    first_venue_cost = 200\n\n    # Calculate the total cost of the second venue\n    second_venue_cost = 25 * 2\n\n    # Calculate the total cost of the first venue's food\n    first_venue_food_cost = 5 * 2\n\n    # Calculate the total cost of the first venue's guests\n    total_cost = first_venue_cost + second_venue_cost - first_venue_food_cost\n\n    # Calculate the number of guests needed to reach the total cost\n    guests_needed = total_cost / 25\n    result = guests_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of insects collected\n    total_insects = 43\n\n    # Calculate the number of insects David found\n    david_insects = total_insects / 2\n\n    # Calculate the number of insects Lily found\n    lily_insects = david_insects + 7\n\n    # Display the number of insects Lily found\n    result = lily_insects\n    return result"}
{"output": "def solution():\n    \n    mariah_skein = 1/4\n    grandma_skein = 1/2\n    total_skein = mariah_skein + grandma_skein\n    yards_per_skein = 364\n    total_yards = total_skein * yards_per_skein\n    result = total_yards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and gifts for each friend\n    num_friends = 5\n    friend1_gifts = 5\n    friend2_gifts = 2\n    friend3_gifts = 2\n    friend4_gifts = 2\n\n    # Calculate the total number of gifts\n    total_gifts = (num_friends * friend1_gifts) + (num_friends * friend2_gifts) + (num_friends * friend3_gifts) + 10\n\n    # Display the total number of gifts\n    result = total_gifts\n    return result"}
{"output": "def solution():\n    \n    # Define the width of the chair\n    chair_width = 3\n\n    # Calculate the width of the rug\n    rug_width = chair_width + 5\n\n    # Calculate 2 feet longer than twice the width of the rug\n    couch_length = 2 * rug_width + 2\n\n    # Display the length of the couch\n    result = couch_length\n    return result"}
{"output": "def solution():\n    \n    total_cost = 7\n    grape_cost = 2\n    green_cost = grape_cost / 2\n    strawberry_cost = (total_cost - grape_cost - green_cost) / 2\n    result = strawberry_cost\n    return result"}
{"output": "def solution():\n    \n    sticks_per_piece_4 = 200\n    sticks_per_piece_8 = 400\n    total_money = 24\n    cost_per_piece_4 = 4\n    cost_per_piece_8 = 6\n    sticks_per_piece_4 = sticks_per_piece_4 / 2\n    sticks_per_piece_8 = sticks_per_piece_8 / 2\n    total_sticks = (sticks_per_piece_4 * sticks_per_piece_4) + (sticks_per_piece_8 * sticks_per_piece_8)\n    cheapest_lumber = max(total_money // cost_per_piece_4, total_money // cost_per_piece_8)\n    result = cheapest_lumber\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sled dogs and the number of legs per dog\n    NUM_DOGS = 6\n    LEGS_PER_DOG = 4\n\n    # Calculate the total number of legs\n    total_legs = NUM_DOGS * LEGS_PER_DOG\n\n    # Calculate the total number of pairs of snowshoes needed\n    total_pairs = total_legs // 2\n    if total_legs % 2!= 0:\n        total_pairs += 1\n\n    # Calculate the total cost\n    total_cost = total_pairs * 12\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each bus trip and the number of bus trips per week\n    BUS_TRIP_COST = 2.20\n    BUS_TRIPS_PER_WEEK = 2\n\n    # Calculate the total cost of the bus trips for a week\n    total_cost = BUS_TRIP_COST * BUS_TRIPS_PER_WEEK * 2\n\n    # Calculate the cost of buying a weekly bus pass\n    pass_cost = 20\n\n    # Calculate the amount saved by buying a weekly bus pass\n    amount_saved = total_cost - pass_cost\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    farm_cows = 30\n    farm_sheep = 20\n    zoo_cows = farm_cows * 2\n    zoo_sheep = farm_sheep / 2\n    total_cows = farm_cows + zoo_cows\n    total_sheep = farm_sheep + zoo_sheep\n    total_animals = total_cows + total_sheep\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of onions and potatoes Rose bought\n    rose_onions = 12\n    rose_potatoes = 4\n\n    # Calculate the number of onions and potatoes Sophia bought\n    sophia_onions = rose_onions / 4\n    sophia_potatoes = rose_potatoes / 4\n\n    # Calculate the total number of onions and potatoes Sophia bought\n    total_onions = sophia_onions\n    total_potatoes = sophia_potatoes\n\n    # Display the total number of onions and potatoes Sophia bought\n    result = total_onions + total_potatoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of lbs Andy wants to lose\n    lbs_to_lose = 30\n\n    # Define the number of days Andy has been losing lbs\n    days_to_lose = 31 - 19\n\n    # Define the number of calories Andy needs to burn to reach his goal\n    calories_to_burn = 3500\n\n    # Calculate the total number of calories Andy needs to burn to reach his goal\n    total_calories_to_burn = lbs_to_lose * calories_to_burn\n\n    # Calculate the number of calories Andy needs to burn per day to reach his goal\n    calories_per_day = total_calories_to_burn / days_to_lose\n\n    # Display the number of calories Andy needs to burn per day\n    result = calories_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the daily earnings and the total amount spent\n    daily_earnings = 30\n    total_spent = 100\n\n    # Calculate the total earnings for the week\n    total_earnings = daily_earnings * 7\n\n    # Calculate the amount left after the week\n    amount_left = total_earnings - total_spent\n\n    # return the result\n    result = amount_left\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water Hannah needs to drink per kilometer\n    WATER_PER_KG = 60\n\n    # Define the number of laps Hannah will run\n    laps = 8\n\n    # Define the distance of each lap\n    lap_distance = 0.25\n\n    # Calculate the total distance Hannah will run\n    total_distance = laps * lap_distance\n\n    # Calculate the total amount of water Hannah will need to drink\n    total_water = total_distance * WATER_PER_KG\n\n    # Display the total amount of water Hannah will need to drink\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Julie had\n    initial_money = 500\n\n    # Calculate the amount of money spent on clothes\n    clothes_cost = initial_money * 0.2\n\n    # Calculate the remaining amount of money\n    remaining_money = initial_money - clothes_cost\n\n    # Calculate the amount of money spent on CDs\n    cd_cost = remaining_money * 0.25\n\n    # Calculate the final amount of money Julie has left\n    final_money = remaining_money - cd_cost\n\n    # Display the final amount of money Julie has left\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the lot\n    lot_cost = 120000\n\n    # Calculate the cost of the house\n    house_cost = 3 * lot_cost\n\n    # Display the cost of the house\n    result = house_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each bag\n    COST_PER_PACK = 4\n    SELLING_PRICE_PER_PACK = 8\n\n    # Calculate the total cost of the bags\n    total_cost = 8 * COST_PER_PACK\n\n    # Calculate the total revenue from selling the bags\n    total_revenue = 8 * SELLING_PRICE_PER_PACK\n\n    # Calculate the total profit\n    total_profit = total_revenue - total_cost\n\n    # Display the total profit\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    punches_per_minute = 25\n    rounds = 5\n    minutes_per_round = 3\n    total_minutes = rounds * minutes_per_round\n    total_punches = total_minutes * punches_per_minute\n    result = total_punches\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Suzanne made\n    suzanne_cookies = 36\n\n    # Calculate the number of cookies Josh made\n    josh_cookies = suzanne_cookies / 4\n\n    # Calculate the number of cookies Kelsie made\n    kelsie_cookies = josh_cookies * 2\n\n    # Display the number of cookies Kelsie made\n    result = kelsie_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Ali has\n    initial_money = 4 * 10 + 6 * 20\n\n    # Calculate the amount of money Ali gives to her sister\n    sister_money = initial_money / 2\n\n    # Calculate the remaining amount of money\n    remaining_money = initial_money - sister_money\n\n    # Calculate the amount of money Ali uses to buy dinner\n    dinner_money = remaining_money * 3 / 5\n\n    # Calculate the final amount of money Ali has after buying dinner\n    final_money = remaining_money - dinner_money\n\n    # return the result\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    # Define Rob's time in minutes\n    robce_time = 40 + 2 * 60\n\n    # Display Royce's time in minutes\n    result = royce_time\n    return result"}
{"output": "def solution():\n    \n    num_grandchildren = 3\n    hat_skeins = 2\n    scarf_skeins = 4\n    sweater_skeins = 12\n    mittens_skeins = 1\n    socks_skeins = 2\n    total_skeins = (hat_skeins + scarf_skeins + sweater_skeins + (2 * mittens_skeins) + (2 * socks_skeins)) * num_grandchildren\n    result = total_skeins\n    return result"}
{"output": "def solution():\n    \n    total_problems = 100\n    monday_problems = 12\n    tuesday_problems = monday_problems * 3\n    remaining_problems = total_problems - monday_problems - tuesday_problems\n    wednesday_problems = remaining_problems / 4\n    remaining_problems -= wednesday_problems\n    result = remaining_problems\n    return result"}
{"output": "def solution():\n    \n    tony_rate = 6\n    bobby_rate = tony_rate - 1\n    kathy_rate = bobby_rate * 2\n    ricky_rate = kathy_rate - 2\n    total_rate = tony_rate + bobby_rate + kathy_rate + ricky_rate\n    result = total_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of loaves of bread\n    initial_loaves = 200\n\n    # Define the number of loaves sold in the morning and afternoon\n    morning_sold = 93\n    afternoon_sold = 39\n\n    # Calculate the total number of loaves sold\n    total_sold = morning_sold + afternoon_sold\n\n    # Subtract the number of unsold loaves\n    remaining_loaves = initial_loaves - total_sold + 6\n\n    # return the result\n    result = remaining_loaves\n    return result"}
{"output": "def solution():\n    \n    red_tulips_per_row = 6\n    blue_tulips_per_row = 8\n    total_red_tulips = 36\n    total_blue_tulips = 24\n    total_flowers = (total_red_tulips // red_tulips_per_row) + (total_blue_tulips // blue_tulips_per_row)\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    total_raisins = 27  # Heather bought a jumbo bag of raisins with 27 cups of raisins\n    oatmeal_cookies_per_batch = 3/4  # Each batch of oatmeal cookies takes 3/4 of a cup of raisins\n\n    # Calculate how many batches of oatmeal cookies Heather can make\n    batches = total_raisins // oatmeal_cookies_per_batch\n    if total_raisins % oatmeal_cookies_per_batch!= 0:\n        batches += 1\n\n    result = batches\n    return result"}
{"output": "def solution():\n    daily_consumption = 12  # Ada's daily electric consumption is 12 kilowatts per hour\n    new_hourly_consumption = 2  # Ada's new electric consumption will consume 2 kilowatts per hour a day\n    kilowatt_rate = 1.5  # Ada's kilowatt rate is $1.50\n\n    # Calculate the total kilowatt consumption after adding the new device\n    total_kilowatt_consumption = daily_consumption + new_hourly_consumption\n\n    # Calculate the difference in kilowatt consumption between Ada's weekly electric bills before and after adding the new device\n    difference = total_kilowatt_consumption - (daily_consumption * kilowatt_rate)\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    num_people = 5\n    days_per_person = 5\n    total_days = num_people * days_per_person\n    total_hours = total_days / 60\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sofas that Ophelia has\n    ophelia_sofas = 20\n\n    # Calculate the number of sofas that Jenna has\n    jenna_sofas = 3 * ophelia_sofas\n\n    # Calculate the number of sofas that they each have\n    ophelia_chairs = ophelia_sofas - 2\n    jenna_chairs = jenna_sofas - 2\n\n    # Calculate the total number of sofas and chairs\n    total_sofas = ophelia_sofas + jenna_sofas + jenna_chairs\n\n    # Display the total number of sofas and chairs\n    result = total_sofas\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the CD and the total amount paid\n    CD_PRICE = 4\n    TOTAL_PAID = 48\n\n    # Calculate the number of CDs Tom can buy with his total amount paid\n    num_cds = (TOTAL_PAID - CD_PRICE) / CD_PRICE\n\n    # Display the number of CDs Tom can buy with the remaining amount\n    result = num_cds\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weeks in 8 weeks\n    weeks = 8\n\n    # Calculate the total number of hours spent working out in the first two weeks\n    first_two_weeks = 5 * 2\n\n    # Calculate the total number of hours spent working out in the first two weeks\n    first_two_total = first_two_weeks + 5\n\n    # Calculate the total number of hours spent working out in the last week\n    last_one_weeks = 6\n\n    # Calculate the total number of hours spent working out across the 8 weeks\n    total_hours = first_two_total + last_one_weeks\n\n    # return the result\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of passengers\n    passengers = 48\n\n    # Calculate the number of passengers who got off on the first stop\n    passengers -= 8\n\n    # Calculate the number of passengers who got into the bus after the first stop\n    passengers += 5 * 8\n\n    # Calculate the number of passengers who got off on the second stop\n    passengers -= 21\n\n    # Calculate the number of passengers who got on the second stop\n    passengers += 3 * 21\n\n    # Display the final number of passengers\n    result = passengers\n    return result"}
{"output": "def solution():\n    \n    # Define Jame's age in 5 years\n    jame_age_in_5_years = 27\n\n    # Define Jame's cousin's age in 8 years\n    cousin_age_in_8_years = 2 * jame_age_in_5_years - 5\n\n    # Calculate Jame's current age\n    jame_current_age = jame_age_in_5_years + 5\n\n    # Calculate Jame's cousin's current age\n    cousin_current_age = cousin_age_in_8_years + 8\n\n    # Calculate the age difference between Jame and his two\n    age_difference = jame_current_age - cousin_current_age\n\n    # Display the age difference\n    result = age_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the computer\n    computer_cost = 100\n\n    # Calculate the cost of the printer\n    printer_cost = computer_cost - 400\n\n    # Calculate the total cost of the computer, monitors and printer\n    total_cost = computer_cost + printer_cost\n\n    # Calculate the cost of one monitor\n    one_monitor_cost = total_cost / 2\n\n    # Display the cost of one monitor\n    result = one_monitor_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of shells brought by the boys\n    boys_shells = 60 * 2\n\n    # Calculate the total number of shells brought by the girls\n    girls_shells = boys_shells + 4 * 60\n\n    # Calculate the number of seashells brought by each girl\n    seashells_per_girl = girls_shells / 20\n\n    # Display the number of seashells brought by each girl\n    result = seashells_per_girl\n    return result"}
{"output": "def solution():\n    \n    george_candies = 3\n    nick_candies = 2 * george_candies\n    result = nick_candies\n    return result"}
{"output": "def solution():\n    \n    # Define Chenny's age\n    chenny_age = 10\n\n    # Calculate Alyana's age\n    alyana_age = chenny_age - 4\n\n    # Calculate Anne's age\n    anne_age = alyana_age + 2\n\n    # Display Anne's age\n    result = anne_age\n    return result"}
{"output": "def solution():\n    # Define the thickness of each book\n    book1_thickness = 31\n    book2_thickness = 50\n    book3_thickness = book2_thickness - 5\n    book4_thickness = 2 * book1_thickness\n\n    # Calculate the total thickness of all four books\n    total_thickness = book1_thickness + book2_thickness + book3_thickness + book4_thickness\n    result = total_thickness\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vlogs Emma can make each week\n    week1_vlogs = 18\n    week2_vlogs = 21\n    week3_vlogs = 15\n\n    # Calculate the total number of vlogs Emma can make each month\n    total_vlogs = week1_vlogs + week2_vlogs + week3_vlogs\n\n    # Calculate the number of vlogs Emma needs to complete each month\n    vlogs_per_month = 72\n    vlogs_to_complete = total_vlogs / vlogs_per_month\n\n    # Display the number of vlogs Emma needs to complete each month\n    result = vlogs_to_complete\n    return result"}
{"output": "def solution():\n    \n    dinner_bill = 50\n    tip_percent = 20\n    tip_amount = dinner_bill * (tip_percent / 100)\n    total_amount = dinner_bill + tip_amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money\n    initial_money = 18\n\n    # Add the $5 to the share\n    initial_money += 5\n\n    # Add the $10 to the share\n    initial_money += 10\n\n    # Subtract the amount spent\n    remaining_money = initial_money - 8\n\n    # Triple the remaining amount\n    final_money = remaining_money * 3\n\n    # Display the final amount of money\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    # Define the target amount saved\n    target_amount = 11205\n\n    # Calculate the amount saved per day in the first half of the month\n    first_half_amount = target_amount / 4\n\n    # Calculate the amount saved per day in the second half of the month\n    second_half_amount = first_half_amount * 2\n\n    # Display the amount saved per day in the second half of the month\n    result = second_half_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of fruit\n    APPLE_PRICE = 1.5\n    ORANGE_PRICE = 0.8\n    PEACH_PRICE = 0.75\n\n    # Define the number of each type of fruit purchased\n    num_apples = 3\n    num_oranges = 5\n    num_peaches = 6\n\n    # Calculate the total cost of the fruit\n    total_cost = (num_apples * APPLE_PRICE) + (num_oranges * ORANGE_PRICE) + (num_peaches * PEACH_PRICE)\n\n    # Calculate the change\n    change = 20 - total_cost\n\n    # Display the change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the prices for each task\n    JAIRUS_PRICE = 0.8\n    JENNY_PRICE = 0.5\n\n    # Define the number of tasks each person finished\n    num_tasks = 20\n\n    # Calculate the total earnings for each person\n    jairus_earnings = jAIRUS_PRICE * num_tasks\n    jenny_earnings = JENNY_PRICE * num_tasks\n\n    # Calculate the difference in earnings between Jairus and Jenny\n    earnings_difference = jairus_earnings - jenny_earnings\n\n    # Display the difference in earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount to divide\n    total_amount = 100\n\n    # Define the ratio of Jeff's amount to Brad's amount\n    jeff_to_brad_ratio = 4\n\n    # Calculate the total amount that Jeff and Brad each get\n    total_ratio = jeff_to_brad_ratio + 1\n    brad_amount = total_amount / total_ratio\n\n    # Calculate the amount that Jeff gets\n    jeff_amount = jeff_to_brad_ratio * brad_amount\n\n    # Display the amount that Jeff gets\n    result = jeff_amount\n    return result"}
{"output": "def solution():\n    \n    distance_per_day = 2 * 3\n    days_per_week = 5\n    total_distance = distance_per_day * days_per_week\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    full_letters = 2 * 2\n    half_letters = full_letters / 2\n    total_letters = full_letters + half_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of families to call\n    num_families = 3\n\n    # Calculate the total number of families to call\n    total_families = num_families + (num_families * 3)\n\n    # Calculate the number of families to call in the fourth round\n    num_families_in_fourth_round = total_families - num_families\n\n    # Display the number of families to call in the fourth round\n    result = num_families_in_fourth_round\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of Mark's final weight and the weight lost per month\n    final_weight = 70\n    weight_lost_per_month = 10\n\n    # Calculate the total weight lost over 3 months\n    total_weight_lost = weight_lost_per_month * 3\n\n    # Calculate the initial weight of Mark\n    initial_weight = final_weight - total_weight_lost\n\n    # return the result\n    result = initial_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toys in James's play set\n    james_toys = 80\n\n    # Calculate the number of toys in Jonathan's play set\n    jonathan_toys = james_toys * 5\n\n    # Calculate the number of toys Jonathan currently has\n    jonathan_current_toys = jonathan_toys + 2\n\n    # Display the number of toys Jonathan currently has\n    result = jonathan_current_toys\n    return result"}
{"output": "def solution():\n    \n    notebook_price = 1.5\n    pen_price = 0.25\n    calculator_price = 12\n    geometry_set_price = 10\n    num_notebooks = 5\n    num_pens = 2\n    num_calculators = 1\n    num_geometry_sets = 1\n    total_price = (notebook_price * num_notebooks) + (pen_price * num_pens) + (calculator_price * num_calculators) + (geometry_set_price * num_geometry_sets)\n    discount = total_price * 0.1\n    total_price_after_discount = total_price - discount\n    result = total_price_after_discount\n    return result"}
{"output": "def solution():\n    num_hamburgers = 5\n    hamburger_price = 4\n\n    num_potato_packs = 10\n    potato_pack_price = 0.30\n\n    num_fruit_drinks = 5\n    fruit_drink_price = 2\n\n    total_cost = (num_hamburgers * hamburger_price) + (num_potato_packs * potato_pack_price) + (num_fruit_drinks * fruit_drink_price)\n    change = 50 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    goods_sold = 2500\n    commission_rate_1 = 0.3\n    commission_rate_2 = 0.1\n    total_commission = goods_sold * commission_rate_1 + goods_sold * commission_rate_2\n    result = total_commission\n    return result"}
{"output": "def solution():\n    \n    cases_of_water = 2\n    bottles_per_case = 24\n    guests = 70\n    bottles_per_guest = 2\n    total_bottles = cases_of_water * bottles_per_case + guests * bottles_per_guest\n    additional_bottles = total_bottles - total_bottles\n    result = additional_bottles\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes Ray to swim a mile on a cold day\n    cold_time = 16\n\n    # Define the time it takes Ray to swim a mile on a warm day\n    warm_time = 2 + 2 * cold_time\n\n    # Calculate the difference in time between the two days\n    time_difference = warm_time - cold_time\n\n    # return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 2\n    hours_per_day = 5\n    days_per_week = 4\n    total_pay = hourly_rate * hours_per_day * days_per_week\n    weeks_to_save = 80 / total_pay\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the foot-long fish sub\n    foot_long_sub_cost = 40\n\n    # Define the cost of the six-inch cold-cut combo sub\n    combo_sub_cost = foot_long_sub_cost * 3\n\n    # Calculate the total cost of the lunch sub\n    total_cost = foot_long_sub_cost + combo_sub_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_buttons = 21\n    buttons_with_2_holes = 7\n    buttons_with_4_holes = total_buttons - buttons_with_2_holes\n    total_holes = (buttons_with_2_holes * 2) + (buttons_with_4_holes * 4)\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    # Define the size of Timothy's locker\n    timothy_size = 24\n\n    # Calculate the size of Zack's locker\n    zack_size = timothy_size / 2\n\n    # Calculate the size of Peter's locker\n    peter_size = zack_size / 4\n\n    # Display the size of Peter's locker\n    result = peter_size\n    return result"}
{"output": "def solution():\n    \n    # Define the daily recommended cups of coffee\n    daily_recommendation = 4\n\n    # Calculate the amount of coffee Octavia drinks\n    octavia_cups = daily_recommendation / 2\n\n    # Calculate the amount of coffee Juan drinks\n    juan_cups = octavia_cups * 10\n\n    # Calculate the number of cups Juan needs to reduce his daily coffee intake\n    reduced_cups = juan_cups - daily_recommendation\n\n    # Display the number of cups Juan needs to reduce his daily coffee intake\n    result = reduced_cups\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cages of each type of rodent\n    hamster_cages = 3\n    guinea_cages = 3\n\n    # Calculate the total number of hamster cages\n    total_hamster_cages = hamster_cages * 10\n\n    # Calculate the total number of guinea pig cages\n    total_guinea_cages = guinea_cages * 5\n\n    # Calculate the total number of rodents\n    total_rodents = total_hamster_cages + total_guinea_cages\n\n    # Display the total number of rodents\n    result = total_rodents\n    return result"}
{"output": "def solution():\n    \n    mark_weight = 150\n    susan_weight = mark_weight - 20\n    bob_weight = 2 * susan_weight\n    total_weight = mark_weight + susan_weight + bob_weight\n    num_friends = 3\n    avg_weight = total_weight / num_friends\n    result = avg_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial angle of the pyramid and the speed of the sun\n    initial_angle = 32\n    sun_speed = 5\n\n    # Calculate the speed of the sun\n    sun_speed = sun_speed * 10\n\n    # Calculate the distance from the ground to the sun\n    distance = initial_angle + sun_speed\n\n    # Display the distance from the ground to the sun\n    result = distance\n    return result"}
{"output": "def solution():\n    \n    # Define the age of each son\n    son1_age = 12\n    son2_age = 12 - 4\n\n    # Calculate the total number of candles\n    total_candles = (son1_age + son2_age) * 5\n\n    # Calculate the total cost\n    total_cost = total_candles * 3\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes Judy read in the first week\n    minutes_week1 = 15 * 60\n\n    # Define the number of pages Judy read in the second week\n    pages_week2 = 100\n\n    # Define the number of pages Judy can read per 1.5 minutes\n    pages_per_1.5 = 2\n\n    # Calculate the total number of pages Judy read in two weeks\n    total_pages = (minutes_week1 + minutes_week2) * pages_per_1.5\n\n    # Display the total number of pages Judy read\n    result = total_pages\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sandwiches\n    sandwiches = 12\n\n    # Calculate the number of sandwiches Cody ate\n    cody_sandwiches = sandwiches // 3\n\n    # Calculate the number of sandwiches Trevor ate\n    trevor_sandwiches = sandwiches // 4\n\n    # Calculate the total number of sandwiches eaten\n    total_sandwiches_eaten = cody_sandwiches + trevor_sandwiches\n\n    # Calculate the number of sandwiches left\n    sandwiches_left = sandwiches - total_sandwiches_eaten\n\n    # Display the number of sandwiches left\n    result = sandwiches_left\n    return result"}
{"output": "def solution():\n    \n    # Define Shiloh's current age and the number of years in the future\n    shiloh_age = 44\n    future_years = 7\n\n    # Calculate Shiloh's age in the future\n    shiloh_future_age = shiloh_age + future_years\n\n    # Calculate Shiloh's nephew's age in the future\n    nephew_future_age = shiloh_future_age / 3\n\n    # Calculate Shiloh's nephew's current age\n    nephew_age = nephew_future_age - future_years\n\n    # Display Shiloh's nephew's age\n    result = nephew_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Sharon lost\n    initial_money_lost = 5\n\n    # Calculate the amount of money Sharon received for each of the first three teeth\n    money_received_first_three = initial_money_lost + (1 * 3)\n\n    # Calculate the amount of money Sharon received for each of the last two teeth Sharon lost\n    money_received_last_two_teeth = (1 * 2) + (1 * 2)\n\n    # Calculate the total amount of money Sharon received\n    total_money_received = money_received_first_three + money_received_last_two_teeth\n\n    # Calculate the amount of money Sharon left\n    money_left = initial_money_lost + total_money_received\n\n    # return the result\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    richie_goals = 80\n    mark_goals = richie_goals - 20\n    anna_goals = richie_goals - 45\n    total_goals = richie_goals + mark_goals + anna_goals\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Define Liam's earnings\n    liam_earnings = 63\n\n    # Calculate Mitchell's earnings\n    mitchell_earnings = 21 * 4\n\n    # Calculate the difference in earnings between Mitchell and Liam\n    earnings_difference = mitchell_earnings - liam_earnings\n\n    # Display the difference in earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Peter has\n    initial_money = 70\n\n    # Calculate the amount of money Peter spent on wooden action figures\n    wooden_cost = 5 * 5\n\n    # Calculate the amount of money Peter spent on plastic action figures\n    plastic_cost = 2 * 3\n\n    # Calculate the total amount of money Peter spent on action figures\n    total_cost = wooden_cost + plastic_cost\n\n    # Calculate the total number of action figures Peter will have by the end of the week\n    total_figures = initial_money - total_cost\n\n    # Display the total number of action figures Peter will have\n    result = total_figures\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total cost of the vaccinations\n    vaccine_cost = 3 * 20\n\n    # Calculate the total cost of the kitten broke\n    kitten_broke_cost = 4 * 12\n\n    # Calculate the total cost of the kitten\n    total_cost = 200 + vaccine_cost + kitten_broke_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roses each shop orders per week\n    shop1_roses = 20\n    shop2_roses = 15\n    shop3_roses = 30\n\n    # Calculate the total number of roses ordered per week\n    total_roses_per_week = shop1_roses + shop2_roses + shop3_roses\n\n    # Calculate the total number of roses ordered per month\n    total_roses_per_month = total_roses_per_week * 4\n\n    # Calculate the number of roses that lacks\n    roses_lack = total_roses_per_month - 40\n\n    # Display the number of roses that lacks\n    result = roses_lack\n    return result"}
{"output": "def solution():\n    \n    starting_balance = 3000\n    monthly_savings = 100\n    years = 2\n    remaining_balance = starting_balance - (monthly_savings * 12 * years)\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and revenue per sandwich\n    COST_PER_LOAF = 3.00\n    REVENUE_PER_SANDWICH = 7.00\n\n    # Define the number of sandwiches made\n    sandwiches_made = 10\n\n    # Calculate the total revenue\n    revenue = sandwiches_made * REVENUE_PER_SANDWICH * 10\n\n    # Calculate the total cost\n    cost = 30.00\n\n    # Calculate the net profit\n    net_profit = revenue - cost\n\n    # Display the net profit\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes and crayons per box\n    BOXES = 3\n    CRAYONS_PER_BOX = 64\n\n    # Calculate the total number of crayons\n    total_crayons = BOXES * CRAYONS_PER_BOX\n\n    # Calculate the number of small pieces of crayons\n    small_pieces = 8\n\n    # Calculate the total number of muffin pieces\n    total_muffin_pieces = total_crayons // small_pieces + (1 if total_crayons % small_pieces > 0 else 0)\n\n    # Calculate the total amount of money Kate can make\n    total_money = total_muffin_pieces * 1.5\n\n    # Display the total amount of money Kate can make\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Calculate the area of the bedroom\n    bedroom_area = 18 * 12\n\n    # Calculate the cost of the new carpet\n    new_carpet_cost = 12 * bedroom_area + 2 * bedroom_area\n\n    # Calculate the cost of removing the old carpet and installing the new carpet\n    removed_carpet_cost = 4 * bedroom_area\n    installed_carpet_cost = 34 * bedroom_area\n\n    # Calculate the total cost of replacing the carpet\n    total_cost = new_carpet_cost - removed_carpet_cost + installed_carpet_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds seen on each day\n    birds_day1 = 50\n    birds_day2 = 50\n    birds_day3 = 0\n    birds_day4 = 120\n    birds_day5 = 120\n    birds_day6 = 20\n    birds_day7 = 90\n\n    # Calculate the total number of birds seen over the week\n    total_birds = birds_day1 + birds_day2 + birds_day3 + birds_day4 + birds_day5 + birds_day6 + birds_day7\n\n    # Calculate the average number of birds seen per day\n    average_birds = total_birds / 7\n\n    # Display the average number of birds seen per day\n    result = average_birds\n    return result"}
{"output": "def solution():\n    \n    # Define the starting value of the number train\n    starting_value = 20\n\n    # Calculate the value of the first part of the number\n    first_part = starting_value / 2\n\n    # Calculate the value of the second part of the number\n    second_part = first_part + 5\n\n    # Calculate the value of the third part of the number\n    third_part = second_part * 12\n\n    # Calculate the final value of the number train\n    final_value = first_part + second_part + third_part\n\n    # Display the final value of the number train\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    boy_cards = 5\n    brother_cards = boy_cards - 3\n    total_cards = boy_cards + brother_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the initial temperature and the desired temperature\n    initial_temp = 468\n    desired_temp = 520\n\n    # Calculate the percentage increase in temperature\n    percentage_increase = (desired_temp / initial_temp) * 100\n\n    # Calculate the new temperature after the percentage increase\n    new_temp = initial_temp + percentage_increase\n\n    # Display the new temperature\n    result = new_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each movie in minutes\n    MOVIE_1_LENGTH = 90\n    MOVIE_2_LENGTH = 120\n\n    # Calculate the total length of both movies in minutes\n    total_length = MOVIE_1_LENGTH + MOVIE_2_LENGTH\n\n    # Display the total length in minutes\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the value of Herb's house and the percentage decrease\n    HERB_VALUE = 76000\n    PERCENT_DECREASE = 0.3\n\n    # Calculate the value of Juan's house\n    juan_value = HERB_VALUE * (1 - PERCENT_DECREASE)\n\n    # Calculate the total value of both houses\n    total_value = juan_value + HERB_VALUE\n\n    # Display the total value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    cups_per_dozen = 12\n    dishes_per_dozen = 2 * cups_per_dozen\n    cups_brought = 40\n    dishes_brought = cups_brought + 20\n    total_cups = cups_brought / cups_per_dozen\n    total_dishes = dishes_brought / dishes_per_dozen\n    total_utensils = total_cups + total_dishes\n    result = total_utensils\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes and the cost per box\n    boxes = 2\n    box_cost = 100\n\n    # Calculate the total cost before discount\n    total_cost = boxes * box_cost\n\n    # Calculate the discount amount\n    discount = total_cost * 0.1\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost - discount\n\n    # Calculate the cost per pair of contacts\n    cost_per_pair = total_cost_after_discount / boxes\n\n    # Display the cost per pair of contacts\n    result = cost_per_pair\n    return result"}
{"output": "def solution():\n    \n    # Define Jill's hourly rate and the number of hours worked each day\n    jill_rate = 10\n    jill_hours = 2 + 1\n\n    # Calculate John's hourly rate and the number of hours worked each day\n    john_rate = jill_rate * 2\n    john_hours = jill_hours * 3\n\n    # Calculate the total earnings of each day\n    jill_earnings = jill_rate * jill_hours\n    john_earnings = john_rate * john_hours\n\n    # Calculate the difference in earnings between John and Jill\n    earnings_difference = john_earnings - jill_earnings\n\n    # return the result\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    aerobic_calories = 500 * 2\n    running_calories = 600 * 1\n    total_calories = aerobic_calories + running_calories\n    water_per_calories = 100\n    total_water = (total_calories / 200) * water_per_calories\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jelly beans in the jar\n    total_jelly_beans = 4500\n\n    # Calculate the number of blue jelly beans\n    blue_jelly_beans = total_jelly_beans / 0.9\n\n    # Calculate the number of red jelly beans\n    red_jelly_beans = blue_jelly_beans - 1\n\n    # Calculate the number of green jelly beans\n    green_jelly_beans = blue_jelly_beans * 1.1\n\n    # Calculate the difference between the number of green and red jelly beans\n    difference = green_jelly_beans - red_jelly_beans\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial typing speed and the number of words added\n    initial_speed = 47\n    words_added = 5\n\n    # Calculate the typing speed after the first increase\n    speed_after_first_increase = initial_speed + words_added\n\n    # Calculate the typing speed after the second increase\n    speed_after_second_increase = speed_after_first_increase + 52\n\n    # Calculate the average of the three measurements\n    average_speed = (speed_after_first_increase / 3) + (speed_after_second_increase / 3)\n\n    # Display the average of the three measurements\n    result = average_speed\n    return result"}
{"output": "def solution():\n    # Calculate the weight of Cheerios eaten in 5 weeks\n    weight_eaten_5_weeks = 1.25 * 5  # Martin eats 1.25 pounds/week for 5 weeks\n\n    # Calculate the weight of donuts eaten in 5 weeks\n    weight_eaten_5_weeks = 1.75 * 5  # Martin eats 1.75 pounds/week for 5 weeks\n\n    # Calculate the difference in weight between the two breakfast options\n    weight_difference = weight_eaten_5_weeks - weight_eaten_5_weeks\n    result = weight_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of invited people and the number of friends each person will invite\n    invited_people = 100\n    friends_per_person = 2\n\n    # Calculate the total number of friends to invite\n    total_friends = invited_people * friends_per_person\n\n    # Calculate the total number of people who will attend\n    total_attendees = invited_people + 10 + 8\n\n    # Calculate the total number of seats needed\n    total_seats = total_attendees * 100\n\n    # Display the total number of seats needed\n    result = total_seats\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the first dog\n    dog1_weight = 10\n\n    # Define the weight of the second dog\n    dog2_weight = dog1_weight * 2\n\n    # Define the weight of the third dog\n    dog3_weight = dog2_weight / 4\n\n    # Define the weight of the fourth dog\n    dog4_weight = dog3_weight * 4\n\n    # Define the weight of the mastiff\n    mastiff_weight = dog4_weight * 44\n\n    # Calculate the total weight of all the dogs\n    total_weight = dog1_weight + dog2_weight + dog3_weight + dog4_weight + mastiff_weight\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the boots\n    amazon_price = 16\n    amazon_shipping = 4\n    ebay_price = 13\n    ebay_shipping = 2 * amazon_shipping\n\n    # Calculate the total cost of the boots\n    total_cost = amazon_price + amazon_shipping + ebay_price\n\n    # Calculate the difference in cost\n    cost_difference = ebay_price - total_cost\n\n    # return the result\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial height of the beanstalk\n    initial_height = 4\n\n    # Define the height of the second-story window\n    second_story_height = 20\n\n    # Calculate the daily height of the beanstalk\n    daily_height = initial_height * 2\n\n    # Calculate the number of days it will take to reach the second-story window\n    days = second_story_height / daily_height\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    mushrooms_per_cup = 100  # Each cup of mushrooms weighs 100 grams\n    protein_per_cup = 3  # Each cup of mushrooms has 3 grams of protein\n    mushrooms_per_day = 200  # John eats 200 grams of mushrooms every day\n    days_per_week = 7  # There are 7 days in a week\n\n    # Calculate the total amount of mushrooms John eats per week\n    total_mushrooms = mushrooms_per_day * days_per_week\n\n    # Calculate the total amount of protein John eats per week\n    total_protein = protein_per_cup * total_mushrooms\n    result = total_protein\n    return result"}
{"output": "def solution():\n    \n    # Calculate Jerry's current age\n    jerry_age = 2 * 5\n\n    # Calculate Jerry's age in 3 years\n    jerry_age_in_3_years = jerry_age + 3\n\n    # Display Jerry's age in 3 years\n    result = jerry_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    num_implants = 2\n    base_price = 2000\n    crown_cost = 500\n    deposit = 600\n    hourly_rate = 15\n    total_cost = (num_implants * base_price) + crown_cost + deposit\n    hours_needed = total_cost / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the sum of the angles in the triangle\n    total_angle = 180\n\n    # Calculate the smallest angle\n    smallest_angle = total_angle / 3\n\n    # Calculate the second angle\n    second_angle = smallest_angle * 2\n\n    # Calculate the third angle\n    third_angle = second_angle * 3\n\n    # Calculate the measure of the largest angle\n    largest_angle = smallest_angle + second_angle + third_angle\n\n    # Display the measure of the largest angle\n    result = largest_angle\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each gumball\n    QUARTER_PRICE = 0.25\n    DIME_PRICE = 0.10\n    NICKEL_PRICE = 0.05\n    PENNY_PRICE = 0.01\n\n    # Define the number of each gumball\n    num_quarters = 8\n    num_dimes = 6\n    num_nickels = 14\n    num_pennies = 15\n\n    # Calculate the total cost of the gumballs\n    total_cost = (num_quarters * QUARTER_PRICE) + (num_dimes * DIME_PRICE) + (num_nickels * NICKEL_PRICE) + (num_pennies * PENNY_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    dogs = 5\n    cats = 2\n    birds = 10\n    legs_per_dog = 4\n    legs_per_cat = 4\n    legs_per_bird = 4\n    total_legs = (dogs * legs_per_dog) + (cats * legs_per_cat) + (birds * legs_per_bird)\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial weight of Jamaal and the percentage increase\n    initial_weight = 8\n    percentage_increase = 50\n\n    # Calculate the new weight of Jamaal\n    new_weight = initial_weight * (1 + percentage_increase / 100)\n\n    # Calculate the weight of Jamaal after the increase\n    final_weight = new_weight - 2\n\n    # Display the final weight of Jamaal\n    result = final_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of games\n    games = 5\n\n    # Calculate the total number of games bought in the first year\n    first_year_games = 12 * 1\n\n    # Calculate the total number of games bought in the second year\n    second_year_games = 12 * 2\n\n    # Calculate the total number of games bought in the third year\n    third_year_games = 4 * 3\n\n    # Calculate the total number of games bought in Christmas\n    christmas_games = 5\n\n    # Calculate the total number of games\n    total_games = first_year_games + second_year_games + third_year_games + christmas_games\n\n    # return the result\n    result = total_games\n    return result"}
{"output": "def solution():\n    \n    distance = 1200\n    time = 3\n    speed = distance / time\n    additional_distance = 2000\n    additional_time = additional_distance / speed\n    result = additional_time\n    return result"}
{"output": "def solution():\n    \n    # Calculate the amount of chocolates made by Marissa in one hour\n    marissa_hourly_chocolates = (3/4) * 120\n\n    # Calculate the total amount of chocolates made by Ruiz in 12 hours\n    total_chocolates = 120 + marissa_hourly_chocolates * 12\n\n    # Display the total amount of chocolates made\n    result = total_chocolates\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Howard had\n    initial_money = 100\n\n    # Calculate the amount of money Howard spent on Tuesday\n    tuesday_money = 2 * 8\n\n    # Calculate the amount of money Howard spent on Wednesday\n    wednesday_money = 4 * tuesday_money\n\n    # Calculate the total amount of money Howard spent\n    total_money = monday_money + tuesday_money + wednesday_money\n\n    # Calculate the amount of money Howard has left\n    money_left = initial_money - total_money\n\n    # Display the amount of money Howard has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total earnings from selling lemonade in the first 4 hours\n    earnings_first_4_hours = 15 * 0.50 * 4\n\n    # Calculate the total earnings from selling lemonade in the next 2 hours\n    earnings_next_2_hours = 10 * 0.60 * 2\n\n    # Calculate the total earnings from selling lemonade for 6 hours\n    total_earnings = earnings_first_4_hours + earnings_next_2_hours\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    miles_per_month = 400\n    miles_per_tire = 10000\n    tires_per_month = miles_per_month / miles_per_tire\n    tires_per_year = tires_per_month / 725\n    years_before_tire = tires_per_year - years_before_tire\n    result = years_before_tire\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the shampoo\n    shampoo_cost = 2400\n\n    # Define the number of pumps and washings\n    pumps = 2\n    washings = 120\n\n    # Calculate the cost per wash\n    cost_per_wash = (shampoo_cost / washings) * 100\n\n    # Calculate the cost per pump\n    cost_per_pump = cost_per_wash / pumps\n\n    # Display the cost per pump\n    result = cost_per_pump\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the outfit and the discount percentage\n    INITIAL_COST = 50\n    DISCOUNT_PERCENTAGE = 0.3\n\n    # Calculate the discounted price of the shirt and shorts\n    shirt_price = 25\n    shorts_price = 35\n\n    # Calculate the discounted price of the shirt and shorts\n    discounted_price = shirt_price - (shirt_price * DISCOUNT_PERCENTAGE)\n    shorts_price = shorts_price - (shorts_price * DISCOUNT_PERCENTAGE)\n\n    # Calculate the total cost of the outfit\n    total_cost = INITIAL_COST - discounted_price + shorts_price\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of croissants per dozen\n    CROISSANTS_PER_DOZEN = 12\n\n    # Define the amount of butter required per croissant\n    BUTTER_PER_CROISSANT = 0.25\n\n    # Calculate the total amount of croissants to be made in a week\n    total_croissants = 4 * CROISSANTS_PER_DOZEN * 7\n\n    # Calculate the total amount of butter required\n    total_butter = total_croissants * BUTTER_PER_CROISSANT\n\n    # Display the total amount of butter required\n    result = total_butter\n    return result"}
{"output": "def solution():\n    # Calculate the cost of repiving Monica's street\n    monica_street_cost = 192 * 150\n\n    # Calculate the cost of repiving Lewis' street\n    lewis_street_cost = 192 * 490\n\n    # Calculate the difference in cost between the two scenarios\n    cost_difference = lewis_street_cost - monica_street_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    initial_funding = 100000\n    first_5_months = 5\n    final_funding = initial_funding * 1.5 * first_5_months\n    total_cost = initial_funding + final_funding\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each player's meat in ounces\n    player1_weight = 6\n    player2_weight = 8 * 16\n    player3_weight = 16\n\n    # Calculate the total weight of meat consumed by the team\n    total_weight = player1_weight + player2_weight + player3_weight\n\n    # Display the total weight of meat consumed\n    result = total_weight\n    return result"}
{"output": "def solution():\n    num_members = 1000\n    posts_per_member_per_day = 3\n    num_days = 31\n\n    # Calculate the total number of posts that the group will have in March\n    total_posts = num_members * posts_per_member_per_day * num_days\n    result = total_posts\n    return result"}
{"output": "def solution():\n    \n    # Define the number of loads of laundry per week and the cost per gallon\n    LOADS_PER_WEEK = 2\n    COST_PER_GALLON = 0.15\n\n    # Calculate the total number of gallons of water used in a week\n    total_gallons_per_week = LOADS_PER_WEEK * 2\n\n    # Calculate the total cost of water used in a week\n    total_cost_per_week = total_gallons_per_week * COST_PER_GALLON\n\n    # Calculate the total cost of water used in a year\n    total_cost_per_year = total_cost_per_week * 52\n\n    # Display the total cost of water for laundry in a year\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the items\n    aquarium_price = 10.00\n    rocks_price = 2.50\n    coral_price = 2.00\n    fish_price = 0.50\n    fish_food_price = 2.00\n\n    # Calculate the total cost of the rocks\n    rocks_cost = 2 * rocks_price\n\n    # Calculate the total cost of the coral\n    coral_cost = 3 * coral_price\n\n    # Calculate the total cost of the fish\n    fish_cost = 20 * fish_price\n\n    # Calculate the total cost of the food\n    food_cost = fish_food_price\n\n    # Calculate the total cost of all items\n    total_cost = aquarium_price + rocks_cost + coral_cost + fish_cost + food_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the beanstalk in the first week\n    week1_height = 3\n\n    # Calculate the height of the beanstalk in the second week\n    week2_height = week1_height * 2\n\n    # Calculate the height of the beanstalk in the third week\n    week3_height = week2_height + 4\n\n    # Calculate the total height of the beanstalk after 3 weeks\n    total_height = week1_height + week2_height + week3_height\n\n    # Display the total height of the beanstalk\n    result = total_height\n    return result"}
{"output": "def solution():\n    \n    meat_sold_per_hour = 15\n    hours_per_day = 10\n    bull_weight = 750\n    total_meat_sold = meat_sold_per_hour * hours_per_day * bull_weight\n    days_to_sell_meat = total_meat_sold / total_meat_sold\n    result = days_to_sell_meat\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and seats per row\n    rows = 4\n    seats_per_row = 18\n\n    # Calculate the total number of seats in the auditorium\n    total_seats = rows * seats_per_row\n\n    # Calculate the number of seats occupied by administrators\n    administrators_seats = total_seats // 4\n\n    # Calculate the number of remaining seats\n    remaining_seats = total_seats - administrators_seats\n\n    # Calculate the number of seats occupied by parents\n    parents_seats = remaining_seats // 3\n\n    # Calculate the number of seats occupied by students\n    students_seats = remaining_seats - parents_seats\n\n    # Display the number of students\n    result = students_seats\n    return result"}
{"output": "def solution():\n    \n    # Define the number of street lights per pole and the total number of intersections\n    street_lights_per_pole = 4\n    total_intersections = 4\n\n    # Calculate the total number of street lights on the road\n    total_street_lights = street_lights_per_pole * total_intersections\n\n    # Calculate the number of streetlights not working\n    streetlights_not_working = 20\n\n    # Calculate the total number of streetlights on the road\n    total_street_lights = total_street_lights + streetlights_not_working\n\n    # Calculate the number of functioning street lights\n    functioning_street_lights = total_street_lights - total_street_lights\n\n    # return the result\n    result = functioning_street_lights\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times each DVD can be played before it breaks\n    DVD1_TIMES = 356\n    DVD2_TIMES = 135\n\n    # Calculate the total number of times both DVDs can be played before they break\n    total_time_played = DVD1_TIMES + DVD2_TIMES\n\n    # Display the total number of times both DVDs can be played before they break\n    result = total_time_played\n    return result"}
{"output": "def solution():\n    \n    weeks = 6\n    hours_per_week = 2\n    sessions_per_hour = 125\n    total_sessions = weeks * hours_per_week * sessions_per_hour\n    total_cost = total_sessions * sessions_per_hour\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of gum pieces\n    INITIAL_GUM_PIECES = 20\n\n    # Calculate the number of gum pieces eaten during the day\n    gum_pieces_eaten = INITIAL_GUM_PIECES // 2\n\n    # Calculate the number of gum pieces remaining after the day\n    gum_pieces_remaining = INITIAL_GUM_PIECES - gum_pieces_eaten\n\n    # Calculate the number of gum pieces given to Jim's sister\n    gum_pieces_given = gum_pieces_remaining // 2\n\n    # Calculate the number of gum pieces left at the end of the day\n    gum_pieces_left = gum_pieces_remaining - gum_pieces_given\n\n    # Display the number of gum pieces left at the end of the day\n    result = gum_pieces_left\n    return result"}
{"output": "def solution():\n    \n    # Define the age difference between Charmaine and 12 years\n    age_difference = 12\n\n    # Calculate Charmaine's current age\n    current_age = 16 + age_difference\n\n    # Calculate Charmaine's age in 4 years\n    future_age = current_age + 4\n\n    # Display Charmaine's future age\n    result = future_age\n    return result"}
{"output": "def solution():\n    \n    baseball_price = 3\n    basketball_price = 14\n    num_baseballs = 9\n    num_basketballs = 8\n    total_baseball_cost = baseball_price * num_baseballs\n    total_basketball_cost = basketball_price * num_basketballs\n    difference = total_basketball_cost - total_baseball_cost\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and flowers per row\n    rows = 10\n    flowers_per_row = 20\n\n    # Calculate the total number of flowers\n    total_flowers = rows * flowers_per_row\n\n    # Calculate the number of flowers with bloomed flowers\n    bloomed_flowers = total_flowers * (4/5)\n\n    # Display the number of flowers with bloomed flowers\n    result = bloomed_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define the internet connection speed in Kb per second\n    Kb_PER_SECOND = 20\n\n    # Define the total amount of Kb in Mb\n    TOTAL_Kb = 1000\n\n    # Calculate the internet connection speed in Mb per hour\n    Mb_PER_HOUR = (TOTAL_Kb / 1000) / 1000\n\n    # Display the internet connection speed in Mb per hour\n    result = Mb_PER_HOUR\n    return result"}
{"output": "def solution():\n    \n    first_three_days = 10 * 3\n    remaining_days = 7 - 3\n    remaining_cars = (10 - 4) * remaining_days\n    total_cars = first_three_days + remaining_cars\n    result = total_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the target height in inches\n    TARGET_HEIGHT = 4 * 12\n\n    # Define Adam's starting height in inches\n    START_HEIGHT = 40\n\n    # Define Adam's growth rate in inches per year\n    GROWTH_RATE = 2\n\n    # Calculate how many years it will take to reach the target height\n    years = (TARGET_HEIGHT - START_HEIGHT) / GROWTH_RATE\n\n    # Display the number of years\n    result = years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars sold and their cost\n    cars_sold = 10\n    car_cost = 25000\n\n    # Calculate the total cost of the cars sold\n    total_cars_cost = cars_sold * car_cost\n\n    # Calculate the amount paid to accompanying the cars\n    accompanying_cost = total_cars_cost * 0.3\n\n    # Calculate the total revenue from accompanying the cars\n    total_revenue = accompanying_cost * cars_sold\n\n    # Calculate the commission earned\n    commission = total_revenue * 0.1\n\n    # Calculate the final amount earned\n    final_amount = total_revenue + commission\n\n    # return the result\n    result = final_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of riders and the percentage that can stay upright\n    total_riders = 100\n    upright_percentage = 0.25\n\n    # Calculate the number of riders that can stay upright\n    upright_riders = total_riders * upright_percentage\n\n    # Calculate the number of women\n    women = total_riders * 0.6\n\n    # Calculate the number of men that can stay upright\n    upright_men = upright_riders - women\n\n    # return the result\n    result = upright_men\n    return result"}
{"output": "def solution():\n    \n    diamond_jewell_price = 2000\n    gold_jewell_price = (4/5) * diamond_jewell_price\n    silver_jewell_price = gold_jewell_price - 400\n    total_price = diamond_jewell_price + gold_jewell_price + silver_jewell_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    snowflake_stamps = 16\n    truck_stamps = snowflake_stamps + 3\n    rose_stamps = truck_stamps - 9\n    total_stamps = snowflake_stamps + truck_stamps + rose_stamps\n    result = total_stamps\n    return result"}
{"output": "def solution():\n    \n    # Define the distances and speeds\n    distance_1 = 75\n    speed_1 = 55\n    distance_2 = 75\n    speed_2 = 70\n\n    # Calculate the time it takes for Tom to catch up with Bob\n    time_1 = distance_1 / speed_1\n\n    # Calculate the time it takes for Tom to catch up with Bob\n    time_2 = distance_2 / speed_2\n\n    # Display the time it takes for Tom to catch up with Bob\n    result = time_2\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish caught by Naomi\n    naomi_fish = 17\n\n    # Calculate the number of fish caught by Darren\n    darren_fish = naomi_fish - 6\n\n    # Calculate the number of fish caught by Tommy\n    tommy_fish = darren_fish + 3\n\n    # Display the number of fish caught by Tommy\n    result = tommy_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per class and the total number of classes\n    COST_PER_CLASS = 10\n    NUM_CLASSES = 10\n\n    # Calculate the total cost of the classes\n    total_cost = COST_PER_CLASS * NUM_CLASSES\n\n    # Calculate the number of classes that can't sign up again\n    num_missed_classes = (60 - total_cost) // 10\n\n    # Display the number of missed classes\n    result = num_missed_classes\n    return result"}
{"output": "def solution():\n    \n    jewel_customers = 50\n    julie_customers = jewel_customers * 2\n    total_customers = jewel_customers + julie_customers\n    result = total_customers\n    return result"}
{"output": "def solution():\n    \n    # Define the number of miles Paisley ran\n    paisley_miles = 4\n\n    # Calculate the number of miles Reggie ran\n    reggie_miles = paisley_miles * 5\n\n    # Calculate the number of miles Lynn ran\n    lynn_miles = reggie_miles - 3\n\n    # Display the number of miles Lynn ran\n    result = lynn_miles\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of apples and oranges\n    apple_price = 5.20\n    orange_price = 3.30\n\n    # Calculate the total cost of 5 apples and 5 oranges\n    total_cost = (5 * apple_price) + (5 * orange_price)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    length = 6\n    width = 4\n    depth = 3\n    volume = length * width * depth\n    shovel_time = volume * 3\n    result = shovel_time\n    return result"}
{"output": "def solution():\n    \n    base_price = 30000\n    king_cab_cost = 7500\n    leather_seat_cost = king_cab_cost / 3\n    running_board_cost = leather_seat_cost - 500\n    total_cost = base_price + king_cab_cost + leather_seat_cost + running_board_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Tim's monthly salary and the percentage increase\n    MONTHLY_SALARY = 20000\n    PERCENTAGE_INCREASE = 0.05\n\n    # Calculate Tim's monthly salary after the promotion\n    monthly_salary_after_promotion = MONTHLY_SALARY * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate Tim's bonus amount\n    bonus_amount = MONTHLY_SALARY * 0.5\n\n    # Calculate Tim's monthly salary after the bonus\n    monthly_salary_after_bonus = monthly_salary_after_promotion + bonus_amount\n\n    # Calculate Tim's yearly salary after the promotion and bonus\n    yearly_salary = monthly_salary_after_bonus * 12\n\n    # Display Tim's yearly salary\n    result = yearly_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    SUIT_PRICE = 750\n    PANTS_PRICE = SUIT_PRICE / 5\n    SHIRT_PRICE = 60\n\n    # Define the number of each item purchased\n    num_suit = 10\n    num_pant = 10\n    num_shirt = 3\n\n    # Calculate the total cost of the suits\n    suit_cost = num_suit * SUIT_PRICE\n\n    # Calculate the total cost of the dress pants\n    pant_cost = num_pant * PANTS_PRICE\n\n    # Calculate the total cost of the dress shirts\n    shirt_cost = num_shirt * SHIRT_PRICE\n\n    # Calculate the total cost of everything\n    total_cost = suit_cost + pant_cost + shirt_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    political_articles_per_day = 20\n    weather_articles_per_day = 20\n    sister_articles_per_day = 10\n    days_in_month = 28\n    total_political_articles = political_articles_per_day * days_in_month\n    total_weather_articles = weather_articles_per_day * days_in_month\n    total_sister_articles = sister_articles_per_day * days_in_month\n    total_articles = total_political_articles + total_weather_articles + total_sister_articles\n    result = total_articles\n    return result"}
{"output": "def solution():\n    \n    # Define Steve's age\n    steve_age = 60\n\n    # Calculate Steve's wife's age\n    wife_age = steve_age + 4\n\n    # Calculate Steve's mom's age\n    mom_age = steve_age / 2\n\n    # Calculate Steve's son's age\n    son_age = mom_age - 3\n\n    # Display Steve's son's age\n    result = son_age\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each portion of flour\n    portion_weight = 2\n\n    # Calculate the total weight of flour in one bag\n    total_weight = portion_weight * 8\n\n    # Calculate the total weight of flour in three bags\n    total_weight_in_3_bags = total_weight * 3\n\n    # return the result\n    result = total_weight_in_3_bags\n    return result"}
{"output": "def solution():\n    \n    alisa_speed = 12\n    alisa_time = 4.5\n    stanley_speed = 10\n    stanley_time = 2.5\n    alisa_distance = alisa_speed * alisa_time\n    stanley_distance = stanley_speed * stanley_time\n    total_distance = alisa_distance + stanley_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    soil_speed = 4\n    clay_speed = soil_speed / 2\n    soil_distance = 24\n    clay_distance = 8\n    total_time = (soil_distance / soil_speed) + (clay_distance / clay_speed)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cupcakes each person will get\n    VANILLA_CUPCAKES = 2\n    TEACHER_CUPCAKES = 2\n    CLASSMATES = 25\n\n    # Calculate the total number of cupcakes needed\n    total_cupcakes = (VANILLA_CUPCAKES + TEACHER_CUPCAKES + CLASSMATES) * 3\n\n    # Display the total number of cupcakes needed\n    result = total_cupcakes\n    return result"}
{"output": "def solution():\n    \n    initial_likes = 2000\n    weekly_likes = initial_likes * 70\n    new_likes = 20000\n    total_likes = initial_likes + weekly_likes + new_likes\n    result = total_likes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial prices of the pomegranates\n    initial_price = 20\n\n    # Calculate the total cost of the pomegranates after the first discount\n    first_discounted_price = initial_price - 2\n\n    # Calculate the total cost of the pomegranates after the second discount\n    second_discounted_price = 30 * 0.9\n\n    # Calculate the total cost of the pomegranates after the second discount\n    total_cost = first_discounted_price + second_discounted_price\n\n    # Calculate the difference in prices between the two days\n    price_difference = total_cost - initial_price\n\n    # return the result\n    result = price_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the sales made in the first month\n    first_month_sales = 400\n\n    # Calculate the sales made in the second month\n    second_month_sales = (3/4) * first_month_sales\n\n    # Calculate the total sales made in two months\n    total_sales = first_month_sales + second_month_sales\n\n    # Display the total sales made in two months\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the first paid hour\n    first_hour_cost = 15\n\n    # Define the cost of each hour after the first payment\n    hour_after_first_payment = 2 * first_hour_cost\n\n    # Calculate the total cost of the carriage\n    total_cost = (5 * hour_after_first_payment) + (9 * hour_after_first_payment)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    starting_balance = 200\n    ending_balance = 420\n    starting_amount = 300\n    amount_withheld = starting_balance - ending_balance - starting_amount\n    result = amount_withheld\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of deviled egg halves needed\n    total_deviled_halves = 16 * 3\n\n    # Calculate the total number of eggs needed\n    total_eggs = total_deviled_halves / 2\n\n    # Calculate the total number of dozens of eggs needed\n    total_dozens = total_eggs / 12\n\n    # Display the total number of dozens of eggs needed\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    \n    total_pages = 15\n    written_pages = total_pages / 3\n    remaining_pages = total_pages - written_pages\n    result = remaining_pages\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pages in the book\n    total_pages = 200\n\n    # Define the number of days the assignment will last\n    days_last = 30\n\n    # Define the number of pages Mike plans to read per day\n    pages_per_day = 10\n\n    # Calculate the number of days before the deadline\n    days_before_dead = (total_pages - (pages_per_day * days_last)) / pages_per_day\n\n    # Display the number of days before the deadline\n    result = days_before_dead\n    return result"}
{"output": "def solution():\n    \n    plane_cost = 150000\n    rent_per_month = 5000\n    fuel_per_month = rent_per_month * 2\n    total_cost = plane_cost + (rent_per_month * 12) + (fuel_per_month * 12)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the time it took to cook rice\n    rice_time = 30\n\n    # Calculate the time it took to cook pork\n    pork_time = rice_time + 20\n\n    # Calculate the combined cooking time of pork and rice\n    combined_time = pork_time + rice_time\n\n    # Calculate the time it took to cook beans\n    beans_time = combined_time / 2\n\n    # Calculate the total cooking time\n    total_time = rice_time + pork_time + beans_time\n\n    # Display the total cooking time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    almonds_cost = 10\n    walnuts_cost = 15\n    mixture_almonds_cost = almonds_cost / 2\n    mixture_walnuts_cost = walnuts_cost / 3\n    cost_difference = mixture_almonds_cost - mixture_walnuts_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    legs = 70\n    heads = 20\n    total_animals = legs + heads\n    sheep = total_animals - legs\n    result = sheep\n    return result"}
{"output": "def solution():\n    \n    normal_cost_per_pound = 5\n    expensive_cost_per_pound = normal_cost_per_pound * 1.2\n    weekly_coffee_per_day = 1\n    donut_cost = 2\n    total_coffee_per_day = weekly_coffee_per_day + donut_cost\n    total_cost = (normal_cost_per_pound * total_coffee_per_day) + (expensive_cost_per_pound * total_coffee_per_day)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    CHIPS_PRICE = 2\n    CHICKEN_PRICE = 8\n    SODA_PRICE = 1\n\n    # Define the number of each item purchased\n    chips_num = 2\n    chicken_num = 1\n    soda_num = 1\n\n    # Calculate the total cost of the chips\n    chips_cost = chips_num * CHIPS_PRICE\n\n    # Calculate the total cost of the chicken\n    chicken_cost = chicken_num * CHICKEN_PRICE\n\n    # Calculate the total cost of the soda\n    soda_cost = soda_num * SODA_PRICE\n\n    # Calculate the total cost of the apple pie\n    pie_cost = 20 - chips_cost - chicken_cost - soda_cost\n\n    # Display the cost of the apple pie\n    result = pie_cost\n    return result"}
{"output": "def solution():\n    \n    total_newspapers = 600\n    district_a_newspapers = 198\n    district_c_newspapers = 209\n    district_b_newspapers = total_newspapers - district_a_newspapers - district_c_newspapers\n    result = district_b_newspapers\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the class meets per week and the duration of each meal\n    meals_per_week = 4\n    meal_duration = 2\n\n    # Define the number of weeks\n    weeks = 6\n\n    # Calculate the total duration of the class\n    total_duration = meals_per_week * meal_duration * weeks\n\n    # Calculate the number of recipes that can be made\n    recipes = total_duration // 1.5\n\n    # Display the number of recipes that can be made\n    result = recipes\n    return result"}
{"output": "def solution():\n    \n    total_teachers = 150\n    history_teachers = total_teachers * 0.6\n    math_teachers = total_teachers - history_teachers\n    hours_per_day = 6\n    total_hours = math_teachers * hours_per_day\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Aurelia has\n    aurelia_money = 120\n\n    # Calculate the amount of money Kassidy has\n    kassidy_money = aurelia_money * 3/4\n\n    # Calculate the amount of money Rayna has\n    rayna_money = kassidy_money + 60\n\n    # Calculate the total amount of money they have\n    total_money = aurelia_money + kassidy_money + rayna_money\n\n    # Calculate the amount of money each person will have if they share equally\n    each_person_money = total_money / 2\n\n    # Display the amount of money each person will have\n    result = each_person_money\n    return result"}
{"output": "def solution():\n    num_quarters = 4\n    quarter_length = 12\n    extended_length = 5\n\n    # Calculate the total length of all the quarters\n    total_quarters_length = num_quarters * quarter_length\n\n    # Calculate the total length of the entire game\n    total_game_length = total_quarters_length + extended_length\n    result = total_game_length\n    return result"}
{"output": "def solution():\n    \n    total_employees = 50\n    management_employees = total_employees * 0.2\n    overseeing_employees = total_employees * 0.3\n    result = overseeing_employees\n    return result"}
{"output": "def solution():\n    flour_per_muffin = 5\n    sugar_per_muffin = 3\n    salt_per_muffin = 0.25\n    num_muffins = 16\n\n    # Calculate the total number of tablespoons of flour needed\n    total_flour = flour_per_muffin * num_muffins\n\n    # Calculate the total number of tablespoons of sugar needed\n    total_sugar = sugar_per_muffin * num_muffins\n\n    # Calculate the total number of tablespoons of salt needed\n    total_salt = salt_per_muffin * num_muffins\n\n    # Calculate the total number of tablespoons of dry ingredients needed\n    total_dry_ingredients = total_flour + total_sugar + total_salt\n    result = total_dry_ingredients\n    return result"}
{"output": "def solution():\n    \n    robert_candy = 3\n    cindy_candy = 5\n    aaron_candy = 4\n    total_candy = robert_candy + cindy_candy + aaron_candy\n    num_people = 3 + 5 + 4\n    candy_per_person = total_candy / num_people\n    result = candy_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of candy\n    TYPE_A_PRICE = 0.5\n    TYPE_B_PRICE = 0.75\n\n    # Define the number of candies of each type purchased\n    type_a_candies = 7\n    type_b_candies = 10\n\n    # Calculate the total cost of the type A and type B\n    total_cost = (type_a_candies * TYPE_A_PRICE) + (type_b_candies * TYPE_B_PRICE)\n\n    # Calculate the amount of change Adam will receive\n    change = 15 - total_cost\n\n    # Display the amount of change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of good and bad days\n    good_days = 12\n    bad_days = 8\n\n    # Calculate the number of good and bad days\n    good_and_bad_days = good_days + bad_days\n\n    # Calculate the number of good and bad days\n    good_and_bad_days = good_days + bad_days\n\n    # Calculate the number of good and bad days\n    good_and_bad_days = good_and_bad_days - good_and_bad_days\n\n    # Calculate the number of good and bad days\n    good_and_bad_days = good_and_bad_days + good_and_bad_days\n\n    # Calculate the number of good and bad days\n    good_and_bad_days = good_and_bad_days - good_and_bad_days\n\n    # Calculate the total number of good and bad days\n    total_good_days = good_and_good_days + good_and_bad_days + good_and_bad_days + good_and_bad_days"}
{"output": "def solution():\n    \n    # Define the number of books Janey has\n    janey_books = 21\n\n    # Calculate the number of books Sally has\n    sally_books = (janey_books - 3) / 2\n\n    # Display the number of books Sally has\n    result = sally_books\n    return result"}
{"output": "def solution():\n    \n    # Define the growth rate of the bamboo in inches per day\n    GROWTH_RATE = 30\n\n    # Define the current height of the bamboo in inches\n    CURRENT_HEIGHT = 20 * 12\n\n    # Define the target height of the bamboo in inches\n    TARGET_HEIGHT = 600\n\n    # Calculate the number of days it will take to reach the target height\n    days = (TARGET_HEIGHT - CURRENT_HEIGHT) / GROWTH_RATE\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    starting_dogs = 4\n    additional_dogs = 8\n    dogs_left = starting_dogs + additional_dogs\n    dogs_gone = 3\n    total_toys = (dogs_left + dogs_gone) * 1\n    result = total_toys\n    return result"}
{"output": "def solution():\n    \n    total_investment = 1200\n    dylan_investment = total_investment * (2/5)\n    remaining_investment = total_investment - dylan_investment\n    frances_investment = remaining_investment * (2/3)\n    skyler_investment = remaining_investment - frances_investment\n    result = skyler_investment\n    return result"}
{"output": "def solution():\n    \n    carol_weeks = 5\n    jennifer_weeks = 5\n    carol_total_signatures = 20\n    jennifer_total_signatures = 44\n    total_weeks = 3\n    total_signatures = carol_total_signatures + jennifer_total_signatures + (total_weeks * carol_weeks) + (total_weeks * jennifer_weeks)\n    signatures_per_sister = total_signatures // total_weeks\n    result = signatures_per_sister\n    return result"}
{"output": "def solution():\n    \n    # Define Lorie's hourly rate\n    lorie_rate = 10\n\n    # Calculate Karen's hourly rate\n    karen_rate = lorie_rate * 2\n\n    # Calculate Karen's total earnings for two days\n    karen_earnings = karen_rate * 3 * 2\n\n    # Display Karen's total earnings\n    result = karen_earnings\n    return result"}
{"output": "def solution():\n    \n    potatoes = 96\n    browns_per_potatoes = 36 / 6\n    total_browns = browns_per_potatoes * potatoes\n    result = total_browns\n    return result"}
{"output": "def solution():\n    \n    max_load = 700\n    adult_weight = 80\n    num_adults = 8\n    total_weight = num_adults * adult_weight\n    excess_weight = max_load - total_weight\n    result = excess_weight\n    return result"}
{"output": "def solution():\n    \n    katarina_cookies = 68\n    max_cookies = katarina_cookies + 12\n    summer_cookies = max_cookies + 23\n    total_cookies = katarina_cookies + max_cookies + summer_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    final_design_length = 140\n    extended_dress_length = final_design_length * 1.5 + 20\n    original_dress_length = extended_dress_length / 1.0\n    result = original_dress_length\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to mow the lawn in \"turtle\" and \"rabbit\" modes\n    TURLE_TIME = 1\n    RABBIT_TIME = 40\n\n    # Calculate the time it takes to mow the lawn in half of the turtle and rabbit modes\n    half_turtle_time = TURLE_TIME / 2\n    half_rabbit_time = RABBIT_TIME / 2\n\n    # Calculate the total time it takes to mow the lawn\n    total_time = half_turtle_time + half_rabbit_time\n\n    # Display the total time in minutes\n    result = total_time\n    return result"}
{"output": "def solution():\n    total_time = 30  # John and Jack have 30 minutes to walk to school together\n    time_to_library = 6  # It takes them 6 minutes to get to the corner where the library is\n    time_to_fire_station = 13  # It takes them 13 minutes to get to the fire station\n\n    # Calculate the time remaining to get to school without being late\n    time_remaining = total_time - (time_to_library + time_to_fire_station)\n    result = time_remaining\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and amounts of each item\n    APPLE_PRICE = 4\n    BANANA_PRICE = 2\n    ORANGE_PRICE = 3\n    APPLE_AMOUNT = 1\n    BANANA_AMOUNT = 2\n    ORANGE_AMOUNT = 2\n\n    # Calculate the total cost of each item\n    apple_cost = APPLE_PRICE * APPLE_AMOUNT\n    banana_cost = BANANA_PRICE * BANANA_AMOUNT\n    orange_cost = ORANGE_PRICE * ORANGE_AMOUNT\n\n    # Calculate the total cost of all items\n    total_cost = apple_cost + banana_cost + orange_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    greta_cookies = 30\n    celinda_cookies = greta_cookies * 2\n    total_cookies = greta_cookies + celinda_cookies - 10\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Let x be the age of one triplet\n    # Then the age of one twin is x + 7\n    # The sum of their ages is 44\n    # So we have x + (x + 7) = 44\n    # Simplifying, we get 2x + 7 = 44\n    # Solving for x, we get x = 5\n\n    # Therefore, one twin is 5 years old\n    result = 5\n    return result"}
{"output": "def solution():\n    \n    math_homework = 20\n    reading_homework = 40\n    history_homework = 20\n    dinner_hours = 3\n    total_homework_time = math_homework + reading_homework + history_homework + dinner_hours\n    nap_time = total_homework_time\n    result = nap_time\n    return result"}
{"output": "def solution():\n    num_lollipops = 5\n    lollipop_price = 0.40\n\n    num_candies = 4\n    candy_price = 3.20\n\n    # Calculate the total cost of all lollipops\n    total_lollipop_cost = num_lollipops * lollipop_price\n\n    # Calculate the total cost of all candies\n    total_candy_cost = num_candies * candy_price\n\n    # Calculate the total cost of all lollipops and candies\n    total_cost = total_lollipop_cost + total_candy_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of coins saved per month by Rong\n    rong_coins_per_month = 20\n\n    # Calculate the number of coins saved per month by Neil\n    neil_coins_per_month = rong_coins_per_month * (2/5 + 1)\n\n    # Calculate the total number of coins saved per month by both Rong and Neil\n    total_coins_per_month = rong_coins_per_month + neil_coins_per_month\n\n    # Calculate the total number of coins saved in 10 years\n    total_coins_saved = total_coins_per_month * 10\n\n    # return the result\n    result = total_coins_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each vaccine\n    VACCINE_COST = 20\n\n    # Define the number of vaccines needed\n    vaccines_needed = 2\n\n    # Calculate the total cost of the vaccines\n    total_cost = vaccines_needed * VACCINE_COST\n\n    # Calculate the amount of the heartworm check\n    heartworm_check = total_cost * 0.6\n\n    # Calculate the amount of money John has left after the heartworm check\n    money_left = total_cost - heartworm_check - 125\n\n    # Display the amount of money John has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    num_bananas = 5\n    num_apples = 12\n    num_oranges = 7\n    apple_price = 0.5\n    banana_price = 2 * apple_price\n    orange_price = 3 * banana_price\n\n    # Calculate the total cost of all bananas\n    total_banana_cost = num_bananas * banana_price\n\n    # Calculate the total cost of all apples\n    total_apple_cost = num_apples * apple_price\n\n    # Calculate the total cost of all oranges\n    total_orange_cost = num_oranges * orange_price\n\n    # Calculate the total cost of all fruits\n    total_cost = total_banana_cost + total_apple_cost + total_orange_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total square footage of the comforter\n    red_squares = 14\n    blue_squares = red_squares + 4\n    green_squares = blue_squares + 6\n    white_squares = green_squares - 12\n    total_square_footage = (red_squares * 1) + (blue_squares * 1) + (white_squares * 1)\n    result = total_square_footage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of high chairs\n    high_chairs = 8\n\n    # Calculate the number of regular chairs\n    regular_chairs = high_chairs * 5\n\n    # Calculate the total number of chairs\n    total_chairs = high_chairs + regular_chairs\n\n    # Calculate the number of chairs left to get\n    chairs_left = 42 + 15 - total_chairs\n\n    # Display the number of chairs left to get\n    result = chairs_left\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of deer and the percentage of bucks\n    total_deer = 50\n    buck_percentage = 0.5\n\n    # Calculate the number of bucks and the number of 8-point bucks\n    bucks = total_deer * buck_percentage\n    points = bucks * 0.2\n\n    # Display the number of 8-point bucks\n    result = points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of points collected by Adam\n    adam_points = 50\n\n    # Calculate the number of points collected by Betty\n    betty_points = adam_points * 1.3\n\n    # Calculate the number of points collected by Marta\n    marta_points = betty_points * 3\n\n    # Calculate the total number of points collected\n    total_points = adam_points + betty_points + marta_points\n\n    # Calculate the number of points missing to go on the trip\n    missing_points = total_points - 400\n\n    # Display the number of missing points\n    result = missing_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of children, grandchildren, and babies\n    num_children = 3\n    num_grandchildren = 3\n    num_babies = 3\n\n    # Calculate the total number of babies\n    total_babies = num_children * num_grandchildren * num_babies\n\n    # Display the total number of babies\n    result = total_babies\n    return result"}
{"output": "def solution():\n    \n    total_paycheck = 2400\n    retirement_percent = 50\n    car_percent = 20\n    retirement_amount = total_paycheck * (retirement_percent / 100)\n    car_payment = total_paycheck * (car_percent / 100)\n    remaining_paycheck = total_paycheck - retirement_amount - car_payment\n    result = remaining_paycheck\n    return result"}
{"output": "def solution():\n    \n    total_pencils = 20\n    missing_pencils = 4\n    remaining_pencils = total_pencils - missing_pencils\n    pairs_of_pencils = remaining_pencils // 2\n    result = pairs_of_pencils\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes set off and the number of fireworks per box\n    BOXES_SET_OFF = 15\n    BOXES_PER_HOUSE = 20\n\n    # Calculate the total number of fireworks set off\n    total_fireworks_set_off = BOXES_SET_OFF * BOXES_PER_HOUSE * 0.4\n\n    # Define the number of boxes set off and the number of fireworks per box\n    BOXES_SET_BACKYARD = 3\n    BOXES_PER_HOUSE = 5\n\n    # Calculate the total number of fireworks set off in the backyard\n    total_fireworks_set_backyard = BOXES_SET_BACKYARD * BOXES_PER_HOUSE\n\n    # Calculate the total number of fireworks Hannah will see\n    total_fireworks = total_fireworks_set_off + total_fireworks_set_backyard\n\n    # Display the total number of fireworks\n    result = total_fireworks\n    return result"}
{"output": "def solution():\n    \n    num_people = 10\n    num_friends = 12 + 7\n    num_seats = num_people + num_friends\n    drinks_per_seat = 1\n    snacks_per_seat = 2\n    total_drinks = num_seats * drinks_per_seat\n    total_snacks = num_seats * snacks_per_seat\n    drinks_cost = total_drinks * 2\n    snacks_cost = total_snacks * 2\n    total_cost = drinks_cost + snacks_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    gissela_truck_capacity = 4000\n    gordy_truck_capacity = gissela_truck_capacity + 800\n    combined_truck_capacity = 11600\n    gary_truck_capacity = combined_truck_capacity - gissela_truck_capacity - gordy_truck_capacity\n    result = gary_truck_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the number of males and females\n    num_males = 8\n    num_females = 6\n\n    # Calculate the number of dumplings each male ate\n    male_dumplings = num_males * 1\n\n    # Calculate the number of dumplings each female ate\n    female_dumplings = num_females * 3\n\n    # Calculate the total number of dumplings\n    total_dumplings = (male_dumplings + female_dumplings) * 2\n\n    # Display the total number of dumplings\n    result = total_dumplings\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of Gerald's money to Julia's money\n    ratio = 3/2\n\n    # Calculate the total amount of money\n    total_money = 100\n\n    # Calculate the amount of money spent\n    money_spent = 10\n\n    # Calculate the amount of money left\n    money_left = total_money - money_spent\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    cat_speed = 15\n    turtle_speed = cat_speed / 5\n    time = 40\n    distance = turtle_speed * time\n    result = distance\n    return result"}
{"output": "def solution():\n    \n    goal = 6300\n    raised_first_3_hours = 2100\n    remaining_goal = goal - raised_first_3_hours\n    hours_needed = remaining_goal / raised_per_hour\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    total_water = 0.4 * 100\n    industrial_water = 0.8 * total_water\n    non_industrial_water = total_water - industrial_water\n    percent_non_industrial = (non_industrial_water / total_water) * 100\n    result = percent_non_industrial\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days in a week and the price per day\n    DAYS_PER_WEEK = 7\n    PRICE_PER_DAY = 12\n\n    # Calculate the total cost for 2 weeks\n    total_cost = PRICE_PER_DAY * DAYS_PER_WEEK * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    chocolate_quarts_per_hour = 100 / 2\n    vanilla_quarts_per_hour = 50 / 4\n    total_quarts_per_hour = chocolate_quarts_per_hour + vanilla_quarts_per_hour\n    total_quarts = total_quarts_per_hour * 48\n    result = total_quarts\n    return result"}
{"output": "def solution():\n    num_croissants = 5\n    croissant_price = 3.0\n\n    num_cinnamon_rolls = 4\n    cinnamon_roll_price = 2.5\n\n    num_mini_quiches = 3\n    mini_quich_price = 4.0\n\n    num_blueberry_muffins = 13\n    blueberry_muffin_price = 1.0\n\n    # Calculate the total cost of all croissants\n    total_croissant_cost = num_croissants * croissant_price\n\n    # Calculate the total cost of all cinnamon rolls\n    total_cinnamon_cost = num_cinnamon_rolls * cinnamon_roll_price\n\n    # Calculate the total cost of all mini quiches\n    total_mini_quich_cost = num_mini_quiches * mini_quich_price\n\n    # Calculate the total cost of all blueberry muffins\n    total_blue"}
{"output": "def solution():\n    \n    # Define the price of each ice cream scoop and the amount of money Erin has\n    ice_cream_price = 1.5\n    erin_money = 6.00\n\n    # Calculate the number of scoops of ice cream Erin should buy\n    ice_cream_scoops = erin_money / ice_cream_price\n\n    # Calculate the number of scoops of ice cream Erin should buy, accounting for the free scoops\n    num_free_scoops = ice_cream_scoops - 1\n\n    # Calculate the total number of scoops of ice cream Erin should buy\n    total_scoops = ice_cream_scoops + num_free_scoops\n\n    # return the result\n    result = total_scoops\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of candies\n    initial_candies = 100\n\n    # Calculate the number of candies eaten by Ginger in one day\n    ginger_candies_per_day = 4\n\n    # Calculate the number of candies eaten by Amy in one day\n    amy_candies_per_day = 3\n\n    # Calculate the total number of candies eaten by Ginger in two weeks\n    ginger_total_candies_eaten = ginger_candies_per_day * 7 * 2\n\n    # Calculate the total number of candies eaten by Amy in two weeks\n    amy_total_candies_eaten = amy_candies_per_day * 7 * 2\n\n    # Calculate the difference in candies eaten between Ginger and Amy\n    candy_difference = amy_total_candies_eaten - ginger_total_candies_eaten\n\n    # return the result\n    result = candy_difference"}
{"output": "def solution():\n    \n    # Define the number of square feet of the bathroom\n    square_feet = 36\n\n    # Calculate the number of mosaic tiles needed\n    mosaic_tiles = square_feet * 24 * (2/3)\n\n    # Display the total number of mosaic tiles needed\n    result = mosaic_tiles\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per pound of blueberries\n    COST_PER_POUND = 1.5\n\n    # Define the number of pounds of blueberries picked\n    pounds_picked = 30\n\n    # Calculate the cost of picking the blueberries\n    picking_cost = pounds_picked * COST_PER_POUND\n\n    # Calculate the cost of buying the blueberries\n    buying_cost = pounds_picked * 2.5\n\n    # Calculate the savings\n    savings = picking_cost - buying_cost\n\n    # Display the savings\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of computers and the original price per computer\n    num_computers = 500\n    original_price = 700\n\n    # Calculate the new price per computer\n    new_price = original_price * 1.1\n\n    # Calculate the total cost of buying the new computers at the new prices\n    total_cost = num_computers * new_price\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    egg_omelet = 6\n    cheese_oz = 2\n    egg_calories = 75\n    cheese_calories_per_ounce = 120\n    ham_calories_per_ounce = 40\n    total_cheese_calories = egg_omelet * cheese_oz * cheese_calories_per_ounce\n    total_ham_calories = egg_omelet * ham_oz * ham_calories_per_ounce\n    total_calories = total_cheese_calories + total_ham_calories\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    pencil_cost = 0.5\n    eraser_cost = 0.25\n    num_pencils = 6\n    num_erasers = 8\n    total_cost = (pencil_cost * num_pencils) + (eraser_cost * num_erasers)\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people who apply\n    total_people = 100\n\n    # Calculate the number of people who receive interviews\n    interviews = total_people * 0.3\n\n    # Calculate the number of people who receive a job offer\n    job_offer = interviews * 0.2\n\n    # Calculate the number of people who accept the position\n    position = job_offer / 3\n\n    # Display the number of people who accept the position\n    result = position\n    return result"}
{"output": "def solution():\n    total_sacks = 20  # Goldy bought 20 sacks of rice\n    cousin_sacks = 3  # Goldy gave 3 sacks to her cousin\n    brother_sacks = 4  # Goldy gave 4 sacks to her brother\n    kilograms_per_sack = 25  # There are 25 kilograms of rice per sack\n\n    # Calculate the total kilograms of rice Goldy gave to her cousin and brother\n    total_kilograms = (total_sacks - cousin_sacks - brother_sacks) * kilograms_per_sack\n    result = total_kilograms\n    return result"}
{"output": "def solution():\n    \n    coco_crunch_boxes = 3\n    fruit_loops_boxes = 5\n    cereal_boxes_last_week = 4\n    total_boxes_this_week = coco_crunch_boxes + fruit_loops_boxes\n    total_boxes_last_week = cereal_boxes_last_week\n    difference = total_boxes_this_week - total_boxes_last_week\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    right_foot_rate = 300\n    left_foot_rate = 250\n    total_time = 5\n    right_foot_time = total_time - 2\n    left_foot_time = total_time - 2\n    right_foot_taps = right_foot_rate * right_foot_time\n    left_foot_taps = left_foot_rate * left_foot_time\n    total_taps = right_foot_taps + left_foot_taps\n    result = total_taps\n    return result"}
{"output": "def solution():\n    \n    damage_goal = 450\n    unauthorized_maintenance = 120\n    asphalt_cost = 25 * 3\n    total_cost = damage_goal + unauthorized_maintenance + asphalt_cost\n    savings = total_cost - 450\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    normal_chairs = 170\n    babies = 23\n    normal_chairs_sent = 20\n    babies_sent = 13\n    total_chairs_sent = normal_chairs_sent + babies_sent\n    total_chairs_left = normal_chairs + babies - total_chairs_sent\n    result = total_chairs_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pizzas and slices per pizza\n    NUM_PIZZAS = 6\n    SLICES_PER_PIZZA = 12\n\n    # Calculate the total number of slices of pizza\n    total_slices = NUM_PIZZAS * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by Bryce and two friends\n    slices_eaten = (2/3) * (NUM_PIZZAS * SLICES_PER_PIZZA) + (2/3) * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by the remaining 2 friends\n    slices_remaining = (NUM_PIZZAS * SLICES_PER_PIZZA) - slices_eaten\n\n    # Display the number of slices remaining\n    result = slices_remaining\n    return result"}
{"output": "def solution():\n    \n    cat_sausages = 9\n    dog_sausages = cat_sausages * (2/3)\n    total_sausages = cat_sausages + dog_sausages\n    average_time = total_sausages / 2\n    result = average_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of one of Topher's shoes in inches\n    topher_shoe_length = 8 * 12 + 4\n\n    # Calculate the length of one of Bobby's shoes in inches\n    bobby_shoe_length = (topher_shoe_length - 10) / 9\n\n    # Display the length of one of Bobby's shoes in inches\n    result = bobby_shoe_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students' and teachers' cars\n    num_students = 64\n    num_teachers = 32\n\n    # Calculate the number of students' and teachers' windows\n    num_students_windows = num_students * 4\n    num_teachers_windows = num_teachers * 2\n\n    # Calculate the number of students' and teachers' windows that Hannah smashes\n    num_students_smashed = num_students // 4\n    num_teachers_smashed = num_teachers // 4\n\n    # Calculate the total number of windows that Hannah smashes\n    total_windows = (num_students_smashed * num_students_windows) + (num_teachers_smashed * num_teachers_windows)\n\n    # return the result\n    result = total_windows\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of spools\n    total_spools = 15 + 45 + 40 + 50\n\n    # Calculate the number of blue spools\n    blue_spools = 15 + 40\n\n    # Calculate the percentage of blue spools\n    blue_percentage = (blue_spools / total_spools) * 100\n\n    # Display the percentage of blue spools\n    result = blue_percentage\n    return result"}
{"output": "def solution():\n    \n    total_people = 5000\n    midday_voters = (2/5) * total_people\n    remaining_voters = total_people - midday_voters\n    16_voters = (2/3) * remaining_voters\n    not_voted = total_people - midday_voters - 16_voters\n    result = not_voted\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pieces of gum per pack and the number of days\n    GUM_PER_PACK = 15\n    DAYS = 30\n\n    # Calculate the total number of pieces of gum needed\n    total_gum = GUM_PER_PACK * DAYS\n\n    # Calculate the number of packs of gum needed\n    packs_needed = total_gum // GUM_PER_PACK\n    if total_gum % GUM_PER_PACK!= 0:\n        packs_needed += 1\n\n    # Display the number of packs needed\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of smores needed\n    total_smores = 9 * 2 + 6 * 1  # 9 kids want 2 smores apiece, 6 adults will eat 1 smore apiece\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_smores / 8  # each sleeve makes the base for 8 large smores\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_boxes / 3  # there are 3 sleeves in a box\n\n    result = total_boxes\n    return result"}
{"output": "def solution():\n    \n    dora_age = 15\n    father_age = 2 * dora_age + 8\n    mother_age = father_age - 4\n    total_age = dora_age + father_age + mother_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of money found\n    total_money = 20\n\n    # Define the number of siblings\n    num_siblings = 3\n\n    # Calculate the amount of money each sibling gets\n    sibling_money = total_money / (num_siblings + 1)\n\n    # Display the amount of money each sibling gets\n    result = sibling_money\n    return result"}
{"output": "def solution():\n    \n    math_weight = 2\n    science_weight = 2\n    french_weight = 4\n    english_weight = 3\n    history_weight = 2 * english_weight\n    total_weight = math_weight + science_weight + french_weight + english_weight + history_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    total_voters = 100\n    candidate_a_votes = total_voters * 0.2\n    candidate_b_votes = candidate_a_votes * 1.5\n    candidate_c_votes = total_voters - candidate_a_votes - candidate_b_votes\n    result = candidate_c_votes\n    return result"}
{"output": "def solution():\n    \n    boris_apples = 100\n    beck_apples = boris_apples - 23\n    beck_apples -= 10\n    difference = beck_apples - boris_apples\n    result = difference\n    return result"}
{"output": "def solution():\n    total_water = 32  # Peter wants to make 32 ounces of water\n    giant_cubes = 3  # Peter can make 3 giant cubes\n    medium_cubes = 7  # Peter can make 7 medium cubes\n    small_cubes = 8  # Peter can make 8 small cubes\n\n    # Calculate the total amount of water used by the giant cubes\n    giant_water_used = giant_cubes * 4\n\n    # Calculate the total amount of water used by the medium cubes\n    medium_water_used = medium_cubes * 2\n\n    # Calculate the total amount of water used by the small cubes\n    small_water_used = small_cubes * 0.5\n\n    # Calculate the total amount of water used\n    total_water_used = giant_water_used + medium_water_used + small_water_used\n\n    # Calculate the amount of water left\n    water_left = total_water - total_water_used\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books Clara has\n    clara_books = 20\n\n    # Calculate the number of books Steven has\n    steven_books = clara_books / 2\n\n    # Calculate the number of books Alice has\n    alice_books = steven_books + 6\n\n    # Calculate the difference in books between Clara and Alice\n    books_difference = clara_books - alice_books\n\n    # return the result\n    result = books_difference\n    return result"}
{"output": "def solution():\n    # Define the cost of a gallon jar\n    gallon_jar_cost = 5\n\n    # Calculate the cost of a half-gallon jar\n    half_gallon_jar_cost = gallon_jar_cost + 2\n\n    # Calculate the total cost of 10-gallon jars\n    total_gallon_jar_cost = 10 * gallon_jar_cost\n\n    # Calculate the total cost of 16 half-gallon jars\n    total_half_gallon_jar_cost = 16 * half_gallon_jar_cost\n\n    # Calculate the total cost of all jars\n    total_cost = total_gallon_jar_cost + total_half_gallon_jar_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students\n    total_students = 50\n\n    # Calculate the number of students who like to bake\n    bake_students = 10\n\n    # Calculate the number of students who like to play basketball\n    basketball_students = 5\n\n    # Calculate the number of students who like to play video games\n    video_game_students = total_students - bake_students - basketball_students\n\n    # Calculate the number of students who like to play music\n    music_students = 2 * basketball_students\n\n    # Calculate the number of students who like to play video games\n    video_game_students = video_game_students - music_students\n\n    # Display the number of students who like to play video games\n    result = video_game_students\n    return result"}
{"output": "def solution():\n    \n    initial_birds = 12\n    scared_birds = initial_birds / 3\n    remaining_birds = initial_birds - scared_birds + 20\n    result = remaining_birds\n    return result"}
{"output": "def solution():\n    \n    total_students = 80\n    students_per_class = total_students / 2\n    girl_percent = 40\n    girl_students = students_per_class * (girl_percent / 100)\n    boy_students = students_per_class - girl_students\n    result = boy_students\n    return result"}
{"output": "def solution():\n    \n    initial_slices = 2\n    added_slices = 3\n    current_slices = initial_slices + added_slices\n    eaten_slices = 2\n    stolen_slices = 5\n    remaining_slices = current_slices - eaten_slices + stolen_slices\n    result = remaining_slices\n    return result"}
{"output": "def solution():\n    \n    total_dogs = 8\n    total_cats = 5\n    total_birds = 3\n    total_horses = 12\n    total_animals = total_dogs + total_cats + total_birds + total_horses\n    days = 7\n    animals_per_day = total_animals / days\n    result = animals_per_day\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of buying 3 packs of old magic cards\n    packs_cost = 3 * 1800\n\n    # Calculate the total revenue from selling the old magic cards\n    revenue = packs_cost + 4000 + (30 * 50)\n\n    # Calculate the total profit\n    profit = revenue - packs_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the amusement parks\n    ADULT_PRICE = 26\n    CHILD_PRICE = 12\n    ADULT_PRICE = 14\n    CHILD_PRICE = 10\n\n    # Define the number of adults and children in the family\n    num_adults = 2\n    num_children = 2\n\n    # Calculate the total cost of the first amusement park\n    total_cost_first = (num_adults * ADULT_PRICE) + (num_children * CHILD_PRICE)\n\n    # Calculate the total cost of the second amusement park\n    total_cost_second = (num_adults * ADULT_PRICE) + (num_children * CHILD_PRICE)\n\n    # Calculate the difference in cost between the two amusement parks\n    cost_difference = total_cost_first - total_cost_second\n\n    # Display the cost difference\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of buying 500 tomatoes a day\n    cost_per_day = 500 * 0.5\n\n    # Calculate the total revenue from selling 500 tomatoes a day with the new vendor\n    revenue_per_day = 500 * 0.4\n\n    # Calculate the total savings per day\n    savings_per_day = revenue_per_day - cost_per_day\n\n    # Calculate the total savings per week\n    savings_per_week = savings_per_day * 7\n\n    result = savings_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the number of marbles Sean has\n    sean_marbles = 56\n\n    # Calculate the number of marbles Carl has\n    carl_marbles = sean_marbles * 4\n\n    # Calculate the number of marbles Cal has\n    cal_marbles = sean_marbles / 2\n\n    # Calculate the total number of marbles Carl and Cal have combined\n    total_marbles = carl_marbles + cal_marbles\n\n    # Display the total number of marbles\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of groups required\n    total_students = 50\n    total_groups = 6\n\n    # Calculate the number of students in each group\n    students_per_group = total_students / total_groups\n\n    # Calculate the number of additional groups required\n    additional_groups = 12 - students_per_group\n\n    # return the result\n    result = additional_groups\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weekdays and weekends\n    WEEKDAYS = 5\n    WEEKENDS = 2\n\n    # Calculate the total number of chairs rented during the weekdays\n    weekday_chairs = 60 * WEEKDAYS\n\n    # Calculate the total number of chairs rented during the weekends\n    weekend_chairs = 100 * WEEKENDS\n\n    # Calculate the total number of chairs rented in two 4-week months\n    total_chairs = weekday_chairs + weekend_chairs\n\n    # Display the total number of chairs rented\n    result = total_chairs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of bananas\n    initial_bananas = 48\n\n    # Calculate the number of bananas after the first day\n    first_day_bananas = initial_bananas / 2\n\n    # Calculate the number of bananas after the second day\n    second_day_bananas = first_day_bananas + 25 - 12\n\n    # Calculate the number of bananas after the third day\n    third_day_bananas = second_day_bananas + 6\n\n    # Display the total number of bananas\n    result = third_day_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roommates and the monthly electricity bill\n    num_roommates = 4\n    monthly_bill = 100\n\n    # Calculate the total electricity bill for one month\n    monthly_total = monthly_bill * 12\n\n    # Divide the total electricity bill equally among the roommates\n    yearly_total = monthly_total / num_roommates\n\n    # return the result\n    result = yearly_total\n    return result"}
{"output": "def solution():\n    \n    glasses_per_dozen = 12\n    plates_per_dozen = 12\n    glasses_received = 8 * glasses_per_dozen\n    plates_received = 4 * plates_per_dozen\n    glasses_broken = 10\n    plates_broken = 6\n    glasses_remaining = glasses_received - glasses_broken\n    plates_remaining = plates_received - plates_broken\n    total_glasses = glasses_remaining + glasses_remaining\n    total_plates = plates_remaining + plates_remaining\n    result = total_glasses + total_plates\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of small and large stickers\n    initial_small_stickers = 30\n    initial_large_stickers = 40\n\n    # Calculate the number of small and large stickers after the first trades\n    small_sticker_count = initial_small_stickers * 0.9\n    large_sticker_count = initial_large_stickers * 0.5\n\n    # Calculate the number of small and large stickers after the second trades\n    small_sticker_count = small_sticker_count - small_sticker_count\n    large_sticker_count = large_sticker_count - large_sticker_count\n\n    # Calculate the total number of buttons after the second trades\n    total_buttons = small_sticker_count + large_sticker_count + small_sticker_count + large_sticker_count\n\n    # return the result\n    result = total_buttons\n    return result"}
{"output": "def solution():\n    \n    monday_matches = 2\n    friday_matches = 1\n    saturday_matches = monday_matches * 2\n    total_matches = monday_matches + friday_matches + saturday_matches\n    result = total_matches\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people on the council\n    total_people = 33\n\n    # Calculate the number of votes in the old regulation\n    old_regulation_votes = total_people * 2\n\n    # Calculate the number of votes in the new regulation\n    new_regulation_votes = old_regulation_votes * 2\n\n    # Display the number of votes in the new regulation\n    result = new_regulation_votes\n    return result"}
{"output": "def solution():\n    \n    extra_small = 11\n    small_students = 2 * extra_small\n    medium_students = small_students - 4\n    large_students = medium_students / 2\n    extra_large = large_students + 6\n    total_students = extra_small + small_students + medium_students + large_students + extra_large\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the bag\n    original_price = 140\n\n    # Calculate the discount amount\n    discount = original_price * 0.05\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of songs in a playlist and the length of each song\n    SONGS_PER_PLAYLIST = 300\n    SONG_LENGTH = 10\n\n    # Calculate the total length of all the songs in the 20 playlists\n    total_length = SONGS_PER_PLAYLIST * SONG_LENGTH * 20\n\n    # Display the total length in hours\n    result = total_length\n    return result"}
{"output": "def solution():\n    # Calculate the number of people who think horse #2 will win\n    num_people_2 = 0.2 * 50\n\n    # Calculate the number of people who don't think horse #2 will win\n    num_people_2 = 50 - num_people_2\n\n    # Calculate the number of people who think horse #7 will win\n    num_people_7 = 0.6 * num_people_2\n\n    # Calculate the number of people who think horse #12 will win\n    num_people_12 = num_people_2 - num_people_7\n\n    result = num_people_12\n    return result"}
{"output": "def solution():\n    \n    # Define the fraction of puppies that are girls\n    GIRL_FRACTION = 1/3\n\n    # Calculate the total number of puppies\n    total_puppies = 6 / GIRL_FRACTION * 2\n\n    # Display the total number of puppies\n    result = total_puppies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Jayden had\n    initial_money = 70\n\n    # Calculate the amount of money Jayden's sister gave her\n    sister_money = 90 / 2\n\n    # Calculate the total amount of money Jayden has\n    total_money = initial_money + sister_money\n\n    # Calculate the amount of money Jayden still needs to buy the camera\n    remaining_money = total_money - 200\n\n    # Display the amount of money Jayden still needs to buy the camera\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    total_cases = 250\n    first_house_cases = total_cases / 3\n    second_house_cases = total_cases - first_house_cases\n    third_house_cases = second_house_cases * 2\n    result = third_house_cases\n    return result"}
{"output": "def solution():\n    \n    leila_cucumbers = 3\n    leila_cucumber_price = 2\n    jack_tomatoes = 5\n    jack_tomato_price = 1\n    chase_lettuce_price = 3\n    total_spent = (leila_cucumbers * leila_cucumber_price) + (jack_tomatoes * jack_tomato_price) + (chase_lettuce_price * 1)\n    result = total_spent\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bananas\n    bananas = 200\n\n    # Calculate the number of pears\n    pears = bananas * 1.45\n\n    # Calculate the total number of fruits\n    total_fruits = bananas + pears\n\n    # Display the total number of fruits\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the ball and the amount of money Marissa had\n    ball_cost = 20\n    marissa_money = 80\n\n    # Calculate the amount of money left after buying the ball\n    remaining_money = marissa_money - ball_cost\n\n    # Calculate the number of candy bars Marissa bought\n    candy_bars = remaining_money // 5\n\n    # Display the number of candy bars\n    result = candy_bars\n    return result"}
{"output": "def solution():\n    \n    oranges_per_liter = 5\n    price_per_kilogram = 3\n    liters = 4\n    total_oranges = liters * oranges_per_liter\n    total_cost = total_oranges * price_per_kilogram\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of books Ahmed read\n    ahmed_books = 300 / 2\n\n    # Calculate the total number of books read\n    total_books = ahmed_books + 300 + 150\n\n    # Display the total number of books read\n    result = total_books\n    return result"}
{"output": "def solution():\n    # Calculate the total earnings from Monday's classes\n    monday_earnings = 4 * 15 * 5\n\n    # Calculate the total earnings from Wednesday's classes\n    wednesday_earnings = 2 * 15 * 2\n\n    # Calculate the total earnings for both days\n    total_earnings = monday_earnings + wednesday_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of vanilla and fruity scents\n    vanilla_scents = 4\n    fruity_scents = 8\n\n    # Calculate the number of vanilla and fruity scents sold\n    vanilla_sold = vanilla_scents * 5\n    fruity_sold = fruity_scents * 2\n\n    # Calculate the difference in sales between the vanilla and fruity scents\n    sales_difference = vanilla_sold - fruity_sold\n\n    # return the result\n    result = sales_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each eggplant and the total amount to be made\n    EGGPLANT_PRICE = 3\n    TOTAL_AMOUNT = 135\n\n    # Calculate the total amount earned from selling the eggplants\n    eggplant_total = 20 * EGGPLANT_PRICE\n\n    # Calculate the remaining amount to be made from selling the ears of corn\n    corn_remaining = TOTAL_AMOUNT - eggplant_total\n\n    # Calculate the price of each ear of corn\n    corn_price = corn_remaining / 25\n\n    # Display the price of each ear of corn\n    result = corn_price\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hours Tatiana has\n    total_hours = 7 + 5\n\n    # Calculate the number of hours Tatiana spends playing soccer\n    soccer_hours = total_hours - 3 - (1/3 * 3)\n\n    # Calculate the percentage of Tatiana's weekend that she spends playing soccer\n    soccer_percentage = (soccer_hours / total_hours) * 100\n\n    # Display the percentage of Tatiana's weekend that she spends playing soccer\n    result = soccer_percentage\n    return result"}
{"output": "def solution():\n    \n    total_pencils = 50\n    brandon_pencils = total_pencils / 2\n    remaining_pencils = total_pencils - brandon_pencils\n    charlie_pencils = remaining_pencils * 3 / 5\n    kept_pencils = remaining_pencils - charlie_pencils\n    result = kept_pencils\n    return result"}
{"output": "def solution():\n    \n    total_distance = 150\n    speed = 75\n    distance_traveled = total_distance / speed\n    time_spent = 6\n    time_gained = distance_traveled / speed\n    result = time_gained\n    return result"}
{"output": "def solution():\n    \n    num_cars = 57\n    num_motorcycles = 73\n    wheels_per_car = 4\n    wheels_per_motorcycle = 2\n    total_wheels = (num_cars * wheels_per_car) + (num_motorcycles * wheels_per_motorcycle)\n    wheels_left = 650 - total_wheels\n    result = wheels_left\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the laptop\n    original_price = 1000\n\n    # Calculate the discount amount\n    discount = original_price * 0.2\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies and the cost of a normal movie\n    total_movies = 600\n    normal_movie_cost = 10\n\n    # Calculate the number of movies in the series\n    series_movies = total_movies / 3\n\n    # Calculate the cost of the series of movies\n    series_cost = series_movies * 6\n\n    # Calculate the number of remaining movies\n    remaining_movies = total_movies - series_movies\n\n    # Calculate the cost of the older movies\n    older_movie_cost = remaining_movies * 0.4 * 5\n\n    # Calculate the total cost of replacing the movies\n    total_cost = series_cost + older_movie_cost + normal_movie_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    peach_price_per_lb = 2\n    plum_price_per_lb = 1\n    apricot_price_per_lb = 3\n    peaches_picked = 6\n    plums_picked = 8\n    apricots_picked = 6\n    total_spent_on_peaches = peaches_picked * peach_price_per_lb\n    total_spent_on_plums = plums_picked * plum_price_per_lb\n    total_spent_on_apricots = apricots_picked * apricot_price_per_lb\n    total_spent_on_fruit = total_spent_on_peaches + total_spent_on_plums + total_spent_on_apricots\n    result = total_spent_on_fruit\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance travelled in 6 hours\n    distance_driven = 50 * 6\n\n    # Calculate the distance travelled in 6 hours\n    distance_hiked = (0.5 * 50) - 5\n\n    # Calculate the total distance travelled\n    total_distance = distance_driven + distance_hiked\n\n    # Display the total distance travelled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the total number of points earned by Ava and Emma in one level\n    total_points_eaten = 10 * 8  # Ava jumps on 8 more enemies\n    total_points_berries = 5 * 3  # Emma collects 3 more berries\n    total_points_eaten_and_berries = 10 * total_points_eaten + 5 * total_points_berries  # They receive 10 points for every enemy they jump on and 5 points for each berry they collect\n    total_points_eaten_and_berries_and_timer = 30 * (total_points_eaten + total_points_berries)  # They receive 30 points for every second left on the timer\n\n    # Calculate the difference in points between Ava and Emma\n    points_difference = total_points_eaten_and_berries - total_points_eaten_and_berries_and_timer\n    result = points_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of the pizzas and the cost of the two pizzas that cost 30 dollars\n    total_cost = 64\n    two_pizza_cost = 30\n\n    # Calculate the cost of the other two pizzas\n    other_pizza_cost = (total_cost - two_pizza_cost) / 2\n\n    # Display the cost of each of the other two pizzas\n    result = other_pizza_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days Chase and Rider ride their bikes\n    chase_days = 5\n    rider_days = 2\n\n    # Calculate the total number of times they ride their bikes during the first 5 days\n    chase_total = chase_days * 3\n\n    # Calculate the total number of times they ride their bikes during the next 2 days\n    rider_total = (chase_days + rider_days) * 2\n\n    # Calculate the total number of times they ride their bikes during the week\n    total_days = 7\n    total_riders = (chase_total + rider_total) * total_days\n\n    # return the result\n    result = total_riders\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of orange and white fish\n    initial_orange = 3\n    initial_white = 4\n\n    # Define the number of fish in the mixed tank\n    mixed_tank = 17\n\n    # Calculate the new number of orange fish\n    new_orange = initial_orange * 2\n\n    # Calculate the new number of white fish\n    new_white = initial_white + mixed_tank - new_orange\n\n    # Display the new number of white fish\n    result = new_white\n    return result"}
{"output": "def solution():\n    \n    fuel_per_gallon = 10\n    regular_price = 3\n    distance = 5\n    gallons_per_week = (distance * 4) / fuel_per_gallon\n    total_price = gallons_per_week * regular_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of twenties and quarters\n    num_twenties = 10\n    num_quarters = 140\n\n    # Calculate the number of quarters spent\n    num_quarters_spent = num_quarters * 0.75\n\n    # Calculate the total amount spent\n    total_spent = num_quarters_spent + (num_twenties * 0.2)\n\n    # Display the total amount spent\n    result = total_spent\n    return result"}
{"output": "def solution():\n    \n    tomatoes_per_plant = 22\n    eggplants_per_plant = 4\n    num_tomato_plants = 5\n    num_eggplant_plants = 8\n    total_tomatoes = num_tomato_plants * tomatoes_per_plant\n    total_eggplants = num_eggplant_plants * eggplants_per_plant\n    total_fruits = total_tomatoes + total_eggplants\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of TVs sold\n    total_tvs_sold = 40\n\n    # Calculate the number of smart TVs sold\n    smart_tvs_sold = total_tvs_sold / 4\n\n    # Calculate the number of analog TVs sold\n    analog_tvs_sold = total_tvs_sold / 8\n\n    # Calculate the number of OLED TVs sold\n    oled_tvs_sold = total_tvs_sold - smart_tvs_sold - analog_tvs_sold\n\n    # return the result\n    result = oled_tvs_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the trip\n    trip_cost = 300\n\n    # Calculate the amount of money John covers\n    covering_money = trip_cost / 2\n\n    # Calculate the total amount of money John has\n    total_money = 50 + covering_money\n\n    # Calculate the amount of money John is missing\n    missing_money = total_money - trip_cost\n\n    # return the result\n    result = missing_money\n    return result"}
{"output": "def solution():\n    \n    starting_temp = 45\n    colder_temp = 33\n    temp_increase_per_log = 5\n    total_temp_increase = tempder_temp - starting_temp\n    total_temp_increase_needed = total_temp_increase - temp_increase_per_log\n    logs_needed = total_temp_increase_needed / temp_increase_per_log\n    result = logs_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and groups\n    total_people = 90\n    num_groups = 9\n\n    # Calculate the number of people in each group\n    num_people_per_group = total_people / num_groups\n\n    # Calculate the number of seashells in each group\n    num_seashells_per_person = 2\n\n    # Calculate the number of seashells in each group\n    num_seashells_per_group = num_people_per_group * num_seashells_per_person\n\n    # Calculate the total number of seashells\n    total_seashells = num_seashells_per_group * num_groups\n\n    # Display the total number of seashells\n    result = total_seashells\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 172\n\n    # Subtract the number of people who got off at the first stop\n    first_stop_people = initial_people - 47\n\n    # Add the number of people who got on at the second stop\n    second_stop_people = first_stop_people + 13 - 38\n\n    # Display the total number of people on the train\n    result = second_stop_people\n    return result"}
{"output": "def solution():\n    \n    bottle_caps_per_day = 10\n    price_per_bottle_cap = 0.25\n    days_in_month = 30\n    total_bottle_caps = bottle_caps_per_day * days_in_month\n    total_money = total_bottle_caps * price_per_bottle_cap\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    regular_rate = 20\n    regular_hours = 8\n    extra_hours = 11 - regular_hours\n    extra_rate = regular_rate * 1.5\n    total_pay = regular_rate * regular_hours + extra_rate * extra_hours\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the number of female lions\n    female_lions = 12\n\n    # Calculate the number of male lions\n    male_lions = female_lions / 2\n\n    # Calculate the total number of lions\n    total_lions = female_lions + male_lions + 14\n\n    # Display the total number of lions\n    result = total_lions\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the jeans and the discount percentage\n    ORIGINAL_PRICE = 40\n    DISCOUNT_PERCENTAGE = 0.25\n\n    # Calculate the discounted price of the jeans\n    discounted_price = ORIGINAL_PRICE - (ORIGINAL_PRICE * DISCOUNT_PERCENTAGE)\n\n    # Calculate the amount of money Mike will have left over\n    money_left = discounted_price - 50\n\n    # Display the amount of money Mike will have left over\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    initial_employee = 200\n    new_employees_per_month = 20\n    salary_per_month = 4000\n    months = 3\n    total_employees = initial_employee + (new_employees_per_month * months)\n    total_salary = total_employees * salary_per_month\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \"\"\"The choir plans to sing \"Deck the Halls\" twice and \"Jingle Bells\" once. If \"Deck the Halls\" is 150 seconds long, and \"Jingle Bells\" is 240 seconds long. How long will they be caroling?\"\"\"\n    # Define the length of each type of caroling\n    desck_length = 150\n    jingle_bell_length = 240\n\n    # Calculate the length of each type of caroling\n    desck_carrie_length = desck_length * 2\n    jingle_bell_carrie_length = jingle_bell_length * 1\n\n    # Calculate the total length of caroling\n    total_length = desck_carrie_length + jingle_bell_carrie_length\n\n    # return the result\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    billy_rate = 10\n    billy_raise = 0.5\n    sally_rate = billy_rate + 0.5\n    sally_hours = 20\n    billy_earnings = billy_rate * sally_hours\n    sally_earnings = sally_rate * sally_hours\n    difference = billy_earnings - sally_earnings\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a loaf of bread and a bagel\n    loaf_cost = 2\n    bagel_cost = 1\n\n    # Calculate the total cost of 3 loaves of bread\n    total_loaf_cost = 3 * loaf_cost\n\n    # Calculate the total cost of 2 bagels\n    total_bagel_cost = 2 * bagel_cost\n\n    # Calculate the difference in cost between the two scenarios\n    cost_difference = total_loaf_cost - total_bagel_cost\n\n    # return the result\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of points scored by Pierson\n    pierson_points = 278\n\n    # Calculate the number of points scored by Nikita\n    nikita_points = (pierson_points / 2) + 11\n\n    # Calculate the total number of points scored\n    total_points = pierson_points + nikita_points\n\n    # return the result\n    result = total_points\n    return result"}
{"output": "def solution():\n    num_classes = 40\n    num_students_per_class = 25\n    num_teachers_per_class = 3\n    num_trees_per_child = 1\n    num_trees_per_teacher = 2\n\n    # Calculate the total number of students\n    total_students = num_classes * num_students_per_class\n\n    # Calculate the total number of teachers\n    total_teachers = num_classes * num_teachers_per_class\n\n    # Calculate the total number of trees\n    total_trees = (total_students * num_trees_per_child) + (total_teachers * num_trees_per_teacher)\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stuffed animals\n    puppies = 3\n    koalas = 5\n    zebras = 2\n    frogs = 4\n\n    # Calculate the total number of stuffed animals\n    total_animals = puppies + koalas + zebras + frogs\n\n    # Calculate the number of stuffed goats\n    goats = total_animals * 0.3\n\n    # Display the number of stuffed goats\n    result = goats\n    return result"}
{"output": "def solution():\n    \n    total_hours = 30\n    half_hours_per_day = 0.5\n    hours_per_week = 2\n    total_half_hours = half_hours_per_day * 7 * 2\n    total_hours_played = total_half_hours + total_hours_played\n    hours_left_to_play = total_hours - total_hours_played\n    result = hours_left_to_play\n    return result"}
{"output": "def solution():\n    \n    car1_speed = 60\n    car2_speed = 70\n    time = 2\n    car1_distance = car1_speed * time\n    car2_distance = car2_speed * time\n    total_distance = car1_distance + car2_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    diamond_cost = 600\n    gold_cost = 300\n    total_cost = diamond_cost + gold_cost\n    premium_percent = 30\n    premium_amount = total_cost * (premium_percent / 100)\n    total_paid = total_cost + premium_amount\n    result = total_paid\n    return result"}
{"output": "def solution():\n    \n    third_grade_rate = 340 / 500\n    fourth_grade_rate = 100 / 100\n    fifth_grade_rate = 2 * 400\n    total_pass_rate = third_grade_rate + fourth_grade_rate + fifth_grade_rate\n    result = total_pass_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the number of glass chips per square inch\n    CHIPS_PER_SQ_INCH = 12\n\n    # Define the number of bags of glass chips\n    num_bags = 2\n\n    # Calculate the total number of glass chips\n    total_chips = num_bags * CHIPS_PER_SQ_INCH\n\n    # Calculate the total square inches\n    total_square_inches = total_chips * CHIPS_PER_SQ_INCH\n\n    # Display the total square inches\n    result = total_square_inches\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of tea left in the party\n    tea_left = 10\n\n    # Define the amount of tea each student drank\n    student1_quarts = 1.5\n    student2_quarts = 2\n\n    # Define the number of students each student drank\n    num_students_1 = 4\n    num_students_2 = 16\n\n    # Calculate the total amount of tea each student drank\n    student1_gallons = student1_quarts * student1_gallons\n    student2_gallons = student2_quarts * student2_gallons\n\n    # Calculate the total amount of tea at the beginning of the party\n    total_gallons = tea_left + student1_gallons + student2_gallons\n\n    # Display the total amount of tea at the beginning of the party\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of butterscotch candies\n    initial_butterscotch_candies = 100\n\n    # Define the number of butterscotch candies sold and ordered\n    sold_butterscotch_candies = 150\n    ordered_butterscotch_candies = 100\n\n    # Calculate the total number of butterscotch candies sold\n    total_butterscotch_candies_sold = sold_butterscotch_candies + ordered_butterscotch_candies\n\n    # Calculate the number of butterscotch candies still needed to reach 100\n    remaining_butterscotch_candies = initial_butterscotch_candies - total_butterscotch_candies_sold\n\n    # return the result\n    result = remaining_butterscotch_candies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students on campus at the beginning of the year\n    initial_students = 10\n\n    # Calculate the number of students on campus at the end of May\n    end_of_May = initial_students * 2\n\n    # Calculate the number of additional students on campus at the end of May\n    additional_students = end_of_May - initial_students\n\n    # Display the number of additional students\n    result = additional_students\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per branch and the total earnings\n    COST_PER_BRANCH = 0.25\n    TOTAL_EARNED = 105\n\n    # Calculate the number of branches Felix climbed during the week\n    branches_climbed = TOTAL_EARNED / COST_PER_BRANCH\n\n    # Calculate the number of branches Felix climbed per day\n    branches_per_day = branches_climbed / 7\n\n    # Display the number of branches climbed per day\n    result = branches_per_day\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of petals picked\n    total_petals = (3 * 5) + (4 * 6) + (5 * 4) + (6 * 7)\n\n    # Calculate the number of remaining flowers\n    remaining_petals = total_petals - (3 * 5) - (4 * 6) - (5 * 4) - (6 * 7)\n\n    # Display the number of remaining flowers\n    result = remaining_petals\n    return result"}
{"output": "def solution():\n    \n    total_marshmallows = 35\n    john_marshmallows = 9\n    desean_marshmallows = 9\n    lost_marshmallows = 3\n    remaining_marshmallows = total_marshmallows - john_marshmallows - desean_marshmallows - lost_marshmallows\n    s_mores_per_kid = remaining_marshmallows // 2\n    result = s_mores_per_kid\n    return result"}
{"output": "def solution():\n    \n    jack_game_time = 0.25\n    jack_friends = 3\n    friend_game_time = jack_game_time / 2\n    friend_play_time = 1.5 * friend_game_time\n    total_play_time = 4 * 60 # convert hours to minutes\n    total_jack_play_time = jack_game_time * jack_friends\n    total_friend_play_time = friend_play_time * 2\n    total_play_time_in_minutes = total_play_time * 60\n    total_play_time_in_minutes = total_jack_play_time + total_friend_play_time + total_play_time_in_minutes\n    result = total_play_time_in_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of salt in the jar\n    salt_amount = 10\n\n    # Calculate the amount of citrus zest used\n    citrus_zest_amount = salt_amount\n\n    # Calculate the amount of sugar used\n    sugar_amount = citrus_zest_amount\n\n    # Calculate the amount of oil used\n    oil_amount = salt_amount * 2\n\n    # Calculate the total amount of oil used\n    total_oil_amount = (oil_amount + citrus_zest_amount + sugar_amount) * salt_amount\n\n    # Display the total amount of oil used\n    result = total_oil_amount\n    return result"}
{"output": "def solution():\n    num_goats = 3\n    goat_price = 500\n\n    num_cows = 2\n    cow_price = 1500\n\n    # Calculate the total cost of all goats\n    total_goat_cost = num_goats * goat_price\n\n    # Calculate the total cost of all cows\n    total_cow_cost = num_cows * cow_price\n\n    # Calculate the total cost of all animals\n    total_cost = total_goat_cost + total_cow_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_cupcakes = 63\n    chocolate_cupcakes = 8\n    toffee_cupcakes = 40\n    remaining_cupcakes = total_cupcakes - chocolate_cupcakes - toffee_cupcakes\n    result = remaining_cupcakes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Robert has\n    robert_cars = 20\n\n    # Calculate the number of cars Joe has\n    joe_cars = robert_cars * 2\n\n    # Calculate the number of cars Joe sells\n    sold_cars = joe_cars * 0.2\n\n    # Calculate the number of cars Joe gives away\n    given_away_cars = sold_cars * 2\n\n    # Calculate the number of cars Joe remains with\n    remaining_cars = joe_cars - sold_cars - given_away_cars\n\n    # Display the number of cars Joe remains with\n    result = remaining_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the total amount raised\n    num_students = 20\n    total_amount = 175000\n\n    # Calculate the amount raised from the organizations\n    organization_amount = 50000\n\n    # Calculate the amount raised from the students\n    student_amount = (total_amount - organization_amount) / num_students\n\n    # Display the amount raised per student\n    result = student_amount\n    return result"}
{"output": "def solution():\n    \n    first_day_hours = 8\n    second_day_hours = first_day_hours / 2\n    total_hours = first_day_hours + second_day_hours\n    total_minutes = total_hours * 60\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    starting_cars = 50\n    first_break_cars = 20\n    remaining_cars = starting_cars + first_break_cars\n    gone_cars = remaining_cars / 2\n    total_cars = remaining_cars + gone_cars\n    result = total_cars\n    return result"}
{"output": "def solution():\n    \n    cycles_per_day = 30\n    tasks_per_cycle = 5\n    pay_per_task = 1.20\n    days_per_week = 7\n    total_tasks = cycles_per_day * tasks_per_cycle * days_per_week\n    total_pay = total_tasks * pay_per_task\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    sasha_first_game = 14\n    julie_first_game = sasha_first_game - 4\n    sasha_second_game = julie_first_game - 6\n    total_points = sasha_first_game + julie_first_game + sasha_second_game\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    cat_food_packages = 8\n    dog_food_packages = 6\n    cat_food_tins_per_package = 11\n    dog_food_tins_per_package = 6\n    total_cat_food_tins = cat_food_packages * cat_food_tins_per_package\n    total_dog_food_tins = dog_food_packages * dog_food_tins_per_package\n    difference = total_cat_food_tins - total_dog_food_tins\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cards and the ratio of Becca's cards to Smendrick's cards\n    total_cards = 341\n    becca_to_smendrick_ratio = 12\n\n    # Calculate the sum of the ratios in order to find the value of one ratio\n    total_ratio = becca_to_smendrick_ratio + 1\n\n    # Calculate the value of one ratio\n    one_ratio = total_cards / total_ratio\n\n    # Calculate the number of cards that PJ has\n    pj_cards = one_ratio\n\n    # Calculate the number of cards that Smendrick has\n    smendrick_cards = pj_cards * 3\n\n    # Calculate the number of cards that Becca has\n    becca_cards = smendrick_cards + becca_to_smendrick_cards\n\n    # return the result\n    result = becca_cards\n    return result"}
{"output": "def solution():\n    \n    green_eggs = 5\n    blue_eggs = green_eggs * 2\n    pink_eggs = blue_eggs - 1\n    yellow_eggs = pink_eggs / 3\n    total_eggs = green_eggs + blue_eggs + pink_eggs + yellow_eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    book_weight = 4\n    book_cost = 32\n    distance = 20\n    pound_rate = 0.35\n    mile_rate = 0.08\n    total_cost = book_weight * pound_rate + distance * mile_rate\n    refund_amount = total_cost * 0.75\n    loss = total_cost - refund_amount\n    result = loss\n    return result"}
{"output": "def solution():\n    \n    starting_money = 40\n    father_money = 100\n    jeans_cost = 30 * 2\n    bag_cost = 20\n    total_spent = jeans_cost + bag_cost\n    money_left = starting_money + father_money - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of chocolate bars produced in a month\n    TOTAL_BARS = 50000\n\n    # Calculate the number of bars produced in the first week\n    first_week_bars = 8000\n\n    # Calculate the number of bars produced in the second week\n    second_week_bars = first_week_bars / 2\n\n    # Calculate the number of bars produced in the third week\n    third_week_bars = first_week_bars * 3\n\n    # Calculate the number of bars produced in the fourth week\n    fourth_week_bars = TOTAL_BARS - first_week_bars - second_week_bars - third_week_bars\n\n    # Display the number of bars produced in the fourth week\n    result = fourth_week_bars\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each TikTok video in minutes\n    VIDEO_LENGTH = 4\n\n    # Define the number of hours spent writing amateur songs each week\n    amateur_hours = 2\n\n    # Define the number of minutes spent filming each week\n    makeup_minutes = 15 * 6\n\n    # Calculate the total time spent on TikTok each week\n    total_time_per_week = amateur_hours + makeup_minutes\n\n    # Calculate the total time spent on TikTok each month\n    total_time_per_month = total_time_per_week * 4\n\n    # Display the total time spent on TikTok each month\n    result = total_time_per_month\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the mirrors\n    mirrors_cost = 4 * 129\n\n    # Calculate the total cost of the shelves\n    shelves_cost = 2 * 129\n\n    # Calculate the total cost of the chandeliers\n    chandeliers_cost = 2 * 129\n\n    # Calculate the total cost of the pictures\n    pictures_cost = 10 * 15\n\n    # Calculate the total cost of all items\n    total_cost = mirrors_cost + shelves_cost + chandeliers_cost + pictures_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount saved by Eva\n    eda_savings = 20\n\n    # Calculate the amount saved by Anthony\n    anthony_savings = eda_savings + 10\n\n    # Calculate the amount saved by Roy\n    roy_savings = anthony_savings * 1.4\n\n    # Display the amount saved by Roy\n    result = roy_savings\n    return result"}
{"output": "def solution():\n    \n    # Define Pompei's mountain height in inches\n    POMPEI_HEIGHT = 1\n\n    # Calculate Saskay's mountain height in inches\n    SASKAY_HEIGHT = POMPEI_HEIGHT * 12\n\n    # Calculate Kagiyami's mountain height in inches\n    KAGIYAMI_HEIGHT = SASKAY_HEIGHT * 4\n\n    # Calculate Naruto's mountain height in inches\n    NARuto_HEIGHT = KAGIYAMI_HEIGHT * 10\n\n    # Display Naruto's mountain height in feet\n    result = NARuto_HEIGHT\n    return result"}
{"output": "def solution():\n    \n    speed = 8\n    time_1 = 4\n    time_2 = 6\n    distance_1 = speed * time_1\n    distance_2 = speed * time_2\n    total_distance = distance_1 + distance_2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    num_kangaroos = 3\n    total_time = 18\n    num_turtles = 4\n    speed_ratio = 0.5\n\n    # Calculate the total speed of all kangaroos\n    total_kangaroo_speed = num_kangaroos * speed_ratio\n\n    # Calculate the time it takes to travel one kangaroo\n    time_per_kangaroo = total_time / total_kangaroo_speed\n\n    # Calculate the time it takes to travel one turtle\n    time_per_turtle = time_per_kangaroo / num_turtles\n\n    # Calculate the total time it takes to travel all turtles\n    total_time = total_time + time_per_turtle\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of clay dishes Kora made\n    kora_dishes = 20\n\n    # Calculate the number of clay dishes Rory made\n    rory_dishes = kora_dishes + 20\n\n    # Calculate the number of clay dishes Jada made\n    jada_dishes = rory_dishes * 2\n\n    # Calculate the total number of clay dishes made\n    total_dishes = kora_dishes + rory_dishes + jada_dishes\n\n    # Display the total number of clay dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the laptop and the discount\n    INITIAL_PRICE = 600\n    DISCOUNT = 200\n\n    # Calculate the final price of the laptop after the discount\n    final_price = INITIAL_PRICE - DISCOUNT\n\n    # Calculate the total amount of money Erika has\n    total_money = final_price + 150 + 50\n\n    # Calculate the amount of money Erika still needs to save\n    remaining_money = total_money - INITIAL_PRICE\n\n    # Display the amount of money Erika still needs to save\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    large_apple_slices = 5\n    small_apple_slices = 3\n    num_large_apples = 3\n    num_small_apples = 5\n    num_slices_eaten = 15\n    total_slices = (large_apple_slices * num_large_apples) + (small_apple_slices * num_small_apples)\n    slices_left = total_slices - num_slices_eaten\n    result = slices_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cows and liters of milk per cow\n    cows = 3\n    liters_per_cow = 5\n\n    # Calculate the total liters of milk needed per day\n    total_liters_per_day = 25\n\n    # Calculate the total liters of milk needed per day\n    total_liters_per_day = total_liters_per_day / liters_per_cow\n\n    # Calculate the number of additional cows needed\n    additional_cows = total_liters_per_day / liters_per_cow\n\n    # Round up to the nearest whole number of cows\n    additional_cows = int(additional_cows + 0.5)\n\n    # return the result\n    result = additional_cows\n    return result"}
{"output": "def solution():\n    \n    # Define the original length of the glue stick\n    ORIGINAL_LENGTH = 12\n\n    # Calculate the length of the glue stick used\n    used_length = ORIGINAL_LENGTH * (1/6) + ORIGINAL_LENGTH * (2/3) + ORIGINAL_LENGTH * (1/2)\n\n    # Calculate the length of the glue stick not used\n    not_used_length = ORIGINAL_LENGTH - used_length\n\n    # Display the total length of the glue sticks not used\n    result = not_used_length\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the car and phone\n    CAR_PRICE = 10000\n    PHONE_PRICE = 800\n\n    # Define the amount of money Gabriel has and his brother gave him\n    GABRIEL_MONEY = 5000\n    BROTHER_MONEY = 200\n\n    # Calculate the total cost of the car and phone\n    total_cost = CAR_PRICE + PHONE_PRICE\n\n    # Calculate the total amount of money Gabriel has\n    total_money = GABRIEL_MONEY + BROTHER_MONEY\n\n    # Calculate the amount of money Gabriel still needs\n    still_needed = total_money - total_cost\n\n    # Display the amount of money Gabriel still needs\n    result = still_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the hat and the amount of money given\n    hat_cost = 70\n    money_given = 20 * 4\n\n    # Calculate the total amount of change\n    change = money_given - hat_cost\n\n    # return the result\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    SQUIRT_GUN_PRICE = 2\n    WATER_BALLOON_PRICE = 3\n\n    # Define the number of each item purchased\n    squirt_guns = 6\n    water_balloons = 3\n\n    # Calculate the total cost of the squirt guns\n    squirt_gun_cost = squirt_guns * SQUIRT_GUN_PRICE\n\n    # Calculate the total cost of the water balloons\n    water_balloon_cost = water_balloons * WATER_BALLOON_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = squirt_gun_cost + water_balloon_cost\n\n    # Calculate the amount of money Craig has left\n    money_left = 2 * 20 - total_cost\n\n    # Display the amount of money Craig has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    jack_dishes = 60\n    jack_socks = jack_dishes / 2\n    peter_socks = jack_socks * 2\n    peter_dishes = jack_dishes / 2\n    total_socks = jack_socks + peter_socks\n    total_dishes = jack_dishes + peter_dishes\n    result = total_socks + total_dishes\n    return result"}
{"output": "def solution():\n    \n    total_students = 20\n    math_only = 5\n    english_only = 8\n    math_and_english = total_students - math_only - english_only\n    result = math_and_english\n    return result"}
{"output": "def solution():\n    total_show_time = 120  # Vicki's show is 2 hours, or 120 minutes\n    time_per_group = 2 + 6 + 2  # Vicki is allowing each group 2 minutes to get on stage, 6 minutes to perform, and 2 minutes to exit the stage\n    intermission_time = 10  # Vicki allows a 10-minute intermission\n\n    # Calculate the number of groups Vicki can perform in the concert\n    num_groups = (total_show_time // time_per_group) + (total_show_time // time_per_group) - intermission_time // time_per_group\n    result = num_groups\n    return result"}
{"output": "def solution():\n    \n    # Define the initial investment amount and the interest rate\n    initial_amount = 300\n    interest_rate = 0.75\n\n    # Calculate the interest earned over 3 years\n    interest_earned = initial_amount * interest_rate * 3\n\n    # Calculate the total amount after 3 years\n    total_amount = initial_amount + interest_earned\n\n    # Display the total amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the number of white and floral shirts\n    white_shirts = 40\n    floral_shirts = 50\n\n    # Calculate the number of white shirts with collars\n    white_collar_shirts = white_shirts / 2\n\n    # Calculate the number of floral shirts with buttons\n    floral_collar_shirts = floral_shirts - 20\n\n    # Calculate the difference between the number of floral shirts with no buttons and white shirts with collars\n    diff = floral_collar_shirts - white_collar_shirts\n\n    # return the result\n    result = diff\n    return result"}
{"output": "def solution():\n    \n    total_eggs = 900\n    eggs_per_tray = 30\n    total_trays = total_eggs / eggs_per_tray\n    price_per_tray = 2.5\n    total_earnings = total_trays * price_per_tray\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of goats in each farms\n    farms_goats_1 = 55\n    farms_goats_2 = 45\n\n    # Calculate the number of goats sold from each farms\n    goats_sold_1 = 10\n    goats_sold_2 = 2 * goats_sold_1\n\n    # Calculate the total number of goats sold\n    total_goats_sold = goats_sold_1 + goats_sold_2\n\n    # Calculate the total number of goats left\n    total_goats_left = farms_goats_1 + farms_goats_2 - total_goats_sold\n\n    # Display the total number of goats left\n    result = total_goats_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pairs of shoes James buys each month and the total cost\n    shoes_per_month = 2\n    total_cost = 40000\n\n    # Calculate the average cost per pair of shoes\n    cost_per_pair = total_cost / (shoes_per_month * 12)\n\n    # Display the average cost per pair of shoes\n    result = cost_per_pair\n    return result"}
{"output": "def solution():\n    num_green_baskets = 3\n    green_basket_price = 25\n\n    num_red_baskets = 3\n    red_basket_price = 18\n\n    # Calculate the total cost of all green baskets\n    total_green_cost = num_green_baskets * green_basket_price\n\n    # Calculate the total cost of all red baskets\n    total_red_cost = num_red_baskets * red_basket_price - 2\n\n    # Calculate the total cost of all baskets\n    total_cost = total_green_cost + total_red_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_rooms = 90\n    time_per_room = 20\n    half_rooms = total_rooms / 2\n    total_time_in_minutes = half_rooms * time_per_room\n    total_time_in_hours = total_time_in_minutes / 60\n    result = total_time_in_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of homes built in each year\n    homes_year1 = 12\n    homes_year2 = 3 * homes_year1\n    homes_year3 = 2 * homes_year2\n\n    # Calculate the total number of homes built over the next three years\n    total_homes = homes_year1 + homes_year2 + homes_year3\n\n    # Display the total number of homes built\n    result = total_homes\n    return result"}
{"output": "def solution():\n    \n    brother_age = 87 / 3\n    sister_age = brother_age + 2\n    mom_age = 3 * brother_age - 1\n    result = mom_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and glue sticks per student\n    num_students = 27\n    glue_sticks_per_student = 2\n\n    # Calculate the total number of glue sticks needed\n    total_glue_sticks = num_students * glue_sticks_per_student\n\n    # Calculate the number of packs needed\n    num_packs = total_glue_sticks // 8\n    if total_glue_sticks % 8!= 0:\n        num_packs += 1\n\n    # Display the number of packs needed\n    result = num_packs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial volume of water passing through the river\n    initial_volume = 4000\n\n    # Calculate the volume of water passing through the river after the first day\n    first_day_volume = initial_volume * 2\n\n    # Calculate the volume of water passing through the river after the second day\n    second_day_volume = first_day_volume * 2\n\n    # Calculate the volume of water passing through the river after the third day\n    third_day_volume = second_day_volume + 6000\n\n    # Calculate the total volume of water passing through the river at the point\n    total_volume = first_day_volume + second_day_volume + third_day_volume\n\n    # return the result\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people infected per day and the number of days\n    PEOPLE_PER_DAY = 10\n    DAYS = 3\n\n    # Calculate the total number of people infected after three days\n    total_people = PEOPLE_PER_DAY * DAYS\n\n    # Display the total number of people infected\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers and the tip amount\n    num_customers = 40\n    tip_amount = 20\n\n    # Calculate the total amount of tips\n    total_tip_amount = num_customers * tip_amount\n\n    # Calculate the amount of tips Julieta received\n    julieta_tip_amount = 0.9 * total_tip_amount\n\n    # Calculate the total amount of tips\n    total_amount = total_tip_amount + julieta_tip_amount\n\n    # Display the total amount of tips\n    result = total_amount\n    return result"}
{"output": "def solution():\n    num_oranges = 12\n    num_daughters = 3\n    oranges_per_daughter = 2\n    oranges_given_to_daughters = num_daughters * oranges_per_daughter\n    oranges_given_to_boy = 3\n\n    # Calculate the total number of oranges given away\n    total_oranges_given_away = oranges_given_to_daughters + oranges_given_to_boy\n\n    # Calculate the number of oranges remaining\n    oranges_remaining = num_oranges - total_oranges_given_away\n    result = oranges_remaining\n    return result"}
{"output": "def solution():\n    \n    claire_badges_per_month = 1\n    amber_badges_per_month = claire_badges_per_month * 2\n    wendy_badges_per_month = 3 * claire_badges_per_month\n    wendy_badges_per_year = wendy_badges_per_month * 12\n    difference = wendy_badges_per_year - amber_badges_per_year\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of banana bread loaves Paige can bake\n    banana_bread_loaves = 2\n\n    # Define the number of slices per banana bread loaf\n    slices_per_loaf = 8\n\n    # Calculate the total number of slices Paige baked\n    total_slices = banana_bread_loaves * slices_per_loaf\n\n    # Calculate the total amount raised\n    total_raised = total_slices * 0.5\n\n    # Display the total amount raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gold coins\n    gold_coins = 70\n\n    # Calculate the number of silver coins\n    silver_coins = gold_coins - 30\n\n    # Calculate the total number of coins\n    total_coins = gold_coins + silver_coins\n\n    # Display the total number of coins\n    result = total_coins\n    return result"}
{"output": "def solution():\n    \n    total_burritos = 600\n    students = 50\n    burritos_per_student = 10\n    burritos_eaten = 20\n    burritos_given = students * burritos_per_student\n    burritos_leftover = total_burritos - burritos_given - burritos_eaten\n    result = burritos_leftover\n    return result"}
{"output": "def solution():\n    \n    red_cars = 12\n    green_cars = red_cars - 2\n    blue_cars = 3 * green_cars\n    total_cars = 75\n    yellow_cars = total_cars - (red_cars + green_cars + blue_cars)\n    result = yellow_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of books\n    total_books = 85\n\n    # Calculate the number of books Anne has\n    anne_books = (total_books - 25 - 12) / 3\n\n    # Calculate the number of books Sofie has\n    sofie_books = anne_books + 25\n\n    # Calculate the number of books Fawn has\n    fawn_books = total_books - sofie_books - anne_books\n\n    # Display the number of books Fawn has\n    result = fawn_books\n    return result"}
{"output": "def solution():\n    \n    potatoes_weight = 5\n    sweet_potatoes_weight = potatoes_weight * 2\n    carrots_weight = sweet_potatoes_weight - 3\n    result = carrots_weight\n    return result"}
{"output": "def solution():\n    # Calculate the total number of small jello cups needed\n    total_jello_cups = 30 * 4\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_jello_cups / 10\n\n    # Calculate the total cost\n    total_cost = total_boxes * 1.25\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each phone\n    PHONE_COST = 700\n\n    # Define the number of phones purchased\n    num_phones = 5\n\n    # Calculate the total cost of the phones\n    total_cost = PHONE_COST * num_phones\n\n    # Calculate the amount of change the seller will give back\n    change = 4000 - total_cost\n\n    # Display the amount of change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    total_cost = 400\n    madeline_cost = total_cost * 0.6\n    keenan_cost = total_cost - madeline_cost\n    keenan_weekly_cost = keenan_cost / 4\n    result = keenan_weekly_cost\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 60\n    first_day_pieces = (2/5) * total_pieces\n    second_day_pieces = 10\n    remaining_pieces = total_pieces - first_day_pieces - second_day_pieces\n    third_day_pieces = (7/13) * remaining_pieces\n    eaten_pieces = first_day_pieces + second_day_pieces + third_day_pieces\n    result = eaten_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of bottle\n    SODA_PRICE = 21\n    WATER_PRICE = 8\n\n    # Define the number of bottles David wants to buy\n    soda_bottles = 3\n    water_bottles = 2\n\n    # Calculate the total cost of the soda\n    soda_cost = soda_bottles * SODA_PRICE\n\n    # Calculate the total cost of the water\n    water_cost = water_bottles * WATER_PRICE\n\n    # Calculate the total cost of all the bottles\n    total_cost = soda_cost + water_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each bolt\n    BOLT_PRICE = 0.03\n\n    # Define the number of bolts David wants to buy\n    bolts = 16\n\n    # Calculate the total cost of the bolts\n    total_cost = bolts * BOLT_PRICE\n\n    # Calculate the amount of money David has left\n    money_left = 12.48 - total_cost\n\n    # Display the amount of money David has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Calculate Ella's rate per dog walking\n    rate = 33 / 3\n\n    # Calculate Ella's earnings after 12 hours\n    earnings = rate * 12\n\n    # Display Ella's earnings\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    initial_marbles = 52\n    friend_marbles = 28\n    total_marbles = initial_marbles + friend_marbles\n    lost_marbles = total_marbles / 4\n    remaining_marbles = total_marbles - lost_marbles\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of multiple-choice, true/false, and long-answer questions\n    num_multiple_choice = 10\n    num_true_false = 20\n    num_long_answer = 5\n\n    # Calculate the total number of points from the multiple-choice questions\n    total_multiple_choice_points = num_multiple_choice * 0.8\n\n    # Calculate the total number of points from the true/false questions\n    total_true_false_points = num_true_false * 0.9\n\n    # Calculate the total number of points from the long-answer questions\n    total_long_answer_points = num_long_answer * 0.6\n\n    # Calculate the total number of points from all the questions\n    total_points = total_multiple_choice_points + total_true_false_points + total_long_answer_points\n\n    # return the result\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the cost to make a profit and the selling price per chicken\n    PROFIT = 2000\n    SELLING_PRICE = 50\n\n    # Calculate the number of chickens Isaias plans to sell\n    num_chickens = 300\n    num_sold = int(num_chickens * 3/5)\n\n    # Calculate the total cost to sell the chickens\n    total_cost = num_sold * SELLING_PRICE\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_glasses = 32\n    julie_glasses = 14\n    micah_glasses = total_glasses - julie_glasses\n    difference = julie_glasses - micah_glasses\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    hair_cost = 400\n    manicure_cost = hair_cost / 4\n    pedicure_cost = manicure_cost * 3 / 4\n    total_cost = hair_cost + manicure_cost + pedicure_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the rope and the cost per meter\n    rope_length = 20\n    cost_per_meter = 2\n\n    # Calculate the total cost of the rope\n    total_cost = rope_length * cost_per_meter\n\n    # Calculate the cost of the new rope\n    new_rope_cost = rope_length * 1.5\n\n    # Calculate the total cost of the new rope\n    total_new_cost = new_rope_cost\n\n    # Calculate the amount of money left over after buying the new rope\n    money_left_over = total_cost - total_new_cost\n\n    # return the result\n    result = money_left_over\n    return result"}
{"output": "def solution():\n    \n    # Define Melanie's age in 10 years\n    melanie_age_in_10_years = 18\n\n    # Calculate Melanie's present age\n    melanie_present_age = melanie_age_in_10_years - 10\n\n    # Calculate the number of years needed to reach thrice Melanie's present age\n    years_needed = melanie_present_age * 3 - 10\n\n    # Display the number of years needed\n    result = years_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    BACON_PRICE = 10\n    CHICKEN_PRICE = 2 * BACON_PRICE\n    STRAWBERRY_PRICE = 4\n    APPLE_PRICE = 0.5 * STRAWBERRY_PRICE\n\n    # Define the number of each item\n    bacon_packs = 5\n    chicken_packs = 6\n    strawberry_packs = 3\n    apple_packs = 7\n\n    # Calculate the total cost of each item\n    bacon_cost = bacon_packs * BACON_PRICE\n    chicken_cost = chicken_packs * CHICKEN_PRICE\n    strawberry_cost = strawberry_packs * STRAWBERRY_PRICE\n    apple_cost = apple_packs * APPLE_PRICE\n\n    # Calculate the total cost of all items\n    total_cost = bacon_cost + chicken_cost + strawberry_cost + apple_cost"}
{"output": "def solution():\n    \n    # Define the runtime of the final concert\n    runtime = 65\n\n    # Calculate the length of the concert\n    concert_length = runtime / 2\n\n    # Calculate the length of the 15-minute encore\n    encore_length = 15\n\n    # Calculate the length of the usual concert\n    usual_length = concert_length - encore_length\n\n    # Display the length of the usual concerts\n    result = usual_length\n    return result"}
{"output": "def solution():\n    \n    initial_toys = 200\n    alyssa_toys = 40\n    bonnie_toys = 80\n    nicky_toys = 30\n    total_toys = initial_toys + alyssa_toys + bonnie_toys + nicky_toys\n    result = total_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the number of chimichangas made on each day\n    tuesday_chimichangas = 125\n    wednesday_chimichangas = 125\n    friday_chimichangas = 2 * tuesday_chimichangas\n\n    # Calculate the total number of chimichangas made\n    total_chimichangas = tuesday_chimichangas + wednesday_chimichangas + friday_chimichangas\n\n    # Display the total number of chimichangas made\n    result = total_chimichangas\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of microphones\n    total_microphones = 50\n\n    # Calculate the number of microphones that won't fit in\n    no_space = total_microphones * 0.2\n\n    # Calculate the number of remaining microphones\n    remaining_microphones = total_microphones - no_space\n\n    # Calculate the number of pairs of microphones\n    num_pairs = remaining_microphones // 2\n\n    # Display the number of pairs of microphones\n    result = num_pairs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds nesting in the bushes\n    nesting_birds = 6\n\n    # Calculate the number of birds flying overhead\n    flying_birds = nesting_birds * (2/3)\n\n    # Define the number of birds feeding\n    feeding_birds = 3 * 8\n\n    # Calculate the total number of birds\n    total_birds = nesting_birds + flying_birds + feeding_birds\n\n    # Display the total number of birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 55\n    cookies_eaten = 5\n    cookies_left = total_cookies - cookies_eaten\n    jars = 5\n    cookies_per_jar = cookies_left / jars\n    result = cookies_per_jar\n    return result"}
{"output": "def solution():\n    \n    orchid_petals = 5\n    daisy_petals = 10\n    total_orchid_petals = orchid_petals * 5\n    total_daisy_petals = daisy_petals * 4\n    difference = total_daisy_petals - total_orchid_petals\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_plants = 100\n    indoor_plants = total_plants / 4\n    remaining_plants = total_plants - indoor_plants\n    outdoor_plants = (2/3) * remaining_plants\n    flowering_plants = remaining_plants - outdoor_plants\n    flowering_percent = (flowering_plants / total_plants) * 100\n    result = flowering_percent\n    return result"}
{"output": "def solution():\n    # Calculate the speed of a whirligig\n    speed_whirligig = 5 * 121  # a whirligig spins at five times the speed of a thingamabob\n    result = speed_whirlig\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the salad and yogurt\n    salad_price = 6\n    yogurt_price = salad_price / 2\n\n    # Calculate the total price of the carrots\n    carrots_price = 11 - salad_price - yogurt_price\n\n    # Calculate the price of one carrot\n    carrot_price = carrots_price / 2\n\n    # return the result\n    result = carrot_price\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 8\n    days_per_week = 5\n    hourly_rate_1 = 10\n    hourly_rate_2 = 2\n    hourly_pay_1 = hourly_rate_1 * hours_per_day * days_per_week\n    hourly_pay_2 = hourly_rate_2 * hours_per_day * days_per_week\n    total_pay = hourly_pay_1 + hourly_pay_2\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the amount earned from Joe's lawn\n    joe_earnings = 6\n\n    # Calculate the amount earned from Kamala's lawn\n    kamala_earnings = joe_earnings * 3\n\n    # Calculate the amount earned from Alba's lawn\n    alba_earnings = joe_earnings * 5\n\n    # Calculate the total amount earned\n    total_earnings = joe_earnings + kamala_earnings + alba_earnings\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    martin_weight = 55\n    carl_weight = martin_weight + 16\n    christian_weight = carl_weight + 8\n    harry_weight = christian_weight - 5\n    result = harry_weight\n    return result"}
{"output": "def solution():\n    \n    rental_frequency = 10\n    rental_hours_per_month = 3\n    rental_pay_per_hour = 25\n    total_rental_pay = rental_frequency * rental_hours_per_month * rental_pay_per_hour\n    car_payment = 500\n    profit = total_rental_pay - car_payment\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    martha_notebooks = 7 - 5\n    joseph_notebooks = 3 * martha_notebooks\n    difference = joseph_notebooks - martha_notebooks\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the distance rowed by Dijana\n    dijana_distance = 50\n\n    # Calculate the distance rowed by Anis\n    anis_distance = dijana_distance * (1 + 1/5)\n\n    # Calculate the total distance rowed by both of them\n    total_distance = dijana_distance + anis_distance\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cookies and the number of nephews\n    total_cookies = 100\n    num_nephews = 6\n\n    # Calculate the number of cookies each nephew will get\n    cookies_per_nephew = (total_cookies / num_nephews) - 4\n\n    # Display the number of cookies each nephew will get\n    result = cookies_per_nephew\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pages Daniel read\n    daniel_pages = 13\n\n    # Calculate the number of pages Denise read yesterday\n    denise_pages_yesterday = 10\n\n    # Calculate the number of pages Daniel read today\n    daniel_pages_today = daniel_pages_yesterday + 5\n\n    # Calculate the difference in pages read between Denise and Daniel\n    pages_difference = denise_pages_yesterday - daniel_pages_today\n\n    # Display the difference in pages read\n    result = pages_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and children\n    num_adults = 4\n    num_children = 8\n\n    # Calculate the total number of bowls eaten\n    total_bowls_eaten = num_adults + num_children\n\n    # Calculate the number of times each child will have a bowl of soup\n    num_times_per_child = total_bowls_eaten // num_children\n\n    # Display the number of times each child will have a bowl of soup\n    result = num_times_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each item\n    NOTEBOOK_PRICE = 1.5\n    BALLPEN_PRICE = 0.5\n\n    # Define the number of each item purchased\n    notebooks = 5\n    ballpen = 1\n\n    # Calculate the total cost of the notebooks\n    notebook_cost = notebooks * NOTEBOOK_PRICE\n\n    # Calculate the total cost of the ballpen\n    ballpen_cost = ballpen * BALLPEN_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = notebook_cost + ballpen_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    small_mask_yards = 2\n    large_mask_yards = 2.25\n    small_masks = 4\n    large_masks = 8\n    total_small_yards = small_masks * small_mask_yards\n    total_large_yards = large_masks * large_mask_yards\n    total_yards = total_small_yards + total_large_yards\n    result = total_yards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fast and furious movies\n    fast_movies = 9\n    furious_movies = 9\n\n    # Calculate the total number of movies\n    total_movies = fast_movies + furious_movies\n\n    # Calculate the total cost of seeing the movies\n    total_cost = 216\n\n    # Calculate the average price per ticket\n    average_price = (total_cost / total_movies) / 3\n\n    # return the result\n    result = average_price\n    return result"}
{"output": "def solution():\n    sleep_time = 10  # Harold sleeps for 10 hours a night\n    work_time = sleep_time - 2  # Harold works 2 hours less than his sleeps\n    dog_walking_time = 1  # Harold walks his dog for 1 hour each day\n\n    # Calculate the total amount of time Harold spent sleeping\n    total_sleeping_time = sleep_time + work_time + dog_walking_time\n\n    # Calculate the amount of free time Harold has left in his day\n    free_time = total_sleeping_time - total_sleeping_time\n    result = free_time\n    return result"}
{"output": "def solution():\n    \n    blue_shoe_boxes = 7\n    red_shoe_boxes = 9\n    blue_shoe_boxes_used = 3\n    red_shoe_boxes_used = (1/3) * red_shoe_boxes\n    remaining_blue_shoe_boxes = blue_shoe_boxes - blue_shoe_boxes_used\n    remaining_red_shoe_boxes = red_shoe_boxes - red_shoe_boxes_used\n    total_remaining_blue_shoe_boxes = remaining_blue_shoe_boxes + remaining_red_shoe_boxes\n    result = total_remaining_blue_shoe_boxes\n    return result"}
{"output": "def solution():\n    sarah_books = 9  # Sarah has 9 books\n    joseph_books = 2 * sarah_books  # Joseph had twice the number of Sarah's books\n    joseph_books -= 2  # Joseph lost 2 books\n    result = joseph_books\n    return result"}
{"output": "def solution():\n    \n    total_marbles = 30\n    jamie_marbles = total_marbles / 5\n    donald_marbles = 10\n    remaining_marbles = total_marbles - jamie_marbles - donald_marbles\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    duncan_age_now = 60\n    duncan_age_8_years_ago = duncan_age_now - 8\n    adam_age_4_years_ago = duncan_age_8_years_ago / 2\n    adam_age_now = adam_age_4_years_ago + 4\n    adam_age_in_8_years = adam_age_now + 8\n    result = adam_age_in_8_years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of acres in Farmer Brown's farm\n    brown_acres = 200\n\n    # Calculate the number of acres in Farmer Smith's farm\n    smith_acres = 2 * brown_acres + 100\n\n    # Calculate the total number of acres\n    total_acres = brown_acres + smith_acres\n\n    # Display the total number of acres\n    result = total_acres\n    return result"}
{"output": "def solution():\n    \n    # Define the pay rate per package\n    PAY_RATE = 0.20\n\n    # Calculate the number of packages completed per hour\n    packages_per_hour = 50 - 10\n\n    # Calculate the total earnings per hour\n    earnings_per_hour = packages_per_hour * PAY_RATE\n\n    # Calculate the total earnings for the day\n    total_earnings = earnings_per_hour * 8\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    normal_sudoku_time = 45\n    extreme_sudoku_time = 4 * normal_sudoku_time\n    total_time = normal_sudoku_time + extreme_sudoku_time\n    bottles_per_half_hour = 1 / 0.5\n    total_bottles = total_time * bottles_per_half_hour\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red and yellow balloons\n    red_balloons = 20\n    yellow_balloons = 3\n\n    # Calculate the total number of balloons\n    total_balloons = 58\n\n    # Calculate the number of red and yellow balloons\n    red_yellow_balloons = red_balloons + yellow_balloons\n\n    # Calculate the number of yellow balloons\n    yellow_yellow_balloons = total_balloons - red_yellow_balloons\n\n    # Display the number of yellow balloons\n    result = yellow_yellow_balloons\n    return result"}
{"output": "def solution():\n    \n    miles_per_day = 100\n    days_per_month = 30\n    total_miles = miles_per_day * days_per_month\n    tune_ups_per_mile = 1000\n    total_tune_ups = total_miles / tune_ups_per_mile\n    result = total_tune_ups\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours worked on Tuesday\n    tuesday_hours = 5\n\n    # Calculate the number of hours worked on Wednesday\n    wednesday_hours = tuesday_hours * 2\n\n    # Calculate the number of hours worked on Thursday\n    thursday_hours = wednesday_hours - 2\n\n    # Calculate the total number of hours worked\n    total_hours = tuesday_hours + wednesday_hours + thursday_hours\n\n    # return the result\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the cake and the number of balloons\n    CAKE_COST = 11\n    BALLOONS_PER_DOZEN = 12\n\n    # Calculate the total cost of the balloons\n    balloons_cost = BALLOONS_PER_DOZEN * 0.5\n\n    # Calculate the remaining amount of money after buying the balloons\n    remaining_money = CAKE_COST + balloons_cost\n\n    # Calculate the cost of the ice cream\n    ice_cream_cost = 2 * 7\n\n    # Calculate the total amount of money\n    total_money = remaining_money + ice_cream_cost\n\n    # Calculate the amount of money given to each person\n    julia_money = total_money / 3\n    nadine_money = total_money - julia_money\n\n    # Display the amount of money given to each person\n    result = julia_money + nadine_money"}
{"output": "def solution():\n    \n    total_fruit = 3 + 5 + 6\n    eaten_fruit = 2\n    remaining_fruit = total_fruit - eaten_fruit\n    result = remaining_fruit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students playing tennis\n    tennis_students = 6\n\n    # Define the number of students playing volleyball\n    volleyball_students = tennis_students * 2\n\n    # Define the number of students playing soccer\n    soccer_students = 16 + 22\n\n    # Calculate the total number of students\n    total_students = tennis_students + volleyball_students + soccer_students\n\n    # Display the total number of students\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    num_students = 30\n    cost_per_lollipop = 0.8\n    lollipops_per_student = 10\n    total_lollipops_sold = num_students * lollipops_per_student\n    total_cost = total_lollipops_sold * cost_per_lollipop\n    total_revenue = total_cost + total_lollipops_sold * 0.5\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cats\n    cats = 3\n\n    # Calculate the number of dogs\n    dogs = cats * 3\n\n    # Calculate the number of rabbits\n    rabbits = dogs - 2\n\n    # Calculate the number of fish\n    fish = rabbits * 3\n\n    # Calculate the number of gerbils\n    gerbils = fish / 3\n\n    # Calculate the total number of pets\n    total_pets = cats + dogs + rabbits + fish + gerbils\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    total_slices = 24\n    abby_slices_per_day = 2\n    josh_slices_per_day = 2 * abby_slices_per_day\n    total_days = total_slices / (abby_slices_per_day + josh_slices_per_day)\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of months in a year\n    MONTHS_IN_YEAR = 12\n\n    # Calculate the total number of shells collected in a year\n    shells_per_year = MONTHS_IN_YEAR // 12\n\n    # Calculate the total number of shells collected in 10 years\n    total_shells = shells_per_year * 10\n\n    # Display the total number of shells collected\n    result = total_shells\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cups and the number of rows\n    total_cups = 27\n    num_rows = 3\n\n    # Calculate the number of cups of cinnamon tea in each row\n    cups_per_row = total_cups / num_rows\n\n    # Calculate the number of cups of chamomile and mint tea in each row\n    cups_per_chamomile = cups_per_row / 2\n    cups_per_mint = cups_per_row - cups_per_chamomile\n\n    # Calculate the number of cups of mint tea in each row\n    cups_per_mint_row = cups_per_mint / num_rows\n\n    # Display the number of cups of mint tea in each row\n    result = cups_per_mint_row\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of berries the sloth can pick up in one trip\n    berries_per_trip = 24 / 4\n\n    # Calculate the minimum number of berries the sloth can pick up per trip\n    berries_per_trip_min = berries_per_trip / 3\n\n    # Display the minimum number of berries the sloth can pick up per trip\n    result = berries_per_trip_min\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of water in the pool\n    initial_water = 10000\n\n    # Calculate the amount of water used to water the vegetable garden\n    vegetable_water = initial_water / 2\n\n    # Calculate the remaining amount of water in the tank after 6 days\n    remaining_water = initial_water - vegetable_water * 6\n\n    # Display the remaining amount of water\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    FRIEND_TICKET_PRICE = 10\n    SATURDAY_TICKET_PRICE = 7\n    POPCORN_PRICE = 8\n    CANDY_PRICE = 2\n\n    # Define the number of each item Colby wants to get\n    friday_tickets = 5\n    saturday_tickets = 8\n\n    # Calculate the total cost of each item Colby wants to get\n    friday_cost = friday_tickets * FRIEND_TICKET_PRICE\n    saturday_cost = saturday_tickets * SATURDAY_TICKET_PRICE\n    popcorn_cost = popcorn_cost * POPCORN_PRICE\n    candy_cost = candy_cost * CANDY_PRICE\n\n    # Calculate the total cost of all the items Colby wants to get\n    total_cost = friday_cost + saturday_cost + popcorn_cost + candy_cost\n\n    #"}
{"output": "def solution():\n    num_cinnamon_rolls = 200\n    num_blueberry_muffins = 300\n    normal_cinnamon_calories = 600\n    normal_blueberry_calories = 450\n    pastry_calories = normal_cinnamon_calories / 3\n\n    # Calculate the total number of calories from all cinnamon rolls\n    total_cinnamon_calories = num_cinnamon_rolls * normal_cinnamon_calories\n\n    # Calculate the total number of calories from all blueberry muffins\n    total_blueberry_calories = num_blueberry_muffins * normal_blueberry_calories\n\n    # Calculate the total number of calories from all pastries\n    total_pastry_calories = total_cinnamon_calories + total_blueberry_calories\n    result = total_pastry_calories\n    return result"}
{"output": "def solution():\n    \n    # Define the number of junebugs removed on each day\n    monday_removed = 39\n    tuesday_wednesday_removed = 2 * monday_removed\n    thursday_removed = 48\n    friday_removed = 57\n\n    # Calculate the total number of junebugs removed\n    total_removed = monday_removed + tuesday_wednesday_removed + thursday_removed + friday_removed\n\n    # Calculate the average number of junebugs removed per day\n    average_removed = total_removed / 5\n\n    # Display the average number of junebugs removed per day\n    result = average_removed\n    return result"}
{"output": "def solution():\n    \n    bus_speed = 60\n    bus_time = 5\n    car_speed = 30\n    car_time = 8\n    bus_distance = bus_speed * bus_time\n    car_distance = car_speed * car_time\n    difference = bus_distance - car_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    num_blocks = 31\n    num_animals_per_bin = 8\n    num_multicolored_rings = 9\n    total_toys = 62\n\n    # Calculate the total number of stuffed animals\n    total_stuffed_animals = num_blocks * num_animals_per_bin\n\n    # Calculate the total number of multicolored rings\n    total_multicolored_rings = total_stuffed_animals * num_multicolored_rings\n\n    # Calculate the number of bouncy balls\n    num_bouncy_balls = total_toys - total_multicolored_rings\n    result = num_bouncy_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the combined age of Peter, Paul, and John\n    combined_age = 100\n\n    # Define the age difference between Peter and John\n    age_difference = 10\n\n    # Calculate John's age\n    john_age = combined_age - age_difference\n\n    # Calculate Paul's age\n    paul_age = john_age + age_difference\n\n    # Calculate Peter's age\n    peter_age = (paul_age + john_age) / 2\n\n    # Display Peter's age\n    result = peter_age\n    return result"}
{"output": "def solution():\n    \n    num_friends = 4\n    balloons_per_friend = 2\n    initial_balloons = 1\n    balloons_given_to_friends = num_friends * balloons_per_friend\n    balloons_given_to_mom = 3 * num_friends\n    total_balloons = initial_balloons + balloons_given_to_friends + balloons_given_to_mom\n    result = total_balloons\n    return result"}
{"output": "def solution():\n    \n    total_boxes = 10 * 5 + 10\n    boxes_per_table = 2\n    tables_owned = 15\n    boxes_needed = total_boxes - boxes_owned\n    tables_needed = boxes_needed / boxes_per_table\n    result = tables_needed\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total distance spatted by Zoey\n    zoey_distance = 40 * 10\n\n    # Calculate the total distance spatted by Sydney\n    sydney_distance = 35 * 12\n\n    # Calculate the total distance spatted\n    total_distance = zoey_distance + sydney_distance\n\n    # Calculate the average distance spatted\n    average_distance = total_distance / 2\n\n    # Display the average distance spatted\n    result = average_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours each person runs per day\n    HOURS_PER_DAY = 24\n    DAYS_PER_MONTH = 30\n\n    # Define the number of widgets each person makes per hour\n    widgets_per_hour = 60\n\n    # Define the number of widgets each person makes per hour\n    widgets_per_hour = 45\n\n    # Calculate the total number of widgets each person makes in a month\n    widgets_per_month = widgets_per_hour * HOURS_PER_DAY * DAYS_PER_MONTH\n\n    # Calculate the total number of widgets each person makes in a month\n    widgets_per_month = widgets_per_month * widgets_per_hour\n\n    # Calculate the total revenue from each person\n    revenue_per_person = widgets_per_month * 6\n\n    # Calculate the difference in revenue between the two people\n    revenue_difference = revenue_per_person - revenue_per_person\n\n    # Display the revenue difference\n    result = revenue_difference\n    return result"}
{"output": "def solution():\n    \n    pesos_12hr = 1000\n    pesos_24hr = 1600\n    pesos_added_12hr = 70 * 12\n    pesos_added_24hr = 70 * 24\n    total_pesos_added = pesos_added_12hr + pesos_added_24hr\n    total_hours = 12\n    savings = total_pesos_added - total_hours\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    goat_weight = 5\n    sheep_weight = (2 * goat_weight) - 3\n    total_goats = 15\n    total_sheep = 12\n    total_weight = (total_goats * goat_weight) + (total_sheep * sheep_weight)\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define John's hourly rate and hours worked\n    hourly_rate = 50\n    hours_worked = 6\n\n    # Calculate John's earnings\n    earnings = hourly_rate * hours_worked\n\n    # Calculate John's total expenses\n    expenses = 50\n\n    # Calculate John's deposit amount\n    deposit = 100\n\n    # Calculate the total cost of the pencils\n    pencil_cost = 5 * 10\n\n    # Calculate John's remaining expenses\n    remaining_expenses = earnings - expenses - deposit\n\n    # Calculate the number of 25 dollar pens John can buy\n    pens = remaining_expenses // 25\n\n    # Display the number of 25 dollar pens John can buy\n    result = pens\n    return result"}
{"output": "def solution():\n    \n    craig_words = 20\n    craig_letters_per_word = 15\n    craig_total_letters = craig_words * craig_letters_per_word\n    brother_total_letters = craig_total_letters + 50\n    total_letters = craig_total_letters + brother_total_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of Schools and the number of rows per School\n    SCHOOLS = 5\n    ROWS_PER_SCHOOL = 7\n\n    # Calculate the total number of rows\n    total_rows = SCHOOLS * ROWS_PER_SCHOOL\n\n    # Calculate the total number of children\n    total_children = total_rows * 8\n\n    # Display the total number of children\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    num_pupils = 29\n    num_coupons = 9\n    bottles_per_coupon = 100\n    bottles_per_student = 2\n    total_bottles = num_pupils * bottles_per_coupon\n    total_bottles -= num_coupons * bottles_per_student\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    repair_cost = 40\n    labor_cost = 2.25 * 35\n    parts_cost = 60\n    total_cost = repair_cost + labor_cost + parts_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each CD and the discount percentage\n    COST_PER_CD = 15\n    DISCOUNT_PERCENTAGE = 40\n\n    # Calculate the total cost of all the CDs\n    total_cost = 10 * COST_PER_CD\n\n    # Calculate the discounted price per CD\n    discounted_price = COST_PER_CD * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the total revenue from selling the CDs\n    total_revenue = (10 - 5) * 40\n\n    # Calculate the final cost\n    final_cost = total_cost - discounted_price\n\n    # Display the final cost\n    result = final_cost\n    return result"}
{"output": "def solution():\n    num_yams = 6\n    yam_price = 1.5\n\n    num_sweet_potatoes = 10\n    sweet_potato_price = 2\n\n    num_carrots = 4\n    carrot_price = 1.25\n\n    # Calculate the total revenue from selling all the yams\n    total_yam_revenue = num_yams * yam_price\n\n    # Calculate the total revenue from selling all the sweet potatoes\n    total_sweet_potato_revenue = num_sweet_potatoes * sweet_potato_price\n\n    # Calculate the total revenue from selling all the carrots\n    total_carrot_revenue = num_carrots * carrot_price\n\n    # Calculate the total revenue from selling all the root crops\n    total_revenue = total_yam_revenue + total_sweet_potato_revenue + total_carrot_revenue\n    result = total_revenue"}
{"output": "def solution():\n    \n    total_distance = 20\n    swimming_speed = 2\n    swimming_distance = total_distance * (swimming_speed / 100)\n    resting_time = swimming_time / 2\n    remaining_distance = total_distance - swimming_distance\n    resting_speed = swimming_speed / 2\n    remaining_time = remaining_distance / resting_speed\n    total_time = swimming_time + resting_time + remaining_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of loaves of bread Sam had last Friday\n    sam_last_friday = 7\n\n    # Calculate the number of loaves of bread the bakery has\n    bakery_last_friday = sam_last_friday * 7 - 40\n\n    # Display the number of loaves of bread the bakery has\n    result = bakery_last_friday\n    return result"}
{"output": "def solution():\n    \n    initial_stickers = 15\n    lost_stickers = 7\n    given_away_stickers = 5\n    total_stickers = initial_stickers - lost_stickers + given_away_stickers\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the commission rates for each type of copy\n    NY_COMMISSION_RATE = 0.1\n    WAL_COMMISSION_RATE = 0.08\n\n    # Define the number of copies of each type\n    ny_copies = 6\n    wal_copies = 10\n\n    # Calculate the commission earned for each type of copy\n    ny_earnings = ny_copies * NY_COMMISSION_RATE\n    wal_earnings = wal_copies * WAL_COMMISSION_RATE\n\n    # Calculate the commission earned for each type of copy\n    ny_total_earnings = ny_earnings * NY_COMMISSION_RATE\n    wal_total_earnings = wal_earnings * WAL_COMMISSION_RATE\n\n    # Calculate the total commission earned\n    total_earnings = ny_earnings + wal_total_earnings\n\n    # Display the total commission earned\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define Deanna's age\n    deanna_age = 26\n\n    # Calculate Marcus's age\n    marcus_age = deanna_age - 5\n\n    # Calculate Leo's age\n    leo_age = marcus_age * 2\n\n    # Display Leo's age\n    result = leo_age\n    return result"}
{"output": "def solution():\n    \n    total_points = 45\n    bahati_points = (total_points - 20 - 10) / 3\n    result = bahati_points\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the book in inches\n    length = 1.5\n\n    # Calculate the number of pages printed on each side of the paper\n    pages_per_side = length / 2\n\n    # Calculate the total number of pages printed\n    total_pages = pages_per_side * 2\n\n    # return the result\n    result = total_pages\n    return result"}
{"output": "def solution():\n    \n    # Define the staple rate in reports per minute\n    REPAPLE_RATE = 30 / 15\n\n    # Calculate the total staple time in minutes\n    staple_time = 8 * 60 + 11 * 60\n\n    # Calculate the total number of reports staple\n    total_reports = staple_time * REPAPLE_RATE\n\n    # Display the total number of reports staple\n    result = total_reports\n    return result"}
{"output": "def solution():\n    \n    p_sleep = 10\n    a_sleep = 6\n    from_sleep = (2 * 60) + 5\n    to_bathroom_sleep = (2 * 60) + 5\n    total_sleep = p_sleep + a_sleep + from_sleep + to_bathroom_sleep\n    result = total_sleep\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of measuring spoons to cups\n    SPOONS_TO_CUP_RATIO = 2/3\n\n    # Define the number of measuring cups Jonathan has\n    cups = 2 * 12\n\n    # Calculate the number of measuring spoons Jonathan has\n    spoons = SPOONS_TO_CUP_RATIO * cups\n\n    # Subtract the number of gifted measuring spoons\n    remaining_spoons = spoons - 6\n\n    # Display the number of remaining measuring spoons\n    result = remaining_spoons\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of the hospital and the fraction that was occupied\n    capacity = 1000\n    occupancy_fraction = 1/5\n\n    # Calculate the number of occupied beds after 2 weeks\n    occupied_beds = capacity * occupancy_fraction * 14\n\n    # Calculate the number of unoccupied beds after 2 weeks\n    unoccupied_beds = occupied_beds * 2\n\n    # Display the total number of unoccupied beds\n    result = unoccupied_beds\n    return result"}
{"output": "def solution():\n    \n    total_emails = 16\n    work_emails = 7\n    remaining_emails = total_emails - work_emails\n    family_emails = (2/3) * remaining_emails\n    boyfriend_emails = (1/3) * remaining_emails\n    result = boyfriend_emails\n    return result"}
{"output": "def solution():\n    \n    # Define Aliya's age\n    aliya_age = 3\n\n    # Calculate Shawna's age\n    shawna_age = aliya_age * 3\n\n    # Calculate Shawna's father's age\n    father_age = shawna_age * 5\n\n    # Display Shawna's father's age\n    result = father_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people in the concert\n    initial_people = 48\n\n    # Calculate the number of people who were overstated\n    overstated_people = initial_people * 0.2\n\n    # Calculate the actual number of people who attended the concert\n    actual_people = initial_people - overstated_people\n\n    # return the result\n    result = actual_people\n    return result"}
{"output": "def solution():\n    \n    jason_balls = 2\n    jeffrey_balls = jason_balls / 2\n    jordan_balls = jason_balls * 2\n    total_balls = jason_balls + jeffrey_balls + jordan_balls\n    result = total_balls\n    return result"}
{"output": "def solution():\n    \n    first_day_holes = 10\n    second_day_holes = 15\n    third_day_holes = 8\n    total_holes = first_day_holes + second_day_holes + third_day_holes\n    fourth_day_holes = total_holes * 4\n    result = fourth_day_holes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of corn chips each person got\n    amora_corn_chips = 70\n    lainey_corn_chips = 70\n    collins_corn_chips = (amora_corn_chips + lainey_corn_chips) / 2\n\n    # Calculate the total number of corn chips\n    total_corn_chips = amora_corn_chips + lainey_corn_chips + collins_corn_chips\n\n    # Display the total number of corn chips\n    result = total_corn_chips\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of supplies and the percentage increase\n    total_cost = 400\n    percentage_increase = 50\n\n    # Calculate the cost of one ticket\n    ticket_cost = total_cost / (1 + percentage_increase/100)\n\n    # Calculate the total cost of all three tickets\n    total_cost_all_tickets = ticket_cost * 3\n\n    # return the result\n    result = total_cost_all_tickets\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pokemon caught\n    total_pokemon = 339\n\n    # Define the number of pokemon caught by Alex\n    alex_pokemon = (total_pokemon + 5) / 3\n\n    # Define the number of pokemon caught by Stan\n    stan_pokemon = (alex_pokemon + 13) / 4\n\n    # Display the number of pokemon caught by Stan\n    result = stan_pokemon\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each episode and the total number of episodes\n    EPISODE_LENGTH = 20\n    TOTAL_EPISODES = EPISODE_LENGTH / 2\n\n    # Calculate the total length of the show\n    total_length = TOTAL_EPISODES * EPISODE_LENGTH\n\n    # Display the total length of the show\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance travelled in the first leg of the journey\n    distance_leg1 = 30 * 10\n\n    # Calculate the distance travelled in the second leg of the journey\n    distance_leg2 = 18 * 2\n\n    # Calculate the distance travelled in the third leg of the journey\n    distance_leg3 = 22 * 5\n\n    # Calculate the total distance travelled\n    total_distance = distance_leg1 + distance_leg2 + distance_leg3\n\n    # Display the total distance travelled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of brownies in a dozen\n    BROWNIES_PER_DOZEN = 12\n\n    # Calculate the total number of brownies before the party\n    total_brownies = 1 * BROWNIES_PER_DOZEN + 0.5 * BROWNIES_PER_DOZEN + 4 * BROWNIES_PER_DOZEN\n\n    # Calculate the number of brownies eaten during the party\n    brownies_eaten = 1.5 * BROWNIES_PER_DOZEN\n\n    # Calculate the number of brownies left over\n    brownies_left = total_brownies - brownies_eaten\n\n    # Display the number of brownies left over\n    result = brownies_left\n    return result"}
{"output": "def solution():\n    \n    nani_age = 8\n    brother_age = 2 * nani_age\n    sister_age = nani_age * 0.75\n    total_age = nani_age + brother_age + sister_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    total_racquets = 12\n    gut_racquets = 3\n    poly_racquets = 5\n    hybrid_racquets = 4\n    gut_stringing_time = 15\n    poly_stringing_time = 22\n    hybrid_stringing_time = 18\n    total_stringing_time = (gut_racquets * gut_stringing_time) + (poly_racquets * poly_stringing_time) + (hybrid_racquets * hybrid_stringing_time)\n    result = total_stringing_time\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the phone\n    PHONE_PRICE = 600\n\n    # Calculate the price of the first 2 kids\n    first_2_kids_price = PHONE_PRICE / 2\n\n    # Calculate the price of the remaining phones\n    remaining_phones_price = PHONE_PRICE / 2\n\n    # Calculate the total price\n    total_price = first_2_kids_price + remaining_phones_price\n\n    # Display the total price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of players in Carlton's team\n    carlton_players = 13\n\n    # Calculate the number of players in Zeke's team\n    zeke_players = carlton_players + 7\n\n    # Calculate the total number of players in both teams\n    total_players = carlton_players + zeke_players\n\n    # Display the total number of players\n    result = total_players\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the fence\n    length = 15\n    width = 10\n\n    # Calculate the perimeter of the fence\n    perimeter = 2 * (length + width)\n\n    # Calculate the total number of wooden slats needed\n    total_slats = perimeter * 2\n\n    # return the result\n    result = total_slats\n    return result"}
{"output": "def solution():\n    total_boxes = 12  # Mrs. Harrington bought 12 boxes of oranges\n    boxes_given = 2 + 2  # Mrs. Harrington gave 2 boxes of oranges to her mom and her sister\n    total_oranges = total_boxes * 20  # Each box contains 20 oranges\n    oranges_kept = total_oranges / 4  # Mrs. Harrington kept 1/4 of the oranges\n    oranges_sold = total_oranges - oranges_kept  # Mrs. Harrington sold the remaining oranges\n\n    result = oranges_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the number of states in the USA\n    usa_states = 24\n\n    # Calculate the number of states in india\n    india_states = (usa_states / 2) + 4\n\n    # Calculate the total number of states\n    total_states = usa_states + india_states\n\n    # Display the total number of states\n    result = total_states\n    return result"}
{"output": "def solution():\n    \n    dictionary_cost = 18\n    dinosaur_book_cost = 13\n    childrens_cookbook_cost = 8\n    total_cost = dictionary_cost + dinosaur_book_cost + childrens_cookbook_cost\n    saved_money = 14\n    hourly_rate = 5\n    remaining_money = total_cost - saved_money\n    hours_needed = remaining_money / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cherries\n    total_cherries = 60\n\n    # Calculate the number of cherries Robert has\n    richard_cherries = 30 + 10\n\n    # Calculate the number of cherries Jerry has\n    jerry_cherries = total_cherries - richard_cherries\n\n    # Calculate the difference between the number of cherries Robert and Jerry have\n    difference = richard_cherries - jerry_cherries\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of gingerbread and apple pie\n    gingerbread_price = 6\n    apple_pie_price = 15\n\n    # Calculate the prices of gingerbread and apple pie on Saturday\n    saturday_gingerbread_price = 10\n    saturday_apple_pie_price = saturday_apple_pie_price - 4\n\n    # Calculate the prices of gingerbread and apple pie on Sunday\n    sunday_gingerbread_price = saturday_gingerbread_price + 5\n    sunday_apple_pie_price = 15\n\n    # Calculate the total earnings for two days\n    total_earnings = (saturday_gingerbread_price * saturday_gingerbread_price) + (sunday_gingerbread_price * sunday_gingerbread_price) + (sunday_apple_pie_price * sunday_apple_pie_price)"}
{"output": "def solution():\n    \n    # Define the size of each bottle of sunscreen\n    BOTTLE_SIZE = 8\n\n    # Define the number of hours Pamela will be outside each day\n    hours_per_day = 4\n\n    # Define the number of days Pamela will be outside\n    days = 8\n\n    # Calculate the total number of bottles Pamela will need to pack\n    total_bottles = (hours_per_day * days) / BOTTLE_SIZE\n\n    # Display the total number of bottles Pamela will need to pack\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the blue car\n    blue_car_price = 100\n\n    # Calculate the price of the red car\n    red_car_price = blue_car_price * 0.6\n\n    # Calculate the total price of both cars\n    total_price = blue_car_price + red_car_price\n\n    # return the result\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define Emil's current age and his age when he turns 24\n    emil_age = 19\n    emil_future_age = emil_age + 24\n\n    # Calculate the dad's age when Emil turns 24\n    dad_age = emil_future_age / 2\n\n    # Calculate the brother's age when Emil turns 24\n    brother_age = emil_future_age / 2\n\n    # Calculate the sum of dad and brother's ages\n    sum_of_ages = dad_age + brother_age\n\n    # Display the sum of dad and brother's ages\n    result = sum_of_ages\n    return result"}
{"output": "def solution():\n    \n    mother_beads = 20\n    sister_beads = mother_beads + 10\n    friend_beads = mother_beads * 2\n    total_beads = mother_beads + sister_beads + friend_beads\n    result = total_beads\n    return result"}
{"output": "def solution():\n    \n    thursday_catch = 3\n    friday_catch = 4 * thursday_catch\n    saturday_catch = friday_catch / 2\n    total_catch = thursday_catch + friday_catch + saturday_catch\n    servings = total_catch / 3\n    result = servings\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the percentage of football players\n    total_students = 30\n    football_percentage = 0.2\n\n    # Calculate the number of football players\n    football_players = total_students * football_percentage\n\n    # Calculate the number of remaining students\n    remaining_students = total_students - football_players\n\n    # Calculate the number of cheerleaders and part of band\n    cheerleaders = remaining_students * 0.25\n\n    # Calculate the number of students leaving early\n    students_leftover = remaining_students - cheerleaders\n\n    # Calculate the total number of students leaving early\n    total_students_leftover = students_leftover * 3\n\n    # return the result\n    result = total_students_leftover\n    return result"}
{"output": "def solution():\n    \n    sophie_size = 5\n    charlie_size = sophie_size * 5\n    total_size = sophie_size + charlie_size\n    average_size = total_size / 2\n    result = average_size\n    return result"}
{"output": "def solution():\n    \n    bed_length = 111\n    flowering_width = 12\n    flowering_length = bed_length - (bed_length / flowering_width)\n    flowering_plants = flowering_length / 1.5\n    total_flowering_plants = flowering_plants + 17\n    flowering_plant_cost = 6\n    total_cost = total_flowering_plants * flowering_plant_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pretzels eaten by Edgar per day\n    edgar_daily_pretzels = 18\n\n    # Calculate the number of pretzels eaten by Edgar's brother per day\n    brother_daily_pretzels = edgar_daily_pretzels / 2\n\n    # Calculate the number of pretzels eaten by Edgar's brother per week\n    brother_weekly_pretzels = brother_daily_pretzels * 7\n\n    # Display the number of pretzels eaten by Edgar's brother per week\n    result = brother_weekly_pretzels\n    return result"}
{"output": "def solution():\n    \n    num_baskets = 5\n    petunias_per_basket = 3\n    sweet_potato_vines_per_basket = 2\n    petunias_cost = 3\n    sweet_potato_vines_cost = 2.5\n    total_petunias_cost = num_baskets * petunias_per_basket * petunias_cost\n    total_sweet_potato_vines_cost = num_baskets * sweet_potato_vines_per_basket * sweet_potato_vines_cost\n    total_cost = total_petunias_cost + total_sweet_potato_vines_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each type of flower\n    ROSE_WEIGHT = 1\n    CARNATION_WEIGHT = 1.5\n    SUNFLOWER_WEIGHT = 3\n\n    # Define the number of each type of flower planted\n    sunflower_count = 4\n    carnation_count = 10\n\n    # Calculate the total weight of the flowers\n    total_weight = sunflower_count * SUNFLOWER_WEIGHT + carnation_count * CARNATION_WEIGHT\n\n    # Calculate the number of roses they can plant\n    rose_count = int(30 / ROSE_WEIGHT)\n\n    # Display the number of roses they can plant\n    result = rose_count\n    return result"}
{"output": "def solution():\n    \n    # Define Jessica's monthly salary and the percentage of her salary she sets towards fancy shoes\n    monthly_salary = 2000\n    shoe_percentage = 0.25\n\n    # Calculate the number of shoes she can buy in a month\n    shoes_per_month = monthly_salary * shoe_percentage\n\n    # Calculate the total cost of shoes she can buy in a year\n    shoes_per_year = shoes_per_month * 12\n\n    # Display the total number of shoes she can buy in a year\n    result = shoes_per_year\n    return result"}
{"output": "def solution():\n    \n    peel_rate = 6\n    saute_rate = 30\n    time_to_peel = 10\n    time_to_saute = 10\n    total_shrimp = 90\n    time_to_peel = time_to_peel / peel_rate\n    time_to_saute = time_to_saute / saute_rate\n    total_time = time_to_peel + time_to_saute\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the starting and final temperatures\n    starting_temp = 2 * 3 + 3 * 4\n    final_temp = 2 * 2 - 2\n\n    # Calculate the difference between the final and starting temperatures\n    difference = final_temp - starting_temp\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the age of Bill's dad when he saw the comet\n    dad_age = 30\n\n    # Calculate the age of Bill's father when he saw the comet\n    father_age = dad_age / 3\n\n    # Calculate the age of Bill when he saw the comet in the first time\n    first_time_age = dad_age + 75 - father_age\n\n    # Display the age of Bill when he saw the comet in the first time\n    result = first_time_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of months in a year\n    MONTHS_IN_YEAR = 12\n\n    # Calculate the number of checks written to electric bills\n    electric_bills = MONTHS_IN_YEAR * 1\n\n    # Calculate the number of checks written to gas bills\n    gas_bills = MONTHS_IN_YEAR * 2\n\n    # Calculate the number of checks written to church\n    church_checks = MONTHS_IN_YEAR * 2\n\n    # Calculate the number of checks written to pest and lawn services\n    pest_lawn_checks = MONTHS_IN_YEAR * 1\n\n    # Calculate the total number of checks written per year\n    total_checks = electric_bills + gas_bills + church_checks + pest_lawn_checks\n\n    # Display the total number of checks written per year\n    result = total_checks\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of flights the airport flies each day\n    total_flights = 2 * 1\n\n    # Calculate the number of flights the first plane goes to Greece\n    greece_flights = total_flights * 0.75\n\n    # Calculate the number of flights the second plane goes to Poland\n    poland_flights = greece_flights / 2\n\n    # Calculate the number of flights the first plane goes to France\n    france_flights = (total_flights - greece_flights - poland_flights) / 2\n\n    # return the result\n    result = france_flights\n    return result"}
{"output": "def solution():\n    \n    tobias_time = 20\n    chikote_time = tobias_time * 2\n    combined_time = tobias_time + chikote_time\n    combined_time_in_minutes = combined_time * 60\n    result = combined_time_in_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial savings amount\n    INITIAL_SAVINGS = 30\n\n    # Define the amount of money Adam's mother gave him\n    mother_money = 6\n\n    # Define the amount of money Adam's father gave him\n    father_money = mother_money * 2\n\n    # Calculate the total amount of money Adam has to contribute\n    total_money = INITIAL_SAVINGS + mother_money + father_money\n\n    # Display the total amount of money Adam has to contribute\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define Akbar's age\n    akbar_age = 3\n\n    # Define Alessandro's age\n    alessandro_age = 4\n\n    # Calculate the average age of the group\n    avg_age = (akbar_age + alessandro_age) / 4\n\n    # Calculate Helene's age\n    helene_age = avg_age * 2\n\n    # Calculate the total age of the children\n    total_age = 20\n\n    # Calculate Wilfred's age\n    wilfred_age = total_age - (akbar_age + alessandro_age + helene_age)\n\n    # Display Wilfred's age\n    result = wilfred_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount collected\n    initial_amount = 500 + 1500\n\n    # Calculate the amount donated by the lawyer\n    lawyer_donation = 3 * (initial_amount - initial_amount)\n\n    # Calculate the total amount donated\n    total_donation = lawyer_donation + 200\n\n    # Display the total amount donated\n    result = total_donation\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and cookies per guest\n    guests = 100\n    cookies_per_guest = 15\n\n    # Calculate the total number of cookies\n    total_cookies = guests * cookies_per_guest\n\n    # Calculate the number of cookies to be given to the church next door\n    cookies_to_next_door = total_cookies / 2\n\n    # Calculate the number of people in the church next door\n    people_in_next_door = cookies_to_next_door / 15\n\n    # Display the number of people in the church next door\n    result = people_in_next_door\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and kids\n    num_adults = 6\n    num_kids = 4\n\n    # Calculate the total number of watermelons\n    total_watermelons = num_adults * num_kids\n\n    # Calculate the number of slices each adult gets\n    slices_per_adult = total_watermelons / num_adults\n\n    # Calculate the percentage of watermelons each adult gets\n    percentage_per_adult = (slices_per_adult / total_watermelons) * 100\n\n    # Display the percentage of watermelons each adult gets\n    result = percentage_per_adult\n    return result"}
{"output": "def solution():\n    \n    total_time = 9 * 20 + 10 * 30\n    remaining_time = total_time - 9 * 20\n    result = remaining_time\n    return result"}
{"output": "def solution():\n    \n    batter_time = 20\n    bake_time = 30\n    cool_time = 2 * 60 + 10\n    total_time = batter_time + bake_time + cool_time\n    latest_time = (5 * 60) - total_time\n    result = latest_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of chocolate bars sold by each person\n    lisa_bars = 3.5 * 2\n    peter_bars = 4.5 * 2\n\n    # Calculate the total number of chocolate bars sold\n    total_bars = lisa_bars + peter_bars\n\n    # Calculate the number of chocolate bars in a box\n    bars_per_box = 64 / total_bars\n\n    # Display the number of chocolate bars in a box\n    result = bars_per_box\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per session to rent the studio and per student per session\n    rent_cost = 25\n    student_cost = 1.5\n\n    # Define the number of students in the studio\n    num_students = 10\n\n    # Calculate the total earnings from renting the studio\n    total_earnings = (rent_cost * num_students * 3) + (student_cost * num_students * 3)\n\n    # Calculate the expected earnings of the dance studio in a month\n    expected_earnings = total_earnings * 4\n\n    # return the result\n    result = expected_earnings\n    return result"}
{"output": "def solution():\n    \n    peter_boxes = 4\n    martha_boxes = 7\n    total_bars = 64 + 56\n    bars_per_box_peter = total_bars / peter_boxes\n    bars_per_box_martha = total_bars / martha_boxes\n    bars_more_per_box = bars_per_box_peter - bars_per_box_martha\n    result = bars_more_per_box\n    return result"}
{"output": "def solution():\n    total_population = 50  # The total population of porcupines in the park is 50\n    female_population = (3/5) * total_population  # The number of female porcupines is 3/5 of the total population\n    babies_per_month = 4  # Each female porcupine gives birth to 4 babies every month\n    months_per_year = 12  # There are 12 months in a year\n\n    # Calculate the total number of babies in the park after a year\n    total_babies = female_population * babies_per_month * months_per_year\n\n    # Calculate the total number of porcupines in the park after a year\n    total_porcupines = total_population + total_babies\n    result = total_porcupines\n    return result"}
{"output": "def solution():\n    \n    pool_width = 14\n    pool_length = 25\n    pool_depth = 4\n    pool_volume = pool_width * pool_length * pool_depth\n    water_needed = pool_volume * 5.9\n    cost_per_gallon = 0.10\n    total_cost = water_needed * cost_per_gallon\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red sticks\n    red_sticks = 9\n\n    # Calculate the number of blue sticks\n    blue_sticks = red_sticks + 5\n\n    # Calculate the number of yellow sticks\n    yellow_sticks = blue_sticks - 3\n\n    # Calculate the total number of sticks\n    total_sticks = red_sticks + blue_sticks + yellow_sticks\n\n    # Display the total number of sticks\n    result = total_sticks\n    return result"}
{"output": "def solution():\n    \n    matteo_speed = 55\n    matteo_time = 4\n    shandy_speed = 45\n    shandy_time = 10\n    matteo_distance = matteo_speed * matteo_time\n    shandy_distance = shandy_speed * shandy_time\n    difference = shandy_distance - matteo_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_students = 3000\n    over_16_students = total_students / 2\n    over_16_male_students = over_16_students / 4\n    under_16_students = total_students - over_16_students - over_16_male_students\n    under_16_male_students = under_16_students / 2\n    under_16_male_students = under_16_students / 2\n    total_male_students = over_16_male_students + under_16_male_students\n    result = total_male_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of laps Bethany can run\n    bethany_laps = 10\n\n    # Calculate the number of laps Trey can run\n    trey_laps = bethany_laps + 4\n\n    # Calculate the number of laps Shaelyn can run\n    shaelyn_laps = trey_laps / 2\n\n    # Calculate the number of laps Quinn can run\n    quinn_laps = shaelyn_laps - 2\n\n    # Calculate the difference in the number of laps Bethany and Quinn can run\n    diff_laps = bethany_laps - quinn_laps\n\n    # return the result\n    result = diff_laps\n    return result"}
{"output": "def solution():\n    \n    # Define the initial capacity of the tank\n    capacity = 18000\n\n    # Calculate the amount of water pumped on the first day\n    wanda_water = capacity * (1/4)\n\n    # Calculate the amount of water pumped on the second day\n    wanda_water_2 = wanda_water * (2/3)\n\n    # Calculate the amount of water pumped on the third day\n    ms_b_water = 0\n\n    # Calculate the total amount of water pumped\n    total_water = wanda_water + wanda_water_2 + ms_b_water\n\n    # Display the total amount of water pumped\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total capacity of the power bank after 5 hours\n    capacity_after_5_hours = 0.9 * 5\n\n    # Calculate the total capacity of the power bank after 3 hours\n    capacity_after_3_hours = 0.7 * capacity_after_5_hours\n\n    # Calculate the total capacity of the power bank after 5 hours\n    total_capacity = capacity_after_5_hours + capacity_after_3_hours\n\n    # Calculate the total charge of the power bank\n    total_charge = total_capacity * 0.28\n\n    # Display the total charge\n    result = total_charge\n    return result"}
{"output": "def solution():\n    \n    wages_per_hour = 10\n    tips_per_hour = 15\n    total_wages = wages_per_hour * 40\n    total_tips = tips_per_hour * 40\n    total_cost = 10000\n    savings_percent = 20\n    total_savings = total_cost * (savings_percent / 100)\n    weeks_to_save = total_cost / total_savings\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of fruit\n    peach_price = 0.5\n    pear_price = 0.75\n    kiwis_price = 1\n    apple_price = 0.75\n    plum_price = 0.25\n\n    # Define the number of each type of fruit Jamaar has already purchased\n    peaches_purchased = 3\n    pears_purchased = 4\n    kiwis_purchased = 2\n    apples_purchased = 5\n\n    # Calculate the total cost of the fruit Jamaar has already purchased\n    total_cost = peaches_purchased * peach_price + pears_purchased * pear_price + kiwis_purchased * kiwis_price + apples_purchased * apple_price\n\n    # Calculate the remaining amount of money Jamaar can spend on plums\n    remaining_money = 10 - total_cost\n\n    # Calculate the maximum number of plums Jamaar can"}
{"output": "def solution():\n    num_packs = 15\n    pieces_per_pack = 60\n    num_packs_kept = 2\n    num_friends = 10\n\n    # Calculate the total number of pieces of sweets in the box\n    total_pieces = num_packs * pieces_per_pack\n\n    # Calculate the number of pieces of sweets that Anne kept\n    pieces_kept = num_packs_kept * pieces_per_pack\n\n    # Calculate the number of pieces of sweets that Anne gave to her friends\n    pieces_given = total_pieces - pieces_kept\n\n    # Calculate the number of pieces of sweets each friend received\n    pieces_per_friend = pieces_given / num_friends\n    result = pieces_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of carrots\n    initial_price = 120\n\n    # Calculate the price of carrots after one year\n    one_year_price = initial_price * 1.05\n\n    # Calculate the price of carrots after three years\n    three_years_price = one_year_price * 3\n\n    # Round the price to the nearest integer\n    rounded_price = round(three_years_price)\n\n    # return the result\n    result = rounded_price\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pictures and the number of albums\n    total_pictures = 72\n    num_albums = 8\n\n    # Calculate the number of pictures in each album\n    pictures_per_album = total_pictures / num_albums\n\n    # Calculate the number of pictures that are selfies\n    pictures_selfies = pictures_per_album\n\n    # Calculate the number of pictures that are portraits\n    pictures_portraits = pictures_per_album\n\n    # Calculate the total number of pictures that are portraits\n    total_portraits = pictures_portraits + pictures_selfies\n\n    # return the result\n    result = total_portraits\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes James to read 3 pages before going to bed\n    time_before_bed = 10\n\n    # Define the number of pages James reads\n    pages_read = 18\n\n    # Calculate the time it takes James to read one page before going to bed\n    time_per_page = time_before_bed / pages_read\n\n    # Calculate the total time James spends reading\n    total_time = time_per_page * pages_read\n\n    # Display the total time James spends reading\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    initial_guests = 100\n    early_checkout_guests = 24\n    late_checkout_guests = 15\n    afternoon_guests = 2 * late_checkout_guests\n    additional_guests = 7\n    total_guests = initial_guests - early_checkout_guests - late_checkout_guests + afternoon_guests + additional_guests\n    result = total_guests\n    return result"}
{"output": "def solution():\n    \n    wednesday_bananas = 4\n    thursday_bananas = 6\n    friday_bananas = wednesday_bananas * 3\n    total_bananas = wednesday_bananas + thursday_bananas + friday_bananas\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of questions and the percentage of easy and difficult questions\n    total_questions = 60\n    easy_percentage = 0.4\n    difficult_percentage = 1 - easy_percentage\n\n    # Calculate the number of easy and difficult questions\n    easy_questions = total_questions * easy_percentage\n    difficult_questions = total_questions - easy_questions\n\n    # Calculate the number of easy and difficult questions that Aries will get\n    easy_points = easy_questions * 0.75\n    difficult_points = difficult_questions * 0.5\n\n    # Calculate the total number of points Aries will get\n    total_points = easy_points + difficult_points\n\n    # return the result\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the price of a small stuffed animal and the total earnings\n    small_price = 4\n    large_earnings = 120\n\n    # Calculate the total earnings from the large stuffed animals\n    large_earnings = large_earnings / 3\n\n    # Calculate the total earnings from the small stuffed animals\n    small_earnings = large_earnings / 2\n\n    # Calculate the number of small stuffed animals sold\n    small_sold = small_earnings / small_price\n\n    # return the result\n    result = small_sold\n    return result"}
{"output": "def solution():\n    \n    man_sandwiches_per_day = 5\n    wife_sandwiches_per_day = 4\n    son_sandwiches_per_day = 2\n    total_sandwiches_per_day = man_sandwiches_per_day + wife_sandwiches_per_day + son_sandwiches_per_day\n    total_sandwiches_per_week = total_sandwiches_per_day * 7\n    result = total_sandwiches_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and quantities of each item\n    COOKIE_PRICE = 1\n    CUPCAKE_PRICE = 4\n    COOKIE_QUANTITY = 80\n    CUPCAKE_QUANTITY = 60\n\n    # Calculate the total earnings from each item\n    cookie_earnings = COOKIE_PRICE * COOKIE_QUANTITY\n    cupcake_earnings = CUPCAKE_PRICE * CUPCAKE_QUANTITY\n\n    # Calculate the total earnings from the two sisters\n    sisters_earnings = 2 * 10\n\n    # Calculate the total earnings\n    total_earnings = cookie_earnings + cupcake_earnings\n\n    # Calculate the amount of money left\n    money_left = total_earnings - sisters_earnings\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_eggs = 100\n    smith_eggs = 30\n    other_eggs = total_eggs - smith_eggs\n    friends_eggs = other_eggs - 10\n    result = friends_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of ore each dwarf can mine per day\n    ore_per_dwarf = 12\n\n    # Calculate the amount of ore each dwarf can mine with an iron pickaxe\n    iron_pickaxe_ounces = ore_per_dwarf * 2\n\n    # Calculate the amount of ore each dwarf can mine with a steel pickaxe\n    steel_pickaxe_ounces = iron_pickaxe_ounces * 1.5\n\n    # Calculate the total amount of ore each dwarf can mine in a month with 30 days\n    total_ounces = (iron_pickaxe_ounces * ore_per_dwarf * 30) + (steel_pickaxe_ounces * ore_per_dwarf * 30)\n\n    # return the result\n    result = total_ounces\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the sandwiches in each package\n    package1_price = 3\n    package2_price = 6\n    package3_price = 8\n\n    # Calculate the total price of each package\n    package1_total_price = package1_price * 2\n    package2_total_price = package2_price * 4\n    package3_total_price = package3_price * 3\n\n    # Calculate the total price of 8 sandwiches\n    total_price = package1_total_price + package2_total_price + package3_total_price\n\n    # return the result\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the bedroom set and the selling price of the old bedroom\n    bedroom_set_cost = 3000\n    bedroom_set_sale_price = 1000\n\n    # Calculate the cost of the bedroom set after selling the old bedroom\n    bedroom_set_cost_after_sale = bedroom_set_cost - bedroom_set_sale_price\n\n    # Calculate the monthly cost of the bedroom set\n    monthly_cost = bedroom_set_cost_after_sale * 0.1\n\n    # Display the monthly cost\n    result = monthly_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of red, green, and yellow balloons\n    red_balloons = 25\n    green_balloons = 7\n    yellow_balloons = 12\n\n    # Calculate the number of red balloons after the gust of wind\n    red_balloons_after_gust = red_balloons * 0.4\n\n    # Calculate the number of yellow balloons after the gust of wind\n    yellow_balloons_after_gust = yellow_balloons // 2\n\n    # Calculate the number of blue balloons caught in the tree\n    blue_balloons_caught = 8\n\n    # Calculate the number of remaining balloons\n    remaining_balloons = red_balloons_after_gust - yellow_balloons_after_gust - blue_balloons_caught\n\n    # Calculate the total number of balloons after the gust of wind\n    total_balloons = red_balloons"}
{"output": "def solution():\n    # Calculate the probability of Marcus will have to turn in his homework tomorrow\n    probability_tomorrow = 0.5 + 0.4 + 0.2  # 50% chance, 40% chance, 20% chance\n\n    # Calculate the probability of Marcus will have to turn in his homework tomorrow\n    probability_tomorrow = probability_tomorrow / 100\n\n    # Calculate the percentage chance that Marcus will actually have to turn in his homework tomorrow\n    percentage_tomorrow = (probability_tomorrow / 100) * 100\n    result = percentage_tomorrow\n    return result"}
{"output": "def solution():\n    \n    total_people = 6000\n    graduate_seats = 950\n    faculty_seats = 300\n    total_seats = graduate_seats + faculty_seats\n    tickets_per_person = total_seats / total_people\n    result = tickets_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of large jelly beans\n    large_beans = 75\n\n    # Calculate the number of medium-sized jelly beans\n    medium_beans = large_beans * 2\n\n    # Calculate the number of small jelly beans\n    small_beans = medium_beans + 3\n\n    # Display the number of small jelly beans\n    result = small_beans\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 6\n    days_listening = 3\n    daily_pay = 15\n    parking_pay = 3\n    total_pay = (daily_pay * days_listening) + (parking_pay * days_listening)\n    pay_per_hour = total_pay / hours_per_day\n    result = pay_per_hour\n    return result"}
{"output": "def solution():\n    starting_money = 200\n    num_books = 3\n    book_price = 16\n    num_pencils = 3\n    pencil_price = 6\n\n    # Calculate the total cost of all books\n    total_book_cost = num_books * book_price\n\n    # Calculate the total cost of all pencils\n    total_pencil_cost = num_pencils * pencil_price\n\n    # Calculate the total cost of all items\n    total_cost = total_book_cost + total_pencil_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the width of the driveway and the length of each bottle\n    driveway_width = 24\n    bottle_length = 3\n\n    # Calculate the number of bottles needed\n    bottles_needed = driveway_width // bottle_length + (1 if driveway_width % bottle_length > 0 else 0)\n\n    # Calculate the time to go from the first bottle to the next bottle\n    time_to_next_bottle = 5\n\n    # Calculate the total time to set off all the bottles\n    total_time = bottles_needed * time_to_next_bottle\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    apples_per_box = 40\n    boxes = 2\n    apples_per_pack = 8\n    total_apples = apples_per_box * boxes\n    packs = total_apples // apples_per_pack + (1 if total_apples % apples_per_pack!= 0 else 0)\n    result = packs\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of Parmesan and Mozzarella\n    cost_parmesan = 2 * 11  # 2 pounds of Parmesan at $11 per pound\n    cost_mozzarella = 3 * 6  # 3 pounds of Mozzarella at $6 per pound\n    total_cost = cost_parmesan + cost_mozzarella\n\n    # Calculate how much money Amor will have left after buying meat\n    money_left = 50 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    years_to_finish = 4\n    loans_per_year = 50000\n    income_per_year = 25\n    income_travelled = income_per_year - (income_per_year / 3)\n    total_income = income_travelled * years_to_finish\n    result = total_income\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the bed\n    bed_length = 6\n    bed_width = 8\n\n    # Calculate the area of each piece of fabric\n    fabric_length = bed_length + 2\n    fabric_width = bed_width + 2\n\n    # Calculate the total area of each piece of fabric\n    fabric_area = fabric_length * fabric_width\n\n    # Calculate the total area of fabric needed\n    total_area = fabric_area * 2\n\n    # return the result\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters delivered on each day\n    monday_letters = 425\n    tuesday_letters = monday_letters + 17\n    wednesday_letters = 2 * tuesday_letters + 5\n\n    # Calculate the total number of letters delivered\n    total_letters = monday_letters + tuesday_letters + wednesday_letters\n\n    # Display the total number of letters delivered\n    result = total_letters\n    return result"}
{"output": "def solution():\n    # Calculate the total amount Molly will pay for the catering\n    chicken_salad_cost = 10 * 6.5  # 10 people want the chicken salad at $6.50 per person\n    pasta_salad_cost = 6 * 6  # 6 people want the pasta salad at $6 per person\n    total_cost = chicken_salad_cost + pasta_salad_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the amount of money Johnny won in the second race\n    second_race_money = 2 * 5 + 1\n\n    # Calculate the amount of money Johnny won in the third race\n    third_race_money = 1.5 * second_race_money\n\n    # Calculate the total amount of money Johnny lost\n    total_money_lost = 5 + second_race_money + third_race_money\n\n    # Calculate the average amount of money Johnny lost per day\n    average_money_lost = total_money_lost / 3\n    result = average_money_lost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of countries and cities\n    num_countries = 26\n    num_cities = 5\n\n    # Calculate the total population\n    total_population = num_countries * num_cities * 1000\n\n    # Display the total population\n    result = total_population\n    return result"}
{"output": "def solution():\n    \n    # Calculate Xavier's height after the growth\n    xavier_height = 4 * 12 + 3\n\n    # Calculate Cole's height after the growth\n    cole_height = 50 * 12 + 2\n\n    # Calculate the difference between Cole and Xavier's height\n    height_difference = cole_height - xavier_height\n\n    # Display the height difference\n    result = height_difference\n    return result"}
{"output": "def solution():\n    \n    total_amount = 1920\n    second_share = (total_amount - 80) / 3\n    third_share = 2 * second_share\n    first_share = second_share + third_share\n    result = first_share\n    return result"}
{"output": "def solution():\n    \n    # Define the number of painters and the daily work rate\n    num_painters = 4\n    daily_work_rate = 3/8\n\n    # Calculate the total work hours per day\n    daily_work_hours = daily_work_rate * 7\n\n    # Calculate the total work hours per week\n    weekly_work_hours = daily_work_hours * 3\n\n    # Calculate the total work hours per pencil\n    total_work_hours = weekly_work_hours * num_painters\n\n    # return the result\n    result = total_work_hours\n    return result"}
{"output": "def solution():\n    \n    total_balls = 19\n    first_set_balls = None\n    second_set_balls = None\n    third_set_balls = second_set_balls / 2\n    first_set_balls = (total_balls - 4 - second_set_balls - third_set_balls) / 3\n    result = first_set_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the car and the depreciation rate\n    initial_price = 20000\n    depreciation_rate = 0.21\n\n    # Calculate the price of the car in the year 2010\n    year_2010_price = initial_price * (1 - depreciation_rate)\n\n    # Display the price of the car in the year 2010\n    result = year_2010_price\n    return result"}
{"output": "def solution():\n    \n    total_books = 50\n    english_books = total_books / 2\n    german_books = total_books * 0.1\n    spanish_books = total_books - english_books - german_books\n    result = spanish_books\n    return result"}
{"output": "def solution():\n    total_distance = 1955\n    distance_per_day = 325\n    num_days = 4\n\n    # Calculate the total distance that Bernice drove\n    total_distance_driven = distance_per_day * num_days\n\n    # Calculate the remaining distance that Bernice needs to drive\n    remaining_distance = total_distance - total_distance_driven\n    result = remaining_distance\n    return result"}
{"output": "def solution():\n    cups_per_day = 8\n    cups_per_gallon = 16\n    num_days = 30\n\n    # Calculate the total number of cups of water Ingrid drinks in 30 days\n    total_cups = cups_per_day * num_days\n\n    # Calculate the total number of gallons of water Ingrid drinks in 30 days\n    total_gallons = total_cups / cups_per_gallon\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    initial_people = 120\n    first_stop_people = 20\n    second_stop_people = 50\n    third_station_people = 80\n    final_people = initial_people + first_stop_people + second_stop_people + third_station_people\n    result = final_people\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the athletic gear\n    top_price = 10\n    shorts_price = top_price + 5\n    shoes_price = 48 / 2\n    socks_price = 8 - 2\n\n    # Calculate the total cost of the athletic gear\n    total_cost = top_price + shorts_price + shoes_price + socks_price\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total area of the kitchen floor and the cost per tile\n    total_area = 200\n    cost_per_tile = 12\n\n    # Calculate the total number of tiles needed\n    total_tiles = total_area / 2\n\n    # Calculate the total cost of the tiles\n    total_cost = total_tiles * cost_per_tile\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of normal per month and the percentage increase\n    NORMAL_COST = 120\n    INSURANCE_PERCENTAGE = 0.6\n\n    # Calculate the cost of insurance per month\n    insurance_cost_per_month = NORMAL_COST * INSURANCE_PERCENTAGE\n\n    # Calculate the total cost of insurance per month\n    insurance_cost_per_month = insurance_cost_per_month * 12\n\n    # Display the total cost of insurance per month\n    result = insurance_cost_per_month\n    return result"}
{"output": "def solution():\n    \n    twin_beds_per_week = 4\n    king_beds_per_week = 1\n    weeks_per_year = 52\n    twin_sets_per_year = 2\n    king_sets_per_year = 1\n    total_twin_sets = twin_beds_per_week * weeks_per_year * twin_sets_per_year\n    total_king_sets = king_beds_per_week * weeks_per_year * king_sets_per_year\n    total_laundry_sets = total_twin_sets + total_king_sets\n    result = total_laundry_sets\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies watched on Saturday\n    saturday_movies = 4\n\n    # Calculate the number of movies watched on Sunday\n    sunday_movies = saturday_movies / 2\n\n    # Calculate the total number of movies watched in one week\n    weekly_movies = saturday_movies + sunday_movies\n\n    # Calculate the total number of movies watched in four weeks\n    total_movies = weekly_movies * 4\n\n    # return the result\n    result = total_movies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 100\n\n    # Define the number of stickers collected last year\n    last_year_stickers = 50\n\n    # Define the number of stickers collected this year\n    this_year_stickers = last_year_stickers * 2\n\n    # Calculate the total number of stickers\n    total_stickers = initial_stickers + last_year_stickers + this_year_stickers\n\n    # return the result\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cats and the amount of cat food per day\n    num_cats = 3\n    cat_food_per_day = 60\n\n    # Calculate the total amount of cat food per day\n    total_cat_food_per_day = cat_food_per_day * 2\n\n    # Calculate the number of days the cat food will last\n    num_days = 720 / total_cat_food_per_day\n\n    # Display the number of days\n    result = num_days\n    return result"}
{"output": "def solution():\n    \n    pizzas = 4\n    slices_per_pizza = 8\n    total_slices = pizzas * slices_per_pizza\n    becky_slices = 10\n    jake_slices = becky_slices - 3\n    silvia_slices = jake_slices * 2\n    total_slices_eaten = becky_slices + jake_slices + silvia_slices\n    result = total_slices_eaten\n    return result"}
{"output": "def solution():\n    \n    total_time = 98\n    donovan_time = (total_time - 18) / 2\n    betsy_time = donovan_time + 18\n    result = betsy_time\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the doctor's visit\n    cast_cost = 200\n    visit_cost = 300 * 0.5 + 4 * 30  # $300/hour for 30 minutes, $4/pill for 30 painkillers\n    parking_cost = 6 * 2  # $6/hour for 2 hours of parking\n    total_cost = cast_cost + visit_cost + parking_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of emails James gets each day and the percentage that don't require any response\n    daily_emails = 80\n    no_response_percentage = 0.2\n\n    # Calculate the number of emails James doesn't require any response\n    no_response_emails = daily_emails * no_response_percentage\n\n    # Calculate the number of emails James responds to\n    responded_emails = daily_emails - no_response_emails\n\n    # Calculate the number of responded emails in a 5 day work week\n    weekly_responded_emails = responded_emails * 5\n\n    # Display the number of responded emails\n    result = weekly_responded_emails\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classes visited on each day\n    monday_classes = 32\n    tuesday_classes = monday_classes * 2\n    wednesday_classes = tuesday_classes * 3\n    thursday_classes = 30\n    friday_classes = 25\n\n    # Calculate the total number of classes visited\n    total_classes = monday_classes + tuesday_classes + wednesday_classes + thursday_classes + friday_classes\n\n    # Display the total number of classes visited\n    result = total_classes\n    return result"}
{"output": "def solution():\n    \n    # Define the scores for the first 3 tests and the fourth test\n    score_3_tests = 100\n    score_4th_test = 80\n\n    # Calculate the total score for all 4 tests\n    total_score = score_3_tests + score_4th_test\n\n    # Calculate the average score across all 4 tests\n    average_score = total_score / 4\n\n    # Display the average score\n    result = average_score\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pizzas\n    initial_pizzas = 20\n\n    # Calculate the number of pizzas eaten by the glee club\n    glee_club_pizzas = initial_pizzas * 0.7\n\n    # Calculate the number of pizzas remaining after the glee club eats\n    remaining_pizzas = initial_pizzas - glee_club_pizzas\n\n    # Calculate the number of pizzas eaten by the football team\n    football_team_pizzas = remaining_pizzas * 2\n\n    # Calculate the number of pizzas remaining after the football team eats 80%\n    remaining_pizzas -= football_team_pizzas * 0.8\n\n    # return the result\n    result = remaining_pizzas\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of coupon\n    SMALL_PRICE = 5\n    BIG_PRICE = 15\n\n    # Define the number of each type of coupon to be sent\n    small_coupons = 700\n    big_coupons = 2 * small_coupons\n\n    # Calculate the total cost of the small coupons\n    small_cost = small_coupons * SMALL_PRICE\n\n    # Calculate the total cost of the big coupons\n    big_cost = big_coupons * BIG_PRICE\n\n    # Calculate the total cost of all the coupons\n    total_cost = small_cost + big_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of meatballs in each sub sandwich\n    MEATBALLS_PER_SANDWICH = 4\n\n    # Calculate the number of meatballs ordered by Sidney\n    sidney_ordered = 10 - 3\n\n    # Calculate the number of meatballs eaten by Mark\n    mark_eaten = 4\n\n    # Calculate the number of meatballs ordered by Sidney\n    sidney_remaining = sidney_ordered - mark_eaten\n\n    # Calculate the number of meatballs ordered by Sidney\n    sidney_remaining += 3\n\n    # Calculate the total number of meatballs remaining\n    total_remaining = sidney_remaining * MEATBALLS_PER_SANDWICH\n\n    # Display the total number of meatballs remaining\n    result = total_remaining\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trucks and tons of fertiliser per truck\n    NUM_TRUCKS = 20\n    TONS_PER_TRUCK = 20\n\n    # Calculate the total number of tons of fertiliser\n    total_tons = NUM_TRUCKS * TONS_PER_TRUCK\n\n    # Calculate the number of lorries dispatched\n    lorries_delivered = total_tons // 4\n\n    # Calculate the number of mechanical failures\n    mechanical_failures = lorries_delivered % 4\n\n    # Calculate the total number of tons of fertiliser delivered\n    total_delivered = lorries_delivered + mechanical_failures\n\n    # Display the total number of tons of fertiliser delivered\n    result = total_delivered\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of croissants needed\n    croissants_needed = 6 * 12\n\n    # Calculate the amount of butter needed\n    butter_needed = croissants_needed / 2\n\n    # Calculate the cost of the butter\n    butter_cost = butter_needed * 4\n\n    # Display the cost of the butter\n    result = butter_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of renting the party\n    classmates_cost = 25 * 20  # 25 classmates at $125 each\n    girls_cost = 7 * 6  # 7 girls at $6 each\n    family_members_cost = 13 * 6  # 13 family members at $6 each\n    total_cost = classmates_cost + girls_cost + family_members_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money each person had\n    maggie_money = 60\n    riza_money = 60\n\n    # Calculate the amount of money each person spent\n    maggie_spent = maggie_money / 4\n    riza_spent = riza_money / 3\n\n    # Calculate the total amount of money spent\n    total_spent = maggie_spent + riza_spent\n\n    # Calculate the total amount of money left\n    total_left = (maggie_money + riza_money) - total_spent\n\n    # Display the total amount of money left\n    result = total_left\n    return result"}
{"output": "def solution():\n    \n    total_bananas = 315\n    first_monkey_bananas = 10\n    second_monkey_bananas = first_monkey_bananas + 4\n    third_monkey_bananas = total_bananas - first_monkey_bananas - second_monkey_bananas\n    result = third_monkey_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pieces of each puzzle\n    puzzle1 = 500\n    puzzle2 = 500\n    puzzle3 = 500\n\n    # Calculate the total number of pieces of each puzzle\n    puzzle1_total = puzzle1 * 2\n    puzzle2_total = puzzle2 * 2\n    puzzle3_total = puzzle3 * 2\n\n    # Calculate the total number of pieces of puzzle\n    total_pieces = puzzle1_total + puzzle2_total + puzzle3_total\n\n    # Display the total number of pieces\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the flowers\n    rose_price = 2\n    dozen_rose_price = 15\n\n    # Calculate the total cost of the flowers\n    total_cost = (rose_price * 15) + (dozen_rose_price * 12)\n\n    # Calculate the amount of change Jenny receives\n    change = 5 - total_cost\n\n    # Calculate the number of quarters left\n    quarters_left = int(change / 0.25)\n\n    # return the result\n    result = quarters_left\n    return result"}
{"output": "def solution():\n    \n    milkshake_price = 5.5\n    burger_platters_price = 11\n    sodas_price = 1.5\n    milkshakes_sold = 6\n    burger_platters_sold = 9\n    sodas_sold = 20\n    total_income = (milkshake_price * milkshakes_sold) + (burger_platters_price * burger_platters_sold) + (sodas_price * sodas_sold)\n    result = total_income\n    return result"}
{"output": "def solution():\n    \n    train1_arrive_time = 10\n    train1_stay_time = 20\n    train2_arrive_time = train1_arrive_time / 60\n    train2_stay_time = train1_stay_time / 4\n    total_arrive_time = train1_arrive_time + train1_stay_time + train2_arrive_time + train3_arrive_time\n    result = total_arrive_time\n    return result"}
{"output": "def solution():\n    \n    total_toothpicks = 200\n    saved_toothpicks = 10 * 12\n    remaining_toothpicks = total_toothpicks - saved_toothpicks\n    weeks_needed = remaining_toothpicks / 10\n    result = weeks_needed\n    return result"}
{"output": "def solution():\n    \n    original_price = 2000\n    bought_price = original_price * 0.75\n    sold_price = bought_price * 0.2\n    discount = sold_price - original_price\n    percent_discount = (discount / original_price) * 100\n    result = percent_discount\n    return result"}
{"output": "def solution():\n    \n    springs_per_hour = 60 / 4\n    jellyfish_per_hour = springs_per_hour * 1\n    total_jellyfish = jellyfish_per_hour * 5\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    # Define Binkie's score\n    binkie_score = 90\n\n    # Calculate Frankie's score\n    frankie_score = 2 * binkie_score + 15\n\n    # Display Frankie's score\n    result = frankie_score\n    return result"}
{"output": "def solution():\n    distance = 4  # James' home is 4 miles\n    walking_speed = 4  # James walks 4 miles per hour\n\n    # Calculate the time it takes James to walk to reach the store\n    walking_time = distance / walking_speed\n\n    # Calculate the time it takes James to walk back\n    back_walking_time = walking_time / 2\n\n    # Calculate the total time it takes James to reach the store\n    total_time = walking_time + back_walking_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the price of a single banana and a bunch\n    BANANA_PRICE = 0.8\n    BUNCH_PRICE = 3.0\n\n    # Define the number of bunches purchased\n    num_bunches = 10\n\n    # Calculate the total number of bananas purchased\n    total_bananas = num_bunches * 4\n\n    # Calculate the total cost of buying the bananas individually\n    total_cost_individual = total_bananas * BANANA_PRICE\n\n    # Calculate the total cost of buying the bananas in bunches\n    total_cost_bunches = total_bananas * BANCH_PRICE\n\n    # Calculate the amount saved by buying the bananas in bunches instead of individually\n    amount_saved = total_cost_individual - total_cost_bunches\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    total_fence = 100\n    harry_fence = (total_fence - 60) / 2\n    sam_fence = (total_fence - harry_fence) / 2\n    result = sam_fence\n    return result"}
{"output": "def solution():\n    \n    # Calculate the growth rate of the crocodile in inches per year\n    growth_rate = 8 / 4\n\n    # Calculate the total growth of the crocodile in 13 years\n    total_growth = growth_rate * 13\n\n    # Display the total growth\n    result = total_growth\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of bike\n    MTB_PRICE = 500\n    BMX_PRICE = 2 * MTB_PRICE\n    Trekking_PRICE = 450\n\n    # Calculate the number of Trekking bikes sold\n    trekking_bikes = 300 / 2\n\n    # Calculate the number of BMX bikes sold\n    bMX_bikes = 300 * 0.15\n\n    # Calculate the total sales from each type of bike\n    treking_sales = treking_bikes * Trekking_PRICE\n    bMX_sales = bMX_bikes * BMX_PRICE\n\n    # Calculate the total sales from all types of bikes\n    total_sales = treking_sales + bMX_sales + MTB_Sales\n\n    # Display the total sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    farmer_bales_per_hour = 5\n    truck_bales_per_hour = 3\n    total_bales_per_day = (farmer_bales_per_hour + truck_bales_per_hour) * 6\n    bales_left = total_bales_per_day - total_bales_per_day\n    result = bales_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of periods and extra classes\n    num_periods = 6\n    num_classes = 2\n\n    # Define the length of each class and the number of days in a week\n    class_length = 40\n    num_days = 5\n\n    # Calculate the total length of all classes in a week\n    total_class_length = num_classes * class_length * num_days\n\n    # Calculate the total length of the weekly learning time in minutes\n    total_learning_time = (total_class_length / 16) * 2\n\n    # Convert the total learning time from minutes to hours\n    total_learning_hours = total_learning_time / 60\n\n    # Display the total learning hours\n    result = total_learning_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the starting height of the ball\n    starting_height = 24 * 3\n\n    # Calculate the height of the ball after each bounce\n    bounce_height = starting_height * (2/3)\n\n    # Calculate the height of the ball after the second bounce\n    second_bounce_height = bounce_height - starting_height\n\n    # Display the height of the ball after the second bounce\n    result = second_bounce_height\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the first child in inches\n    child1 = 6\n\n    # Calculate the height of the second child in inches\n    child2 = child1 + 2\n\n    # Calculate the height of the third child in inches\n    child3 = child2 - 5\n\n    # Calculate the height of the fourth child in inches\n    child4 = child3 + 3\n\n    # Display the height of the fourth child in inches\n    result = child4\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bags and the price per bag\n    bags = 10\n    price_per_bag = 5\n\n    # Calculate the total number of apples sold\n    total_apples_sold = 2000\n\n    # Calculate the total number of bags sold\n    total_bags_sold = total_apples_sold / bags\n\n    # Calculate the total earnings from selling the apples\n    total_earnings = total_bags_sold * price_per_bag\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of meat on the triceratops\n    total_meat = 270\n\n    # Calculate the amount of meat eaten by the Tyrannosaurus rex\n    rex_meat = total_meat / 2\n\n    # Calculate the amount of meat left after the Tyrannosaurus rex eats\n    remaining_meat = total_meat - rex_meat\n\n    # Calculate the amount of meat scavenged by the velociraptors\n    velociraptors_meat = remaining_meat / 2\n\n    # Calculate the amount of meat on the triceratops before the Tyrannosaurus rex eats\n    initial_meat = remaining_meat - velociraptors_meat\n\n    # Display the amount of meat on the triceratops before the Tyrannosaurus rex eats\n    result = initial_meat\n    return result"}
{"output": "def solution():\n    # Calculate the total area of each wall\n    area_north_south = 10 * 8\n    area_east_west = 5 * 8\n\n    # Calculate the total area of all four walls\n    total_area = area_north_south + area_east_west\n\n    # Calculate the total number of gallons of paint needed\n    total_gallons = total_area / 20\n\n    # Calculate the total cost of the room\n    total_cost = total_gallons * 12\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sodas\n    initial_sodas = 12\n\n    # Calculate the number of sodas remaining after the first shake\n    remaining_sodas = initial_sodas - 3\n\n    # Calculate the number of sodas taken by Ellen's brother\n    brother_sodas = 1 + 2\n\n    # Calculate the number of sodas taken by Ellen's friend\n    friend_sodas = remaining_sodas - brother_sodas\n\n    # Calculate the probability of Ellen's friend getting sprayed with sodas\n    friend_probability = (friend_sodas / initial_sodas) * 100\n\n    # Display the probability of Ellen's friend getting sprayed with sodas\n    result = friend_probability\n    return result"}
{"output": "def solution():\n    \n    train1_speed = 60\n    train1_time = 3\n    train2_speed = train1_speed / 2\n    train2_time = 3\n    distance_first_train = train1_speed * train1_time\n    distance_second_train = train2_speed * train2_time\n    total_distance = distance_first_train + distance_second_train\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours per day and the number of days in March\n    HOURS_PER_DAY = 3\n    DAYS_IN_MARCH = 31\n\n    # Calculate the total number of hours Billy works during March 1st and April 19th\n    total_hours = HOURS_PER_DAY * DAYS_IN_MARCH * 0.8\n\n    # Calculate the total number of people Billy can help during the given number of hours\n    total_people = 2 * total_hours\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    num_cars = 20\n    num_buses = 12\n    num_people_per_bus = 35\n    num_people_per_car = 3\n    total_people = (num_cars * num_people_per_car) + (num_buses * num_people_per_bus)\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define Mike's age\n    mike_age = 24\n\n    # Calculate Martha's age\n    martha_age = mike_age - 4\n\n    # Calculate Jeff's age\n    jeff_age = martha_age + 10\n\n    # Display Jeff's age\n    result = jeff_age\n    return result"}
{"output": "def solution():\n    \n    # Calculate the time it takes to ride the biggest waterslide\n    biggest_slide1_time = 300 / 60\n\n    # Calculate the time it takes to ride the second biggest waterslide\n    biggest_slide2_time = 240 / 80\n\n    # Calculate the difference in time between the two biggest waterslide\n    time_difference = biggest_slide1_time - biggest_slide2_time\n\n    # Display the time difference\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    lunch_time = 30\n    break_time = 2 * 60\n    total_time = (lunch_time + break_time) * 5\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_miles = 52\n    amber_miles = 8\n    micah_miles = amber_miles * 3.5\n    ahito_miles = total_miles - amber_miles - micah_miles\n    result = ahito_miles\n    return result"}
{"output": "def solution():\n    \n    initial_balance = 85\n    return_amount = 15\n    frying_pan_price = 20\n    frying_pan_discount = 0.2\n    towels_price = 30\n    towels_discount = 0.1\n\n    final_balance = initial_balance - (initial_balance * frying_pan_price * frying_pan_discount) - (initial_balance * towels_price * towels_discount) + return_amount\n    result = final_balance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jellyfish in the tank\n    total_jellyfish = None\n\n    # Calculate the number of large jellyfish\n    large_jellyfish = total_jellyfish / 5\n\n    # Calculate the number of small jellyfish\n    small_jellyfish = large_jellyfish - (large_jellyfish / 3)\n\n    # Calculate the number of jellyfish that changed color\n    changed_jellyfish = 6\n\n    # Calculate the total number of jellyfish in the tank\n    total_jellyfish = (large_jellyfish + small_jellyfish + changed_jellyfish) / 2\n\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    # Define Chris's age\n    chris_age = 4\n\n    # Calculate Ben's age\n    ben_age = chris_age * 2\n\n    # Calculate Caroline's age\n    caroline_age = ben_age * 3\n\n    # Calculate Caroline's age\n    caroline_age = caroline_age + chris_age\n\n    # Display Caroline's age\n    result = caroline_age\n    return result"}
{"output": "def solution():\n    \n    # Define Lauren's current salary and savings rate\n    current_salary = 100000\n    savings_rate = 0.2\n\n    # Calculate Lauren's annual salary\n    annual_salary = current_salary * (1 - savings_rate)\n\n    # Calculate the number of years needed to save for 20 years\n    years_needed = 20 - annual_salary\n\n    # Display the number of years needed\n    result = years_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total length of ribbon and the number of cut parts\n    total_length = 100\n    num_parts = 4\n\n    # Calculate the length of each cut part\n    part_length = total_length / num_parts\n\n    # Calculate the length of each final cut\n    final_cut_length = part_length / num_parts\n\n    # Display the length of each final cut\n    result = final_cut_length\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage of boys in the school\n    boys_percentage = 40\n\n    # Calculate the total number of boys in the school\n    total_boys = 240 / (boys_percentage / 100)\n\n    # Calculate the total number of girls in the school\n    total_girls = total_boys / 240\n\n    # return the result\n    result = total_girls\n    return result"}
{"output": "def solution():\n    \n    pots_cost = 19\n    soil_cost = 26\n    coupon_amount = 7\n    total_cost = pots_cost + soil_cost - coupon_amount\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total height of the women at the party\n    total_height = 3 * 4 + 3 * 2  # three women wearing 4 inch heels and three women wearing 2 inch heels\n\n    # Calculate the average height of the women at the party\n    average_height = total_height / 3\n    result = average_height\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of miles Soledad needs to hike\n    total_miles = 9300\n\n    # Define the number of miles Soledad walks per day\n    miles_per_day = 125 * 2\n\n    # Calculate the number of miles Soledad must hike per day\n    miles_per_day_needed = total_miles / miles_per_day\n\n    # Display the number of miles Soledad must hike per day\n    result = miles_per_day_needed\n    return result"}
{"output": "def solution():\n    num_red_balls = 3\n    red_ball_price = 9\n\n    num_blue_balls = 11\n    blue_ball_price = 5\n\n    num_green_balls = 25\n    green_ball_price = 3\n\n    # Calculate the total revenue from selling all the red balls\n    total_red_revenue = num_red_balls * red_ball_price\n\n    # Calculate the total revenue from selling all the blue balls\n    total_blue_revenue = num_blue_balls * blue_ball_price\n\n    # Calculate the total revenue from selling all the green balls\n    total_green_revenue = num_green_balls * green_ball_price\n\n    # Calculate the total revenue from selling all the balls\n    total_revenue = total_red_revenue + total_blue_revenue + total_green_revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    total_apples = 12\n    peter_apples = total_apples / 4\n    paul_apples = total_apples / 3\n    james_apples = total_apples - peter_apples - paul_apples\n    result = james_apples\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 2\n    temp_dropped_overnight = 8\n    temp_increase = 3\n    final_temp = initial_temp - temp_dropped_overnight + temp_increase\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    starting_money = 21\n    allowance_saved = 11\n    comic_book_cost = 5\n    puzzle_cost = 19\n    total_spent = comic_book_cost + puzzle_cost\n    money_left = starting_money + allowance_saved - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    budget = 16\n    initial_spending = 4\n    remaining_budget = 2\n    total_spent = initial_spending + remaining_budget\n    total_books = 2\n    cost_per_book = total_spent / total_books\n    result = cost_per_book\n    return result"}
{"output": "def solution():\n    \n    last_year_students = 50\n    percent_increase = 20\n    this_year_students = last_year_students + (last_year_students * (percent_increase / 100))\n    result = this_year_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blinks and the time per blink\n    blinks = 255\n    time_per_blink = 5 / blinks\n\n    # Calculate the total time to blink 459 times\n    total_time = time_per_blink * 459\n\n    # Display the total time in minutes\n    result = total_time\n    return result"}
{"output": "def solution():\n    num_male_guppies = 4\n    num_female_guppies = 7\n    num_male_goldfishes = 3\n    num_female_goldfishes = 5\n\n    num_male_guppies_bought = 2\n    num_female_guppies_bought = 1\n    num_male_goldfishes_bought = 2\n    num_female_goldfishes_bought = 3\n\n    # Calculate the total number of male guppies\n    total_male_guppies = num_male_guppies - num_male_guppies_bought\n\n    # Calculate the total number of female guppies\n    total_female_guppies = num_female_guppies - num_female_guppies_bought\n\n    # Calculate the total number of male goldfishes\n    total_male_goldfishes = num_"}
{"output": "def solution():\n    \n    amalia_mowing_time = 4\n    megan_walking_time = amalia_mowing_time + 2\n    dior_mowing_time = amalia_mowing_time + 4\n    total_time = amalia_mowing_time + megan_walking_time + dior_mowing_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial speed and time\n    initial_speed = 70\n    time = 2\n\n    # Calculate the distance covered in one round trip\n    distance_per_round_trip = initial_speed * time\n\n    # Calculate the total distance covered in a month\n    total_distance = distance_per_round_trip * 2\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Sofie will walk in 7 days\n    sofie_distance = 10 * 7\n\n    # Calculate the distance Brian will walk in 7 days\n    brian_distance = sofie_distance / 2\n\n    # Calculate the total distance Brian will walk in 7 days\n    total_distance = brian_distance * 7\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of toys and the number of workers\n    total_toys = 400\n    num_workers = 5\n\n    # Calculate the number of toys produced per hour by the first 2 workers\n    toys_per_hour_1 = 6 * 2\n\n    # Calculate the number of toys produced per hour by the next 2 workers\n    toys_per_hour_2 = 4 * 2\n\n    # Calculate the total number of toys produced during the 10-hour shift\n    total_toys_shift = (toys_per_hour_1 + toys_per_hour_2) * 10\n\n    # Calculate the number of toys remaining to be produced\n    toys_remaining = total_toys_shift - 20\n\n    # Calculate the number of toys produced per hour by the fifth worker\n    toys_per_hour_5 = toys_remaining / (num_workers * 1.0)\n\n    # Display the number of toys produced per hour\n    result = toys_per_hour_5\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of Kory's dog\n    kory_weight = 60\n\n    # Calculate the weight of Elijah's dog\n    elijah_weight = kory_weight / 2\n\n    # Calculate the total weight of Elijah and Kory's dogs\n    total_weight = elijah_weight + kory_weight\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 0\n\n    # Calculate the number of stickers Seth gave to Luis\n    luis_stickers = initial_stickers / 2\n\n    # Calculate the number of stickers Seth gave to Kris\n    kris_stickers = 9\n\n    # Calculate the number of stickers Seth gave to Rob\n    rob_stickers = 7\n\n    # Calculate the total number of stickers Seth had\n    total_stickers = initial_stickers + luis_stickers + kris_stickers + rob_stickers\n\n    # Display the total number of stickers\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each large bag and the amount of M&M in it\n    LARGE_BAG_WEIGHT = 10\n    SMALL_BAG_WEIGHT = 30\n\n    # Calculate the total weight of the large bags\n    total_large_bag_weight = 3 * LARGE_BAG_WEIGHT\n\n    # Calculate the total amount of M&M in the small bags\n    total_small_bag_weight = total_large_bag_weight // SMALL_BAG_WEIGHT\n\n    # Calculate the number of small bags that can be made with the remaining small bags\n    num_small_bags = total_small_bag_weight // SMALL_BAG_WEIGHT\n\n    # Display the number of small bags that can be made\n    result = num_small_bags\n    return result"}
{"output": "def solution():\n    \n    distance_per_day = 400\n    circumference = 40000\n    distance_to_half = circumference / 2\n    days_to_half = distance_to_half / distance_per_day\n    result = days_to_half\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of the average car\n    AVERAGE_SPEED = 120\n\n    # Calculate the speed of the second fastest car\n    second_fastest_speed = AVERAGE_SPEED * 5\n\n    # Calculate the speed of the first fastest car\n    first_fastest_speed = second_fastest_speed / 1.25\n\n    # Calculate the speed of the faster car\n    faster_car_speed = first_fastest_speed / 1.25\n\n    # Display the speed of the faster car\n    result = faster_car_speed\n    return result"}
{"output": "def solution():\n    \n    # Define Liam's current age\n    liam_age = 16\n\n    # Calculate Liam's age 2 years ago\n    liam_age_2_years_ago = liam_age - 2\n\n    # Calculate Vince's age 2 years ago\n    vince_age_2_years_ago = liam_age_2_years_ago / 2\n\n    # Calculate Vince's current age\n    vince_age = vince_age_2_years_ago + 2\n\n    # Display Vince's current age\n    result = vince_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of eggs painted\n    total_eggs = 56\n\n    # Define the number of eggs painted by Camden and Sarah\n    camden_sarah_eggs = 30 - 12\n\n    # Calculate the number of eggs painted by Arnold\n    arnold_eggs = total_eggs - camden_sarah_eggs\n\n    # Calculate the difference between the number of eggs painted by Camden and Arnold\n    difference = camden_sarah_eggs - arnold_eggs\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of crayons and the weight of each box\n    NUM_CRAYONS = 200\n    BOX_WEIGHT = 8\n\n    # Calculate the total weight of all the boxes\n    total_box_weight = NUM_CRAYONS / 8 * BOX_WEIGHT\n\n    # Calculate the total weight of all the crayons\n    total_weight = total_box_weight + NUM_CRAYONS\n\n    # Convert the total weight from ounces to pounds\n    total_weight_in_pounds = total_weight / 16\n\n    # Display the total weight in pounds\n    result = total_weight_in_pounds\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the tree and the percentage of logs that can be made\n    tree_length = 80\n    log_percentage = 0.8\n\n    # Calculate the number of logs that can be made\n    num_logs = tree_length * log_percentage\n\n    # Calculate the number of planks that can be made from each log\n    num_planks_per_log = 5\n\n    # Calculate the total number of planks that can be made\n    total_planks = num_logs * num_planks_per_log\n\n    # Calculate the total earnings from selling the planks\n    total_earnings = total_planks * 1.2\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the salary of Valerie and her brother\n    VERIE_SALARY = 5000\n    BROTHER_SALARY = VERIE_SALARY / 2\n\n    # Calculate the combined salary of Valerie and her brother\n    combined_salary = VERIE_SALARY + BROTHER_SALARY\n\n    # Calculate the salary of their mother\n    mother_salary = combined_salary * 2\n\n    # Calculate the total amount of money they all have together\n    total_salary = VERIE_SALARY + BROTHER_SALARY + mother_salary\n\n    # Display the total salary\n    result = total_salary\n    return result"}
{"output": "def solution():\n    distance = 3  # Grandma walks 3 miles every day\n    beach_distance = 2  # Grandma walks 2 miles on the beach every day\n    sidewalk_distance = 1  # Grandma walks 1 mile on the sidewalk every day\n    sidewalk_speed = 2  # Grandma walks at twice the speed that she does on the beach\n    beach_time = 40  # Grandma spends 40 minutes on the beach\n\n    # Calculate the time it takes Grandma to walk on the sidewalk\n    sidewalk_time = distance / sidewalk_speed\n\n    # Calculate the time it takes Grandma to walk on the beach\n    beach_time = beach_time / 60  # Convert 40 minutes to hours\n\n    # Calculate the time it takes Grandma to walk on the sidewalk\n    sidewalk_time = sidewalk_time / sidewalk_speed\n\n    # Calculate the total time it takes Grandma to complete the 3-mile walk\n    total_time = beach_time + sidewalk_time"}
{"output": "def solution():\n    # Calculate the total amount saved in the past 8 weeks\n    total_saved = 4 * 8\n\n    # Calculate the remaining amount to be saved\n    remaining_amount = 60 - total_saved\n\n    # Calculate the number of weeks needed to save the remaining amount\n    weeks_needed = remaining_amount / 4\n    result = weeks_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue birds in each tree\n    tree1_birds = 7\n    tree2_birds = 4\n    tree3_birds = 3\n\n    # Calculate the total number of blue birds\n    total_birds = (3 * tree1_birds) + (2 * tree2_birds) + tree3_birds\n\n    # Display the total number of blue birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    marbles_from_dozen = 12\n    total_marbles = 60\n    marbles_received = 2 * marbles_from_dozen\n    marbles_lost = 10\n    total_marbles = total_marbles + marbles_received - marbles_lost\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of water in the two mugs\n    total_water = 2 * 33\n\n    # Calculate how many ounces of water Donny pours from the first bottle\n    ounces_from_first_bottle = 4 * 33\n\n    # Calculate how many ounces of water Donny pours from the other bottle\n    ounces_from_other_bottle = 1\n\n    # Calculate how many ounces of water Donny pours from the second bottle\n    ounces_from_second_bottle = total_water - ounces_from_first_bottle - ounces_from_other_bottle\n\n    # Calculate the minimum amount of water Donny can drink in the second bottle\n    min_water = 40 - ounces_from_second_bottle\n\n    result = min_water\n    return result"}
{"output": "def solution():\n    \n    initial_cows = 50\n    initial_chickens = 20\n    cows_per_day = 20\n    chickens_per_day = 10\n    days_per_week = 7\n    weeks = 3\n    total_cows = initial_cows * cows_per_day * days_per_week * weeks\n    total_chickens = initial_chickens * chickens_per_day * days_per_week * weeks\n    total_animals = total_cows + total_chickens\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each pack of bagels and the number of bagels per pack\n    PACK_PRICE = 10.00\n    BAGS_PER_PACK = 9\n\n    # Calculate the total cost before discount\n    total_cost = PACK_PRICE * 4\n\n    # Calculate the discount amount\n    discount = total_cost * 0.10\n\n    # Calculate the total cost after discount\n    total_cost -= discount\n\n    # Calculate the cost per bagel\n    cost_per_bagel = total_cost / BAGS_PER_PACK\n\n    # Display the cost per bagel\n    result = cost_per_bagel\n    return result"}
{"output": "def solution():\n    \n    # Define the number of scoops of mashed potatoes\n    mashed_scoops = 23 - 5\n\n    # Calculate the number of potatoes needed for 1 less than 3 scoops\n    potatoes_per_scoop = mashed_scoops // 3\n\n    # Calculate the total number of potatoes eaten\n    total_potatoes = potatoes_per_scoop * mashed_scoops\n\n    # Display the total number of potatoes eaten\n    result = total_potatoes\n    return result"}
{"output": "def solution():\n    eggs_per_day_1 = 3\n    days_1 = 30\n    eggs_per_day_2 = 5\n    days_2 = 30\n\n    # Calculate the total number of eggs Chester will eat in the first 30 days\n    total_eggs_1 = eggs_per_day_1 * days_1\n\n    # Calculate the total number of eggs Chester will eat in the next 30 days\n    total_eggs_2 = eggs_per_day_2 * days_2\n\n    # Calculate the total number of dozens of eggs Chester will need for 60 days\n    total_dozens = (total_eggs_1 + total_eggs_2) / 12\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    \n    green_jellybeans = 17\n    red_jellybeans = 2 * green_jellybeans\n    total_jellybeans = 60\n    blue_jellybeans = total_jellybeans - green_jellybeans - red_jellybeans\n    result = blue_jellybeans\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees and lemons collected per tree\n    NUM_TREES = 5\n    LEMONS_PER_TREE = 6\n\n    # Calculate the total number of lemons collected in one year\n    lemons_per_year = NUM_TREES * LEMONS_PER_TREE\n\n    # Calculate the total number of lemons collected in a decade\n    lemons_per_decade = lemons_per_year * 10\n\n    # Display the total number of lemons collected\n    result = lemons_per_decade\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of men to women\n    MAN_TO_WOMEN_RATIO = 5/9\n\n    # Calculate the total number of passengers on the bus\n    total_passengers = 84\n\n    # Calculate the number of women on the bus\n    women_on_bus = total_passengers * MAN_TO_WOMEN_RATIO\n\n    # Calculate the number of women remaining on the bus\n    women_remaining = women_on_bus - 20\n\n    # Display the number of women remaining\n    result = women_remaining\n    return result"}
{"output": "def solution():\n    \n    sunflower_price = 2\n    bouquet_price = 8\n    earnings_per_day = 26 + 56\n    sunflowers_per_bouquet = 12\n    total_sales = earnings_per_day / sunflower_price * 3\n    total_sunflowers = total_sales / sunflowers_per_bouquet\n    result = total_sunflowers\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each rock\n    COST_PER_ROCK = 5\n    SELLING_PRICE_PER_ROCK = 7\n\n    # Calculate the total cost of the rocks\n    total_cost = COST_PER_ROCK * 100\n\n    # Calculate the total revenue from selling the rocks\n    total_revenue = SELLING_PRICE_PER_ROCK * 100\n\n    # Calculate the amount of money Adam will lose\n    money_lost = 100 - total_cost - total_revenue\n\n    # Display the amount of money Adam lost\n    result = money_lost\n    return result"}
{"output": "def solution():\n    \n    large_scenes_per_day = 5\n    medium_scenes_per_day = 6\n    small_scenes_per_day = 7\n    total_large_scenes = 45\n    total_medium_scenes = 36\n    total_small_scenes = 49\n    total_scenes = total_large_scenes + total_medium_scenes + total_small_scenes\n    total_days = total_scenes / (large_scenes_per_day + medium_scenes_per_day + small_scenes_per_day)\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs per dozen\n    EGGS_PER_DOZEN = 12\n\n    # Define the total number of eggs prepared\n    total_eggs = 3 * EGGS_PER_DOZEN\n\n    # Define the number of children\n    num_children = 4\n\n    # Calculate the number of eggs each child receives\n    eggs_per_child = total_eggs // num_children\n\n    # Display the number of eggs each child receives\n    result = eggs_per_child\n    return result"}
{"output": "def solution():\n    \n    num_fish = 3\n    food_per_fish = 1\n    days_in_May = 31\n    total_food_needed = num_fish * food_per_fish * days_in_May\n    result = total_food_needed\n    return result"}
{"output": "def solution():\n    \n    initial_roses = 30\n    roses_given = 24\n    roses_bought = 15\n    total_roses = initial_roses - roses_given + roses_bought\n    result = total_roses\n    return result"}
{"output": "def solution():\n    \n    # Calculate the speed of Sid in miles per hour\n    speed_1 = 110 / 2\n\n    # Calculate the speed of Sid in miles per hour\n    speed_2 = 140 / 3\n\n    # Calculate the total speed of Sid\n    total_speed = speed_1 + speed_2\n\n    # Calculate the average speed of Sid\n    average_speed = total_speed / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    # Calculate the probability of winning the first lottery ticket\n    first_ticket_probability = 0.2\n\n    # Calculate the probability of winning the second lottery ticket\n    second_ticket_probability = 3 * first_ticket_probability\n\n    # Calculate the total probability of both tickets\n    total_probability = first_ticket_probability + second_ticket_probability\n\n    # Calculate the probability of winning both tickets\n    first_ticket_percentage = first_ticket_probability * 100\n    second_ticket_percentage = second_ticket_probability * 100\n\n    result = first_ticket_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of seashells collected by Jim\n    jim_seashells = 27\n\n    # Calculate the number of seashells collected by Carlos\n    carloy_seashells = jim_seashells - 5\n\n    # Calculate the number of seashells collected by Carlos\n    carlos_seashells = carloy_seashells * 2\n\n    # Calculate the total number of seashells collected\n    total_seashells = jim_seashells + carlos_seashells\n\n    # Calculate the number of seashells each person gets\n    seashells_per_person = total_seashells // 3\n\n    # Display the number of seashells each person gets\n    result = seashells_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of carrots eaten on weekdays\n    WEEKDAY_CARROTS = 4 * 5\n\n    # Define the number of carrots eaten on Saturday and Sunday\n    WEEKDAY_SATURDAY_CARROTS = 5 * 2\n\n    # Calculate the total number of carrots eaten in a week\n    total_carrots = WEEKDAY_CARROTS + WEEKDAY_SATURDAY_CARROTS\n\n    # Display the total number of carrots eaten in a week\n    result = total_carrots\n    return result"}
{"output": "def solution():\n    \n    first_song_time = 5\n    second_song_time = first_song_time * 1.6\n    total_time = first_song_time + second_song_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the mobile device\n    original_price = 20\n\n    # Calculate the selling price of each mobile device\n    selling_price = original_price * 2\n\n    # Calculate the total cost of buying all the mobile devices\n    total_cost = 2 * selling_price\n\n    # Calculate the total revenue from selling all the mobile devices\n    total_revenue = 4 * selling_price\n\n    # Calculate the profit made from selling all the mobile devices\n    profit = total_revenue - total_cost\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define Isabel's height\n    isabel_height = 7\n\n    # Calculate Carl's height\n    carl_height = isabel_height / 2\n\n    # Calculate Ned's height\n    ned_height = carl_height - 2\n\n    # Calculate Carl's height\n    carl_height_in_feet = carl_height + 1\n\n    # Display Carl's height in feet\n    result = carl_height_in_feet\n    return result"}
{"output": "def solution():\n    # Calculate the number of bottles of juices produced in a day\n    bottles_per_day = 4200\n\n    # Calculate the number of bottles of juices produced per person\n    bottles_per_person = 0.2 * bottles_per_day\n\n    # Calculate the total number of bottles of juices produced in 2300 people\n    total_bottles = bottles_per_person * 2300\n\n    # Calculate the number of bottles of juices Hortex needs to produce to meet 100% of the daily energy needs\n    bottles_needed = total_bottles * 100\n\n    # Calculate the number of additional bottles of juices Hortex needs to produce\n    additional_bottles = bottles_needed - total_bottles\n    result = additional_bottles\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of octuplets\n    total_octuplets = 100\n\n    # Calculate the number of purple and blue wearers\n    purple_wearers = total_octuplets * (3/4)\n    blue_wearers = total_octuplets * (1/4)\n\n    # Calculate the number of baby wearers\n    baby_wearers = purple_wearers * (1/3)\n\n    # Calculate the percentage chance of a baby wearing a purple\n    baby_percentage = (purple_wearers / total_octuplets) * 100\n\n    # return the result\n    result = baby_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of tax reports received\n    total_tax_reports = 5168\n\n    # Define the number of reports received on Monday and Tuesday\n    monday_tuesday_reports = 1907\n\n    # Define the number of reports received on Thursday and Friday\n    thursday_friday_reports = 2136\n\n    # Calculate the number of reports received on Wednesday\n    wednesday_reports = total_tax_reports - monday_tuesday_reports - thursday_friday_reports\n\n    # return the result\n    result = wednesday_reports\n    return result"}
{"output": "def solution():\n    # Calculate the amount earned from selling half of the land\n    half_land = 80 / 2\n    half_land_earnings = half_land * 50\n\n    # Calculate the amount earned from selling 1/4 of the land\n    one_half_land = 80 / 4\n    one_half_land_earnings = one_half_land * 30\n\n    # Calculate the amount earned from selling the remaining land\n    remaining_land = 80 - half_land - one_half_land\n    remaining_land_earnings = remaining_land * 3\n\n    # Calculate the total earnings from selling all the land\n    total_earnings = half_land_earnings + one_half_land_earnings + remaining_land_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define Haley's age\n    haley_age = 26\n\n    # Calculate Geb's age\n    geb_age = (haley_age / 2) - 10\n\n    # Display Geb's age\n    result = geb_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Tyrion goes out per day\n    times_per_day = 3\n\n    # Define the number of times Tyrion changes his face mask per time he goes out\n    changes_per_time = 2\n\n    # Calculate the total number of face masks used per day\n    masks_per_day = times_per_day * changes_per_time\n\n    # Calculate the total number of face masks used in 2 days\n    masks_per_two_days = masks_per_day * 2\n\n    # Display the total number of face masks used in 2 days\n    result = masks_per_two_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in a dozen\n    EGGS_PER_DOZEN = 12\n\n    # Define the number of eggs that Lamar finds\n    lamar_eggs = 5\n\n    # Define the number of eggs that Stacy finds\n    stacy_eggs = lamar_eggs * 2\n\n    # Define the number of eggs that Charlie finds\n    charlie_eggs = stacy_eggs - 2\n\n    # Define the number of eggs that Mei finds\n    mei_eggs = charlie_eggs / 2\n\n    # Calculate the total number of eggs\n    total_eggs = lamar_eggs + stacy_eggs + charlie_eggs + mei_eggs\n\n    # Calculate the number of eggs that are still hidden\n    hidden_eggs = 3 * EGGS_PER_DOZEN - total_eggs\n\n    # Display the number of eggs that are still hidden\n    result = hidden_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apartments in each complex\n    apartments_per_complex = 200\n\n    # Calculate the total number of apartments collected from the first two complexes\n    total_apartments = apartments_per_complex * 2\n\n    # Calculate the number of apartments in the last complex\n    apartments_last_complex = total_apartments * 0.6\n\n    # Calculate the total number of apartments collected from all three complexes\n    total_apartments = total_apartments + apartments_last_complex\n\n    # Calculate the total amount of money John makes in a week\n    total_money = total_apartments * 0.40 * 3\n\n    # return the result\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the number of fruits produced in the first 5-year-old trees\n    first_5_years_fruits = 50\n\n    # Calculate the number of fruits produced in the first 6-year-old trees\n    first_6_years_fruits = 3 * first_5_years_fruits\n\n    # Calculate the number of fruits produced in the first 7-year-old trees\n    first_7_years_fruits = 7 * first_5_years_fruits\n\n    # Calculate the number of fruits produced in the first 8-year-old trees\n    first_8_years_fruits = first_6_years_fruits - 200\n\n    # Calculate the number of fruits produced in the next 10-year-old trees\n    next_10_years_fruits = 20 * first_10_years_fruits\n\n    # Calculate the total number of fruits produced\n    total_fruits = first_5_years_fruits + first_6_years_fruits + first"}
{"output": "def solution():\n    \n    # Define Jack's initial amount of money\n    jack_money = 100\n\n    # Calculate the amount of money given to Sophia\n    sophia_money = jack_money * (1/5)\n\n    # Calculate Jack's new amount of money\n    jack_money = jack_money + sophia_money\n\n    # Display Jack's new amount of money\n    result = jack_money\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the yellow rope\n    yellow_length = 37 - 7\n\n    # Calculate the length of the blue rope\n    blue_length = yellow_length - 7\n\n    # Calculate the length of the red rope\n    red_length = 4 * blue_length\n\n    # Display the length of the red rope\n    result = red_length\n    return result"}
{"output": "def solution():\n    \n    ronnie_money = 5\n    rissa_money = ronnie_money * 3\n    total_money = ronnie_money + rissa_money\n    money_left = (4/5) * total_money\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_pints = 12\n    yellow_pints = total_pints / 2\n    red_pints = total_pints - yellow_pints\n    result = red_pints\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each bedroom\n    bedroom_length = 20\n    bedroom_width = 12\n\n    # Calculate the area of each bedroom\n    bedroom_area = bedroom_length * bedroom_width\n\n    # Calculate the area of the living room\n    living_room_area = bedroom_area * 5\n\n    # Calculate the total area of the house\n    total_area = bedroom_area + living_room_area + 1000\n\n    # return the result\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    # Define the number of puffs of clouds counted on Monday\n    monday_clouds = 3\n\n    # Calculate the number of puffs of clouds counted on Friday\n    friday_clouds = monday_clouds * 2\n\n    # Calculate the total number of puffs of clouds counted over the five days\n    total_clouds = monday_clouds + friday_clouds\n\n    # Display the total number of puffs of clouds counted\n    result = total_clouds\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the regular box and the percentage increase\n    REGULAR_PRICE = 12\n    PERCENTAGE_INCREASE = 0.2\n\n    # Calculate the new price of the regular box\n    new_price = REGULAR_PRICE * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate the number of dishwashing cycles that can be run with the new box\n    cycles = (new_price // new_price)\n\n    # Display the number of dishwashing cycles\n    result = cycles\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Thomas withdraws\n    initial_amount = 1000\n\n    # Calculate the amount of money Thomas has after losing 10 bills\n    remaining_amount = initial_amount - 10\n\n    # Calculate the amount of money Thomas uses to pay for one bill\n    payment_per_bill = remaining_amount / 2\n\n    # Calculate the total amount of money Thomas has after paying for one bill\n    total_amount = remaining_amount - payment_per_bill\n\n    # Calculate the number of 5 dollar bills Thomas has\n    num_5_dollar_bills = total_amount / 5\n\n    # Display the number of 5 dollar bills Thomas has\n    result = num_5_dollar_bills\n    return result"}
{"output": "def solution():\n    \n    first_half_a_goals = 4\n    first_half_b_goals = first_half_a_goals - 2\n    second_half_a_goals = first_half_a_goals / 4\n    second_half_b_goals = first_half_b_goals * 4\n    total_goals = first_half_a_goals + first_half_b_goals + second_half_a_goals + second_half_b_goals\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of chalk used per day\n    initial_chalk = 5\n\n    # Calculate the amount of chalk used for recycling the chalk\n    recycling_chalk = initial_chalk * 0.2\n\n    # Calculate the total amount of chalk used for the day\n    total_chalk_used = initial_chalk + recycling_chalk\n\n    # Calculate the amount of chalk used for the extra help\n    extra_help_chalk = total_chalk_used * 0.45\n\n    # Calculate the final amount of chalk used\n    final_chalk_used = total_chalk_used - extra_help_chalk\n\n    # Display the final amount of chalk used\n    result = final_chalk_used\n    return result"}
{"output": "def solution():\n    num_boys = 12\n    num_girls = 12\n\n    # Calculate the number of girls who are on varsity\n    num_girls_on_varsity = num_girls / 3\n\n    # Calculate the number of boys who are on varsity\n    num_boys_on_varsity = num_boys / 4\n\n    # Calculate the total number of students who are on varsity\n    total_on_varsity = num_girls_on_varsity + num_boys_on_varsity\n\n    # Calculate the total number of students who are not on varsity\n    total_not_on_varsity = num_boys + num_girls - total_on_varsity\n    result = total_not_on_varsity\n    return result"}
{"output": "def solution():\n    \n    # Define the number of face masks Mike bought\n    mike_masks = 5\n\n    # Calculate the number of face masks Johnny bought\n    johnny_masks = 3 * mike_masks + 2\n\n    # Display the number of face masks Johnny bought\n    result = johnny_masks\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of teeth\n    initial_teeth = 30\n\n    # Calculate the number of teeth the dentist drills\n    drills_teeth = 4\n\n    # Calculate the number of teeth the dentist caps\n    caps_teeth = drills_teeth + 7\n\n    # Calculate the total number of teeth that the dentist fixes\n    total_teeth = initial_teeth - drills_teeth - caps_teeth\n\n    # Calculate the percentage of teeth that the dentist fixes\n    percentage_fix = (total_teeth / initial_teeth) * 100\n\n    # return the result\n    result = percentage_fix\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of milk sold\n    total_milk_sold = 4000\n\n    # Calculate the total cost of the milk sold\n    total_cost = total_milk_sold * 3.5\n\n    # Calculate the amount of milk passed the expiry date\n    milk_passed = (2/5) * total_milk_sold\n\n    # Calculate the amount of milk not passed\n    milk_not_passed = total_milk_sold - milk_passed\n\n    # Calculate the refund amount\n    refund_amount = milk_not_passed * 3.5\n\n    result = refund_amount\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Colin's current age is x\n    # Then Wendy's age in 25 years will be x + 25\n    # And Wendy's age in 25 years will be x + 25\n    # So, we can write the equation:\n    # x + 25 = 5x + 25\n\n    # Simplifying the equation, we get:\n    # 2x + 25 = 7\n    # 2x = 7\n    # x = 7\n\n    # Therefore, Colin is currently 7 years old\n    result = 7\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the books\n    total_cost = 20000 / 3\n\n    # Calculate the number of books Bob can buy\n    num_books = total_cost / 500\n\n    # Calculate the number of books Bob can buy per school\n    num_books_per_school = num_books / 3\n    result = num_books_per_school\n    return result"}
{"output": "def solution():\n    \n    initial_apples = 2\n    first_apple_apples = 1\n    second_apple_apples = 5\n    third_apple_apples = 6\n    total_apples = initial_apples + first_apple_apples + second_apple_apples + third_apple_apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    total_kilos = 850\n    kg_per_bag = 50\n    cost_per_unit = 18\n    total_units = total_kilos / kg_per_bag\n    total_cost = total_units * cost_per_unit\n    result = total_cost\n    return result"}
{"output": "def solution():\n    cheese_slices_per_pizza = 12\n    pepperoni_slices_per_pizza = 8\n    num_friends = 6\n    cheese_slices_per_friend = 6\n    pepperoni_slices_per_friend = 4\n\n    # Calculate the total number of cheese pizza slices needed\n    total_cheese_slices = num_friends * cheese_slices_per_friend\n\n    # Calculate the total number of pepperoni pizza slices needed\n    total_pepperoni_slices = num_friends * pepperoni_slices_per_friend\n\n    # Calculate the total number of pizza pies needed\n    total_pies = (total_cheese_slices + total_pepperoni_slices) / cheese_slices_per_pizza\n    result = total_pies\n    return result"}
{"output": "def solution():\n    \n    monday_wednesday_friday_miles = 3 * 2\n    tuesday_thursday_miles = 5 * 2\n    total_miles = monday_wednesday_friday_miles + tuesday_thursday_miles\n    result = total_miles\n    return result"}
{"output": "def solution():\n    snowballs_per_hour = 20  # Jay can build 20 snowballs in an hour\n    melt_interval = 2  # Jay melt 2 snowballs every 15 minutes\n    target_snowballs = 60  # Jay wants to have 60 snowballs\n\n    # Calculate the number of snowballs Jay can build in an hour\n    snowballs_per_hour = snowballs_per_hour / melt_interval\n\n    # Calculate the time it will take Jay to build the target number of snowballs\n    time_in_minutes = (target_snowballs - snowballs_per_hour) * 15\n\n    result = time_in_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define John's current age and the ratio of John's age to Jim's age\n    john_age = 28\n    john_to_jim_ratio = 2\n\n    # Calculate Jim's current age\n    jim_age = (john_age - john_to_jim_ratio) / john_to_jim_ratio\n\n    # Display Jim's current age\n    result = jim_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices in an apple\n    SLICES_PER_APPLE = 8\n\n    # Calculate the number of slices eaten by Doxa's sister\n    sister_slices = SLICES_PER_APPLE + 1\n\n    # Calculate the number of slices eaten by Doxa's brother\n    brother_slices = sister_slices + 1\n\n    # Calculate the total number of slices eaten\n    total_slices = SLICES_PER_APPLE + sister_slices + brother_slices\n\n    # Display the total number of slices eaten\n    result = total_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of bandages ordered\n    total_bandages = 50\n\n    # Calculate the number of bandages used on the first day\n    day1_bandages = 38\n\n    # Calculate the number of bandages used on the second day\n    day2_bandages = day1_bandages - 10\n\n    # Calculate the number of bandages used on the third day\n    day3_bandages = (total_bandages - day1_bandages - day2_bandages) / 2\n\n    # Calculate the number of bandages left at the end of the third day\n    day3_bandages_left = 78\n\n    # Calculate the total number of bandages used\n    total_bandages_used = day1_bandages + day2_bandages + day3_bandages_used\n\n    # Calculate the number of bandages left at the beginning of the day\n    day1_bandages_left = total_bandages - total_bandages_used\n\n    # return the result\n    result = day1_bandages_left\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per inch of haircut and per color\n    COST_PER_INCH = 30\n    COLOR_COST = 40\n\n    # Define the starting and ending inches of hair\n    START_INCHS = 10\n    END_INCHS = 8\n\n    # Calculate the total cost of the haircut\n    cut_cost = (END_INCHS - START_INCHS) * COST_PER_INCH\n\n    # Calculate the total cost of the color\n    color_cost = START_INCHS * COST_PER_INCH\n\n    # Calculate the total cost of the cut\n    cut_cost = cut_cost * (END_INCHS - START_INCHS)\n\n    # Calculate the total cost of both the cut and color\n    total_cost = cut_cost + color_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 7.5\n    days_per_week = 6\n    hourly_rate = 1.5\n    total_hours = hours_per_day * days_per_week * 4\n    total_pay = total_hours * hourly_rate + 10\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the prices for each period\n    laundry_price = 3.00\n    room_price = 1.50\n    trash_price = 0.75\n    dishwasher_price = 0.50\n\n    # Calculate the total earnings from each period\n    laundry_earnings = laundry_price * 1\n    room_earnings = room_price * 2\n    trash_earnings = trash_price * 2\n    dishwasher_earnings = dishwasher_price * 6\n\n    # Calculate the total earnings from both periods\n    total_earnings = laundry_earnings + room_earnings + trash_earnings + dishwasher_earnings\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gallons of blood in each whale\n    GALLONS_PER_WHALE = 40\n\n    # Calculate the number of gallons of blood in each shark\n    GALLONS_PER_SHARK = GALLONS_PER_WHALE * 3\n\n    # Calculate the total number of gallons of blood in the sea\n    total_gallons = GALLONS_PER_WHALE * 10\n\n    # Display the total number of gallons of blood\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people who entered the restaurant in the morning\n    morning_people = 50\n\n    # Calculate the number of people who entered the restaurant at 10:00\n    first_people = morning_people + 40\n\n    # Calculate the number of people who entered the restaurant at 10:00\n    after_10_people = first_people * 2\n\n    # Calculate the number of people who ordered lunch\n    lunch_people = after_10_people * 2\n\n    # Calculate the number of people who entered the restaurant at evening\n    evening_people = first_people * 3\n\n    # Calculate the total number of people who entered the restaurant\n    total_people = morning_people + first_people + after_10_people + lunch_people + evening_people\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    num_red_packs = 5\n    num_black_packs = num_red_packs * 2\n    pens_per_pack = 5\n\n    # Calculate the total number of red pens\n    total_red_pens = num_red_packs * pens_per_pack\n\n    # Calculate the total number of black pens\n    total_black_pens = num_black_packs * pens_per_pack\n\n    # Calculate the total number of pens\n    total_pens = total_red_pens + total_black_pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the scotch bottles\n    scotch_cost = 10 * 600\n\n    # Calculate the cost of one bottle of cognac\n    cognac_cost = 1.5 * 600\n\n    # Calculate the total cost of the cognac bottles\n    cognac_total_cost = 2 * cognac_cost\n\n    # Calculate the total cost of everything\n    total_cost = scotch_cost + cognac_total_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees planted on the first day\n    white_oak_trees_1 = 20\n    lodgepole_trees_1 = 2 * white_oak_trees_1\n\n    # Define the number of trees planted on the second day\n    white_oak_trees_2 = white_oak_trees_1 + 10\n    lodgepole_trees_2 = lodgepole_trees_1 + (1/4)*white_oak_trees_1\n\n    # Calculate the total number of trees planted\n    total_trees = white_oak_trees_1 + lodgepole_trees_1 + white_oak_trees_2 + lodgepole_trees_2\n\n    # Display the total number of trees planted\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of gallons of root beer\n    initial_gallons = 24\n\n    # Calculate the number of gallons of root beer after the first day\n    first_day_gallons = initial_gallons - 4\n\n    # Calculate the number of gallons of root beer after the second day\n    second_day_gallons = first_day_gallons - 7\n\n    # Calculate the number of gallons of root beer visited by Ronnie\n    ronnie_gallons = 7\n\n    # Calculate the total number of gallons of root beer visited\n    total_gallons = first_day_gallons + second_day_gallons + ronnie_gallons\n\n    # Display the total number of gallons of root beer visited\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Let x be the number of coffee mugs in the teacher's lounge\n    x = (40 - 8) / 4\n\n    # Display the number of coffee mugs in the teacher's lounge\n    result = x\n    return result"}
{"output": "def solution():\n    \n    total_fish = 66\n    red_stripes = total_fish / 3\n    remaining_fish = total_fish - red_stripes\n    blue_stripes = remaining_fish * 5 / 11\n    total_stripes = red_stripes + blue_stripes\n    result = total_stripes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eyeshadow colors in each set\n    palettes_per_set = 2\n    makeup_sets = 3\n    colors_per_set = 6\n\n    # Calculate the total number of eyeshadow colors\n    total_colors = (palettes_per_set * colors_per_set) + (makeup_sets * colors_per_set)\n\n    # Calculate the number of colors Amy uses up\n    colors_used = total_colors / 2\n\n    # Calculate the number of eyeshadow colors left\n    colors_left = total_colors - colors_used\n\n    # Display the number of eyeshadow colors left\n    result = colors_left\n    return result"}
{"output": "def solution():\n    \n    # Define Mattison's height\n    mattison_height = 60\n\n    # Calculate the height of the two-story house\n    house_height = mattison_height * 7\n\n    # Calculate the height of the first floor\n    first_floor_height = mattison_height * 3\n\n    # Calculate the height of the second floor\n    second_floor_height = house_height - first_floor_height\n\n    # Display the height of the second floor\n    result = second_floor_height\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of shells\n    total_shells = 20\n\n    # Calculate the number of shells found by Alphas\n    alphas_shells = total_shells * 0.4\n\n    # Calculate the number of shells remaining\n    remaining_shells = total_shells - alphas_shells\n\n    # Calculate the number of shells found by The finders\n    finders_shells = remaining_shells * 0.6\n\n    # Calculate the number of shells found by Gogetters\n    gogetters_shells = total_shells - alphas_shells - finders_shells\n\n    # return the result\n    result = gogetters_shells\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and the distance each dog needs per day\n    NUM_DOGS = 4\n    dog1_distance = 1\n    dog2_distance = 4\n    dog3_distance = 3\n    dog4_distance = 3\n\n    # Calculate the total distance each dog needs per day\n    total_distance = (dog1_distance + dog2_distance + dog3_distance) / NUM_DOGS\n\n    # Calculate the distance the last dog needs per day\n    last_dog_distance = total_distance - total_distance\n\n    # Display the distance the last dog needs per day\n    result = last_dog_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial loan amount and the percentage of the loan\n    loan_amount = 250000\n    loan_percentage = 0.4\n\n    # Calculate the amount of the loan\n    loan_amount = loan_amount * loan_percentage\n\n    # Calculate the amount of the loan used to pay off debts\n    debt_amount = loan_amount * 0.6\n\n    # Calculate the amount of leftover money after paying off debts\n    leftover_money = loan_amount - debt_amount\n\n    # return the result\n    result = leftover_money\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each tuna and the price per kilogram\n    tuna1_weight = 56\n    tuna2_weight = 46\n    tuna3_weight = 26\n    price_per_kilogram = 0.5\n\n    # Calculate the total weight of all the tunas\n    total_weight = tuna1_weight + tuna2_weight + tuna3_weight\n\n    # Calculate the total earnings from selling all the tunas\n    total_earnings = total_weight * price_per_kilogram\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    # Calculate the selling price of the magazines\n    selling_price = (11/8) * 72\n\n    # Calculate the profit\n    profit = selling_price - 72\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    low_speed = 3\n    medium_speed = 3\n    high_speed = 3\n    low_water = 1\n    medium_water = 2 * low_water\n    high_water = 2 * medium_water\n    total_water = low_water + medium_water + high_water\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    packs = 10\n    balloons_per_pack = 30\n    balloons_left = 12\n    total_balloons = packs * balloons_per_pack\n    balloons_thrown = total_balloons - balloons_left\n    result = balloons_thrown\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of medicine in the first dosage\n    medicine_1 = 14\n\n    # Calculate the amount of medicine in the second dosage\n    medicine_2 = medicine_1 * 3\n\n    # Calculate the total amount of medicine in 8 doses\n    total_medicine = medicine_1 + medicine_2\n\n    # Display the total amount of medicine\n    result = total_medicine\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of Ali's class\n    ali_class_capacity = 120\n\n    # Calculate the capacity of John's class\n    john_class_capacity = ali_class_capacity / 8\n\n    # Calculate the combined capacity of both schools\n    combined_capacity = john_class_capacity + ali_class_capacity\n\n    # return the result\n    result = combined_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the initial loan and return rate\n    loan = 300\n    return_rate = 0.02\n\n    # Calculate the total amount owed after the return\n    total_owed = loan + (total_owed * return_rate)\n\n    # Calculate the amount Stephen will give his sister each month\n    monthly_payment = 25\n\n    # Calculate the remaining amount after the payment\n    remaining_amount = total_owed - monthly_payment\n\n    # Calculate the amount Stephen will pay in the twelfth month\n    twelfth_month_payment = remaining_amount + (monthly_payment * 11)\n\n    # Display the amount Stephen will pay in the twelfth month\n    result = twelfth_month_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the number of children and the number of diaper changes each child requires per day\n    num_children = 2\n    changes_per_child = 5\n\n    # Calculate the total number of diaper changes each child requires per day\n    total_changes_per_child = changes_per_child * num_children\n\n    # Calculate the number of diaper changes Jordan's wife changes per day\n    wife_changes_per_day = total_changes_per_child / 2\n\n    # Calculate the total number of diaper changes Jordan changes per day\n    jordan_changes_per_day = total_changes_per_child - wife_changes_per_day\n\n    # Display the total number of diaper changes Jordan changes per day\n    result = jordan_changes_per_day\n    return result"}
{"output": "def solution():\n    \n    square_base = 6\n    square_width = 6\n    square_height = 15\n    square_volume = square_base * square_width * square_height\n    jelly_bean_volume = 0.15\n    total_jelly_beans = square_volume / jelly_bean_volume\n    red_jelly_beans = total_jelly_beans * 0.3\n    far_off_guess = total_jelly_beans - red_jelly_beans\n    result = far_off_guess\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the bus\n    initial_people = 200\n\n    # Calculate the number of people who entered the bus at the first stop\n    first_stop_people = 40\n\n    # Calculate the total number of people who entered the bus at the first station\n    first_station_people = first_stop_people\n\n    # Calculate the number of people who entered the bus at the second station\n    second_station_people = (3/4) * first_station_people\n\n    # Calculate the number of people who entered the bus at the third station\n    third_station_people = first_station_people * 2\n\n    # Calculate the total number of people required to fill the remaining spaces on the bus\n    remaining_people = initial_people - first_stop_people - second_station_people + third_station_people\n\n    # Display the total number of people required to fill the remaining spaces\n    result = remaining_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of visits and the cost per visit\n    visits_per_year = 3\n    cost_per_visit = 2\n\n    # Calculate the total cost of visiting for 5 years\n    total_cost_5_years = visits_per_year * cost_per_visit * 5\n\n    # Calculate the total cost of visiting for 3 more years\n    total_cost_3_years = visits_per_year * cost_per_visit * 3\n\n    # Calculate the total cost of all visits\n    total_cost = total_cost_5_years + total_cost_3_years\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and points per grade\n    num_students = 10\n    points_per_grade = 7\n\n    # Calculate the total number of points in all grades\n    total_points = num_students * points_per_grade * 12\n\n    # Calculate the number of groups that can try and escape the room\n    num_groups = num_students // 8\n\n    # Calculate the total time needed to escape all the students\n    total_time = num_groups * 45\n\n    # Display the total time needed\n    result = total_time\n    return result"}
{"output": "def solution():\n    num_wooden_tables = 4\n    wooden_table_price = 20\n\n    num_roof_frames = 2\n    roof_frame_price = 10\n\n    # Calculate the total cost of all wooden tables\n    total_wooden_table_cost = num_wooden_tables * wooden_table_price\n\n    # Calculate the total cost of all roof frames\n    total_roof_frame_cost = num_roof_frames * roof_frame_price\n\n    # Calculate the total cost of all animals\n    total_cost = total_wooden_table_cost + total_roof_frame_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the board\n    board_length = 40\n\n    # Calculate the length of the shorter piece\n    shorter_piece = board_length / 2\n\n    # Calculate the length of the longer piece\n    longer_piece = shorter_piece * 4\n\n    # Display the length of the longer piece\n    result = longer_piece\n    return result"}
{"output": "def solution():\n    \n    meatballs_per_pound = 16\n    total_meatballs = 80\n    pounds_of_meatballs = total_meatballs / meatballs_per_pound\n    tablespoons_per_pound = 2\n    total_tablespoons = pounds_of_meatballs * tablespoons_per_pound\n    result = total_tablespoons\n    return result"}
{"output": "def solution():\n    \n    # Define the width of each window and the number of windows\n    WINDOW_WIDTH = 35\n    NUM_WINDOWS = 5\n\n    # Calculate the total width of all the windows\n    total_width = WINDOW_WIDTH * NUM_WINDOWS\n\n    # Calculate the amount of fabric needed\n    fabric_needed = total_width * 2\n\n    # Display the amount of fabric needed\n    result = fabric_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per minute of the call and the discount rate\n    COST_PER_MINUTE = 0.25\n    DISCOUNT_RATE = 0.2\n\n    # Calculate the total cost of the call for 16 minutes\n    total_cost = (16 * COST_PER_MINUTE) - (16 * DISCOUNT_RATE)\n\n    # Calculate the cost per minute of the call\n    cost_per_minute = total_cost / 36\n\n    # Display the cost per minute of the call\n    result = cost_per_minute\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of rain on Monday\n    monday_rain = 2\n\n    # Calculate the amount of rain on Tuesday\n    tuesday_rain = 2 * monday_rain + 1\n\n    # Display the amount of rain on Tuesday\n    result = tuesday_rain\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and treats per person\n    num_people = 5\n    treats_per_person = 2\n\n    # Calculate the total number of treats\n    total_treats = num_people * treats_per_person\n\n    # Calculate the number of brownies\n    num_brownies = 3 * total_treats - 2\n\n    # Calculate the number of cupcakes\n    num_cupcakes = total_treats + num_brownies\n\n    # Display the number of cupcakes\n    result = num_cupcakes\n    return result"}
{"output": "def solution():\n    \n    # Define the starting prices of the manicure and the pedicure\n    MANICURE_PRICE = 35\n    PENICURE_PRICE = 40\n\n    # Calculate the discounted prices of the manicure and the pedicure\n    MANICURE_DISCOUNTED_PRICE = MANICURE_PRICE * 0.8\n    PENICURE_DISCOUNTED_PRICE = PENICURE_PRICE * 0.8\n\n    # Calculate the total cost of both manicure and pedicure\n    total_cost = MANICURE_DISCOUNTED_PRICE + PENICURE_DISCOUNTED_PRICE\n\n    # Calculate the total cost of adding nail art on each finger\n    finger_cost = 3 * 2\n\n    # Calculate the total cost of both fingers\n    total_cost += finger_cost * finger_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of magazines ordered and the number of issues each magazine sends\n    ordered_magazines = 3\n    ordered_issues = 12\n\n    # Define the number of magazines Susan has and the number of issues each magazine sends\n    susan_magazines = 1\n    susan_issues = 6\n\n    # Calculate the number of magazines Susan's last magazine sends\n    last_magazines = susan_magazines * 4 * susan_issues\n\n    # Calculate the total number of magazines Susan gets every year\n    total_magazines = (ordered_magazines * ordered_issues) + susan_magazines + last_magazines\n\n    # Display the total number of magazines\n    result = total_magazines\n    return result"}
{"output": "def solution():\n    \n    # Define the number of paintings Samantha has\n    samantha_paintings = 27\n\n    # Calculate the number of paintings Shelley has\n    shelley_paintings = samantha_paintings + 12\n\n    # Calculate the number of paintings Kim has\n    kim_paintings = shelley_paintings - 8\n\n    # Display the number of paintings Kim has\n    result = kim_paintings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the toy\n    initial_price = 40\n\n    # Calculate the price after the increase in December\n    dec_price = initial_price + (initial_price * 0.8)\n\n    # Calculate the price after the decrease in January\n    jan_price = dec_price - (dec_price * 0.5)\n\n    # return the result\n    result = jan_price\n    return result"}
{"output": "def solution():\n    \n    standard_fee_per_hour = 80\n    veteran_fee_per_hour = standard_fee_per_hour * 0.75\n    num_standard_lessons = 4\n    num_veteran_lessons = 2\n    total_cost = (num_standard_lessons * standard_fee_per_hour) + (num_veteran_lessons * veteran_fee_per_hour)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the sum of the scores\n    sum_scores = 50 + 80 + 60 + 40 + 90 + 70 + 60\n\n    # Calculate the average score\n    average_score = sum_scores / 5\n\n    # Display the average score\n    result = average_score\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pomelos\n    initial_pomelos = 20\n\n    # Calculate the number of pomelos left with Eve\n    pomelos_left = initial_pomelos * (1/4)\n\n    # Calculate the number of pomelos given away\n    pomelos_given_away = initial_pomelos - pomelos_left\n\n    # Display the number of pomelos given away\n    result = pomelos_given_away\n    return result"}
{"output": "def solution():\n    \n    total_apples = 60\n    eaten_apples = 2/5 * total_apples\n    remaining_apples = total_apples - eaten_apples\n    sister_apples = 0.25 * remaining_apples\n    sold_apples = remaining_apples - sister_apples\n    price_per_apple = 3\n    money_received = sold_apples * price_per_apple\n    result = money_received\n    return result"}
{"output": "def solution():\n    \n    last_year_novels = 9\n    this_year_novels = (3/4) * last_year_novels\n    result = this_year_novels\n    return result"}
{"output": "def solution():\n    \n    # Define the average speed of the interstate\n    AVERAGE_SPEED = 50\n\n    # Define the number of days\n    DAYS = 3\n\n    # Define the distance between Alaska and Texas\n    distance = 6000\n\n    # Calculate the total distance covered\n    total_distance = distance * DAYS\n\n    # Calculate the percentage of distance covered\n    percentage_covered = (total_distance / 6000) * 100\n\n    # Display the percentage of distance covered\n    result = percentage_covered\n    return result"}
{"output": "def solution():\n    \n    # Define the number of grapes eaten by Madeline\n    madeline_grapes = 6\n\n    # Calculate the number of grapes used for grape juice\n    grape_juice_grapes = madeline_grapes * 5\n\n    # Calculate the number of grapes remaining\n    remaining_grapes = madeline_grapes - grape_juice_grapes\n\n    # Calculate the number of grapes used for pies\n    pie_grapes = remaining_grapes // 12\n\n    # Calculate the total number of grapes at the beginning\n    total_grapes = madeline_grapes + grape_juice_grapes + pie_grapes\n\n    # Display the total number of grapes at the beginning\n    result = total_grapes\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of teachers and the number of sick teachers\n    total_teachers = 82\n    sick_teachers = 13\n\n    # Calculate the number of teachers at the school that day\n    school_teachers = total_teachers - sick_teachers\n\n    # Add the number of substitute teachers\n    school_teachers += 9\n\n    # return the result\n    result = school_teachers\n    return result"}
{"output": "def solution():\n    \n    pasta_cost = 1\n    cheddar_cost = 3\n    gruyere_cost = 2 * cheddar_cost\n    total_cost_per_week = pasta_cost + cheddar_cost + gruyere_cost\n    total_cost_per_year = total_cost_per_week * 52\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classrooms and the time per classroom\n    num_classrooms = 80\n    time_per_classroom = 15\n\n    # Calculate the total time spent cleaning classrooms\n    total_time = num_classrooms * time_per_classroom\n\n    # Convert the total time to minutes\n    total_time_minutes = total_time * 60\n\n    # Calculate the percentage of time spent cleaning classrooms per day\n    percentage_per_day = (total_time_minutes / 8) * 100\n\n    # Display the percentage of time spent cleaning classrooms per day\n    result = percentage_per_day\n    return result"}
{"output": "def solution():\n    \n    middle_shelf_capacity = 10\n    bottom_shelf_capacity = 2 * middle_shelf_capacity\n    top_shelf_capacity = bottom_shelf_capacity - 5\n    total_books = 110\n    total_shelf_capacity = middle_shelf_capacity + bottom_shelf_capacity + top_shelf_capacity\n    total_books_needed = total_books - total_shelf_capacity\n    result = total_books_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each egg\n    COST_PER_DOZEN = 2.40\n    SELLING_PRICE_PER_EGG = 1\n\n    # Calculate the total cost of the eggs\n    total_cost = 5 * COST_PER_DOZEN\n\n    # Calculate the total revenue from selling the eggs\n    total_revenue = 3 * SELLING_PRICE_PER_EGG\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    total_hats = 100\n    red_hats = total_hats / 2\n    remaining_hats = total_hats - red_hats\n    blue_hats = (3/5) * remaining_hats\n    white_hats = remaining_hats - blue_hats\n    result = white_hats\n    return result"}
{"output": "def solution():\n    num_sticks = 30\n    cost_per_bag = 18.00\n    discount = 3.00\n\n    # Calculate the total cost of all sticks of jerky\n    total_cost = num_sticks * cost_per_bag - discount\n\n    # Calculate the cost per stick of jerky\n    cost_per_stick = total_cost / num_sticks\n\n    # Convert the cost per stick to cents\n    cost_per_stick_cents = cost_per_stick * 100\n    result = cost_per_stick_cents\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of questions and the percentage of correct answers\n    total_questions = 70 + 40\n    correct_percentage = 0.7\n\n    # Calculate the number of correct questions on the first test\n    correct_questions_1 = total_questions * correct_percentage\n\n    # Calculate the number of correct questions on the second test\n    correct_questions_2 = total_questions - correct_questions_1\n\n    # Calculate the number of questions needed to move on the second test\n    questions_needed = correct_questions_2 - correct_questions_2\n\n    # return the result\n    result = questions_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of ice cubes\n    total_ice_cubes = 116\n\n    # Calculate the number of strawberry cubes\n    strawberry_cubes = total_ice_cubes / 7\n\n    # Calculate the number of blueberry cubes\n    blueberry_cubes = strawberry_cubes * 5 - 4\n\n    # return the result\n    result = blueberry_cubes\n    return result"}
{"output": "def solution():\n    \n    games_per_year = 40\n    points_per_game = 21\n    total_points = games_per_year * points_per_game * 4\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 10\n\n    # Calculate the number of marbles he dropped over the pebble\n    dropped_marbles = initial_marbles // 2\n\n    # Calculate the number of marbles he scrambled to search\n    scrambled_marbles = 3\n\n    # Calculate the number of marbles he inspected\n    inspected_marbles = initial_marbles - dropped_marbles - scrambled_marbles\n\n    # Calculate the number of marbles he ended up with\n    end_up_marbles = scrambled_marbles + inspected_marbles\n\n    # Display the number of marbles he ended up with\n    result = end_up_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Jason needs to sell and his bonus\n    cars_needed = 15\n    bonus = 1\n\n    # Calculate the average number of cars sold per customer\n    cars_per_customer = cars_per_customer / 2\n\n    # Calculate the number of telephone calls needed per customer\n    calls_per_customer = 25 / cars_per_customer\n\n    # Calculate the total number of telephone calls needed\n    total_calls = calls_per_customer * cars_needed\n\n    # Display the total number of telephone calls needed\n    result = total_calls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rooms and the number of people\n    num_rooms = 8\n    num_people = 4\n\n    # Calculate the number of flashlights\n    num_flashlights = num_people * 2\n\n    # Calculate the number of small and medium candles\n    num_small_rooms = num_rooms // 2\n    num_medium_rooms = num_rooms - num_small_rooms\n    num_small_candles = 4 * num_small_rooms\n    num_medium_candles = 5 * num_medium_rooms\n\n    # Calculate the total number of candles\n    total_candles = num_small_candles + num_medium_candles\n\n    # Display the total number of candles\n    result = total_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bags of chips and the number of chips per bag\n    bags_of_chips = 2\n    chips_per_bag = 55\n\n    # Calculate the total number of chips\n    total_chips = bags_of_chips * chips_per_bag\n\n    # Calculate the number of chips each person gets\n    chips_per_person = total_chips / 5\n\n    # Display the number of chips each person gets\n    result = chips_per_person\n    return result"}
{"output": "def solution():\n    \n    first_side_time = 5\n    second_side_time = 2 * first_side_time\n    third_side_time = 2 * first_side_time\n    last_side_time = 0.5 * first_side_time\n    total_time = first_side_time + second_side_time + third_side_time + last_side_time + 5\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of helmets\n    helmets = 20\n\n    # Calculate the number of robots\n    robots = helmets / 2\n\n    # Calculate the number of footballs\n    footballs = helmets / 2\n\n    # Calculate the total number of items\n    total_items = robots + helmets + footballs\n\n    # Display the total number of items\n    result = total_items\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 6\n    minutes_per_call = 15\n    calls_per_day = hours_per_day / minutes_per_call\n    days_per_week = 5\n    total_calls = calls_per_day * days_per_week\n    result = total_calls\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to dry one painting with the old varnish\n    old_time = 7\n\n    # Define the time it takes to dry one painting with the new varnish\n    new_time = 12\n\n    # Calculate the total time to dry 6 paintings with the old varnish\n    total_old_time = old_time * 6\n\n    # Calculate the total time to dry 6 paintings with the new varnish\n    total_new_time = new_time * 6\n\n    # Calculate the difference in time between the two scenarios\n    time_difference = total_new_time - total_old_time\n\n    # return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of plants and the amount of water needed for each type of plant\n    num_plants = 20\n    half_water_per_plant = 0.5\n    one_water_per_plant = 1\n    quarter_water_per_plant = 0.25\n\n    # Calculate the total amount of water needed for each type of plant\n    half_water_total = num_plants * half_water_per_plant\n    one_water_total = num_plants * one_water_per_plant\n    quarter_water_total = num_plants * quarter_water_per_plant\n\n    # Calculate the total amount of water needed for all plants\n    total_water = half_water_total + one_water_total + quarter_water_total\n\n    # Display the total amount of water needed\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    distance = 200\n    land_speed = 20\n    water_speed = 10\n    land_distance = distance / 2\n    water_distance = distance / 2\n    total_time = (land_distance / land_speed) + (water_distance / water_speed)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    sticks_needed = 56\n    sticks_per_box = 8\n    boxes_needed = sticks_needed / sticks_per_box\n    box_cost = 2\n    total_cost = boxes_needed * box_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_phones = 5\n    main_phone_cost = 20\n\n    # Calculate the cost of each phone\n    phone_cost = main_phone_cost / 2\n\n    # Calculate the total cost of all phones\n    total_cost = main_phone_cost + (num_phones * phone_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    doughnuts_per_day = 10\n    doughnuts_per_june = doughnuts_per_day * 30\n    price_per_doughnut = 2\n    money_made = doughnuts_per_june * price_per_doughnut\n    result = money_made\n    return result"}
{"output": "def solution():\n    total_photos = 210\n    photos_per_batch = 7\n    batches_per_day = 6\n\n    # Calculate the total number of batches needed to upload all the photos\n    total_batches = total_photos / photos_per_batch\n\n    # Calculate the total number of days needed to upload all the batches\n    total_days = total_batches / batches_per_day\n    result = total_days\n    return result"}
{"output": "def solution():\n    num_blouses = 5\n    blouse_price = 5.0\n\n    num_skirts = 1\n    skirt_price = 6.0\n\n    num_pants = 2\n    pant_price = 8.0\n\n    num_weeks = 5\n\n    # Calculate the total cost of all blouses\n    total_blouse_cost = num_blouses * blouse_price * num_weeks\n\n    # Calculate the total cost of all skirts\n    total_skirt_cost = num_skirts * skirt_price * num_weeks\n\n    # Calculate the total cost of all pants\n    total_pant_cost = num_pants * pant_price * num_weeks\n\n    # Calculate the total cost of all dry-cleaning items\n    total_dry_cleaning_cost = total_blouse_cost + total_skirt_cost + total_pant_cost\n    result = total_dry_cleaning_cost\n    return result"}
{"output": "def solution():\n    \n    # Define John's normal speaking speed\n    NORMAL_SPEED = 150\n\n    # Define John's final speaking speed after training\n    FINAL_SPEED = NORMAL_SPEED * 2.5\n\n    # Define the number of pages to speak\n    PAGES = 10\n\n    # Define the number of words per page\n    WORDS_PER_PAGE = 450\n\n    # Calculate the total number of words to speak\n    total_words = FINAL_SPEED * PAGES\n\n    # Calculate the total time to speak all the words\n    total_time = total_words / WORDS_PER_PAGE\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    first_day = 50\n    second_day = first_day + 20\n    third_day = 2 * second_day\n    total_people = first_day + second_day + third_day\n    result = total_people\n    return result"}
{"output": "def solution():\n    # Calculate the number of kernels that popped in the first 30 seconds\n    first_30_seconds = 20\n\n    # Calculate the number of kernels that popped in the next 30 seconds\n    next_30_seconds = 3 * first_30_seconds\n\n    # Calculate the number of kernels that popped in the next thirty seconds\n    next_thirty_seconds = 4 * next_30_seconds\n\n    # Calculate the number of kernels that popped in the final 30 seconds\n    final_30_seconds = (1/2) * (first_30_seconds + next_thirty_seconds)\n\n    # Calculate the total number of kernels that popped\n    total_kernels = first_30_seconds + next_30_seconds + final_30_seconds\n\n    # Calculate the number of kernels that popped in the final quarter seconds\n    final_quarter_seconds = 1/4 * final_30_seconds\n\n    result = final_quarter_seconds\n    return result"}
{"output": "def solution():\n    \n    gallons_of_lemonade = 4\n    cups_per_gallon = 2\n    total_cups_of_juice = gallons_of_lemonade * cups_per_gallon\n    lemons_per_gallon = 1 / cups_per_gallon\n    total_lemons = total_cups_of_juice / lemons_per_gallon\n    result = total_lemons\n    return result"}
{"output": "def solution():\n    \n    german_shepherd_food_per_day = 5\n    bulldog_food_per_day = 3\n    total_food_per_day = (3 * german_shepherd_food_per_day) + (2 * bulldog_food_per_day)\n    total_food_per_week = total_food_per_day * 7\n    result = total_food_per_week\n    return result"}
{"output": "def solution():\n    num_2legged_animals = 10\n    num_4legged_animals = 15\n\n    # Calculate the total number of pairs of 2-legged animals\n    total_2legged_legs = num_2legged_animals * 2\n\n    # Calculate the total number of pairs of 4-legged animals\n    total_4legged_legs = num_4legged_animals * 4\n\n    # Calculate the total number of pairs of animal legs\n    total_legs = total_2legged_legs + total_4legged_legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue blocks and calculate the number of yellow blocks\n    blue_blocks = 4\n    yellow_blocks = 2 * blue_blocks\n\n    # Calculate the total number of blocks\n    total_blocks = 32\n\n    # Calculate the number of red blocks\n    red_blocks = total_blocks - blue_blocks - yellow_blocks\n\n    # Display the number of red blocks\n    result = red_blocks\n    return result"}
{"output": "def solution():\n    # Calculate the distance Elvis traveled in the first 5 hours\n    distance_first_leg = 18 * 5\n\n    # Calculate the distance Elvis traveled in the next 8 hours\n    distance_second_leg = 18 * 8\n\n    # Calculate the total distance Elvis traveled\n    total_distance = distance_first_leg + distance_second_leg\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the boat\n    initial_cost = 9000\n\n    # Calculate the cost after the first year\n    first_year_cost = initial_cost * 0.7\n\n    # Calculate the cost after the second year\n    second_year_cost = first_year_cost * 0.7\n\n    # Calculate the cost after the third year\n    third_year_cost = second_year_cost * 0.2\n\n    # Calculate the total cost after the three years\n    total_cost = initial_cost - first_year_cost - second_year_cost - third_year_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_candies = 232\n    red_candies = 54\n    orange_candies = red_candies * 2\n    yellow_candies = red_candies / 2\n    pink_candies = total_candies - (red_candies + orange_candies + yellow_candies)\n    result = pink_candies\n    return result"}
{"output": "def solution():\n    \n    hotel_cost_per_night = 80\n    bus_cost_per_night = hotel_cost_per_night * 0.1\n    total_hotel_cost = hotel_cost_per_night * 3\n    total_bus_cost = bus_cost_per_night * 7\n    total_cost = total_hotel_cost + total_bus_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    mazie_marbles = 52\n    dallas_marbles = 21\n    dropped_marbles = 4\n    remaining_marbles = mazie_marbles - dallas_marbles - dropped_marbles\n    darla_marbles = remaining_marbles // 2\n    result = darla_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of adult and child tickets and popcorns\n    ADULT_TICKET_PRICE = 12\n    CHILD_TICKET_PRICE = 8\n    POPCORN_PRICE = 3\n\n    # Calculate the total cost of adult and child tickets\n    total_cost = (ADULT_TICKET_PRICE + CHILD_TICKET_PRICE) * 2\n\n    # Calculate the total cost of popcorns\n    total_popcorns_cost = (2 * POPCORN_PRICE) * 2\n\n    # Calculate the total cost\n    total_cost = total_cost + total_popcorns_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    car_weight = 1200\n    luggage_weight = 250\n    children_weight = 2 * 75\n    total_weight = car_weight + luggage_weight + children_weight\n    force_percent = 0.01\n    force_needed = total_weight * force_percent\n    result = force_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the backyard fence\n    long_side = 20\n    short_side = 15\n\n    # Calculate the total length of the backyard fence\n    total_length = long_side + short_side\n\n    # return the result\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    mia_age = 40 + 16\n    emma_age = mia_age - 16\n    total_age = mia_age + emma_age\n    average_age = total_age / 2\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of seashells found by each person\n    tom_seashells = 214\n    nancy_seashells = 432\n    benny_seashells = 86\n\n    # Calculate the total number of seashells found\n    total_seashells = tom_seashells + nancy_seashells + benny_seashells\n\n    # Subtract the number of cracked seashells\n    good_seashells = total_seashells - 67\n\n    # Display the number of good seashells found\n    result = good_seashells\n    return result"}
{"output": "def solution():\n    num_people = 12\n    dinner_plate_cost = 6.0\n    bowl_cost = 5.0\n    salad_plate_cost = 4.0\n\n    # Calculate the total cost of all dinner plates\n    total_dinner_cost = num_people * dinner_plate_cost\n\n    # Calculate the total cost of all bowls\n    total_bowl_cost = num_people * bowl_cost\n\n    # Calculate the total cost of all salad plates\n    total_salad_cost = num_people * salad_plate_cost\n\n    # Calculate the total cost of all place settings\n    total_cost = total_dinner_cost + total_bowl_cost + total_salad_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    steve_time = 10\n    anna_time = (steve_time / 2) + 2\n    result = anna_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pigs and the amount of feed they eat per day\n    NUM_PIGS = 5\n    FEED_PER_PIG = 4\n\n    # Calculate the total amount of feed eaten per day\n    total_feed_per_day = NUM_PIGS * FEED_PER_PIG * 2\n\n    # Calculate the total amount of feed eaten in a week\n    total_feed_per_week = total_feed_per_day * 7\n\n    # Calculate the amount of feed left after a week\n    feed_left = 300 - total_feed_per_week\n\n    # Display the amount of feed left\n    result = feed_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and hot dogs needed per guest\n    guests = 20\n    hot_dogs_per_guest = 2\n\n    # Calculate the total number of hot dogs needed\n    total_hot_dogs = guests * hot_dogs_per_guest\n\n    # Calculate the number of hot dogs needed to reach the party\n    hot_dogs_needed = total_hot_dogs - 4\n\n    # Calculate the number of hot dogs per pack\n    hot_dogs_per_pack = 6\n\n    # Calculate the total number of hot dogs needed\n    total_hot_dogs_needed = hot_dogs_needed / hot_dogs_per_pack\n\n    # Calculate the total cost of the hot dogs\n    total_cost = total_hot_dogs_needed * 2\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_cupcakes = 20\n    cupcake_price = 2\n\n    num_cookies = 40\n    cookie_price = 1\n\n    num_trays = 5\n    tray_price = 4\n\n    # Calculate the total revenue from selling cupcakes\n    total_cupcake_revenue = num_cupcakes * cupcake_price\n\n    # Calculate the total revenue from selling cookies\n    total_cookie_revenue = num_cookies * cookie_price\n\n    # Calculate the total revenue from selling trays\n    total_tray_revenue = num_trays * tray_price\n\n    # Calculate the total revenue from all sales\n    total_revenue = total_cupcake_revenue + total_cookie_revenue + total_tray_revenue\n\n    # Calculate the amount of money Frances has left\n    money_left = total_revenue - total_revenue\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of children\n    initial_children = 5\n\n    # Calculate the number of children after the first street\n    first_street_children = initial_children + 5\n\n    # Calculate the number of children after the second street\n    second_street_children = first_street_children + 2\n\n    # Calculate the number of children after the third street\n    third_street_children = second_street_children + 2\n\n    # Calculate the total number of children\n    total_children = first_street_children + second_street_children + third_street_children\n\n    # Display the total number of children\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    total_meals = 1500\n    friday_meals = 64\n    saturday_meals = 30\n    sunday_meals = 48\n    remaining_meals = total_meals - friday_meals - saturday_meals - sunday_meals\n    result = remaining_meals\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin in cents\n    quarter_value = 25\n    nickel_value = 5\n    dime_value = 10\n\n    # Calculate the total value of the coins in cents\n    total_value = (quarter_value * 25) + (nickel_value * 2) + (dime_value * 7)\n\n    # Display the total value in cents\n    result = total_value\n    return result"}
{"output": "def solution():\n    # Calculate the age of the older brother\n    older_brother_age = 12 / 2\n\n    # Calculate the age of the sisters\n    sisters_age = 16\n\n    # Calculate the age of the brothers\n    brothers_age = 2 * older_brother_age\n\n    # Calculate the age of the sisters\n    sisters_age = 3 * sisters_age\n\n    # Calculate the total age of all the siblings\n    total_age = sisters_age + brothers_age + sisters_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    meditation_time = 15\n    sleep_time = 15\n    days_per_week = 5\n    weeks = 4\n    total_meditation_time = meditation_time * days_per_week * weeks\n    total_sleep_time = sleep_time * days_per_week * weeks\n    total_time = total_meditation_time + total_sleep_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the area of each type of shirt\n    SMALL_SHIRT_AREA = 3\n    MEDIUM_SHIRT_AREA = 4\n    LARGE_SHIRT_AREA = 6\n\n    # Define the number of each type of shirt used\n    small_shirts = 11\n    medium_shirts = 8\n    large_shirts = 6\n\n    # Calculate the total area of each type of shirt\n    total_small_area = small_shirts * SMALL_SHIRT_AREA\n    total_medium_area = medium_shirts * MEDIUM_SHIRT_AREA\n    total_large_area = large_shirts * LARGE_SHIRT_AREA\n\n    # Calculate the total area of the quilt\n    total_area = total_small_area + total_medium_area + total_large_area\n\n    # Display the total area of the quilt\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    small_sunflower_seeds = 3 * 12\n    large_sunflower_seeds = small_sunflower_seeds * 1.5\n    total_seeds = small_sunflower_seeds + large_sunflower_seeds\n    result = total_seeds\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pens George has\n    george_pens = 18\n\n    # Calculate the number of pens Timothy has\n    timothy_pens = george_pens * 3\n\n    # Calculate the number of pens Sarah has\n    sarah_pens = timothy_pens / 2\n\n    # Display the number of pens Sarah has\n    result = sarah_pens\n    return result"}
{"output": "def solution():\n    \n    albert_height = 36\n    anne_height = 2 * albert_height\n    jackie_height = anne_height - 2\n    result = jackie_height\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bars produced per day and the price per bar\n    BARS_PER_DAY = 5000\n    PRICE_PER_BAR = 2\n\n    # Calculate the total number of bars produced over two weeks\n    total_bars = BARS_PER_DAY * 14\n\n    # Calculate the total revenue from selling all the bars\n    total_revenue = total_bars * PRICE_PER_BAR\n\n    # Display the total revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of each T-shirt and the discount percentage\n    ORIGINAL_PRICE = 8\n    DISCOUNT_PERCENTAGE = 50\n\n    # Calculate the discounted price of each T-shirt\n    discounted_price = ORIGINAL_PRICE * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the final price of the shoes\n    final_price = 40\n\n    # Calculate the total cost of the T-shirts\n    tshirts_cost = 2 * discounted_price\n\n    # Calculate the total cost of the shoes\n    shoes_cost = final_price * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the total cost of all the items\n    total_cost = tshirts_cost + shoes_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    weekly_allowance = 6\n    num_weeks = 3\n    total_allowance = weekly_allowance * num_weeks\n    ice_cream_cost = 1.25\n    num_friends = 3\n    total_ice_cream_cost = ice_cream_cost * num_friends\n    remaining_money = total_allowance - total_ice_cream_cost\n    movie_cost = 6.5\n    num_movies = remaining_money // movie_cost\n    result = num_movies\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    leggings_price = 100\n    photo_frame_price = 5\n    sunglasses_price = 30\n    bathrobes_price = 100\n\n    # Calculate the total cost of each item\n    ellen_total = leggings_price + photo_frame_price\n    lani_total = sunglasses_price + (2 * bathrobes_price)\n\n    # Calculate the total cost of both items\n    total_cost = ellen_total + lani_total\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_jars = 10\n    passion_fruit_per_jar = 2\n    jackfruit_per_jar = 1.5\n    honey_per_jar = 2\n    cost_per_pound_passion_fruit = 6\n    cost_per_pound_jackfruit = 8\n    cost_per_pound_honey = 10\n    price_per_jar = 50\n\n    # Calculate the total cost of all passion fruit\n    total_passion_cost = num_jars * passion_fruit_per_jar * cost_per_pound_passion_fruit\n\n    # Calculate the total cost of all jackfruit\n    total_jackfruit_cost = num_jars * jackfruit_per_jar * cost_per_pound_jackfruit\n\n    # Calculate the total cost of all honey\n    total_honey_cost = num_jars * honey_per_jar * cost_per_pound_honey\n\n    # Calculate the total pro"}
{"output": "def solution():\n    \n    # Define the value of each coin in dollars\n    quarter_value = 25\n    dime_value = 10\n    nickel_value = 5\n    penny_value = 1\n\n    # Calculate the total value of each coin in dollars\n    quarter_total = 32 * quarter_value\n    dime_total = 95 * dime_value\n    nickel_total = 120 * nickel_value\n    penny_total = 750 * penny_value\n\n    # Calculate the total value in dollars\n    total_value = quarter_total + dime_total + nickel_total + penny_total\n\n    # return the result\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    ice_cream_cost = 3.5\n    movie_ticket_cost = 7.5\n    bracelet_cost = 8.5\n    total_spent = ice_cream_cost + (2 * movie_ticket_cost) + bracelet_cost\n    money_left = 40 - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    cars_per_day = 3  # Josh services 3 cars a day\n    days_per_week = 7  # There are 7 days in a week\n    weeks = 2  # Josh wants to know how much he will make in 2 weeks\n\n    # Calculate the total number of cars Josh will make in 2 weeks\n    total_cars = cars_per_day * days_per_week * weeks\n\n    # Calculate the total amount of money Josh will make\n    total_money = total_cars * 4  # Josh gets paid $4 per car\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    oatmeal_cookies = 9\n    chocolate_chip_cookies = 4\n    sugar_cookies = 5\n    eaten_oatmeal_cookies = 3\n    eaten_chocolate_chip_cookies = 1\n    eaten_sugar_cookies = 2\n    eaten_friends_cookies = 2\n    eaten_dinner_cookies = 4\n    remaining_oatmeal_cookies = oatmeal_cookies - eaten_oatmeal_cookies\n    remaining_chocolate_chip_cookies = chocolate_chip_cookies - eaten_chocolate_chip_cookies\n    remaining_sugar_cookies = sugar_cookies - eaten_sugar_cookies\n    total_cookies = remaining_oatmeal_cookies + remaining_chocolate_chip_cookies + remaining_sugar_cookies + eaten_oatmeal_cookies + eaten_friends_cookies + eaten_dinner_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toy soldiers and the price per toy\n    NUM_TOYS = 12\n    PRICE_PER_TOY = 5\n\n    # Calculate the total amount earned from the first half of the collection\n    half_collection_price = (NUM_TOYS // 2) * PRICE_PER_TOY\n\n    # Calculate the total amount earned from the second half of the collection\n    half_collection_price = (NUM_TOYS - half_collection_price) * PRICE_PER_TOY\n\n    # Calculate the total amount earned\n    total_earnings = half_collection_price + half_collection_price\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days Nate digs\n    days = 14\n\n    # Define the number of holes the dog can dig per day\n    holes_per_day = 6\n\n    # Define the number of new holes the dog keeps per night\n    new_holes_per_night = 6\n\n    # Calculate the total number of holes to dig\n    total_holes = days * holes_per_day\n\n    # Calculate the total number of new holes to dig\n    new_holes = total_holes + new_holes_per_night\n\n    # Calculate the number of weeks it takes to dig all the holes\n    weeks = new_holes / (total_holes * new_holes_per_night)\n\n    # Display the number of weeks\n    result = weeks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students in each school\n    normal_students = 4000\n    butler_students = normal_students * 3/4\n\n    # Calculate the average number of students in each school\n    normal_avg_students = normal_students / 12\n    butler_avg_students = butler_students / 12\n\n    # Calculate the difference in the number of students\n    difference = normal_avg_students - butler_avg_students\n\n    # Display the difference in the number of students\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 7995\n    rainbow_cookies = 2595\n    oatmeal_cookies = 3075\n    chocolate_chip_cookies = total_cookies - rainbow_cookies - oatmeal_cookies\n    result = chocolate_chip_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of test tubes, beakers, and Petri dishes\n    test_tubes = 16\n    beakers = 7\n    petri_dishes = 14\n\n    # Calculate the number of test tubes Igor gathered\n    test_tubes_gathered = test_tubes / 2\n\n    # Calculate the number of Petri dishes Igor gathered\n    petri_dishes_gathered = petri_dishes + 2\n\n    # Calculate the total number of test tubes and beakers gathered\n    total_test_tubes = test_tubes_gathered + test_tubes_gathered\n    total_beakers = beakers + petri_dishes_gathered\n\n    # Display the total number of beakers gathered\n    result = total_beakers\n    return result"}
{"output": "def solution():\n    \n    num_tables = 4\n    legs_per_table = 4\n    screws_per_leg = 2\n    total_screws = num_tables * legs_per_table * screws_per_leg\n    screws_left = 40 - total_screws\n    result = screws_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in the first basket\n    eggs_first_basket = 10\n\n    # Calculate the number of eggs in the second basket\n    eggs_second_basket = 2 * eggs_first_basket\n\n    # Calculate the total number of eggs in both baskets\n    total_eggs = eggs_first_basket + eggs_second_basket\n\n    # Display the total number of eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    alexandra_money = 430\n    kim_money = alexandra_money + 320\n    sarah_money = 300\n    maryam_money = sarah_money + 400\n    total_money = alexandra_money + kim_money + sarah_money + maryam_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of Vanessa and Aaron\n    vanessa_distance = 4\n    aaron_distance = vanessa_distance / 2\n\n    # Define the time taken by Aaron to complete the race\n    aaron_time = 16\n\n    # Calculate the time taken by Vanessa to complete the race\n    vanessa_time = (aaron_distance / aaron_distance) * aaron_time\n\n    # Display the time taken by Vanessa\n    result = vanessa_time\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of line to dock\n    LINE_RATIO = 3\n\n    # Define the amount of dock\n    dock_amount = 200\n\n    # Define the amount of new line\n    new_line = 6\n\n    # Calculate the total amount of line needed\n    total_line = (dock_amount / LINE_RATIO) * LINE_RATIO + new_line\n\n    # Display the total amount of line needed\n    result = total_line\n    return result"}
{"output": "def solution():\n    \n    reservations_per_night = 6\n    meals_per_night = 2\n    meal_price = 5\n    wine_price = 5\n    days_per_week = 2\n    total_meal_cost = meals_per_night * meal_price * days_per_week\n    total_wine_cost = wine_price * days_per_week\n    total_income = total_meal_cost + total_wine_cost\n    result = total_income\n    return result"}
{"output": "def solution():\n    \n    # Define the number of watermelons and the total cost\n    NUM_WATERMELONS = 50\n    TOTAL_COST = 80\n\n    # Calculate the total revenue from selling all the watermelons\n    total_revenue = NUM_WATERMELONS * 0.25 * TOTAL_COST\n\n    # Calculate the price per watermelon sold\n    price_per_watermelon = total_revenue / NUM_WATERMELONS\n\n    # Display the price per watermelon sold\n    result = price_per_watermelon\n    return result"}
{"output": "def solution():\n    \n    john_age_when_john_was_19 = 19\n    dora_age_when_john_was_32 = john_age_when_john_was_32 + 3\n    john_age_when_john_was_32 = dora_age_when_john_was_32 + 3\n    youngest_son_age_when_john_was_32 = john_age_when_john_was_32 + 3\n    result = youngest_son_age_when_john_was_32\n    return result"}
{"output": "def solution():\n    \n    # Define the time in minutes for each person to peel an orange\n    ana_time = 3\n    jane_time = 4\n\n    # Calculate the number of oranges each person will peel in an hour\n    ana_oranges = ana_time // ana_time\n    jane_oranges = jane_time // jane_time\n\n    # Calculate the difference in the number of oranges each person will peel in an hour\n    time_difference = ana_oranges - jane_oranges\n\n    # return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the new radiator and the discount percentage\n    INITIAL_COST = 400\n    DISCOUNT_PERCENTAGE = 0.8\n\n    # Calculate the discounted cost of the new radiator\n    discounted_cost = INITIAL_COST * (1 - DISCOUNT_PERCENTAGE)\n\n    # Calculate the cost of the mechanic\n    mechanic_cost = 50 * 3\n\n    # Calculate the total cost\n    total_cost = discounted_cost + mechanic_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of animals and the number of legs\n    total_animals = 20\n    total_legs = 70\n\n    # Calculate the total number of chicken legs\n    chicken_legs = total_legs - total_legs\n\n    # Calculate the number of chicken animals\n    chicken_animals = chicken_legs / 4\n\n    # Display the number of chicken animals\n    result = chicken_animals\n    return result"}
{"output": "def solution():\n    \n    total_pizzas = 7\n    slices_per_pizza = 8\n    total_slices = total_pizzas * slices_per_pizza\n    num_people = 4\n    slices_per_person = total_slices / num_people\n    result = slices_per_person\n    return result"}