{"output": "def solution():\n    # Calculate the total amount of feed needed for the day\n    total_feed = 3 * 3  # Wendi feeds three cups of chicken feed each of her three separate meals\n    morning_feed = 15  # Wendi gives her chickens 15 cups of feed in the morning\n    afternoon_feed = 25  # Wendi gives her chickens 25 cups of feed in the afternoon\n    remaining_feed = total_feed - morning_feed - afternoon_feed\n    result = remaining_feed\n    return result"}
{"output": "def solution():\n    \n    glass1_price = 5\n    glass2_price = 0.6 * glass1_price\n    num_glasses = 16\n    total_price = (num_glasses * glass1_price) + (num_glasses * glass2_price)\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    seattle_sheep = 20\n    charleston_sheep = seattle_sheep * 4\n    toulouse_sheep = charleston_sheep * 2\n    total_sheep = seattle_sheep + charleston_sheep + toulouse_sheep\n    result = total_sheep\n    return result"}
{"output": "def solution():\n    file_size = 200  # Carla is downloading a 200 GB file\n    download_speed = 2  # Carla can download 2 GB/minute\n    download_time = 0.4 * file_size  # Carla can download 40% of the way through the download\n    install_time = 20  # Windows forces a restart to install updates\n\n    # Calculate the total download time\n    total_download_time = download_time + (download_time * install_time)\n\n    result = total_download_time\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance John travels at the start of the first 3 hours\n    distance_1 = 3 * 60\n\n    # Calculate the distance John travels at the end of the 4 hours\n    distance_2 = 2 * 30\n\n    # Calculate the distance John travels at the end of the 4 hours\n    distance_3 = 4 * 80\n\n    # Calculate the total distance John travels\n    total_distance = distance_1 + distance_2 + distance_3\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    regular_rate = 10\n    regular_hours = 40\n    overtime_rate = regular_rate * 1.2\n    regular_pay = regular_hours * regular_rate\n    overtime_pay = overtime_rate * overtime_hours\n    total_pay = regular_pay + overtime_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    # Calculate the number of downloads in the second month\n    downloads_second_month = 3 * 60\n\n    # Calculate the number of downloads in the third month\n    downloads_third_month = 0.3 * 60\n\n    # Calculate the total number of downloads over the three months\n    total_downloads = 60 + downloads_second_month + downloads_third_month\n    result = total_downloads\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the donuts\n    donuts_cost = 3 * 68\n\n    # Calculate the cost of the mini cupcakes\n    cupcakes_cost = 2 * 80\n\n    # Calculate the cost of the mini cheesecakes\n    cheesecakes_cost = 6 * 55\n\n    # Calculate the total cost\n    total_cost = donuts_cost + cupcakes_cost + cheesecakes_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    tree_cost = 90\n    lemons_per_year = 7\n    selling_price = 1.5\n    cost_per_year = 3\n\n    # Calculate the total revenue from selling lemons\n    total_revenue = lemons_per_year * selling_price\n\n    # Calculate the cost of water\n    water_cost = total_revenue * cost_per_year\n\n    # Calculate the number of years it will take to reach the tree cost\n    years = tree_cost / total_revenue\n    result = years\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of vacuum cleaners\n    vacuum_cleaners = 5\n\n    # Calculate the number of vacuum cleaners sold at the green house\n    green_cleaners = vacuum_cleaners // 3\n\n    # Calculate the number of vacuum cleaners remaining after the green house\n    remaining_cleaners = vacuum_cleaners - green_cleaners\n\n    # Calculate the number of vacuum cleaners sold at the red house\n    red_cleaners = remaining_cleaners // 2\n\n    # Calculate the number of vacuum cleaners remaining after the red house\n    remaining_cleaners = remaining_cleaners - red_cleaners\n\n    # Calculate the number of vacuum cleaners at the orange house\n    orange_cleaners = remaining_cleaners // 2\n\n    # Calculate the number of vacuum cleaners Melanie started with\n    starting_vacuum = remaining_cleaners + orange_cleaners\n\n    # Display the number of vacuum starting with\n    result = starting_vac"}
{"output": "def solution():\n    \n    total_students = 20\n    contemporary_percentage = 20\n    remaining_percentage = 100 - contemporary_percentage\n    jazz_percentage = 25\n    hip_hop_percentage = (remaining_percentage / total_students) * 100\n    result = hip_hop_percentage\n    return result"}
{"output": "def solution():\n    \n    jewelry_price = 5000\n    electronic_price = 8000\n    jewelry_market_percent = 2.5\n    electronic_market_percent = 1.2\n    total_jewelry_price = jewelry_price * (1 + jewelry_market_percent)\n    total_electronic_price = electronic_price * (1 + electronic_market_percent)\n    total_profit = total_jewelry_price + total_electronic_price\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    distance_westward = 80\n    distance_northward = 150\n    total_distance = distance_westward + distance_northward\n    num_trains = 2\n    distance_per_train = total_distance / num_trains\n    result = distance_per_train\n    return result"}
{"output": "def solution():\n    \n    teacher_rate = 20\n    coach_rate = 30\n    teacher_hours_per_week = 35\n    coach_hours_per_week = 15\n    weeks_per_year = 50\n    teacher_salary = teacher_rate * teacher_hours_per_week * weeks_per_year\n    coach_salary = coach_rate * coach_hours_per_week * weeks_per_year\n    annual_salary = teacher_salary + coach_salary\n    result = annual_salary\n    return result"}
{"output": "def solution():\n    eggs_per_omelet = 3  # Claire makes a 3 egg omelet every morning\n    days_per_week = 7  # There are 7 days in a week\n    weeks = 4  # Claire wants to know how many eggs she will eat in 4 weeks\n\n    # Calculate the total number of eggs Claire will eat in 4 weeks\n    total_eggs = eggs_per_omelet * days_per_week * weeks\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    total_distance = 12  # Marissa is hiking a 12-mile trail\n    time_1 = 1  # Marissa took 1 hour to walk the first 4 miles\n    time_2 = 2  # Marissa took 2 hour to walk the next two miles\n    average_speed = 4  # Marissa wants her average speed to be 4 miles per hour\n\n    # Calculate the distance Marissa needs to walk\n    distance_to_walk = total_distance - time_1 - time_2\n\n    # Calculate the speed Marissa needs to walk the remaining distance\n    remaining_distance = total_distance - distance_to_walk\n    speed_needed = remaining_distance / average_speed\n    result = speed_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water in the orange drink\n    orange_drink = 10\n\n    # Define the amount of water in the pineapple drink\n    pineapple_drink = 15\n\n    # Calculate the amount of water in the orange drink\n    orange_drink_water = orange_drink * (2/3)\n\n    # Calculate the amount of water in the pineapple drink\n    pineapple_drink_water = pineapple_drink * (3/5)\n\n    # Calculate the amount of water in the remaining 24 liters\n    remaining_drink = 24 - orange_drink_water - pineapple_drink_water\n\n    # Display the amount of water in the remaining 24 liters\n    result = remaining_drink\n    return result"}
{"output": "def solution():\n    # Calculate the age of Samantha\n    samantha_age = 31\n\n    # Calculate the age of Raymond's son\n    son_age = 23\n\n    # Calculate the age of Samantha's son\n    son_age_now = samantha_age - son_age\n\n    # Calculate the number of years ago Raymond's son was born\n    years_ago = son_age_now - 6\n    result = years_ago\n    return result"}
{"output": "def solution():\n    # Calculate the total number of DVDs sold by Billy\n    total_DVDs_sold = 3*1 + 2*2 + 3*2  # first 3 customers buy one DVD each, next 2 customers buy 2 DVDs each, last 3 customers don't buy any DVDs\n    result = total_DVDs_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the initial burning speed and the time burned\n    initial_burning_speed = 2  # centimeters per hour\n    burning_time = 1.5  # hours\n\n    # Calculate the initial burning distance\n    initial_burning_distance = initial_burning_speed * burning_time\n\n    # Calculate the final burning distance\n    final_burning_distance = initial_burning_distance - 5 * burning_time\n\n    # Calculate the difference in the final burning distance\n    difference = final_burning_distance - initial_burning_distance\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the book\n    original_price = 19.50\n\n    # Calculate the discount amount\n    discount = original_price * 0.25\n\n    # Calculate the original price of the book\n    original_price = original_price - discount\n\n    # Display the original price of the book\n    result = original_price\n    return result"}
{"output": "def solution():\n    \n    chicken_meal_cost = 12\n    milk_packs_cost = 5\n    apple_cost = 1.5\n    total_cost = 50\n    chicken_meal_total = chicken_meal_cost\n    milk_total = milk_packs_cost * milk_packs_cost\n    apple_total = apple_cost * 4\n    pizza_total = total_cost - chicken_meal_total - milk_total - apple_total\n    pizza_boxes = pizza_total / 8.5\n    result = pizza_boxes\n    return result"}
{"output": "def solution():\n    num_shorts = 3\n    shorts_price = 16.5\n\n    num_pants = 3\n    pants_price = 22.5\n\n    num_shoes = 3\n    shoes_price = 42\n\n    # Calculate the total cost of all shorts\n    total_shorts_cost = num_shorts * shorts_price\n\n    # Calculate the total cost of all pants\n    total_pants_cost = num_pants * pants_price\n\n    # Calculate the total cost of all shoes\n    total_shoes_cost = num_shoes * shoes_price\n\n    # Calculate the total cost of all clothing items\n    total_cost = total_shorts_cost + total_pants_cost + total_shoes_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    servings_per_carton = 15\n    cost_per_carton = 4.0\n    num_days = 60\n\n    # Calculate the total number of servings of ice cream Cynthia will eat in 60 days\n    total_servings = servings_per_carton * num_days\n\n    # Calculate the total cost of all cartons of ice cream\n    total_cost = total_servings * cost_per_carton\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_distance = 60\n    first_stop_distance = 20\n    second_stop_distance = 15\n    first_stop_distance = first_stop_distance + second_stop_distance\n    distance_between_stops = total_distance - first_stop_distance\n    result = distance_between_stops\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of one pair of heels\n    heels_cost = 33\n\n    # Calculate the cost of two pairs of high heels\n    high_heels_cost = heels_cost * 2\n\n    # Calculate the total cost of the boots\n    total_cost = (2 * heels_cost) + (2 * heels_cost)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of Darrell's age to Allen's age\n    darrell_to_allen_ratio = 7/11\n\n    # Define the total age and the total ratio\n    total_age = 162\n    total_ratio = 7 + 11\n\n    # Calculate the age of Darrell\n    darrell_age = (7/total_ratio) * total_age\n\n    # Calculate Allen's age 10 years from now\n    allen_age_10_years = allen_age + 10\n\n    # Display Allen's age 10 years from now\n    result = allen_age_10_years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jelly beans in the jar\n    jelly_beans = 80\n\n    # Calculate the number of jelly beans in the jar\n    jelly_beans_2 = (jelly_beans / 2) + 20\n    jelly_beans_3 = jelly_beans_1 * 1.25\n\n    # Calculate the average guess\n    average_guess = jelly_beans / 3\n\n    # Display the average guess\n    result = average_guess\n    return result"}
{"output": "def solution():\n    \n    dogs_per_day = 10\n    hours_per_dog = 0.5\n    days_per_week = 7\n    total_hours = dogs_per_day * hours_per_dog * days_per_week\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of gold coins\n    gold_coins = 110\n\n    # Calculate the number of silver coins\n    silver_coins = gold_coins + 30\n\n    # Calculate the total number of gold coins\n    total_gold_coins = gold_coins + silver_coins\n\n    # Display the total number of gold coins\n    result = total_gold_coins\n    return result"}
{"output": "def solution():\n    raymond_jewels = 40  # Raymond has 40 jewels\n    aaron_jewels = (raymond_jewels / 2) + 5  # Aaron has 5 more jewels than half of Raymond's jewels\n    Siobhan_jewels = aaron_jewels - 2  # Siobhan has 2 fewer jewels than Aaron\n\n    result = Siobhan_jewels\n    return result"}
{"output": "def solution():\n    # Calculate the total points scored in the first 20 minutes\n    first_20_points = 4\n\n    # Calculate the total points scored in the second 20 minutes\n    second_20_points = 1.25 * first_20_points\n\n    # Calculate the total points scored in the first 20 minutes\n    first_20_total_points = first_20_points + second_20_points\n\n    # Calculate the total points scored in the second 20 minutes\n    second_20_total_points = first_20_points + second_20_points\n\n    # Calculate the total points scored\n    total_points = first_20_total_points + second_20_total_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    yogurts_per_day = 2\n    sale_price = 5.0\n    days = 30\n\n    # Calculate the total number of yogurts Terry eats over 30 days\n    total_yogurts = yogurts_per_day * days\n\n    # Calculate the total cost of yogurts Terry eats over 30 days\n    total_cost = total_yogurts * sale_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    lego_sets_sold = 13  # John has 13 lego sets\n    price_per_lego_set = 15  # John sells each lego set for $15\n    num_video_games = 8  # John buys 8 video games\n    price_per_video_game = 20  # John buys each video game for $20\n    remaining_money = 5  # John has $5 left after buying the video games\n\n    # Calculate the total revenue from selling the video games\n    total_revenue = price_per_leg_set * num_video_games\n\n    # Calculate the total cost of buying the video games\n    total_cost = price_per_video_game * num_video_games\n\n    # Calculate the remaining money\n    remaining_money = remaining_money - total_cost\n\n    # Calculate the number of lego sets John still has\n    lego_sets_remaining = remaining_money // lego_sets_sold\n    result = lego_sets_remaining\n    return"}
{"output": "def solution():\n    \n    # Define the total distance John runs in a week\n    total_distance = 60\n\n    # Define the number of days John runs in a week\n    days_per_week = 3\n\n    # Define the number of hours John runs in the first day\n    hours_first_day = 3\n\n    # Define the number of hours John runs in the second day\n    days_second_day = days_first_day / 2\n\n    # Calculate the total number of hours John runs in the second and third days\n    days_second_day = days_second_day * hours_first_day\n    days_third_day = days_second_day / 2\n\n    # Calculate the total number of hours John runs in the week\n    total_hours = days_first_day + days_second_day + hours_third_day\n\n    # Calculate John's speed\n    speed = total_hours / total_distance\n\n    # Display John's speed\n    result = speed\n    return result"}
{"output": "def solution():\n    run_speed = 3  # Dana can run at a rate of 3 miles per hour\n    walk_speed = run_speed / 2  # Dana can walk at a rate of speed that is half as fast as she can run\n    running_time = 6 / 3  # Dana spends one-third of the time running\n    walking_time = 6 / 3  # Dana spends two-thirds of the time walking\n\n    # Calculate the distance Dana can run in 6 hours\n    run_distance = run_speed * running_time\n\n    # Calculate the distance Dana can walk in 6 hours\n    walk_distance = walk_speed * walking_time\n\n    # Calculate the total distance Dana can travel in 6 hours\n    total_distance = run_distance + walk_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    suzy_iPhone_age = 1  # Suzy's iPhone is 1 year old\n    ben_iPhone_age = suzy_iPhone_age * 2  # Ben's iPhone is two times older than Suzy's iPhone\n    brandon_iPhone_age = ben_iPhone_age * 4  # Brandon's iPhone is four times as old as Ben's iPhone\n\n    result = brandon_iPhone_age\n    return result"}
{"output": "def solution():\n    # Calculate the distance outside of the dragon's flames\n    distance_outside_flames = 1000 - 400 - (3 * 400)  # Polly could throw the javelin three times farther than when not holding the gemstone\n    result = distance_outside_flames\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pies and pieces per pie\n    num_pies = 5\n    pieces_per_pie = 8\n\n    # Calculate the total number of pieces\n    total_pieces = num_pies * pieces_per_pie\n\n    # Subtract the number of pies given out on the buffet table\n    total_pieces -= 5\n\n    # Subtract the number of pie remaining\n    total_pieces -= 14\n\n    # Display the number of pieces taken by the guests\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    calories_per_serving = 250  # Each bag of chips has 250 calories\n    servings_per_bag = 5  # A 300g bag has 5 servings\n    target_daily_calories = 2000  # Your daily calorie target is 2000 days\n    calories_consumed = 1800  # Your daily calorie target is 1800 calories\n\n    # Calculate the total calories consumed in the bag\n    total_calories_consumed = servings_per_bag * calories_per_serving * servings_per_bag\n\n    # Calculate the total calories consumed in grams\n    total_calories_in_grams = total_calories_consumed / calories_per_serving\n    result = total_calories_in_grams\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tapered candles Charlie can make\n    tapered_candles = 10\n\n    # Define the cost of supplies per pound of beeswax and the selling price per candle\n    supplies_cost = 10\n    selling_price_per_candle = 2\n\n    # Calculate the total cost of making the tapered candles\n    total_cost = tapered_candles * tapered_candles * supplies_cost\n\n    # Calculate the total revenue from selling the candles\n    total_revenue = 20 * selling_price_per_candle\n\n    # Calculate the net profit\n    net_profit = total_revenue - total_cost\n\n    # return the result\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    articles_monday = 5\n    articles_tuesday = articles_monday * (2/5)\n    articles_wednesday = articles_tuesday * 2\n    total_articles = articles_monday + articles_tuesday + articles_wednesday\n    total_time = total_articles * 4\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    post_it_notes = 80\n    cups_of_coffee = 220\n    remaining_post_it_notes = 23\n    total_post_it_notes = post_it_notes + (cups_of_coffee * remaining_post_it_notes)\n    result = total_post_it_notes\n    return result"}
{"output": "def solution():\n    \n    blue_tie_cost = 40\n    red_tie_cost = blue_tie_cost * 1.5\n    total_cost = 200 * blue_tie_cost + red_tie_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Convert the length of the wire to inches\n    wire_length_inches = 6 * 12\n\n    # Calculate the number of tomato plants\n    num_plants = wire_length_inches // 4\n\n    # Display the number of tomato plants\n    result = num_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the number of floors and units per floor\n    floors = 15\n    units_per_floor = 8\n\n    # Calculate the total number of units in the building\n    total_units = floors * units_per_floor\n\n    # Calculate the number of occupied units\n    occupied_units = total_units * (3/4)\n\n    # Calculate the number of unoccupied units\n    unoccupied_units = total_units - occupied_units\n\n    # Display the number of unoccupied units\n    result = unoccupied_units\n    return result"}
{"output": "def solution():\n    \n    eggs_per_day = 252\n    dozens_per_day = eggs_per_day / 12\n    price_per_dozen = 2\n    eggs_per_week = dozens_per_day * eggs_per_dozen * 7\n    result = eggs_per_week\n    return result"}
{"output": "def solution():\n    ship_speed = 10  # Tom's ship can travel at 10 miles per hour\n    sail_time = 1.5  # Tom is sailing from 1 to 4 PM\n    travel_speed = 6  # Tom's ship travels back at a rate of 6 mph\n\n    # Calculate the time it takes Tom to get back\n    time_to_get_back = (ship_speed - sail_time) / travel_speed\n    result = time_to_get_back\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each type of book\n    COMIC_BOOK_WEIGHT = 1/4\n    TOY_WEIGHT = 1/2\n\n    # Define the number of comic books to remove\n    num_comic_books = 30\n\n    # Calculate the total weight of the comic books to remove\n    total_comic_weight = num_comic_books * COMIC_BOOK_WEIGHT\n\n    # Calculate the remaining weight of the toys\n    remaining_weight = 15 - total_comic_weight\n\n    # Calculate the number of toys to remove\n    num_toys = remaining_weight / TOY_WEIGHT\n\n    # Display the number of toys to remove\n    result = num_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the revenue for each type of tire\n    TRUCK_PRICE = 60\n    CAR_PRICE = 40\n\n    # Define the number of truck and car tires repaired on Thursday\n    truck_tires_repaired = 6\n    car_tires_repaired = 4\n\n    # Calculate the revenue for each type of tire\n    truck_revenue = truck_tires_repaired * TRUCK_PRICE\n    car_revenue = car_tires_repaired * CAR_PRICE\n\n    # Calculate the revenue for each type of tire\n    truck_revenue = truck_tires_repaired * TRUCK_PRICE\n    car_revenue = car_tires_repaired * CAR_PRICE\n\n    # Calculate the total revenue\n    total_revenue = truck_revenue + car_revenue\n\n    # Calculate the difference in revenue between the two scenarios\n    revenue_difference = total_revenue - total_revenue\n\n    #"}
{"output": "def solution():\n    \n    # Define the initial number of kittens\n    initial_kittens = 7\n\n    # Define the number of kittens adopted by the first cat\n    patchy_kittens = 3 * initial_kittens\n\n    # Define the number of kittens adopted by the second cat\n    trixie_kittens = 12\n\n    # Calculate the total number of kittens\n    total_kittens = initial_kittens + patchy_kittens + trixie_kittens\n\n    # Display the total number of kittens\n    result = total_kittens\n    return result"}
{"output": "def solution():\n    \n    total_lollipops = 30\n    eaten_lollipops = 2\n    remaining_lollipops = total_lollipops - eaten_lollipops\n    lollipops_per_bag = 2\n    bags_filled = remaining_lollipops // lollipops_per_bag\n    result = bags_filled\n    return result"}
{"output": "def solution():\n    ticket_price = 7  # Peter always gets a ticket for $7\n    popcorn_price = 7  # Peter always gets a popcorn for $7\n    total_money = 42  # Peter has 42 dollars for the week\n\n    # Calculate how many times Peter can go to the movies he can go to the movies\n    times_to_go_to_movies = (total_money - ticket_price - popcorn_price) / ticket_price\n    result = times_to_go_to_movies\n    return result"}
{"output": "def solution():\n    max_weight = 5000  # The wooden bridge can carry no more than 5000 pounds\n    weight_per_box = 15  # Each box weighs 15 pounds\n    combined_weight = 3755  # The combined weight of the truck and the empty truck is 3755 pounds\n\n    # Calculate the maximum number of boxes that can be loaded onto the truck\n    max_boxes = (combined_weight - weight_per_box) / weight_per_box\n    result = max_boxes\n    return result"}
{"output": "def solution():\n    \n    initial_bill = 40\n    delivery_fee = 0.25 * initial_bill\n    tip = 4\n    final_bill = initial_bill + delivery_fee + tip\n    result = final_bill\n    return result"}
{"output": "def solution():\n    num_clusters = 6\n    num_fruit_per_clusters = 20\n    num_fruit_scattered = 67\n\n    # Calculate the total number of fruit\n    total_fruit = num_clusters * num_fruit_per_clusters\n\n    # Calculate the total number of raspberries\n    total_raspberries = total_fruit + num_fruit_scattered\n    result = total_raspberries\n    return result"}
{"output": "def solution():\n    \n    total_oranges = 25\n    bad_oranges = total_oranges * 0.2\n    unripe_oranges = total_oranges * 0.2\n    sour_oranges = 2\n    good_oranges = total_oranges - bad_oranges - unripe_oranges - sour_oranges\n    result = good_oranges\n    return result"}
{"output": "def solution():\n    \n    material_cost = 500\n    jeweler_cost = 800\n    insured_cost = material_cost * 0.1\n    total_cost = material_cost + jeweler_cost + insured_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    annual_pension_value = 50000  # Marcy gets an annual pension of $50,000/year\n    years_worked = 40  # Marcy works for 40 years\n\n    # Calculate the value of Marcy's annual pension after 20 years\n    annual_pension_value_20_years = annual_pension_value * (1 + years_worked)\n\n    # Calculate the value of Marcy's annual pension after 20 years\n    annual_pension_value_20_years = annual_pension_value_20_years * 0.05\n\n    # Calculate the value of Marcy's annual pension after 30 years\n    annual_pension_value_30_years = annual_pension_value_20_years + annual_pension_value_30_years\n    result = annual_pension_value_30_years\n    return result"}
{"output": "def solution():\n    \n    monthly_charge = 140\n    half_year_charge = monthly_charge * 12\n    half_year_charge = half_year_charge * 0.9\n    total_charge = half_year_charge + half_year_charge\n    result = total_charge\n    return result"}
{"output": "def solution():\n    \n    # Define the total distance traveled and the amount of gas needed to fill it up\n    total_distance = 100\n    fill_amount = 4\n\n    # Define the amount of gas in the tank\n    gas_in_tank = 12\n\n    # Calculate the distance Sophia can drive on a single tank of gas\n    distance_on_tank = (total_distance - fill_amount) / gas_in_tank\n\n    # Display the distance Sophia can drive on a single tank of gas\n    result = distance_on_tank\n    return result"}
{"output": "def solution():\n    \n    tv_time = 2\n    bed_time = tv_time / 2\n    weeks = 4\n    total_time = (tv_time * 3) + (bed_time * weeks)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    num_schools = 4\n    girls_players_per_school = 1\n    boys_players_per_school = 5\n    coach_players_per_school = 1\n    total_players = (girls_players_per_school + boys_players_per_school) * num_schools\n    total_coach_players = coach_players_per_school * num_schools\n    total_people = total_players + total_coach_players\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    diamonds = 175\n    rubies = diamonds - 35\n    emeralds = rubies * 2\n    total_gems = diamonds + rubies + emeralds\n    result = total_gems\n    return result"}
{"output": "def solution():\n    num_girls = 60\n    num_boys = num_girls * 2\n    num_students_per_teacher = 5\n\n    # Calculate the total number of teachers\n    total_teachers = num_girls + num_boys + num_students_per_teacher\n    result = total_teachers\n    return result"}
{"output": "def solution():\n    \n    total_allowance = 5 * 8\n    remaining_money = 100 - total_allowance\n    initial_money = remaining_money\n    result = initial_money\n    return result"}
{"output": "def solution():\n    # Calculate the total number of dance classes Judy teaches in a week\n    total_classes = 5 * 5 + 8 * 8  # Judy teaches 5 dance classes every day, and 8 classes on Saturday\n\n    # Calculate the total amount of money Judy makes in a week\n    total_money = total_classes * 15 * 15  # Judy charges $15.00 per student\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    first_one_ins = 20\n    second_one_ins = 2 * first_one_ins\n    total_ins = first_one_ins + second_one_ins\n    result = total_ins\n    return result"}
{"output": "def solution():\n    \n    # Define the price of brownies and slices of cheesecakes\n    BROWNIE_PRICE = 3\n    CHEESECAKE_PRICE = 4\n\n    # Define the number of brownies and slices of cheesecakes sold\n    brownies_sold = 43\n    cheesecakes_sold = 23\n\n    # Calculate the total amount raised\n    total_raised = (brownies_sold * BROWNIE_PRICE) + (cheesecakes_sold * CHEESECAKE_PRICE)\n\n    # Display the total amount raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each cell phone and the number of phones purchased\n    PHONE_COST = 150\n    NUM_PHONES = 5\n\n    # Calculate the total cost of the phones for 3 months\n    total_cost = PHONE_COST * NUM_PHONES * 3\n\n    # Calculate the interest charged for each unit\n    interest_charged = total_cost * 0.02\n\n    # Calculate the total cost for 3 months\n    total_cost_3_months = total_cost + interest_charged\n\n    # Display the total cost for 3 months\n    result = total_cost_3_months\n    return result"}
{"output": "def solution():\n    \n    marigold_price = 2.74\n    petunias_price = 1.87\n    begonias_price = 2.12\n    marigold_pots = 12\n    petunias_pots = 9\n    begonias_pots = 17\n    total_marigold_price = marigold_price * marigold_pots\n    total_petunias_price = petunias_price * petunias_pots\n    total_begonias_price = begonias_price * begonias_pots\n    total_price = total_marigold_price + total_petunias_price + total_begonias_price\n    rounded_price = round(total_price)\n    result = rounded_price\n    return result"}
{"output": "def solution():\n    \n    top_level_area = 16\n    level_1_area = top_level_area\n    level_2_area = top_level_area / 2\n    level_3_area = level_2_area / 2\n    total_area = level_1_area + level_2_area + level_3_area\n    average_area = total_area / 4\n    result = average_area\n    return result"}
{"output": "def solution():\n    # Calculate the total cups of dog food used in the first year\n    first_year_cups = (1 * 180) + (2 * 180)  # 1 cup every day for 180 days and 2 cups every day for the rest of its life\n\n    # Calculate the number of bags of dog food needed\n    bags_needed = first_year_cups / 110  # 1 bag contains 110 cups\n\n    result = bags_needed\n    return result"}
{"output": "def solution():\n    \n    sarah_laundry = 400\n    raymond_laundry = sarah_laundry / 2\n    david_laundry = sarah_laundry / 4\n    difference = raymond_laundry - david_laundry\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    packages_3 = 3\n    price_3 = 2.5\n    packages_2 = 2\n    price_2 = 1\n    total_flowers = 18\n    total_price = (packages_3 * price_3) + (packages_2 * price_2)\n    savings = total_price - total_flowers\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the dog and the discount percentage\n    DOG_COST = 100\n    DISCOUNT_PERCENTAGE = 0.3\n\n    # Calculate the discounted cost of the dog\n    discounted_cost = DOG_COST - (DOG_COST * DISCOUNT_PERCENTAGE)\n\n    # Display the discounted cost\n    result = discounted_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water each girl got\n    girls_water = 24 / 6\n\n    # Define the amount of water the boy got\n    boy_water = 6\n\n    # Calculate the total amount of water received\n    total_water = girls_water * 2 + boy_water\n\n    # Calculate the amount of water left\n    water_left = total_water - total_water\n\n    # Display the amount of water left\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    initial_stickers = 10\n    bought_stickers = 21\n    birthday_stickers = 23\n    given_away_stickers = 9\n    decorate_cards = 28\n    remaining_stickers = initial_stickers - bought_stickers - birthday_stickers - given_away_stickers + decorate_cards\n    result = remaining_stickers\n    return result"}
{"output": "def solution():\n    \n    grace_weight = 125\n    alex_weight = 4 * grace_weight - 2\n    combined_weight = grace_weight + alex_weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rose bushes and roses per bush\n    num_bushes = 3\n    roses_per_bush = 25\n\n    # Define the number of thorns per rose\n    thorns_per_rose = 8\n\n    # Calculate the total number of roses\n    total_roses = num_bushes * roses_per_bush\n\n    # Calculate the total number of thorns\n    total_thorns = total_roses * thorns_per_rose\n\n    # return the result\n    result = total_thorns\n    return result"}
{"output": "def solution():\n    \n    # Define the number of games played and the number of games won\n    games_played = 22\n    games_won = games_played + 8\n\n    # Calculate the number of games won by the team\n    games_won_by_team = games_won - games_played\n\n    # Display the number of games won by the team\n    result = games_won_by_team\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blocks per shirt\n    BLOCKS_PER_SHIRT = 4\n\n    # Define the age of Gene's vacations\n    VACATION_AGE = 23\n\n    # Calculate the number of blocks Gene has been vacationing\n    vacation_blocks = VACATION_AGE * 4\n\n    # Calculate the number of blocks Gene has left\n    blocks_left = 34 - vacation_blocks - vacation_blocks\n\n    # Calculate the total number of blocks\n    total_blocks = blocks_left * BLOCKS_PER_SHIRT\n\n    # Display the total number of blocks\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    \n    first_time_rang = 4\n    second_time_rang = 3 * first_time_rang\n    third_time_rang = second_time_rang / 2\n    total_rang = first_time_rang + second_time_rang + third_time_rang\n    result = total_rang\n    return result"}
{"output": "def solution():\n    initial_salary = 600  # The company pays each of its employees $600 in a month\n    increased_salary = initial_salary * 0.1  # The company increases the salaries of each of its employees by 10% of the initial salary every year\n    years_clocked = 5  # Sylvie clocked 5 years\n\n    # Calculate Sylvie's annual salary after three more years of service\n    annual_salary = (increased_salary * years_clocked) + (increased_salary * years_clocked) + (increased_salary * 3)\n    result = annual_salary\n    return result"}
{"output": "def solution():\n    \n    total_copies = 88000\n    marilyn_copies = total_copies / 10\n    harald_copies = marilyn_copies / 10\n    result = harald_copies\n    return result"}
{"output": "def solution():\n    gift_bags_per_guest = 0.75  # Christina needs 0.75 gift bags per invited guest\n    num_friends = 16  # Christina invited 16 friends\n    gift_bags_needed = num_friends * gift_bags_per_guest  # Calculate the number of gift bags needed\n\n    # Calculate the total number of gift bags needed\n    total_gift_bags_needed = num_friends * gift_bags_needed\n\n    # Calculate the total cost of the gift bags\n    total_cost = total_gift_bags_needed * 2\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of potato salad each person will eat\n    ADULT_SALAD = 10\n    CHILD_SALAD = ADULT_SALAD / 2\n\n    # Define the number of adults and children at the picnic\n    num_adults = 20\n    num_children = 5\n\n    # Calculate the total amount of potato salad needed\n    total_potato_salad = (num_adults * ADULT_SALAD) + (num_children * CHILD_SALAD)\n\n    # Display the total amount of potato salad needed\n    result = total_potato_salad\n    return result"}
{"output": "def solution():\n    \n    cindy_pets = 4\n    marcia_pets = cindy_pets + 2\n    jan_pets = marcia_pets * 3\n    total_pets = cindy_pets + marcia_pets + jan_pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    amy_age = 10 + 2\n    corey_age = 10 - 1\n    jackson_age = (amy_age - 5) / 4\n    result = jackson_age\n    return result"}
{"output": "def solution():\n    lee_speed = 38  # Lee runs the 400-m hurdles in 38 seconds\n    gerald_speed = lee_speed - 2  # Gerald runs the 400-m hurdles two seconds faster than Lee\n    gerald_time = gerald_speed * 1.1  # Gerald changed his diet speed by 10%\n\n    result = gerald_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and cats\n    dogs = 60\n    cats = 2 * dogs\n\n    # Calculate the combined number of pet dogs and cats\n    pet_dogs_and_cats = dogs + cats\n\n    # Calculate the number of rabbits pets\n    rabbits_pets = pet_dogs_and_cats - 12\n\n    # Calculate the total number of pets\n    total_pets = pet_dogs_and_cats + rabbits_pets\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the fraction that are boys\n    total_students = 200\n    boys_fraction = 2/5\n\n    # Calculate the number of boys and girls\n    boys = total_students * boys_fraction\n    girls = total_students - boys\n\n    # Calculate the number of girls in the girl scout\n    girls_in_girl_scout = girls * (2/3)\n\n    # Calculate the number of girls not in the girl scout\n    girls_not_in_girl_scout = girls - girls_in_girl_scout\n\n    # Display the number of girls not in the girl scout\n    result = girls_not_in_girl_scout\n    return result"}
{"output": "def solution():\n    \n    harry_hours = 9\n    james_hours = harry_hours * (2/3)\n    difference = harry_hours - james_hours\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the volume of sauce and the number of tomatoes per can\n    sauce_volume = 32\n    tomatoes_per_can = 3\n\n    # Calculate the total volume of sauce used\n    total_sauce_volume = sauce_volume / tomatoes_per_can\n\n    # Calculate the number of tomatoes used\n    tomatoes_used = total_sauce_volume / tomatoes_per_can\n\n    # Display the number of tomatoes used\n    result = tomatoes_used\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cars on the motorway\n    total_cars = 30\n\n    # Calculate the number of cars drive through the traffic jam in the first 15 minutes\n    first_15_min_cars = total_cars - 15\n\n    # Calculate the number of cars drive through the traffic jam in the remaining 15 minutes\n    remaining_15_min_cars = 20\n\n    # Calculate the number of cars drive through the traffic jam in the remaining 15 minutes\n    remaining_15_min_cars = remaining_15_min_cars + 5\n\n    # Calculate the number of cars drive through the traffic jam in the first 15 minutes\n    first_15_min_cars = total_cars - first_15_min_cars\n\n    # Display the number of cars drive through the traffic jam in the first 15 minutes\n    result = first_15_min_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of potted plants\n    initial_plants = 18\n\n    # Define the number of windowledges of the large country home\n    windowledges = 40\n\n    # Define the number of potted plants given to friends and family tomorrow\n    plants_given = 1 * 2\n\n    # Calculate the total number of potted plants\n    total_plants = initial_plants + windowledges * plants_given\n\n    # Calculate the number of potted plants remaining with Mary\n    plants_remaining = total_plants - total_plants\n\n    # Display the number of potted plants remaining with Mary\n    result = plants_remaining\n    return result"}
{"output": "def solution():\n    \n    first_friend = 20\n    second_friend = first_friend * (1 + 1/4)\n    third_friend = fourth_friend + 10\n    total_rings = first_friend + second_friend + third_friend\n    result = total_rings\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pages Solo has to read\n    total_pages = 4 + 20 + 7 + 8\n\n    # Define the number of days Solo has to read all the pages\n    days_left = 4 - 4\n\n    # Calculate the average number of pages Solo needs to read per day\n    avg_pages_per_day = total_pages / days_left\n\n    # Display the average number of pages Solo needs to read per day\n    result = avg_pages_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the number of glasses of water John drinks in a week\n    glasses_weekday = 5\n    glasses_weekend = 2\n\n    # Calculate the total number of glasses of water John drinks in a week\n    total_glasses = glasses_weekday + glasses_weekend\n\n    # Display the total number of glasses of water John drinks in a week\n    result = total_glasses\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes for the fog bank to cover the whole city\n    time_per_3_miles = 10 / 3  # it takes 10 minutes to cover every 3 miles of the city\n    total_time = time_per_3_miles * 42  # the city is 42 miles across from the oceanfront to the opposite inlandedge\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 1000\n    pieces_placed_on_board = total_pieces / 4\n    pieces_remaining = total_pieces - pieces_placed_on_board\n    pieces_placed_on_mom = pieces_remaining / 3\n    pieces_left = pieces_remaining - pieces_placed_on_mom\n    result = pieces_left\n    return result"}
{"output": "def solution():\n    \n    amir_cookies = 5\n    cody_cookies = 3 * amir_cookies\n    total_cookies = amir_cookies + cody_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each box\n    LENGTH = 5\n    WIDTH = 6\n    HEIGHT = 4\n\n    # Calculate the volume of each box\n    box_volume = LENGTH * WIDTH * HEIGHT\n\n    # Calculate the total volume of all 3 boxes\n    total_volume = box_volume * 3\n\n    # Display the total volume\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    total_hours = 7\n    monday_hours = 1\n    tuesday_hours = 2\n    wednesday_hours = 1\n    thursday_hours = 1\n    thursday_hours = 1\n    friday_hours = 2\n    total_hours = monday_hours + tuesday_hours + wednesday_hours + thursday_hours + friday_hours\n    total_30min = total_hours * 30\n    result = total_30min\n    return result"}
{"output": "def solution():\n    # Calculate the number of cookies Henry wants to make last year\n    cookies_last_year = 2 * 110  # Henry wants to make twice as many cookies as he did last year\n\n    # Calculate the number of cookies Henry baked when he finishes baking\n    cookies_baked = cookies_last_year + 15  # Henry actually baked 15 more cookies than he meant to\n\n    # Calculate the number of cookies Henry drops out to cool\n    cookies_dropped = 5\n\n    # Calculate the number of cookies Henry baked last year\n    cookies_last_year = cookies_baked - cookies_dropped\n\n    result = cookies_last_year\n    return result"}
{"output": "def solution():\n    \n    gas_price = 3.00\n    cashback_per_gallon = 0.20\n    gallons_bought = 10\n    total_price = gallons_bought * gas_price\n    revenue = total_price * cashback_per_gallon\n    final_price = total_price - revenue\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    beatrice_width = 2\n    beatrice_length = 24\n    marcell_width = 3\n    marcell_length = 14\n    total_rollups = (beatrice_width * beatrice_length) + (marcell_width * marcell_length)\n    average_rollups = total_rollups / 2\n    result = average_rollups\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to row one feet of water\n    TIME_PER_FEET = 15 / 10\n\n    # Define the time it takes to row the twenty feet of water\n    TIME_TO_ROW_TWENTY_FEET = 20\n\n    # Define the total time to row the boat\n    total_time = 64\n\n    # Calculate the time it takes to row the water\n    time_to_row = TIME_TO_ROW_TWENTY_FEET * TIME_TO_ROW_TWENTY_FEET\n\n    # Calculate the amount of water taken on by the boat\n    water_taken_on = total_time - time_to_row\n\n    # Display the amount of water taken on\n    result = water_taken_on\n    return result"}
{"output": "def solution():\n    \n    # Define the number of teachers and lessons per teacher\n    num_teachers = 4\n    lessons_per_teacher = 2\n\n    # Define the number of times the whiteboard is cleaned per lesson\n    cleaned_per_lesson = 3\n\n    # Calculate the total number of lessons in a day\n    total_lessons = num_teachers * lessons_per_teacher\n\n    # Calculate the total number of times the whiteboard is cleaned in a day\n    total_cleaned_times = total_lessons * cleaned_per_lesson\n\n    # Display the total number of times the whiteboard is cleaned in a day\n    result = total_cleaned_times\n    return result"}
{"output": "def solution():\n    \n    flowers_per_day = 2\n    days = 15\n    total_flowers = flowers_per_day * days\n    lost_flowers = 5\n    final_flowers = total_flowers - lost_flowers\n    result = final_flowers\n    return result"}
{"output": "def solution():\n    jamal_phone = 1800  # Jamal's phone can hold 1800 photographs at the zoo\n    brittany_phone = jamal_phone / 6  # Brittany's phone can hold 6 times more photographs than Jamal's phone\n    max_birds = brittany_phone * 50  # maximum number of birds in Jamal's phone\n    total_ photographs = jamal_phone + brittany_phone + max_birds  # Calculate the total number of photographs\n\n    result = total_ photographs\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the two x 4 x 10 boards and five 4 x 10 boards\n    PRICE_1 = 10\n    PRICE_2 = 10\n    PRICE_3 = 16\n\n    # Calculate the total cost of the two x 4 x 10 boards\n    total_cost = (10 * PRICE_1) + (5 * PRICE_2)\n\n    # Calculate the total revenue from selling the five 4 x 4 x 10 boards\n    total_revenue = (10 * PRICE_1) + (5 * PRICE_2)\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of sugar to cups of water\n    SUGAR_TO_WATER_RATIO = 7/13\n\n    # Calculate the total amount of water used\n    total_water_used = 120 / (SUGAR_TO_WATER_RATIO + 13)\n\n    # Calculate the number of teaspoonfuls of sugar used\n    sugar_used = total_water_used / SUGAR_TO_WATER_RATIO\n\n    # Display the number of teaspoonfuls of sugar used\n    result = sugar_used\n    return result"}
{"output": "def solution():\n    \n    shoes_per_child = 2\n    children = 3\n    cost_per_shoe = 60\n    total_shoes = shoes_per_child * children * children\n    total_cost = total_shoes * cost_per_shoe\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vehicles in each container and the total number of vehicles\n    VEHICLES_PER_CONTAINER = 5\n    TOTAL_VEHICLES = 30\n\n    # Calculate the number of imported vehicles on the first day\n    imported_vehicles_first_day = 2 * VEHICLES_PER_CONTAINER\n\n    # Calculate the number of imported vehicles on the second day\n    imported_vehicles_second_day = TOTAL_VEHICLES - imported_vehicles_first_day\n\n    # Display the number of imported vehicles on the second day\n    result = imported_vehicles_second_day\n    return result"}
{"output": "def solution():\n    \n    adrien_salary = 40000\n    lylah_salary = adrien_salary * 1.3\n    adrien_four_years_ago = adrien_salary + 40000\n    lylah_increase = lylah_salary * 1.4\n    total_salary = adrien_four_years_ago + lylah_increase\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pads used per week and the number of sheets of paper on a pad\n    pads_per_week = 2\n    sheets_per_pad = 30\n\n    # Calculate the total number of sheets of paper used per month\n    total_sheets_per_month = pads_per_week * sheets_per_pad * 4\n\n    # Display the total number of sheets of paper used per month\n    result = total_sheets_per_month\n    return result"}
{"output": "def solution():\n    \n    morisette_apples = 5\n    morisette_oranges = 8\n    kael_apples = morisette_apples * 2\n    kael_oranges = morisette_oranges / 2\n    total_fruits = morisette_apples + morisette_oranges + kael_apples + kael_oranges\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Sadie slept on Monday\n    monday_hours = 8\n\n    # Calculate the number of hours Sadie slept on the next two days\n    next_two_days_hours = monday_hours - 2\n\n    # Calculate the number of hours Sadie slept on the rest of the week\n    rest_of_week_hours = (2 * monday_hours) + 1\n\n    # Calculate the total number of hours Sadie slept in the week\n    total_hours = monday_hours + next_two_days_hours + rest_of_week_hours\n\n    # Display the total number of hours Sadie slept in the week\n    result = total_hours\n    return result"}
{"output": "def solution():\n    # Calculate the distance Rosie can run in 3 hours at 10 miles per hour\n    distance_3_hours = 10 * 3\n\n    # Calculate the distance Rosie can run in 5 miles per hour after 3 hours\n    distance_5_hours = 5 * 5\n\n    # Calculate the total distance Rosie can run in 7 hours\n    total_distance = distance_3_hours + distance_5_hours\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of letters in the pile\n    total_letters = 60\n\n    # Define the number of already-stamped letters\n    already_stamped_letters = 30\n\n    # Calculate the number of stamped letters\n    stamped_letters = total_letters // 3\n\n    # Calculate the number of stamped letters\n    stamped_letters = already_stamped_letters - stamped_letters\n\n    # Display the number of stamped letters\n    result = stamped_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of spoons\n    initial_spoons = 12\n\n    # Define the number of spoons bought to Julia's husband\n    husband_spoons = 5\n\n    # Define the number of spoons used to sample the stew\n    stew_spoons = 3\n\n    # Calculate the total number of spoons\n    total_spoons = initial_spoons + husband_spoons - stew_spoons\n\n    # Display the total number of spoons\n    result = total_spoons\n    return result"}
{"output": "def solution():\n    \n    chicken_sausages = 38\n    fish_sausages = chicken_sausages + 6\n    total_sausages = chicken_sausages + fish_sausages\n    result = total_sausages\n    return result"}
{"output": "def solution():\n    \n    lily_friends = 50\n    amy_friends = lily_friends + 20\n    total_friends = lily_friends + amy_friends\n    result = total_friends\n    return result"}
{"output": "def solution():\n    \n    watermelon_cost = 3 * 4\n    pepper_cost = 15\n    orange_cost = watermelon_cost - 5\n    total_cost = (watermelon_cost * 4) + (pepper_cost * 20) + (orange_cost * 10)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    people_per_day = 500\n    minutes_per_patient = 24\n    patients_per_day = people_per_day * minutes_per_patient\n    cost_per_patient = 150\n    cost_per_hour = 200\n    total_cost = (patients_per_day * cost_per_patient) + (patients_per_day * cost_per_hour)\n    profit = total_cost - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    total_workers = 60  # Nissa hires 60 seasonal workers to play elves\n    elves_quit_before_vomit = total_workers / 3  # A third of the elves quit after children vomit\n    elves_remaining = total_workers - elves_quit_before_vomit  # Calculate the number of remaining elves\n    elves_quit_after_kids = 10  # 10 of the remaining elves quit after kids kick their shins\n    elves_left = elves_remaining - elves_quit_after_kids  # Calculate the number of elves left\n    result = elves_left\n    return result"}
{"output": "def solution():\n    \n    # Define the expenditure of Joseph in May\n    may_expenditure = 500\n\n    # Calculate the expenditure of Joseph in June\n    june_expenditure = may_expenditure - 60\n\n    # Calculate the total expenditure for both months\n    total_expenditure = may_expenditure + june_expenditure\n\n    # Display the total expenditure\n    result = total_expenditure\n    return result"}
{"output": "def solution():\n    \n    pam_rides = 2\n    fred_rides = 4\n    luge_rides = 2\n    tickets_per_rider = 6\n    total_tickets = (pam_rides + fred_rides) * tickets_per_rider\n    result = total_tickets\n    return result"}
{"output": "def solution():\n    \n    monday_miles = 4\n    tuesday_miles = 6 * monday_miles\n    total_miles = 41\n    wednesday_miles = total_miles - monday_miles - tuesday_miles\n    result = wednesday_miles\n    return result"}
{"output": "def solution():\n    \n    washes_per_month = 4\n    cost_per_wash = 15\n    months_per_year = 12\n    total_cost = washes_per_month * cost_per_wash * months_per_year\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of video games Brian has\n    brian_games = 20\n\n    # Calculate the number of video games Bobby has\n    bobby_games = 3 * brian_games - 5\n\n    # Display the number of video games Bobby has\n    result = bobby_games\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of unicorns\n    total_unicorns = 27\n\n    # Calculate the number of unicorns in the Highlands\n    highlands_unicorns = total_unicorns // 3\n\n    # Calculate the number of female Scottish unicorns\n    female_unicorns = total_unicorns - highlands_unicorns\n\n    # Display the number of female Scottish unicorns\n    result = female_unicorns\n    return result"}
{"output": "def solution():\n    num_subs = 2\n    subs_price = 7.5\n\n    num_chips = 2\n    chips_price = 1.5\n\n    num_cookies = 2\n    cookies_price = 1.0\n\n    delivery_fee = 0.2  # 20% delivery fee added\n    tip = 5.0\n\n    # Calculate the total cost of all subs\n    total_subs_cost = num_subs * subs_price\n\n    # Calculate the total cost of all chips\n    total_chips_cost = num_chips * chips_price\n\n    # Calculate the total cost of all cookies\n    total_cookies_cost = num_cookies * cookies_price\n\n    # Calculate the total cost of all delivery\n    total_delivery_cost = total_subs_cost + total_chips_cost + total_cookies_cost\n\n    # Calculate the delivery fee\n    delivery_fee = total_delivery_cost * delivery_fee\n\n    # Add the delivery fee to the tip\n    total_delivery_cost += tip\n\n    result = total_delivery_cost\n    return"}
{"output": "def solution():\n    # Calculate the number of questions Mark completed on the first test\n    first_test_questions = 75 * 5\n\n    # Calculate the number of questions Mark completed on the second test\n    second_test_questions = 100 * 5\n\n    # Calculate the total number of questions Mark completed\n    total_questions = first_test_questions + second_test_questions\n\n    # Calculate the number of questions Mark leave incomplete\n    incomplete_questions = total_questions - 75\n    result = incomplete_questions\n    return result"}
{"output": "def solution():\n    \n    blue_gumballs = 12\n    pink_gumballs = (blue_gumballs * 4) + 22\n    result = pink_gumballs\n    return result"}
{"output": "def solution():\n    total_cars = 20\n    automatic_cars = 12\n    manual_cars = 4\n\n    # Calculate the number of semi-automatic cars\n    semi_automatic_cars = total_cars - automatic_cars - manual_cars\n\n    # Calculate the percentage of semi-automatic cars\n    semi_automatic_percentage = (semi_automatic_cars / total_cars) * 100\n    result = semi_automatic_percentage\n    return result"}
{"output": "def solution():\n    \n    total_hive_bees = 700\n    baby_bees = total_hive_bees / 3\n    worker_bees = baby_bees * 2\n    result = worker_bees\n    return result"}
{"output": "def solution():\n    hours_per_day = 2  # Jordan plays video games for 2 hours every day\n    part_time_job = 10  # Jordan earns $10 an hour\n    days_per_week = 7  # There are 7 days in a week\n\n    # Calculate the total number of hours Jordan played in a week\n    total_hours = hours_per_day * days_per_week\n\n    # Calculate the total amount of money Jordan earns in a week\n    total_earnings = total_hours * part_time_job\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    milk_price = 2\n    egg_price = 3\n    light_bulbs_price = 3\n    cup_price = 3\n    roach_train_price = 4\n\n    # Calculate the subtotal\n    subtotal = milk_price + egg_price + light_bulbs_price + cup_price + roach_train_price\n\n    # Calculate the tax\n    tax = subtotal * 0.1\n\n    # Calculate the total cost\n    total_cost = subtotal + tax\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of bleach and cloths for Kim\n    cost_bleach = 2 * 2  # 2 bottles of bleach at $2 each\n    cost_cloths = 5 * 5  # 1 pack of cloths at $5 each\n    total_cost = cost_bleach + cost_cloths\n\n    # Calculate Kim's weekly income\n    income_per_week = 92\n    profit = income_per_week - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hectares and pineapples per hectare\n    hectares = 10\n    pineapples_per_hectare = 100\n\n    # Calculate the total number of pineapples harvested in a year\n    total_pineapples = hectares * pineapples_per_hectare * 12\n\n    # Calculate the number of pineapples harvested in a year\n    harvested_pineapples_per_year = total_pineapples * 3\n\n    # return the result\n    result = harvested_pineapples_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pieces on the floor\n    floor_pieces = 500\n\n    # Calculate the number of pieces on the first lego boxed\n    first_lego_pieces = floor_pieces * 3\n\n    # Calculate the number of pieces on the second lego boxed\n    second_lego_pieces = floor_pieces * 1/4\n\n    # Calculate the total number of blocks Johnny picked up\n    total_blocks = first_lego_pieces + second_lego_pieces + third_lego_pieces\n\n    # Display the total number of blocks\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    # Calculate the number of bees that leave the hive in the first 6 hours\n    leave_first_6_hours = 30\n\n    # Calculate the number of bees that leave the hive fly from the hive in the next 6 hours\n    fly_first_6_hours = leave_first_6_hours * 2\n\n    # Calculate the number of bees that leave the hive fly from the hive in the next 6 hours\n    fly_next_6_hours = fly_first_6_hours * 2\n\n    # Calculate the number of bees that leave the hive in the last 6 hours\n    last_6_hours = leave_first_6_hours + fly_next_6_hours\n\n    result = last_6_hours\n    return result"}
{"output": "def solution():\n    \n    adult_ticket_cost = 12\n    child_ticket_cost = 10\n    total_cost = (adult_ticket_cost * 1) + (child_ticket_cost * 1) + (adult_ticket_cost * 1)\n    change = 8\n    money_given = total_cost - change\n    result = money_given\n    return result"}
{"output": "def solution():\n    \n    charlie_friends = 12\n    dorothy_friends = charlie_friends / 3\n    james_friends = dorothy_friends * 4\n    result = james_friends\n    return result"}
{"output": "def solution():\n    \n    steve_distance = 3\n    steve_speed = 440\n    tim_distance = 2\n    tim_speed = 264\n    steve_time = steve_distance / steve_speed\n    tim_time = tim_distance / tim_speed\n    winner_time = steve_time + (tim_time - steve_time)\n    result = winner_time\n    return result"}
{"output": "def solution():\n    \n    tire_cost = 0.25\n    bikes_on_first_day = 5\n    tricycle_tires_per_person = 3\n    unicycle_tires_per_person = 1\n    total_tires = (bikes_on_first_day * tire_cost) + (tricycle_tires_per_person * tricycle_tires_per_person) + unicycle_tires_per_person\n    total_inflation = total_tires * tire_cost\n    result = total_inflation\n    return result"}
{"output": "def solution():\n    \n    packs_of_cookies = 10\n    cookies_per_pack = 6\n    cost_per_cookie = 0.10\n    total_cookies = packs_of_cookies * cookies_per_pack\n    total_cost = total_cookies * cost_per_cookie\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of french fries Dave ate\n    initial_fries = 14\n\n    # Calculate the number of french fries Dave ate after the seagull landed\n    dave_fries = initial_fries / 2\n\n    # Calculate the number of french fries remaining after the pigeons bulled down\n    remaining_fries = dave_fries - 3 * 3\n\n    # Calculate the number of raccoon fries\n    raccoon_fries = remaining_fries * (2/3)\n\n    # Calculate the final number of french fries\n    final_fries = remaining_fries - raccoon_fries\n\n    # Display the final number of french fries\n    result = final_fries\n    return result"}
{"output": "def solution():\n    # Calculate the total number of hours Kimo spends attending classes in one semester\n    hours_per_semester = (3 * 1) + (2 * 2)  # Kimo has 3 1-hour classes each day on Monday, Wednesday, Thursday, and 2 2-hour classes each day\n    total_hours = hours_per_semester * 16  # There are 16 weeks of school in one semester\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    rolls = 300\n    croissants = 120\n    baguettes = 60\n    roll_length = 4\n    croissant_length = 6\n    baguette_length = 2\n    total_length = (rolls * roll_length) + (croissants * croissant_length) + (baguettes * baguette_length)\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    monkeys_bananas = 200\n    gorillas_bananas = 400\n    baboons_bananas = 100\n    total_bananas = monkeys_bananas + gorillas_bananas + baboons_bananas\n    total_monthly_order = total_bananas * 2\n    result = total_monthly_order\n    return result"}
{"output": "def solution():\n    football_field_length = 100  # The football field is 100 yards long\n    blake_runs = 15  # Blake runs back and forth 15 times\n    kelly_runs = 1  # Kelly runs back and forth once\n    total_runs = 34  # Blake runs to the 40-yard line and back\n\n    # Calculate the total time Blake spends running\n    blake_time = blake_runs * (blake_runs / 15)\n\n    # Calculate the total time Kelly spends running\n    kelly_time = kelly_runs * (kelly_runs / 15)\n\n    # Calculate the total time the winner spends running\n    winner_time = total_time - blake_time - kelly_time\n\n    # Calculate the difference in time between the winner and loser\n    difference = winner_time - loser_time\n    result = difference\n    return result"}
{"output": "def solution():\n    num_pens = 4\n    pen_price = 1.5\n\n    num_notebooks = 2\n    notebook_price = 4\n\n    bond_paper_price = 20\n\n    # Calculate the total cost of all pens\n    total_pen_cost = num_pens * pen_price\n\n    # Calculate the total cost of all notebooks\n    total_notebook_cost = num_notebooks * notebook_price\n\n    # Calculate the total cost of all bond paper\n    total_paper_cost = bond_paper_price\n\n    # Calculate the total cost of all supplies\n    total_cost = total_pen_cost + total_notebook_cost + total_paper_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    initial_tadpoles = 11\n    lily_pad_tadpoles = 6\n    rock_tadpoles = 2\n    total_tadpoles = initial_tadpoles - lily_pad_tadpoles - rock_tadpoles\n    result = total_tadpoles\n    return result"}
{"output": "def solution():\n    \n    monday_depth = 17\n    tuesday_depth = monday_depth + 7\n    wednesday_depth = tuesday_depth * (2/3)\n    result = wednesday_depth\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish Anakin caught\n    anakin_starfish = 10\n    anakin_sea_horses = 6\n    anakin_clownfish = 3\n\n    # Calculate the number of fish Anakin caught\n    anakin_locsin_starfish = anakin_starfish - 5\n    anakin_sea_horses = anakin_sea_horses - 3\n    anakin_clownfish = anakin_clownfish - 2\n\n    # Calculate the total number of fish they caught\n    total_fish = anakin_starfish + anakin_sea_horses + anakin_clownfish + anakin_clownfish\n\n    # Display the total number of fish\n    result = total_fish\n    return result"}
{"output": "def solution():\n    original_price = 20  # original price of a bag of marbles\n    increase_percentage = 0.2  # 20% increase\n    months = 36  # number of months\n\n    # Calculate the new price after 36 months\n    new_price = original_price * (1 + increase_percentage)\n\n    result = new_price\n    return result"}
{"output": "def solution():\n    num_red_cars = 5\n    red_car_cost = 4\n\n    num_action_figures = 3\n    action_figures_cost = 4\n\n    doll_cost = 3 * action_figures_cost\n\n    # Calculate the total cost of all red cars\n    total_red_car_cost = num_red_cars * red_car_cost\n\n    # Calculate the total cost of all action figures\n    total_action_figures_cost = num_action_figures * action_figures_cost\n\n    # Calculate the total cost of all toys\n    total_cost = total_red_car_cost + total_action_figures_cost + doll_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Jackie will have if she hires the accountant\n    total_freelance_hours = 90 / 3  # she losing $35/hour in missed income\n    total_missed_income = 35  # she losing $35/hour in missed income\n    total_money = total_freelance_hours + total_missed_income\n\n    # Calculate how much more money Jackie will have if she hires the accountant\n    extra_money = 90 - total_money\n    result = extra_money\n    return result"}
{"output": "def solution():\n    \n    total_budget = 1500\n    machine_cost = 1090\n    screen_keyboard_mouse = 1090\n    scanner_cost =157\n    cd_burner_cost = 74\n    printer_cost = 102\n    total_money = total_budget - machine_cost - screen_keyboard_mouse - scanner_cost - cd_burner_cost - printer_cost\n    result = total_money\n    return result"}
{"output": "def solution():\n    eggs_per_babysitting = 9  # Sandra's neighbor gives her a basket of 9 eggs every time she babysits their daughter\n    eggs_per_flan = 3  # Sandra needs 3 eggs to make a Spanish flan\n    flans_to_make = 15  # Sandra has been tasked to make 15 Spanish flans\n\n    # Calculate the total number of eggs Sandra has to babysit\n    total_eggs = eggs_per_flan * flans_to_make\n\n    # Calculate the number of times Sandra needs to babysit\n    babysit_count = total_eggs // eggs_per_babysitting\n    result = babysit_count\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Brooke's age is x\n    # Seth is twice as old as Brooke, so Seth's age is 2x\n    # In 2 years, their ages will be 28, so:\n    # x + 2x + 2x = 28\n    # Solving for x, we get:\n    x = (28 - 2) / 2\n    # Seth is twice as old as Brooke\n    result = x\n    return result"}
{"output": "def solution():\n    \n    # Define Ethal's money\n    ethal_money = 8\n\n    # Calculate Jimmy's money\n    jimmy_money = 2 + 2 * ethel_money\n\n    # Display Jimmy's money\n    result = jimmy_money\n    return result"}
{"output": "def solution():\n    miles_per_day = 20\n    days_per_week = 7\n    miles_per_weekend = 10\n\n    # Calculate the total miles Pancho walks in a week\n    total_miles = (miles_per_day * days_per_week) + miles_per_weekend\n    result = total_miles\n    return result"}
{"output": "def solution():\n    \n    hat_cost = 25\n    jacket_cost = hat_cost * 3\n    pants_cost = (hat_cost + jacket_cost) / 2\n    total_cost = hat_cost + jacket_cost + pants_cost\n    cost_per_uniform = total_cost / 3\n    result = cost_per_uniform\n    return result"}
{"output": "def solution():\n    # Calculate the total number of legs seen by Jake\n    total_legs = 80*8 + 90*6 + 3*10  # 80 spiders with 8 legs each, 90 insects with 6 legs each, 3 rare mutant invertebrates with 10 legs each\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define Sally Thirtytwo's age\n    sally_thirtytwo_age = 8\n\n    # Calculate Granny Red's age\n    granny_red_age = sally_thirtytwo_age * 2\n\n    # Calculate Sally Four's age\n    sally_four_age = sally_thirtytwo_age * 2\n\n    # Calculate Granny Red's age\n    granny_red_age = granny_red_age * 2\n\n    # Calculate the total age of the four birds\n    total_age = sally_thirtytwo_age + granny_red_age + sally_four_age + granny_red_age + 4\n\n    # Display the total age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    student_payment = 300\n    credit_card_minimum = 200\n    mortgage_minimum = 500\n    annual_minimum = student_payment + credit_card_minimum + mortgage_minimum\n    monthly_increase = 0.5\n    monthly_increase = monthly_increase * annual_minimum\n    monthly_increase = monthly_increase * annual_increase\n    total_increase = monthly_increase + monthly_increase\n    result = total_increase\n    return result"}
{"output": "def solution():\n    \n    # Define the number of potatoes and the time it takes to peel one potato\n    potatoes = 60\n    time_per_potato = 60 / 2\n\n    # Calculate the time it takes to peel one potato\n    time_peel_potato = time_per_potato / 2\n\n    # Calculate the time it takes to cut up the potatoes\n    time_cut_potato = time_per_potato * 5\n\n    # Calculate the total time it takes to prep the potatoes\n    total_time = time_peel_potato + time_cut_potato\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    cost_per_gallon = 3\n    sugar_cost = 2\n    selling_price_per_glass = 0.5\n    glasses_per_gallon = 20\n    total_profit = 25\n\n    # Calculate the total revenue from selling lemons\n    total_revenue = selling_price_per_gallon * glasses_per_gallon\n\n    # Calculate the cost of lemons\n    cost_of_lemons = total_revenue - cost_of_lemons\n\n    # Calculate the cost of sugar\n    cost_of_sugar = total_revenue - cost_of_sugar\n\n    # Calculate the total cost of lemons\n    total_cost_of_lemons = cost_of_lemons + cost_of_sugar\n    result = total_cost_of_lemons\n    return result"}
{"output": "def solution():\n    total_asians = 240\n    japanese = 80\n    chinese = total_asians - japanese\n    boys_on_chinese = 60\n\n    # Calculate the number of girls on the Chinese team\n    girls_on_chinese = boys_on_chinese - boys_on_chinese\n    result = girls_on_chinese\n    return result"}
{"output": "def solution():\n    salary = 6000  # Zaid earns 6000$ per month\n    rent = salary * (1/4)  # Zaid spends 1/4 of his salary on rent\n    car_fuel = salary * (1/3)  # Zaid spends 1/3 of his salary on car fuel\n    remaining = salary - rent - car_fuel  # Zaid has this much money left after expenses and donations\n    daughter_money = 200  # Zaid gives his daughter money to his wife\n    remaining -= daughter_money  # Zaid donates half of the remaining amount to his favorite charity\n    remaining -= 700  # Zaid gives his daughter money to his wife budget for groceries and other household goods\n\n    # Calculate Zaid's remaining money after all expenses and donations\n    remaining_money = remaining - remaining_money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    bo_crabs = 40\n    monic_crabs = bo_crabs - 4\n    rani_crabs = monic_crabs + 10\n    total_crabs = bo_crabs + monic_crabs + rani_crabs\n    result = total_crabs\n    return result"}
{"output": "def solution():\n    hourly_rate = 10  # Lloyd earns $10 an hour on Math tutoring\n    hours_week1 = 5  # Lloyd tutored 5 hours for the first week\n    hours_week2 = 8  # Lloyd tutored 8 hours for the second week\n\n    # Calculate Lloyd's earnings for the first two weeks\n    earnings_week1 = hourly_rate * hours_week1\n    earnings_week2 = hourly_rate * hours_week2\n    total_earnings = earnings_week1 + earnings_week2\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students who voted\n    total_students = 80\n\n    # Calculate the number of votes the winner got\n    winner_votes = total_students * 3/4\n\n    # Calculate the number of votes the loser got\n    loser_votes = total_students - winner_votes\n\n    # Display the number of votes the loser got\n    result = loser_votes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red roses Sandra ordered\n    red_roses = 4 * red_roses\n\n    # Define the number of pink calla lilies Sandra ordered\n    pink_calla_lilies = 200\n\n    # Define the number of white carnations Sandra ordered\n    white_carnations = white_carnations * 5\n\n    # Calculate the total number of red roses Sandra has\n    total_red_roses = red_roses + white_carnations + pink_calla_lilies\n\n    # Calculate the number of red roses Sandra must deliver by 5 pm\n    red_roses_delivered = total_red_roses - 5\n\n    # Display the number of red roses Sandra must deliver\n    result = red_roses_delivered\n    return result"}
{"output": "def solution():\n    \n    # Define Jan's age\n    jan_age = 30\n\n    # Calculate Mark's age 2 years ago\n    mark_age_2_years_ago = (jan_age / 2) + 5\n\n    # Calculate Jean's age 2 years ago\n    jean_age_2_years_ago = mark_age_2_years_ago + 2\n\n    # Calculate Jean's age\n    jean_age = jean_age_2_years_ago + 2\n\n    # Display Jean's age\n    result = jean_age\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of each runner\n    runner1_distance = 400\n    runner2_distance = 60\n    runner3_distance = runner1_distance + 3\n\n    # Calculate the total distance of the first runner\n    first_runner_distance = runner1_distance * 4\n\n    # Calculate the total distance of the second runner\n    second_runner_distance = runner2_distance * 4\n\n    # Calculate the difference in time between the two teams\n    time_difference = first_runner_distance - second_runner_distance\n\n    # Return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the probability of Jerry's die\n    die_probability = 6\n\n    # Calculate the probability of Jerry's die\n    die_probability = (die_probability / 6) * 100\n\n    # Calculate the probability of Jerry's die\n    die_probability = (die_probability / 6) * 100\n\n    # Calculate the difference in probability\n    probability_difference = die_probability - die_probability\n\n    # Display the probability difference\n    result = probability_difference\n    return result"}
{"output": "def solution():\n    \n    mom_apples = 20\n    jenna_apples = mom_apples / 2\n    total_apples = mom_apples + jenna_apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    # Calculate the total number of straw pieces distributed among the small rodents\n    total_straw = 160\n\n    # Calculate the number of straw pieces kept in equal groups\n    equal_groups_straw = total_straw / 3\n\n    # Calculate the number of straw pieces used for hamsters\n    hamster_straw = 10 * 5\n\n    # Calculate the number of straw pieces distributed among the rabbits\n    rabbits_straw = 20\n\n    # Calculate the number of rats\n    equal_groups_straw = equal_groups_straw / 6\n\n    # Calculate the number of rats\n    rats_straw = equal_groups_straw * equal_groups_straw\n    result = rats_straw\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount owed to Benedict\n    initial_amount = 100\n\n    # Calculate the monthly interest amount\n    monthly_interest = initial_amount * 0.02\n\n    # Calculate the total amount owed after 3 months\n    total_amount = initial_amount + (monthly_interest * 3)\n\n    # Display the total amount owed to Benedict\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of transport each bag\n    transport_cost = 2\n\n    # Define the total profit\n    total_profit = 400\n\n    # Define the selling rate of wheat\n    selling_rate = 30\n\n    # Calculate the cost of buying bags of wheat\n    cost_of_wheat = 20 * bags_bought\n\n    # Calculate the cost of transport bags of wheat\n    transport_cost = cost_of_wheat * transport_cost\n\n    # Calculate the revenue from selling bags of wheat\n    revenue = total_profit - cost_of_wheat\n\n    # Calculate the number of bags sold\n    num_bags_sold = revenue / selling_rate\n\n    # Display the number of bags sold\n    result = num_bags_sold\n    return result"}
{"output": "def solution():\n    num_friends = 3\n    ticket_price = 20.25\n    food_price = ticket_price - 4.5\n    ride_price = 33\n    num_rides = 2\n\n    # Calculate the total cost of all tickets\n    total_tickets_cost = num_friends * ticket_price\n\n    # Calculate the total cost of all food\n    total_food_cost = num_food_cost * food_price\n\n    # Calculate the total cost of all rides\n    total_rides_cost = num_rides * ride_price\n\n    # Calculate the total cost of all friends\n    total_cost = total_tickets_cost + total_food_cost + total_rides_cost\n\n    # Calculate the cost per person\n    cost_per_person = total_cost / num_friends\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes in 3 hours\n    MINUTES_IN_3_HOURS = 3\n\n    # Define the number of peaches John can collect per minute\n    PEACHES_PER_MINUTE = 2\n\n    # Calculate the total number of peaches John collects in 3 hours\n    total_peaches = MINUTES_IN_3_HOURS * PEACHES_PER_MINUTE\n\n    # Display the total number of peaches\n    result = total_peaches\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of insects needed per day\n    total_insects_per_day = 3.5 * 10 * 7  # Ducks eat 3.5 pounds of insects each week, and there are 10 ducks in a flock\n    result = total_insects_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of trees\n    initial_trees = 50\n\n    # Define the number of trees planted and chops down each year\n    planted_trees = 10\n    down_trees = 2\n\n    # Calculate the number of trees remaining after 10 years\n    remaining_trees = initial_trees - (planted_trees * 10) + (down_trees * 10)\n\n    # Calculate the number of trees that die\n    die_trees = 0.3 * remaining_trees\n\n    # Calculate the final number of trees\n    final_trees = remaining_trees - die_trees\n\n    # Display the final number of trees\n    result = final_trees\n    return result"}
{"output": "def solution():\n    \n    friday_flamingos = 18\n    saturday_flamingos = friday_flamingos / 3\n    sunday_flamingos = 18\n    total_flamingos = friday_flamingos + saturday_flamingos + sunday_flamingos\n    result = total_flamingos\n    return result"}
{"output": "def solution():\n    num_colors = 5\n    total_price = 20\n    cost_per_crayon = 2\n\n    # Calculate the total cost of all crayons\n    total_crayon_cost = num_colors * cost_per_crayon\n\n    # Calculate the amount of change\n    change = total_price - total_crayon_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a pencil and eraser\n    PENCIL_PRICE = 1.20\n    ERASER_PRICE = 0.30\n\n    # Define the number of pens\n    num_pens = 8\n\n    # Calculate the combined cost of the pens\n    pencil_cost = num_pens * PENCIL_PRICE\n\n    # Calculate the cost of the eraser\n    eraser_cost = eraser_cost * ERASER_PRICE\n\n    # Calculate the cost of the pen\n    pen_cost = pencil_cost + eraser_cost\n\n    # Calculate the total cost of 8 pens\n    total_cost = pencil_cost + eraser_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of carrots and the number of restaurants\n    total_carrots = 200\n    num_restaurants = 40\n\n    # Define the amount of carrots each restaurant will receive\n    carrots_per_restaurant = 2\n\n    # Calculate the total amount of carrots used\n    total_carrots_used = num_restaurants * carrots_per_restaurant\n\n    # Calculate the amount of carrots not used\n    carrots_not_used = total_carrots - total_carrots_used\n\n    # return the result\n    result = carrots_not_used\n    return result"}
{"output": "def solution():\n    \n    total_population = 23786\n    men = 8417\n    women = 9092\n    kids = total_population - men - women\n    result = kids\n    return result"}
{"output": "def solution():\n    \n    initial_cards = 20\n    first_month_cards = initial_cards * 3\n    second_month_cards = first_month_cards - 20\n    third_month_cards = 2 * (first_month_cards + second_month_cards)\n    total_cards = initial_cards + first_month_cards + second_month_cards + third_month_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    # Calculate the total number of sentences Mark pays in a week\n    total_sentences = 1000 + (2 * 1000)  # Publisher A pays twice what Publisher A pays\n\n    # Calculate the total amount of money Mark makes in a week\n    total_money = (total_sentences / 1000) * 5  # Mark edits a total number of 1000 sentences each week, 5 cents per sentence\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    morning_pails = 5\n    afternoon_pails = 6\n    liters_per_pail = 5\n    total_liters = (morning_pails + afternoon_pails) * liters_per_pail\n    result = total_liters\n    return result"}
{"output": "def solution():\n    \n    # Define the initial time monetary reward and the percentage raise in salary\n    INITIAL_REWARD = 5000\n    SALARY_PERCENTAGE = 0.05\n\n    # Define the number of weeks in a year\n    WEEKS_IN_YEAR = 52\n\n    # Calculate John's salary for the year\n    salary_weekly = INITIAL_REWARD * SALARY_PERCENTAGE\n\n    # Calculate John's total earnings for the year\n    total_earnings = (INITIAL_REWARD + salary_weekly) * SALARY_PERCENTAGE\n\n    # Display John's total earnings for the year\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    acre_grapes = 10\n    grapes_per_year = acre_grapes * 5\n    barrels_per_grapes = 2\n    barrels_per_year = grapes_per_year * barrels_per_grapes\n    result = barrels_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices of cheese used on each sandwich\n    sandwich_slices = 2\n\n    # Define the number of slices of cheese used per omelet\n    omelet_slices = sandwich_slices + 1\n\n    # Define the number of days in the week\n    days_in_week = 3\n\n    # Calculate the total number of slices of cheese used\n    total_slices = (sandwich_slices * days_in_week) + (omelet_slices * 3) + 8\n\n    # Display the total number of slices of cheese used\n    result = total_slices\n    return result"}
{"output": "def solution():\n    \n    green_pens = 22\n    yellow_pens = 10\n    blue_pens = 6 * 9\n    red_pens = 2 * 6\n    total_pens = green_pens + yellow_pens + blue_pens + red_pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    total_scores = 89 + 71 + 92 + 100 + 86\n    desired_average = 93\n    scores_needed = (desired_average * 6) - total_scores\n    result = scores_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Micheal rode the bike each week and the number of weeks he rode the bike\n    TIMES_1 = 5\n    TIMES_2 = 2\n\n    # Define the number of times Micheal rode the bike each time\n    TIMES_3 = 3\n\n    # Calculate the total distance Micheal made in the first 4 weeks\n    distance_1 = TIMES_1 * 25\n\n    # Calculate the total distance Micheal made in the next 4 weeks\n    distance_2 = TIMES_2 * 25\n\n    # Calculate the total distance Micheal made in the next 3 weeks\n    distance_3 = TIMES_3 * 60\n\n    # Calculate the total distance Micheal made\n    total_distance = distance_1 + distance_2 + distance_3\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    chocolate_bars = 25\n    candied_apples = 80\n    chocolate_bar_weight = 40\n    apple_weight = 2 * chocolate_bar_weight\n    total_weight = (chocolate_bars * chocolate_bar_weight) + (candied_apples * apple_weight)\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    monday_cakes = 4\n    tuesday_cakes = monday_cakes * 3\n    wednesday_cakes = tuesday_cakes * 5\n    total_cakes = monday_cakes + tuesday_cakes + wednesday_cakes\n    result = total_cakes\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of one dozen plates\n    CUP_COST = 6000\n\n    # Calculate the cost of half a dozen plates\n    half_dozen_plates_cost = (20/2) * CUP_COST - 1200\n\n    # Calculate the total cost of buying half a dozen plates\n    total_half_dozen_plates_cost = half_dozen_plates_cost * 2\n\n    # Calculate the total cost of buying each cup\n    total_cost_per_cup = total_half_dozen_plates_cost / 12\n\n    # Display the total cost of buying each cup\n    result = total_cost_per_cup\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the jacket and shoes\n    jacket_cost = 30\n    shoes_cost = 20\n\n    # Calculate the total cost of the jacket and shoes\n    total_cost = jacket_cost + (2 * shoes_cost)\n\n    # Calculate how much Sara earned from babysitting the neighbor's kids\n    babysitting_earnings = 4 * 4\n\n    # Calculate how much Sara still needs to mow the lawn\n    lawn_cost = total_cost - babysitting_earnings - 10\n\n    # Calculate how many times Sara needs to mow the lawn\n    mows_needed = lawn_cost / 4\n\n    # Display the number of times Sara needs to mow the lawn\n    result = mows_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced by each type of chicken per day\n    RED_EGGS_PER_DAY = 3\n    WHITE_EGGS_PER_DAY = 5\n\n    # Define the number of days Jerry collects eggs\n    DAYS = 42\n\n    # Calculate the total number of red chickens\n    red_chickens = RED_EGGS_PER_DAY * DAYS\n\n    # Calculate the total number of white chickens\n    white_chickens = WHITE_EGGS_PER_DAY * DAYS\n\n    # Calculate the total number of eggs collected\n    total_eggs = red_chickens + white_chickens\n\n    # Calculate the number of red chickens\n    red_chickens = red_chickens - 2\n\n    # Display the number of red chickens\n    result = red_chickens\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the rectangle\n    length = 1.5\n    width = 6\n\n    # Calculate the area of the rectangle\n    area = length * width\n\n    # Calculate the time it takes to walk the rectangle\n    walk_time = area / 3\n\n    # Display the time it takes to walk the rectangle\n    result = walk_time\n    return result"}
{"output": "def solution():\n    \n    first_day_customers = 100\n    second_day_customers = first_day_customers + 50\n    total_customers = 500\n    third_day_customers = total_customers - first_day_customers - second_day_customers\n    result = third_day_customers\n    return result"}
{"output": "def solution():\n    # Calculate the amount of water the small pool has 4 minutes ago\n    small_pool_time_4_minutes_ago = 4 * 2  # 4 minutes ago, twice as much water as the small pool\n\n    # Calculate the amount of water the big pool has 4 minutes ago\n    big_pool_time_4_minutes_ago = 4 * small_pool_time_4_minutes_ago\n\n    # Calculate the amount of water the small pool has now\n    small_pool_now = big_pool_time_4_minutes_ago + 4 * small_pool_time_4_minutes_ago\n\n    result = small_pool_now\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the shoes and belt\n    shoe_price = 320\n    belt_price = 32\n\n    # Calculate the total cost of Lori's purchase\n    total_cost = shoe_price + belt_price\n\n    # Calculate Lori's hourly rate\n    hourly_rate = 8\n\n    # Calculate the number of hours Lori needs to work to make her purchase\n    hours_to_work = total_cost / hourly_rate\n\n    # Display the number of hours Lori needs to work\n    result = hours_to_work\n    return result"}
{"output": "def solution():\n    \n    borrowed_balance = 2000\n    promised_balance = borrowed_balance * 0.1\n    monthly_payment = 165\n    remaining_balance = borrowed_balance + promised_balance - monthly_payment\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    roses = 4\n    dahlias = roses + 7\n    total_flowers = roses + dahlias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define Harriet's age\n    harriet_age = 21\n\n    # Calculate Zack's age\n    zack_age = harriet_age / 2\n\n    # Calculate Adrian's age\n    adrian_age = 3 * harriet_age\n\n    # Calculate the total age of the three\n    total_age = harriet_age + zack_age + adrian_age + 3\n\n    # Calculate the average age of the three\n    average_age = total_age / 3\n\n    # Display the average age\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    total_points = 251\n    naomi_points = 68\n    yuri_points = (naomi_points / 2) + 10\n    brianna_points = naomi_points + 17\n    joj_points = total_points - naomi_points - yuri_points - brianna_points\n    result = joj_points\n    return result"}
{"output": "def solution():\n    \n    crossword_time = 10\n    sudoku_time = 5\n    num_crossword_puzzles = 3\n    num_sudoku_puzzles = 8\n    total_time = (crossword_time * num_crossword_puzzles) + (sudoku_time * num_sudoku_puzzles)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    initial_water = 120\n    used_water = 90\n    remaining_water = initial_water - used_water\n    rainwater = remaining_water * 2\n    total_water = remaining_water + rainwater\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    geraniums = 90\n    petunias = geraniums - 40\n    total_flowers = geraniums + petunias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    # Calculate the total amount spent on advertising for the first year\n    year1_cost = 15000\n\n    # Calculate the amount spent on advertising for the second year\n    year2_cost = year1_cost / 3\n\n    # Calculate the total amount spent on advertising for the two years\n    total_cost = year1_cost + year2_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    carlos_rental_rate = 30\n    benji_rental_rate = 18\n    boat_hours = 3\n    benji_hours = 5\n    carlos_rental = carlos_rental_rate * boat_hours\n    benji_rental = benji_rental_rate * benji_hours\n    total_rental = carlos_rental + benji_rental\n    result = total_rental\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days to travel by bus\n    bus_days = 6\n\n    # Calculate the number of days to travel by car\n    car_days = bus_days / 2\n\n    # Calculate the total number of days to travel\n    total_days = bus_days + car_days\n\n    # Display the total number of days\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    fire_type = 30\n    grass_type = 20\n    water_type = 40\n    lost_water_type = 8\n    bought_grass_type = 14\n    total_water_type = fire_type + grass_type - lost_water_type\n    total_cards = total_water_type + bought_grass_type + total_water_type\n    chance = (total_cards / total_cards) * 100\n    result = chance\n    return result"}
{"output": "def solution():\n    base_burrito = 6.50\n    extra_meat = 2.00\n    extra_cheese = 1.00\n    avocado = 1.00\n    sauces = 2.25\n    meal_extra = 3.00\n    gift_card = 5.00\n\n    # Calculate the total cost of the burrito\n    total_cost = base_burrito + extra_meat + extra_cheese + avocado + sauces\n\n    # Calculate the total cost of the meal, chips, and drink\n    total_cost += meal_extra + gift_card\n\n    # Calculate how much Chad still owes\n    still_owes = base_burrito - total_cost\n    result = still_owes\n    return result"}
{"output": "def solution():\n    kalinda_pieces = 360  # Kalinda is working on a 360 piece puzzle\n    kalinda_speed = 4  # Kalinda can normally add 4 pieces per minute\n    mom_speed = kalinda_pieces / 2  # Kalinda's mom can place half as many pieces per minute as Kalinda\n\n    # Calculate the time it takes Kalinda to complete the puzzle\n    time_kalinda = kalinda_pieces / kalinda_speed\n    time_mom = mom_pieces / mom_speed\n    total_time = time_kalinda + time_mom\n\n    # Convert the total time to hours\n    hours = total_time / 60\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of watermelons\n    total_watermelons = 120\n\n    # Calculate the number of watermelons ready for harvested after two months\n    ready_for_harvest = total_watermelons * 0.3\n\n    # Calculate the number of watermelons remaining after two months\n    remaining_watermelons = total_watermelons - ready_for_harvest\n\n    # Calculate the number of watermelons ready for two weeks later\n    ready_for_two_weeks = remaining_watermelons * (3/4)\n\n    # Calculate the number of watermelons not ready to be harvested after two weeks\n    not_ready_for_two_weeks = remaining_watermelons - ready_for_two_weeks\n\n    # Display the number of watermelons not ready to be harvested\n    result = not_ready_for_two_weeks\n    return result"}
{"output": "def solution():\n    num_cars = 12\n    car_price = 20000\n    tax_rate = 0.1  # 10% tax\n    registration_rate = 1000\n\n    # Calculate the total cost of all cars before tax\n    total_cost_before_tax = num_cars * car_price\n\n    # Calculate the total tax\n    total_tax = total_cost_before_tax * tax_rate\n\n    # Calculate the total cost of all registration\n    total_registration = num_cars * registration_rate\n\n    # Calculate the total cost of everything\n    total_cost = total_cost_before_tax + total_registration\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shells collected on Monday\n    monday_shells = 20\n\n    # Calculate the number of shells collected on Monday\n    monday_shells = monday_shells + 5\n\n    # Calculate the number of shells collected on Tuesday\n    tuesday_shells = monday_shells * 2\n\n    # Display the number of shells collected on Tuesday\n    result = tuesday_shells\n    return result"}
{"output": "def solution():\n    \n    ants = 50\n    bugs = ants / 2\n    total_insects = ants + bugs\n    result = total_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of penguins\n    initial_penguins = 36\n\n    # Calculate the number of penguins that jump in and swim in the ocean\n    jump_in_ocean = initial_penguins // 3\n\n    # Calculate the number of penguins that go inside the cave\n    dinner_in_cave = initial_penguins // 3\n\n    # Calculate the number of penguins that still left sunbathing\n    sunbathing_left = initial_penguins - jump_in_ocean - dinner_in_cave\n\n    # Display the number of penguins still sunbathing\n    result = sunbathing_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tomatoes Steve eats per day\n    tomatoes_per_day = 6\n\n    # Calculate the number of tomatoes Steve grows his own cherry tomatoes\n    girlfriend_tomatoes = tomatoes_per_day * 2\n\n    # Calculate the total number of tomatoes Steve eats in a week\n    total_tomatoes_per_week = (tomatoes_per_day + girlfriend_tomatoes) * 7\n\n    # Calculate the number of vines Steve needs to produce\n    vines_needed = total_tomatoes_per_week / 3\n\n    # Display the number of vines Steve needs to produce\n    result = vines_needed\n    return result"}
{"output": "def solution():\n    num_friends = 20\n    slices_per_friend = 4\n    num_slices_per_pizza = 8\n\n    # Calculate the total number of slices needed\n    total_slices = num_friends * slices_per_friend\n\n    # Calculate the number of pizzas needed\n    num_pizzas = total_slices // slices_per_pizza\n    if total_slices % slices_per_pizza!= 0:\n        num_pizzas += 1\n\n    result = num_pizzas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of empty pens and the amount saved by mixing the ink\n    empty_pens = 5\n    saved_money = 5\n\n    # Define the number of pens Ram buys and uses them to make new pens\n    pens_bought = 25\n    new_pens = 5\n\n    # Calculate the total number of pens Ram gets to have\n    total_pens = pens_bought + new_pens\n\n    # Display the total number of pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define Johnny's initial allowance and additional money\n    initial_allowance = 20\n    additional_money = 10\n\n    # Calculate Johnny's total amount of money after a year\n    total_money = initial_allowance + additional_money\n\n    # Calculate the amount of money Johnny invested in a year\n    annual_investment = total_money * 3\n\n    # Display Johnny's final amount of money\n    result = annual_investment\n    return result"}
{"output": "def solution():\n    \n    jessa_age = 20\n    joan_age = jessa_age + 5\n    mary_age = joan_age - 2\n    sum_of_ages = jessa_age + joan_age + mary_age\n    result = sum_of_ages\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of entrances\n    total_students = 1000\n    num_entrances = 3\n\n    # Calculate the number of students who went out through exit A\n    num_students_A = int(total_students * 0.3)\n\n    # Calculate the number of students who went out through exit B\n    num_students_B = int(total_students - num_students_A)\n\n    # Calculate the number of students who went out through exit C\n    num_students_C = total_students - num_students_A - num_students_B\n\n    # Display the number of students who went out through exit C\n    result = num_students_C\n    return result"}
{"output": "def solution():\n    \n    john_candies = 54\n    robert_candies = john_candies / 2\n    james_candies = robert_candies + 6\n    difference = john_candies - james_candies\n    result = difference\n    return result"}
{"output": "def solution():\n    dolly_books = 2  # Dolly has two books\n    pandora_books = 1  # Pandora has one book\n\n    # Calculate the total number of books they will collectively read by the end\n    total_books = dolly_books + pandora_books\n    result = total_books\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and letters per week\n    num_people = 5\n    num_letters_per_week = 2\n\n    # Define the number of pages per letter\n    num_pages_per_letter = 5\n\n    # Calculate the total number of pages per week\n    total_pages_per_week = num_people * num_letters_per_week\n\n    # Calculate the total number of pages per week\n    total_pages_per_week = total_pages_per_week * num_pages_per_letter\n\n    # Calculate the total time spent writing per week\n    time_per_week = total_pages_per_week / 6\n\n    # Convert the time to hours\n    hours_per_week = time_per_week / 60\n\n    # Return the result\n    result = hours_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the phone plan time and the number of days in a month\n    PHONE_TIME = 1000\n    DAYS_IN_MONTH = 30\n\n    # Calculate the total call time for the month\n    total_call_time = PHONE_TIME * DAYS_IN_MONTH\n\n    # Add the extra minutes Jason's boss call\n    total_call_time += 15\n\n    # Add the extra minutes Jason's boss call\n    total_call_time += 300\n\n    # Calculate the remaining call time\n    remaining_call_time = total_call_time - total_call_time\n\n    # Display the remaining call time\n    result = remaining_call_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of fries taken by Kyle\n    kyle_fries = 24\n\n    # Calculate the number of fries taken by Billy\n    billy_fries = kyle_fries * 2\n\n    # Calculate the number of fries taken by Colby\n    colby_fries = kyle_fries - 3\n\n    # Calculate the total number of fries taken by Griffin\n    total_fries = kyle_fries + billy_fries + colby_fries\n\n    # Display the total number of fries taken by Ginger\n    result = total_fries\n    return result"}
{"output": "def solution():\n    # Calculate the number of fish in the two aquariums\n    two_aquariums_fish = 2 * 32\n\n    # Calculate the total number of fish in both aquariums\n    total_fish_both = 4 + 32\n\n    # Calculate the number of fish in each aquarium\n    fish_per_aquarium = total_fish_both / 2\n    result = fish_per_aquarium\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 250\n    hours_per_day = 6\n    hours_per_week = 4\n    weeks_to_finish = 5\n    total_hours_needed = hours_per_day * hours_per_week * weeks_to_finish\n    total_hours_done = total_hours_needed * hours_per_week\n    total_hours_remaining = total_hours_needed - total_hours_done\n    total_cost = total_hours_remaining * hourly_rate\n    discount = total_cost * 0.1\n    final_cost = total_cost - discount\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    total_cost = 12 + 43 + 15 + 4 + 22\n    num_people = 3\n    cost_per_person = total_cost / num_people\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    bags_of_onions = 4\n    weight_per_bag = 50\n    cost_per_pound = 1.5\n    total_weight = bags_of_onions * weight_per_bag\n    total_cost = total_weight * cost_per_pound\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of cookies Sue ate on Monday\n    sue_cookies_monday = 4 * 5\n\n    # Calculate the number of cookies Sue ate on Tuesday\n    sue_cookies_tuesday = 2 * sister_cookies_monday\n\n    # Calculate the total number of cookies Sue ate\n    sue_cookies_total = sue_cookies_monday + sue_cookies_tuesday\n\n    # Calculate the total number of calories consumed by Sue and her sister\n    sister_calories = 200\n    sister_calories = sister_calories * sister_calories\n\n    # Calculate the difference in calories consumed between Sue and her sister\n    calories_difference = sue_calories - sister_calories\n    result = calories_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the percentage of boys in each class\n    NUM_STUDENTS = 20\n    BOYS_PER_CLASS = 0.5\n    BOYS_PER_CLASS_PERCENTAGE = 0.5\n\n    # Calculate the number of boys in the school\n    num_boys = NUM_STUDENTS * BOYS_PER_CLASS_PERCENTAGE\n\n    # Calculate the number of girls in the first class\n    num_girls_class1 = 15\n\n    # Calculate the number of girls in the second class\n    num_girls_class2 = 12\n\n    # Calculate the number of boys in the first class\n    num_boys_class1 = num_girls_class1 * BOYS_PER_CLASS_PERCENTAGE\n\n    # Calculate the number of boys in the second class\n    num_boys_class2 = num_girls_class2 * BOYS_PER_CLASS_PERCENTAGE\n\n    # Calculate the number of boys"}
{"output": "def solution():\n    initial_apps = 61  # Travis had 61 apps on his tablet\n    deleted_apps = 9  # Travis deleted 9 apps\n    downloaded_apps = 18  # Travis downloaded 18 more apps\n\n    # Calculate the current number of apps on Travis's tablet\n    current_apps = initial_apps - deleted_apps + downloaded_apps\n    result = current_apps\n    return result"}
{"output": "def solution():\n    \n    last_night_wolves = 10\n    last_night_cougars = 15\n    today_wolves = 3 * last_night_wolves\n    today_cougars = last_night_cougars - 3\n    total_wolves = last_night_wolves + last_night_cougars\n    total_cougars = last_night_cougars + today_wolves\n    total_animals = total_wolves + total_cougars\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    starting_floor = 3\n    elevator_floor = 4 * starting_floor + 6\n    current_floor = starting_floor + elevator_floor\n    result = current_floor\n    return result"}
{"output": "def solution():\n    \n    mitchel_slide = 30\n    anne_slide = mitchel_slide * 0.7\n    robert_slide = anne_slide * 4\n    result = robert_slide\n    return result"}
{"output": "def solution():\n    \n    stalls = 10\n    cows_per_stall = 20\n    total_cows = stalls * cows_per_stall\n    cows_bought = 40\n    new_cows = total_cows - cows_bought\n    cows_in_8_stalls = new_cows / 20\n    result = cows_in_8_stalls\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin\n    PENNY_VALUE = 0.01\n    NICKEL_VALUE = 0.05\n    DIME_VALUE = 0.1\n    PENNY_VALUE = 0.05\n    NICKEL_VALUE = 0.05\n    DIME_VALUE = 0.1\n    DIME_VALUE = 0.1\n\n    # Define the number of each coin\n    num_pennies = 100\n    num_nickels = 40\n    num_dimes = 20\n    num_bills = 40\n\n    # Calculate the total value of the pennies\n    pennies_value = num_pennies * PENNY_VALUE\n\n    # Calculate the total value of the nickels\n    nickels_value = num_nickels * NICKEL_VALUE\n\n    # Calculate the total value of the dimes\n    dimes_value = num_dimes * DIME_VALUE\n\n    # Calculate the total value of all the bills\n    total_bills_value = pennies_value + nickels_"}
{"output": "def solution():\n    \n    redwood_height = 200 * 12  # convert feet to pounds\n    weight_per_section = 400 / 10  # each solid 10-foot section weighs 400 pounds\n    termites_ate = redwood_height * 0.3  # termites ate 30% of the redwood's wood\n    total_weight = redwood_height * weight_per_section + termites_ate\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per book and the flat fee\n    COST_PER_BOOK = 0.5\n    FLAT_FEE = 2.0\n\n    # Define the number of books Nancy owes each week overdue\n    books_owed = 8\n\n    # Calculate the total cost of the overdue books\n    total_cost = (books_owed * COST_PER_BOOK) + FLAT_FEE\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples Andrea has\n    andrea_apples = 52\n\n    # Calculate the number of apples Jamal has\n    jamal_apples = andrea_apples + 8\n\n    # Calculate the number of bananas Jamal has\n    jamal_bananas = jamal_apples / 2\n\n    # Calculate the number of apples Jamal has\n    jamal_apples = jamal_apples + 4\n\n    # Calculate the total number of fruits\n    total_fruits = andrea_apples + jamal_bananas + jamal_apples\n\n    # Display the total number of fruits\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    flour_per_dozen = 2\n    cookies_today = 36\n    cookies_tomorrow = 30\n    total_cookies = cookies_today + cookies_tomorrow\n    total_flour = flour_per_dozen * total_cookies\n    result = total_flour\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pennies in the cup\n    total_pennies = 9300\n\n    # Calculate the number of pennies in the stack\n    stack_pennies = total_pennies * (2/3)\n\n    # Calculate the total amount in the stack\n    total_amount = stack_pennies * (2/3)\n\n    # Display the total amount in the stack\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    boxes = 5\n    marbles_per_box = 50\n    total_marbles = boxes * marbles_per_box\n    marbles_received = 20\n    remaining_marbles = total_marbles - marbles_received\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    chris_trees = 6\n    ferdinand_trees = chris_trees / 2\n    harry_trees = 5 + 2 * ferdinand_trees\n    difference = harry_trees - ferdinand_trees\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    carmen_money = 100\n    samantha_money = carmen_money + 25\n    daisy_money = samantha_money + 50\n    total_money = carmen_money + samantha_money + daisy_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    budget = 400000\n    property_price = 350000\n    brokerage_fee = 0.05 * property_price\n    transfer_fee = 0.12 * property_price\n    total_price = property_price + brokerage_fee + transfer_fee\n    difference = budget - total_price\n    result = difference\n    return result"}
{"output": "def solution():\n    house_price = 400000  # Mr. Tan sold his house for $400000\n    transfer_fee = 0.75 * house_price  # Mr. Tan paid the transfer fees that amount to 3% of the selling price\n    brokerage_fee = 0.05 * house_price  # Mr. Tan paid a brokerage fee that is 5% of the selling price\n    remaining_price = house_price - transfer_fee - brokerage_fee  # Mr. Tan's remaining loan amount\n\n    # Calculate the net profit from selling the house\n    net_proceeds = house_price - transfer_fee - remaining_price\n    result = net_proceeds\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to heat up the oil to the desired temperature\n    heat_up_time = 300\n\n    # Define the time it takes to heat up the oil to the desired temperature\n    heat_up_time = heat_up_time * 1.4\n\n    # Define the time it takes to warm up the oil\n    warm_up_time = 400\n\n    # Define the time it takes to cook the oil\n    cook_time = warm_up_time - 5\n\n    # Calculate the total time to heat up the oil\n    heat_up_time = heat_up_time * 2\n\n    # Calculate the total time to heat up the oil\n    heat_up_total_time = heat_up_time + heat_up_total_time\n\n    # Calculate the total time to cook the oil\n    cook_time = warm_up_time * 2\n\n    # Calculate the total time to have cooked chicken\n    total_time = heat_up_total_time + cook_time\n\n    result = total_time\n    return"}
{"output": "def solution():\n    \n    newspaper_cost = 5\n    television_cost = 75\n    newspaper_ads = 50\n    television_ads = 15\n    total_cost = (newspaper_cost * newspaper_ads) + (television_cost * television_ads)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    total_balls = 16  # The juggler can juggle 16 balls\n    golf_balls = total_balls / 2  # Half of the balls are golf balls\n    blue_golf_balls = golf_balls / 2  # Half of the golf balls are blue\n    result = blue_golf_balls\n    return result"}
{"output": "def solution():\n    \n    first_bag_mms = 300\n    second_bag_mms = first_bag_mms + 12\n    third_bag_mms = first_bag_mms / 2\n    total_mms = first_bag_mms + second_bag_mms + third_bag_mms\n    result = total_mms\n    return result"}
{"output": "def solution():\n    num_houses = 2\n    num_bedrooms_per_house = 3\n    num_windows_per_bedroom = 2\n    num_windows_not_connected_per_house = 4\n\n    # Calculate the total number of bedrooms\n    total_bedrooms = num_houses * num_bedrooms_per_house\n\n    # Calculate the total number of windows in all bedrooms\n    total_bedrooms_windows = num_bedrooms * num_windows_per_bedroom\n\n    # Calculate the total number of windows not connected to bedrooms\n    total_not_connected_windows = num_houses * num_windows_not_connected_per_house\n\n    # Calculate the total number of windows between all houses\n    total_windows = total_bedrooms_windows + total_not_connected_windows\n    result = total_windows\n    return result"}
{"output": "def solution():\n    \n    cocoa_cost = 4.20\n    laundry_cost = 9.45\n    pasta_cost = 1.35\n    total_cost = cocoa_cost + laundry_cost + pasta_cost\n    paid_amount = 20\n    change = paid_amount - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    sweater_stitches = 900\n    collar_stitches = sweater_stitches / 10\n    rosette_stitches = collar_stitches * 2\n    total_stitches = sweater_stitches + collar_stitches + rosette_stitches\n    num_sleeves = 1800 // 2\n    stitches_per_sleeve = total_stitches // num_sleeves\n    result = stitches_per_sleeve\n    return result"}
{"output": "def solution():\n    num_tomato_seeds = 20\n    tomato_price = 40\n\n    num_celery_seeds = 80\n    celery_price = 30\n\n    # Calculate the total cost of all tomato seeds\n    total_tomato_cost = num_tomato_seeds * tomato_price\n\n    # Calculate the total cost of all celery seeds\n    total_celery_cost = num_celery_seeds * celery_price\n\n    # Calculate the total cost of all seeds\n    total_cost = total_tomato_cost + total_celery_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of lines in the lyrics\n    lyrics_lines = 54\n\n    # Calculate the number of lines in the first scene\n    first_scene_lines = 2 * lyrics_lines\n\n    # Calculate the number of lines in the second scene\n    second_scene_lines = song_lines + 6\n\n    # Calculate the number of lines in the four-fifths of the lyrics\n    four_fifths_lines = 4/5 * lyrics_lines\n\n    # Calculate the total number of lines Sean has to memorize\n    total_lines = lyrics_lines + first_scene_lines + second_scene_lines + four_fifths_lines\n\n    # Display the total number of lines Sean has to memorize\n    result = total_lines\n    return result"}
{"output": "def solution():\n    \n    total_cards = 80\n    a_cards = (2/5) * total_cards\n    remaining_cards = total_cards - a_cards\n    b_cards = (1/2) * remaining_cards\n    remaining_cards -= b_cards\n    c_cards = (5/8) * remaining_cards\n    d_cards = remaining_cards - c_cards\n    result = d_cards\n    return result"}
{"output": "def solution():\n    \n    small_holes_time = 3\n    large_holes_time = 10\n    small_holes = 30\n    large_holes = 15\n    total_time = (small_holes * small_holes_time) + (large_holes * large_holes_time)\n    hours = total_time / 60\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the sum of their ages in 10 years\n    total_age_in_10_years = 20 * 10\n\n    # Calculate the sum of their ages in 10 years\n    sum_of_ages_in_10_years = total_age_in_10_years + 20\n\n    # Display the sum of their ages in 10 years\n    result = sum_of_ages_in_10_years\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Sam's age is x\n    # Ruby's age is 6 times older than Sam, so Ruby's age is 6x\n    # In 9 years, Ruby will be 3 times as old as Sam, so she will be x + 9\n    # In 9 years, Ruby will be 3 times as old as Sam\n    # In 9 years, Ruby will be x + 9\n    # So, x + 9 = 3x + 9\n    # Solving for x, we get x = 9\n\n    # Therefore, Sam is currently 9 years old\n    result = 9\n    return result"}
{"output": "def solution():\n    num_popsicles = 20\n    popsicle_price = 0.25\n\n    num_ice_cream_bars = 4\n    ice_cream_price = 0.5\n\n    # Calculate the total cost of all popsicles\n    total_popsicle_cost = num_popsicles * popsicle_price\n\n    # Calculate the total cost of all ice cream bars\n    total_ice_cream_cost = num_ice_cream_bars * ice_cream_price\n\n    # Calculate the total cost of all items\n    total_cost = total_popsicle_cost + total_ice_cream_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cobras and mambas in the snake park\n    cobras = 40\n    mambas = 60\n\n    # Calculate the number of spots in the cobra\n    cobra_spots = 70\n\n    # Calculate the number of spots in the mambas\n    mamba_spots = 2 * mambas\n\n    # Calculate the total number of spots\n    total_spots = cobra_spots + mamba_spots\n\n    # Calculate half the number of spots they all have combined\n    half_spots = total_spots / 2\n\n    # Display half the number of spots\n    result = half_spots\n    return result"}
{"output": "def solution():\n    num_team_members = 12\n    num_coaches = 3\n    num_guests_per_team_member = 2\n    num_guests_per_pizza = 3\n    cost_per_pizza = 15\n\n    # Calculate the total number of guests\n    total_guests = num_team_members * num_guests_per_team_member\n\n    # Calculate the total number of pizzas\n    total_pizzas = total_guests // num_guests_per_pizza\n\n    # Calculate the total cost of all pizzas\n    total_cost = total_pizzas * cost_per_pizza\n    result = total_cost\n    return result"}
{"output": "def solution():\n    topaz_gemstones_per_necklace = 8  # Katerina uses 8 topaz gemstones per necklace\n    sterling_beads_per_inch = 0.25  # Each sterling silver bead is one-quarter of an inch long\n    total_length = 25  # Katerina's specialty is made to a total length of 25 inches\n\n    # Calculate the total length of the topaz gemstones used per necklace\n    topaz_gemstones_per_necklace = topaz_gemstones_per_necklace * total_length\n\n    # Calculate the total length of the sterling silver beads used per necklace\n    sterling_beads_per_necklace = sterling_beads_per_necklace * total_length / sterling_beads_per_necklace\n    result = sterling_beads_per_necklace\n    return result"}
{"output": "def solution():\n    \n    alani_stories = 20\n    braylen_stories = 40\n    margot_stories = 60\n    stories_per_week = alani_stories + braylen_stories + margot_stories\n    total_stories = alani_stories + braylen_stories + margot_stories\n    result = total_stories\n    return result"}
{"output": "def solution():\n    \n    ann_age = 9\n    brother_age = ann_age * 2\n    brother_age_in_3_years = brother_age + 3\n    result = brother_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    quarters = 5\n    dimes = 2\n    total_cents = (quarters * 25) + (dimes * 10)\n    pop_cost = 55\n    remaining_cents = total_cents - pop_cost\n    result = remaining_cents\n    return result"}
{"output": "def solution():\n    # Calculate the total number of stars on the flag\n    total_stars = (3 * 8) + (2 * 6)\n\n    # Calculate the number of 5-star rows\n    num_5stars = 76 - total_stars\n    result = num_5stars\n    return result"}
{"output": "def solution():\n    flagstone_weight = 75  # Each flagstone weighs 75 pounds\n    total_weight = 2000  # The delivery trucks can carry a total weight of 2000 pounds\n    num_flagstones = 80  # The landscaping company is delivering 80 flagstones in one trip\n\n    # Calculate the total weight of the flagstones\n    total_weight = flagstone_weight * num_flagstones\n\n    # Calculate the number of trucks needed to transport 80 flagstones in one trip\n    num_trucks = total_weight / total_weight\n    result = num_trucks\n    return result"}
{"output": "def solution():\n    \n    fast_lane_speed = 60\n    slow_lane_speed = fast_lane_speed / 2\n    total_distance = 480\n    slow_lane_distance = total_distance / slow_lane_speed\n    time_taken = slow_lane_distance / fast_lane_speed\n    result = time_taken\n    return result"}
{"output": "def solution():\n    \n    ali_medals = 22\n    izzy_medals = ali_medals - 5\n    total_medals = ali_medals + izzy_medals\n    given_out_medals = total_medals / 10\n    result = given_out_medals\n    return result"}
{"output": "def solution():\n    num_adults = 4\n    num_children = 8\n    num_chocolate_bars_per_packet = 5\n    num_chocolate_bars_per_adult = 6\n    num_chocolate_bars_per_child = (num_chocolate_bars_per_packet - num_adults * num_chocolate_bars_per_adult) / num_children\n    result = num_children\n    return result"}
{"output": "def solution():\n    \n    # Define Susan's earnings rate per minute\n    earnings_per_minute = 5 / 10\n\n    # Calculate Susan's total earnings for the online task\n    total_earnings = (8 * earnings_per_minute) + (11 * earnings_per_minute)\n\n    # Display Susan's total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    mike_points = 21\n    jim_points = mike_points - 3\n    tony_points = mike_points * 2\n    total_points = mike_points + jim_points + tony_points\n    extra_points = 20 * 3\n    total_extra_points = total_points - extra_points\n    result = total_extra_points\n    return result"}
{"output": "def solution():\n    \n    total_oranges = 15\n    oldest_son_age = 8\n    youngest_son_age = oldest_son_age / 2\n    remaining_oranges = total_oranges - oldest_son_age - youngest_son_age\n    result = remaining_oranges\n    return result"}
{"output": "def solution():\n    \n    day1_pushups = 100\n    day1_squats = 50\n    day1_dumbbell_presses = 20\n    day2_pushups = day1_pushups + 20\n    day2_squats = day1_squats - 10\n    day2_dumbbell_presses = day1_dumbbell_presses * 2\n    total_activities = day1_pushups + day1_squats + day2_dumbbell_presses + day2_pushups + day2_squats + day2_dumbbell_presses\n    result = total_activities\n    return result"}
{"output": "def solution():\n    rice_per_person = 0.2  # Each person consumes 0.2 kg of rice every meal\n    num_people = 5  # There are 5 members in the household\n    total_rice_per_person = rice_per_person * num_people  # Calculate the total amount of rice eaten per person\n    total_rice_per_week = total_rice_per_person * 7  # Calculate the total amount of rice eaten per week\n    weeks_of_rice = 42 / total_rice_per_week  # Calculate the number of weeks the bag of rice will last\n    result = weeks_of_rice\n    return result"}
{"output": "def solution():\n    total_crates = 120  # Sam has a target of 120 crates of bread\n    crates_sold_weekend = 20  # Sam sold 20 crates on Monday and Friday\n    crates_sold_wednesday = 15  # Sam sold 15 crates on Wednesday\n    crates_sold_thursday = 18  # Sam sold 18 crates on Thursday\n\n    # Calculate the total number of crates sold over the week\n    total_crates_sold = crates_sold_weekend + crates_sold_wednesday + crates_sold_thursday\n\n    # Calculate the number of crates Sam was off from his target\n    crates_off = total_crates - total_crates_sold\n    result = crates_off\n    return result"}
{"output": "def solution():\n    \n    opening_bid = 200\n    bid_1 = 50\n    bid_2 = 50\n    bid_3 = 3\n    total_bids = opening_bid + (bid_1 * bid_2) + (bid_3 * bid_3)\n    total_cost = total_bids * cost_1\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total distance John travels in a year\n    distance_per_week = 30 * 5 * 52  # John goes to work 5 days a week for 50 weeks a year\n    total_distance = distance_per_week * 5 * 52  # John goes to work each week for 50 weeks a year\n\n    # Calculate the total cost of the driving service\n    total_cost = total_distance * 2 + 150  # John gives his driver a $150 bonus per month\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes Peter exercised on Sunday\n    sunday_minutes = 23\n\n    # Define the number of minutes Peter exercised on Monday\n    monday_minutes = 16\n\n    # Calculate the combined number of minutes Peter exercised\n    combined_minutes = sunday_minutes + monday_minutes\n\n    # Calculate the number of minutes Peter needs to exercise on Tuesday to reach his goal\n    tuesday_minutes = 2 * combined_minutes\n\n    # Display the number of minutes Peter needs to exercise on Tuesday\n    result = tuesday_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pages in a tabloid\n    tabloid_pages = 32\n\n    # Calculate the number of pieces of paper used in the tabloid\n    printed_pages = 1 + 2 + 32 + 31\n\n    # Display the number of pieces of paper used\n    result = printed_pages\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Annika brought to the town fair\n    initial_money = 50\n\n    # Calculate the amount spent on food and snacks\n    food_snacks = initial_money / 2\n\n    # Calculate the amount spent on rides\n    rides = 10\n\n    # Calculate the total amount spent\n    total_spent = food_snacks + rides\n\n    # Calculate the amount left\n    amount_left = initial_money - total_spent\n\n    # Display the amount left\n    result = amount_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books sold in the current year and the number of unsold books in the current year\n    current_books = 50\n    unsold_books_in_current_year = 50\n\n    # Calculate the number of books sold in the first year and the number of unsold books in the second year\n    books_sold_first_year = 2 * current_books\n    unsold_books_in_second_year = 250 - unsold_books_in_current_year - unsold_books_in_current_year\n\n    # Calculate the total earnings in the first year\n    earnings_first_year = books_sold_first_year * 20\n\n    # Calculate the total earnings in the second year\n    total_earnings_second_year = earnings_first_year + earnings_second_year\n\n    # return the result\n    result = total_earnings_second_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Watson works each day and the number of days in a week\n    HOURS_PER_DAY = 10\n    DAYS_PER_WEEK = 5\n\n    # Define Watson's hourly wage and bonus\n    HOURLY_WAGE = 10\n    BONUS_WAGE = 300\n\n    # Calculate Watson's total earnings for the week\n    total_earnings = (HOURS_PER_DAY * DAYS_PER_WEEK * HOURLY_WAGE) + BONUS_WAGE\n\n    # Display Watson's total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    num_wrestles = 20\n    percent_beaten = 80\n\n    # Calculate the number of people John beat\n    num_beaten = num_wrestles * (percent_beaten / 100)\n\n    # Calculate the number of people John lost\n    num_lost = num_wrestles - num_beaten\n    result = num_lost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of loaves of bread produced each day\n    total_loaves = 60\n\n    # Calculate the number of loaves sold in the morning\n    morning_loaves = total_loaves * (2/3)\n\n    # Calculate the number of loaves left after morning sales\n    remaining_loaves = total_loaves - morning_loaves\n\n    # Calculate the number of loaves sold in the afternoon\n    afternoon_loaves = remaining_loaves / 2\n\n    # Display the number of loaves sold in the afternoon\n    result = afternoon_loaves\n    return result"}
{"output": "def solution():\n    joey_weight_lost = 8  # Joey loses 8 pounds in 4 weeks\n    sandy_weight_lost = joey_weight_lost / 4  # Sandy wants to lose the same amount of weight as Joey\n    weeks_to_lose = sandy_weight_lost / joey_weight_lost  # Calculate the number of weeks it will take Sandy to lose the same amount of weight\n    result = weeks_to_lose\n    return result"}
{"output": "def solution():\n    ice_cream_price = 13\n    milk_price = 0.5\n    num_ice_cream_tubs = 2\n    num_milk_packets = 4\n\n    # Calculate the total cost of ice cream\n    ice_cream_cost = ice_cream_price * num_ice_cream_tubs\n\n    # Calculate the total cost of milk\n    milk_cost = milk_price * num_milk_packets\n\n    # Calculate the total cost of all items\n    total_cost = ice_cream_cost + milk_cost\n\n    # Calculate the amount saved\n    amount_saved = total_cost - total_cost\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    extra_arms_per_day = 3  # The serum will grow an extra arm every 3 days\n    extra_leg_per_day = 5  # The serum will grow an extra leg every 5 days\n    days_drunk = 15  # The serum will grow for 15 days\n\n    # Calculate the total extra limbs that Helena will grow in 15 days\n    total_extra_limbs = (extra_arms_per_day * days_drunk) + (extra_leg_per_day * days_drunk)\n\n    # Calculate the total number of new limbs that Helena will need to grow\n    total_limbs = total_extra_limbs + 15\n    result = total_limbs\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of business suits\n    business_suit_cost = 6 * 100\n\n    # Calculate the total cost of 3 suitcases\n    suitcases_cost = 3 * 50\n\n    # Calculate the flight ticket cost\n    flight_ticket_cost = 5 * business_suit_cost + 700\n\n    # Calculate the total cost of all business partners\n    total_cost = business_suit_cost + suitcases_cost + flight_ticket_cost\n\n    # Calculate the amount needed to save $2000\n    amount_needed = 6000 - total_cost\n\n    result = amount_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of eggs consumed by the family in a week\n    eggs_per_day = (3 * 3) + (2 * 2)  # three people eat three eggs each day and the rest eat two eggs each day\n    total_eggs = eggs_per_day * 5  # there are 5 people in the family\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define Quinn's age\n    quinn_age = 30\n\n    # Calculate Jane's age\n    jane_age = quinn_age - 3\n\n    # Calculate Trent's age\n    trent_age = jane_age + 5\n\n    # Display Trent's age\n    result = trent_age\n    return result"}
{"output": "def solution():\n    \n    # Define Cera's current age\n    cera_age = 46\n\n    # Calculate Noah's age 6 years ago\n    noah_age_6_years_ago = cera_age - 6\n\n    # Calculate Cera's current age\n    cera_current_age = cera_age - 6\n\n    # Calculate Noah's current age\n    noah_current_age = noah_age_6_years_ago / 2\n\n    # Calculate Chile's current age\n    chile_current_age = cera_current_age + noah_current_age\n\n    # Display Chile's current age\n    result = chile_current_age\n    return result"}
{"output": "def solution():\n    total_players = 105  # The football team has 105 members\n    defense_players = total_players / 3  # There are half the number of players on the defense\n    offense_players = 2 * defense_players  # There are twice as many players on the offense as there is on the defense\n    special_teams_players = defense_players / 2  # There are half the number of players on the special teams as there is on the defense\n\n    # Calculate the number of players on the defense\n    defense_players = defense_players - offense_players - special_teams_players\n    result = defense_players\n    return result"}
{"output": "def solution():\n    # Calculate the total number of people invited\n    total_people = 2 * 6 + 3 * 4\n\n    # Subtract the number of people who couldn't come due to illness\n    total_people -= 8\n\n    # Calculate the number of people who had previous commitments\n    previous_commitments = total_people / 4\n\n    # Calculate the total number of people who show up for Martha's party\n    total_people = total_people + previous_commitments\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    johanna_marbles = 20\n    added_marbles = 50\n    father_marbles = (2/5) * johanna_marbles\n    total_marbles = johanna_marbles + added_marbles\n    weight_per_marble = 2kgs\n    total_weight = total_marbles * weight_per_marble\n    result = total_weight\n    return result"}
{"output": "def solution():\n    pool_length = 6\n    pool_width = 4\n    pool_depth = pool_length * pool_width\n    cost_per_cubic_foot = 0.1\n\n    # Calculate the volume of the pool\n    pool_volume = pool_length * pool_width\n\n    # Calculate the total cost to fill the pool\n    total_cost = pool_volume * cost_per_cubic_foot\n    result = total_cost\n    return result"}
{"output": "def solution():\n    boys = 30  # The classroom has 30 boys\n    girls = 3 * boys  # The classroom has 3 times as many girls as they do boys\n    nongendered_children = boys / 10  # The classroom has 1/10 as many nongendered children as they do boys\n\n    # Calculate the total number of children\n    total_children = boys + girls + nongendered_children\n    result = total_children\n    return result"}
{"output": "def solution():\n    # Calculate the ratio of electric poles to electricity\n    electric_poles_ratio = 1/3\n\n    # Calculate the total number of electric wires needed\n    electric_wires_needed = 45\n\n    # Calculate the total number of electric poles needed\n    electric_poles_needed = electric_wires_needed * electric_poles_ratio\n\n    result = electric_poles_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of men and women\n    initial_men = 25\n    initial_women = 15\n\n    # Define the number of men who stayed at the party\n    men_stayed = 22\n\n    # Calculate the number of men who left\n    men_left = initial_men - men_stayed\n\n    # Calculate the number of women left after an hour\n    women_left = men_left * (1/4)\n\n    # Calculate the number of women left after an hour\n    women_left -= women_left\n\n    # Display the number of women left\n    result = women_left\n    return result"}
{"output": "def solution():\n    \n    book_cost = 4\n    magazine_cost = book_cost / 2\n    pen_cost = magazine_cost - 1\n    result = pen_cost\n    return result"}
{"output": "def solution():\n    jam_boxes = 3\n    jam_loose_pencils = 26\n    meg_pencils = 46\n\n    # Calculate the total number of pencils Jam and Meg have\n    total_pencils = jam_pencils + meg_pencils - jam_loose_pencils\n\n    # Calculate the number of boxes Jam and Meg need to store all their pencils\n    total_boxes = total_pencils // 4\n    result = total_boxes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial length of Shannon's iced coffee\n    initial_length = 65\n\n    # Define the length of each ice cube in milliliters\n    cube_length = 13\n\n    # Define the length of the additional liquid in milliliters\n    additional_liquid = 15\n\n    # Calculate the length of the iced coffee\n    iced_coffee_length = initial_length * cube_length\n\n    # Calculate the length of the additional liquid in milliliters\n    additional_liquid = additional_liquid * additional_liquid\n\n    # Calculate the final length of Shannon's iced coffee\n    final_length = initial_length + additional_liquid\n\n    # Display the final length of Shannon's iced coffee\n    result = final_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of new records each person can trade for\n    NEW_RECORDS_PER_PEOPLE = 2\n\n    # Define the number of new records each person can trade for\n    NEW_RECORDS_PER_PEOPLE = 1\n\n    # Define the number of people who leave with old records\n    NEW_RECORDS_NEEDED = 7\n\n    # Calculate the total number of new records\n    total_new_records = NEW_RECORDS_PER_PEOPLE * NEW_RECORDS_PER_PEOPLE\n\n    # Calculate the total number of old records\n    total_old_records = total_new_records + 5\n\n    # Display the total number of old records\n    result = total_old_records\n    return result"}
{"output": "def solution():\n    \n    # Define the number of employees in Jaime's company\n    employees = 100\n\n    # Calculate the number of Junior programmers\n    junior_employees = (2/5) * employees\n\n    # Calculate the number of Senior programmers\n    senior_employees = junior_employees + 400\n\n    # Calculate the total number of employees\n    total_employees = junior_employees + senior_employees\n\n    # Calculate the total amount paid to all the programmers per month\n    total_paid = total_employees * 2000\n\n    # return the result\n    result = total_paid\n    return result"}
{"output": "def solution():\n    # Calculate the total number of people who got on the bus at the first stop\n    first_bus_got = 5 + 5\n\n    # Calculate the total number of people who got on the bus at the second stop\n    second_bus_got = 7 + 8\n\n    # Calculate the total number of people who got on the bus at the terminal\n    total_got = first_bus_got + second_bus_got + 20\n\n    result = total_got\n    return result"}
{"output": "def solution():\n    \n    initial_lollipops = 24\n    lollipops_to_school = 2\n    lollipops_to_friends = 14\n    lollipops_bought = lollipops_to_school * 2\n    lollipops_in_morning = lollipops_bought + 3 + 2\n    total_lollipops = initial_lollipops - lollipops_to_school - lollipops_to_friends + lollipops_in_morning\n    result = total_lollipops\n    return result"}
{"output": "def solution():\n    charge_rate = 1/3  # The charge rate is 1% of charge per 3 minutes\n    current_charge = 0.6 * current_charge  # The phone is at 60% charged\n    time_to_charge = 60 / charge_rate  # The time it will take to fully charge in hours\n\n    result = time_to_charge\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 7\n\n    # Define the number of lollipops Erin's mother gives Erin\n    mother_lollipops = 10\n\n    # Define the number of lollipops Erin gives to Ella\n    ella_lollipops = 3\n\n    # Calculate the number of lollipops Erin has left\n    remaining_lollipops = initial_lollipops - mother_lollipops - ella_lollipops\n\n    # Display the number of lollipops Erin has left\n    result = remaining_lollipops\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the loyalty card and the coupon\n    COUPON_PRICE = 1\n    COUPON_COUPON_PRICE = 2 * COUPON_PRICE\n\n    # Define the amount spent by the last shopping trip\n    last_shopping_trip_spending = 80\n\n    # Calculate the amount spent on the second shopping trip\n    second_shopping_trip_spending = last_shopping_trip_spending - 80\n\n    # Calculate the number of rewards paid for the second shopping trip\n    second_shopping_rewards = second_shopping_trip_spending // COUPON_COUPON_PRICE\n\n    # Calculate the total cost of the shopping trip\n    total_cost = last_shopping_trip_spending + second_shopping_rewards\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    job_a_rate = 15\n    job_a_hours = 2000\n    job_a_income = job_a_rate * job_a_hours\n\n    job_b_rate = 42000\n    job_state_tax = 6000\n    job_state_tax_rate = 0.1\n    net_income_tax = net_income_tax * job_state_tax_rate\n\n    net_income_diff = net_income_tax - net_income_tax\n\n    result = net_income_diff\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of castles\n    total_castles = 220\n\n    # Calculate the number of ruins\n    ruins = total_castles * 0.4\n\n    # Calculate the number of unmanned castles\n    unmanned_castles = ruins * 0.5\n\n    # Display the number of unmanned castles\n    result = unmanned_castles\n    return result"}
{"output": "def solution():\n    \n    # Calculate the cost of Furniture's offer\n    furniture_cost = 350 + 6 * 350\n\n    # Calculate the cost of Cozy Homes' offer\n    cozy_cost = 100 + 9 * 250\n\n    # Calculate the cost difference between the two offers\n    cost_difference = cozy_cost - furniture_cost\n\n    # Display the cost difference\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of guns\n    total_guns = 8 + 10 + 1 + 5\n\n    # Divide the total number of guns equally among the three people\n    guns_per_person = total_guns / 3\n\n    result = guns_per_person\n    return result"}
{"output": "def solution():\n    sugar_per_batch_suiters = 30  # Mason needs 30 ounces of sugar to make a batch of suckers\n    sugar_per_batch_fudge = 70  # Mason needs 70 ounces of sugar to make a batch of fudge\n    num_batches = 8  # Mason wants to make 8 batches of suckers\n\n    # Calculate the total amount of sugar needed for 8 batches of suckers\n    total_sugar_for_suiters = sugar_per_batch_suiters * num_batches\n\n    # Calculate the total amount of sugar needed for 1 batch of fudge\n    total_sugar_for_fudge = sugar_per_batch_fudge * num_batches\n\n    # Calculate the total amount of sugar needed for 8 batches of fudge\n    total_sugar_for_8_batches = total_sugar_for_suiters + total_sugar_for_fudge\n    result = total_sugar_for_8_batches\n    return result"}
{"output": "def solution():\n    \n    # Define the initial stock price and the percentage increase in the first year\n    initial_price = 8\n    first_year_increase = 0.5\n\n    # Calculate the new stock price after the first year\n    new_stock_price = initial_price * (1 + first_year_increase)\n\n    # Calculate the new stock price after the second year\n    new_stock_price = new_stock_price * (1 - second_year_increase)\n\n    # Calculate the final value of all 8 shares\n    final_value = new_stock_price * 8\n\n    # Display the final value of all 8 shares\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    luke_hotdogs = 2\n    thomas_hotdogs = luke_hotdogs * 3\n    john_hotdogs = thomas_hotdogs / 2\n    difference = john_hotdogs - luke_hotdogs\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of students in each group\n    total_students = 200\n    group1_students = 2\n    group2_students = total_students - group1_students\n    group3_students = group2_students - 10\n\n    # Calculate the number of students in this (smallest group)\n    smallest_group_students = group3_students\n\n    # Display the number of students in this (smallest group)\n    result = smallest_group_students\n    return result"}
{"output": "def solution():\n    \n    total_animals = 60\n    cow_animals = total_animals / 3\n    chicken_animals = 2 * cow_animals\n    legs_per_animal = 4\n    total_legs = (chicken_animals * legs_per_animal) + (cow_animals * legs_per_animal)\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    initial_balls = 3\n    balls_added_per_week = 1\n    total_balls = initial_balls + balls_added_per_week\n    total_balls -= 3\n    total_balls -= 2\n    result = total_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the pink frog\n    frog_weight = 50\n\n    # Calculate the weight of the yellow snake\n    snake_weight = frog_weight - 10\n\n    # Calculate the weight of the red bird\n    bird_weight = frog_weight + 20\n\n    # Calculate the weight of each animal\n    animal_weight = frog_weight + snake_weight + bird_weight\n\n    # Display the weight of each animal\n    result = animal_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of baby outfits\n    initial_baby_outfits = 24\n\n    # Calculate the number of baby outfits received by Laurel\n    new_baby_outfits = initial_baby_outfits * 2\n\n    # Calculate the number of baby outfits received by Laurel's mom\n    mom_baby_outfits = 15\n\n    # Calculate the total number of baby outfits\n    total_baby_outfits = initial_baby_outfits + new_baby_outfits + mom_baby_outfits\n\n    # Display the total number of baby outfits\n    result = total_baby_outfits\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days in June\n    days_in_june = 30\n\n    # Define the number of meters Tyson runs per day\n    tyson_distance = 5000\n\n    # Calculate the number of meters Tyson wants the coach to run in a day\n    coach_distance = tyson_distance * (1 + 1/5)\n\n    # Calculate the total distance covered in June\n    total_distance = tyson_distance * days_in_june\n\n    # Display the total distance covered\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the price of Juice Box A\n    juice_a_price = 4\n\n    # Calculate the price of Juice Box B\n    juice_b_price = juice_a_price + 5\n\n    # Calculate the price of Juice Box C\n    juice_c_price = juice_b_price + 7\n\n    # Calculate the difference between the price of Juice Box C and Juice Box B\n    difference = juice_c_price - juice_b_price\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    table_4_legs = 4\n    table_3_legs = 3\n    num_tables_4 = 40\n    num_tables_3 = 50\n    total_legs = (table_4_legs * num_tables_4) + (table_3_legs * num_tables_3)\n    result = total_legs\n    return result"}
{"output": "def solution():\n    # Calculate the total number of cookies Jenny puts in her son's lunch box\n    lunch_cookies = 4 * 5\n\n    # Calculate the total number of cookies Jenny eats in 7 days\n    husband_cookies = 1 * 7\n\n    # Calculate the total number of cookies Jenny has\n    total_cookies = 36 - lunch_cookies - husband_cookies\n\n    # Calculate the number of cookies Jenny eats\n    jenny_cookies = total_cookies\n\n    result = jenny_cookies\n    return result"}
{"output": "def solution():\n    num_shirts = 2\n    shirt_price = 30\n    discount = 0.4  # 40% discount\n\n    # Calculate the total cost before discount\n    total_cost_before_discount = num_shirts * shirt_price\n\n    # Calculate the discount amount\n    discount_amount = total_cost_before_discount * discount\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost_before_discount - discount_amount\n\n    result = total_cost_after_discount\n    return result"}
{"output": "def solution():\n    \n    tractors_sold_per_day = 10\n    tractor_salary = 100\n    silos_sold_per_day_now = 5\n    silo_salary = 220\n    total_income = (tractors_sold_per_day * tractor_salary) + (silos_sold_per_day_now * silo_salary)\n    percentage_income = (total_income / total_income) * 100\n    result = percentage_income\n    return result"}
{"output": "def solution():\n    \n    food_cost_per_week = 25\n    treats_cost_per_month = 20\n    medicine_cost_per_month = 100\n    weeks_per_month = 4\n    total_food_cost_per_month = food_cost_per_week * weeks_per_month\n    total_treats_cost_per_month = treats_cost_per_month * weeks_per_month\n    total_medicine_cost_per_month = medicine_cost_per_month * weeks_per_month\n    total_cost_per_year = total_food_cost_per_month + total_treats_cost_per_month + total_medicine_cost_per_month\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    \n    monday_hours = 1\n    tuesday_hours = monday_hours * 3\n    wednesday_hours = tuesday_hours / 2\n    thursday_hours = tuesday_hours / 2\n    friday_hours = 2\n    total_hours = monday_hours + tuesday_hours + wednesday_hours + thursday_hours + friday_hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    daisies_pots = 30\n    roses_pots = daisies_pots * 2\n    total_pots = daisies_pots + roses_pots\n    initial_pots = 100\n    remaining_pots = initial_pots - total_pots\n    result = remaining_pots\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Andrea had in the beginning\n    beginning_money = 36\n\n    # Define the amount of money Andrea spent on the sweater\n    sweater_cost = 11\n\n    # Define the amount of money Andrea gave her brother\n    brother_money = 4\n\n    # Calculate the amount of money Andrea saved\n    saved_money = starting_money - sweater_cost - brother_money\n\n    # Display the amount of money Andrea saved\n    result = saved_money\n    return result"}
{"output": "def solution():\n    \n    boating_time = 6\n    swimming_time = boating_time / 2\n    shows_time = 3 * 2\n    total_time = boating_time + swimming_time + shows_time\n    sightseeing_time = total_time * 0.4\n    result = sightseeing_time\n    return result"}
{"output": "def solution():\n    \n    phone_cost = 400\n    savings = 80\n    first_job_pay = 10 * 20\n    second_job_pay = 5 * 15\n    total_pay = first_job_pay + second_job_pay\n    remaining_savings = phone_cost - total_pay\n    result = remaining_savings\n    return result"}
{"output": "def solution():\n    \n    shortest_tree = 6\n    second_tree = shortest_tree + 5\n    combined_height = shortest_tree + second_tree\n    tallest_tree = 2 * combined_height\n    result = tallest_tree\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the toy cars\n    toy_car_cost = 6 * 2\n\n    # Calculate the total cost of the teddy bears\n    teddy_bear_cost = 5 * 1\n\n    # Calculate the total cost of the toy cars and teddy bears\n    total_cost = toy_car_cost + teddy_bear_cost\n\n    # Calculate the amount of money Dean has left\n    money_left = 28 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    budget = 90\n    arcade_tokens = 5\n    mini_golf_price = 5\n    go_kart_price = 10\n\n    # Calculate the total cost of the mini-golf rides\n    mini_golf_cost = mini_golf_price * 2\n\n    # Calculate the total cost of the go-karts\n    go_kart_cost = go_kolf_cost * 2\n\n    # Calculate the remaining budget after the arcade tokens\n    remaining_budget = budget - arcade_tokens - mini_golf_cost\n\n    # Calculate the number of friends Morgan can invite\n    num_friends = remaining_budget // go_kart_cost\n    result = num_friends\n    return result"}
{"output": "def solution():\n    pocket_money_per_day = 5  # Marisa gets $5 as pocket money every day\n    lollipop_cost = 0.25  # Marisa buys 4 lollipops worth 25 cents each every day\n    num_lollipops = 4  # Marisa buys 4 lollipops\n    num_days = 5  # Marisa saves for 5 days\n\n    # Calculate the total amount of money Marisa spends on lollipops for 5 days\n    total_lollipop_cost = num_lollipops * lollipop_cost * num_days\n\n    # Calculate the total amount of money Marisa put in her piggy bank\n    total_money = total_lollipop_cost + total_lollipop_cost\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Billy has\n    initial_money = 10\n\n    # Calculate the amount of money Billy spent on gumballs\n    gumball_cost = 40 * 0.05\n\n    # Calculate the amount of money Billy spent on candy\n    candy_cost = (initial_money - gumball_cost) / 1.5\n\n    # Calculate the pounds of candy Billy bought\n    pounds_of_candy = candy_cost / 1.5\n\n    # Display the pounds of candy Billy bought\n    result = pounds_of_candy\n    return result"}
{"output": "def solution():\n    \n    carver_age = 45\n    son_age = (carver_age + 5) / 2\n    result = son_age\n    return result"}
{"output": "def solution():\n    \n    # Define the distances traveled from each city\n    city1_distance = 75\n    city2_distance = 100\n    city3_distance = (city1_distance + city2_distance) - 50\n\n    # Calculate the total distance traveled per day\n    total_distance = city1_distance + city2_distance + city3_distance + city4_distance\n\n    # Calculate the number of days it will go between services\n    days_between_services = total_distance / 18000\n\n    # Display the number of days it will go between services\n    result = days_between_services\n    return result"}
{"output": "def solution():\n    \n    # Define the stuffing required for each type of bed\n    ROTTWEiler_STUDENTING = 8\n    CHIHUAHUA_STUDENTING = 2\n    COLLIE_STUDENTING = (4 * CHIHUAHUA_STUDENTING) + (3 * COLLIE_STUDENTING)\n\n    # Calculate the total stuffing required\n    total_stuffing = ROTTWEiler_STUDENTING + CHIHUAHUA_STUDENTING + COLLIE_STUDENTING\n\n    # Display the total stuffing required\n    result = total_stuffing\n    return result"}
{"output": "def solution():\n    \n    distance_to_friend = 200\n    speed_to_friend = 70\n    distance_to_detour = 10\n    distance_to_route_home = 240\n    speed_to_drive = 80\n    distance_to_drive = distance_to_friend + distance_to_detour - distance_to_route_home\n    time_to_drive = distance_to_drive / speed_to_drive\n    result = time_to_drive\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of fourth-graders and the number of girls on Friday\n    total_fourth_graders = 96\n    friday_girls = 43\n\n    # Calculate the number of fourth-grade girls on Friday\n    friday_girls = friday_girls - 5\n\n    # Calculate the number of fourth-grade boys on Friday\n    friday_boys = friday_girls - 4\n\n    # Display the number of fourth-grade boys on Friday\n    result = friday_boys\n    return result"}
{"output": "def solution():\n    \n    # Define the number of girls in the park\n    girls = 6\n\n    # Calculate the number of boys in the park\n    boys = girls * 2\n\n    # Calculate the total number of kids in the park\n    total_kids = girls + boys\n\n    # Display the total number of kids in the park\n    result = total_kids\n    return result"}
{"output": "def solution():\n    \n    total_points = 42\n    first_test_points = 15\n    second_test_points = 18\n    third_test_points = total_points - first_test_points - second_test_points\n    result = third_test_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers kicked out for refusing\n    refusing_customers = 3\n\n    # Calculate the number of customers kicked out for shoplifting\n    shoplifting_customers = (4 * refusing_customers) - 5\n\n    # Calculate the number of customers kicked out for physical violence over goods\n    violence_customers = 3 * shoplifting_customers\n\n    # Calculate the number of customers kicked out for other reasons\n    other_customers = 50 - (shoplifting_customers + violence_customers)\n\n    # Display the number of customers kicked out for other reasons\n    result = other_customers\n    return result"}
{"output": "def solution():\n    \n    # Define Sara's score\n    sara_score = 8\n\n    # Calculate Erin's score\n    erin_score = sara_score * 3\n\n    # Calculate Erin's before score\n    erin_before_score = erin_score - 14\n\n    # Display Erin's before score\n    result = erin_before_score\n    return result"}
{"output": "def solution():\n    num_seniors = 44\n    picture_frame_cost = 20\n    logo_cost = 0.2 * picture_frame_cost\n    num_pins = 2\n    pin_cost = 5\n    num_officers = num_seniors / 4\n    cord_cost = 12\n\n    # Calculate the total cost of all seniors\n    total_cost = (num_seniors * picture_frame_cost) + (num_pins * pin_cost) + (num_officers * cord_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the original cost of the hand-painted wallpaper\n    original_cost = 400\n\n    # Calculate the amount saved by Ethan\n    amount_saved = original_cost * 0.2\n\n    # Calculate the total cost\n    total_cost = original_cost + amount_saved\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shoes sold on Friday\n    friday_sales = 14\n\n    # Calculate the number of shoes sold on the second day\n    day2_sales = friday_sales * 2\n\n    # Calculate the number of shoes sold on the third day\n    day3_sales = day2_sales / 2\n\n    # Calculate the total number of shoes sold by the end of the sale\n    total_sales = friday_sales + day2_sales + day3_sales\n\n    # Display the total number of shoes sold\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    tuesday_hours = 1\n    thursday_hours = 2\n    saturday_hours = tuesday_hours * 2\n    total_hours = tuesday_hours + thursday_hours + saturday_hours\n    weekly_hours = total_hours * 7\n    result = weekly_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of equipment bought\n    total_equipment = 400000\n\n    # Calculate the number of faulty pieces of equipment\n    faulty_equipment = total_equipment * 0.4\n\n    # Calculate the total amount spent on functioning pieces of equipment\n    functioning_equipment = total_equipment - faulty_equipment\n\n    # Display the total amount spent on functioning pieces of equipment\n    result = functioning_equipment\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of sheep and the amount of milk collected each day\n    total_sheep = 30\n    milk_1 = 0.5 * total_sheep\n    milk_2 = 0.5 * total_sheep\n\n    # Calculate the total amount of milk collected every day\n    total_milk = milk_1 + milk_2\n\n    # Display the total amount of milk collected every day\n    result = total_milk\n    return result"}
{"output": "def solution():\n    # Calculate the total number of bread rolls Mrs. Sherman made\n    total_rolls = 12  # Mrs. Sherman made a dozen bread rolls\n    children_rolls = 6  # Mrs. Sherman feeded 6 children with one roll\n    remaining_rolls = total_rolls - children_rolls  # Mrs. Sherman has the remaining rolls\n    rolls_per_child = 8  # Mrs. Sherman broke each of the remaining rolls into 8 pieces\n    total_pieces_of_rolls = remaining_rolls * rolls_per_child  # Calculate the total number of pieces of rolls Mrs. Sherman feeded to the chickens\n    result = total_pieces_of_rolls\n    return result"}
{"output": "def solution():\n    \n    total_pupils = 40\n    blue_pupils = total_pupils / 2\n    remaining_pupils = total_pupils - blue_pupils\n    green_pupils = remaining_pupils / 4\n    yellow_pupils = remaining_pupils - green_pupils\n    result = yellow_pupils\n    return result"}
{"output": "def solution():\n    \n    monday_apples = 56\n    tuesday_apples = 12\n    wednesday_apples = monday_apples * 2\n    total_apples = monday_apples + tuesday_apples + wednesday_apples\n    price_per_piece = 4\n    total_apples_picked = total_apples * price_per_piece\n    result = total_apples_picked\n    return result"}
{"output": "def solution():\n    \n    total_socks = 50\n    pairs_of_socks = 10\n    loose_socks = 15\n    missed_socks = total_socks - (pairs_of_socks * 2) - loose_socks\n    result = missed_socks\n    return result"}
{"output": "def solution():\n    \n    rachel_cookies = 23\n    janet_cookies = 42\n    brother_cookies = 44\n    remaining_cookies = rachel_cookies - janet_cookies - brother_cookies\n    result = remaining_cookies\n    return result"}
{"output": "def solution():\n    \n    borrowed_amount = 3650\n    interest_rate = 0.1\n    num_months = 5\n    interest_amount = borrowed_amount * interest_rate\n    monthly_payment = borrowed_amount / num_months\n    result = monthly_payment\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Cho hiked\n    total_distance = 14 * 8 + 9 * 5  # 14 kilometers per hour for 8 hours, 9 kilometers per hour for 5 hours\n    difference = total_distance - total_distance  # calculate the difference in distance\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of silver pesos\n    silver_pesos = 50\n\n    # Define the initial number of gold pesos\n    gold_pesos = 80\n\n    # Calculate the number of silver pesos Anna has\n    anna_silver_pesos = 2 * silver_pesos\n\n    # Calculate the number of gold pesos Anna has\n    anna_gold_pesos = anna_silver_pesos + 40\n\n    # Calculate the total number of pesos they have together\n    total_pesos = silver_pesos + gold_pesos + anna_silver_pesos + anna_gold_pesos\n\n    # Display the total number of pesos\n    result = total_pesos\n    return result"}
{"output": "def solution():\n    # Calculate the total number of cups of lemonade needed\n    total_cups = 3 * 12\n\n    # Calculate the total revenue from selling all the lemonade\n    total_revenue = total_cups * 4\n\n    # Calculate the profit per hour\n    profit_per_hour = 18 - total_revenue\n    result = profit_per_hour\n    return result"}
{"output": "def solution():\n    \n    sold_land = (3/5) * 12.8\n    initial_land = sold_land + 12.8\n    result = initial_land\n    return result"}
{"output": "def solution():\n    \n    choir_members = 52\n    boys_percent = 50\n    girls_percent = 50\n    female_members = choir_members * (boys_percent / 100)\n    total_people = choir_members - female_members\n    performance_people = total_people / 2\n    result = performance_people\n    return result"}
{"output": "def solution():\n    \n    # Define Wilson's current math grade\n    current_math_grade = (65 + 94 + 81 + 86 + 74) / 5\n\n    # Display Wilson's current math grade\n    result = current_math_grade\n    return result"}
{"output": "def solution():\n    \n    eraser_cost = 2\n    pencil_cost = 3\n    num_erasers = 6\n    num_pencils = 8\n    total_cost = (eraser_cost * num_erasers) + (pencil_cost * num_pencils)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of messages delivered to Ms. Thompson\n    thompson_messages = 66\n\n    # Calculate the number of messages delivered to Mr. Yu\n    yu_messages = thompson_messages / 3\n\n    # Calculate the total number of messages delivered\n    total_messages = thompson_messages + yu_messages\n\n    # Display the total number of messages delivered\n    result = total_messages\n    return result"}
{"output": "def solution():\n    num_rides = 9\n    ticket_price = 2\n    num_tickets_per_ride = 2\n    bracelet_cost = 30\n\n    # Calculate the total cost of all rides of tickets\n    total_tickets_cost = num_rides * ticket_price\n\n    # Calculate the total cost of all rides of bracelet\n    total_bracelet_cost = num_rides * bracelet_cost\n\n    # Calculate how much money David saves\n    savings = total_tickets_cost - total_bracelet_cost\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    family_gifts = 6\n    friends_gifts = 4\n    teachers_gifts = 2\n    total_gifts = family_gifts + friends_gifts + teachers_gifts\n    ribbon_per_gift = 144\n    ribbon_per_bow = ribbon_per_gift / total_gifts\n    result = ribbon_per_bow\n    return result"}
{"output": "def solution():\n    \n    total_popsicles = 165\n    betty_popsicles = total_popsicles / (5 + 6)\n    sam_popsicles = total_popsicles / (6 + 6)\n    difference = sam_popsicles - betty_popsicles\n    result = difference\n    return result"}
{"output": "def solution():\n    netflix_cost = 10  # Tim gets Netflix for $10 a month\n    hulu_disney_cost = 10  # Tim gets Hulu and Disney Plus normally cost $10 a month each\n    discount = 0.2  # Tim saves 20% for bundling\n    cable_package = 60  # Tim cancelling his $60 cable package\n\n    # Calculate the total cost of the subscription\n    total_cost = netflix_cost + (hulu_disney_cost * discount)\n\n    # Calculate the amount Tim saves by cancelling his $60 cable package\n    savings = cable_package - total_cost\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the time spent writing the song\n    writing_time = 4\n\n    # Define the time spent recording the song\n    recording_time = writing_time / 2\n\n    # Define the time spent editing the song\n    editing_time = 90\n\n    # Calculate the total work time\n    total_time = writing_time + recording_time + editing_time\n\n    # Calculate the percentage of the total work time spent editing\n    percentage_editing = (editing_time / total_time) * 100\n\n    # return the result\n    result = percentage_editing\n    return result"}
{"output": "def solution():\n    num_rows = 6\n    num_columns = 6\n    books_per_row = 2 * num_rows + 20\n\n    # Calculate the total number of books needed\n    total_books = num_rows * books_per_row\n    result = total_books\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of Valentine's cards\n    initial_cards = 20\n\n    # Define the number of boxes of Valentine's cards\n    boxes = 2\n\n    # Define the number of pre-made Valentine's cards\n    pre_made_cards = 15 * boxes\n\n    # Define the number of cards passed out to classmates\n    classmates_cards = 24\n\n    # Define the number of cards passed out to family\n    family_cards = 5\n\n    # Define the number of cards received from family and friends\n    friends_cards = 17\n\n    # Calculate the total number of cards\n    total_cards = initial_cards + classmates_cards + family_cards + friends_cards\n\n    # Display the total number of cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    total_slices = 12\n    bill_slices = total_slices * (1/3)\n    mark_slices = total_slices * (1/4)\n    jenny_slices -= 2\n    result = jenny_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount in Mark's bank account and the daily earnings\n    initial_amount = 50\n    daily_earnings = 10\n\n    # Define the cost of the bike\n    bike_cost = 300\n\n    # Calculate the amount Mark needs to save\n    amount_to_save = bike_cost - initial_amount\n\n    # Calculate the number of days Mark needs to save\n    days_to_save = amount_to_save / daily_earnings\n\n    # Display the number of days Mark needs to save\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spiders\n    spiders = 90\n\n    # Calculate the number of millipedes\n    millipedes = spiders / 3\n\n    # Calculate the number of stink bugs\n    stink_bugs = 2 * millipedes - 12\n\n    # Calculate the total number of bugs\n    total_bugs = spiders + millipedes + stink_bugs\n\n    # Display the total number of bugs\n    result = total_bugs\n    return result"}
{"output": "def solution():\n    \n    # Define Erica's age\n    erica_age = 30\n\n    # Calculate Alice's age\n    alice_age = erica_age + 7\n\n    # Calculate Beth's age\n    beth_age = erica_age + 5\n\n    # Calculate the difference between Alice and Erica\n    age_difference = alice_age - beth_age\n\n    # Display the age difference\n    result = age_difference\n    return result"}
{"output": "def solution():\n    milk_per_glass = 8  # A glass of milk is 8 ounces of milk\n    glasses_drunk = 2  # John drinks 2 glasses of milk\n    calories_per_ounce = 3  # Milk has 3 calories per ounce\n\n    # Calculate the total amount of milk consumed\n    total_milk = milk_per_glass * glasses_drunk\n\n    # Calculate the total number of calories consumed\n    total_calories = total_milk * calories_per_ounce\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    weeks_per_month = 4\n    days_per_week = 6\n    pay_per_day = 50\n    weeks_per_year = 12\n    total_weeks = weeks_per_month * months_per_year\n    total_days = days_per_week * weeks_per_year\n    total_pay = total_weeks * pay_per_day * weeks_per_year\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    flour_per_recipe = 3\n    milk_per_recipe = 1\n    flour_bottle_size = 2\n    milk_bottle_size = 2\n    total_flour_cups = flour_per_recipe * total_flour_cups\n    total_milk_cups = milk_per_recipe * total_milk_cups\n    total_bags = total_flour_cups / flour_bottle_size\n    difference = total_bags - total_milk_cups\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    air_conditioner_wattage = 900\n    air_conditioner_hours_per_day = 8\n    energy_wattage_per_hour = 900\n    days = 30\n    total_air_conditioner_wattage = air_conditioner_wattage * air_conditioner_hours_per_day * days\n    total_energy_used_per_day = air_conditioner_wattage * days\n    energy_saved_per_day = total_energy_used_per_day - total_energy_used_per_day\n    energy_saved_in_30_days = energy_saved_per_day * 30\n    result = energy_saved_in_30_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stripes on each zebra\n    zebra1_stripes = 17\n    zebra2_stripes = 36\n    zebra3_stripes = zebra1_stripes / 2\n\n    # Calculate the total number of stripes\n    total_stripes = zebra1_stripes + zebra2_stripes + zebra3_stripes\n\n    # Calculate the average number of stripes\n    average_stripes = total_stripes / 2\n\n    # Display the average number of stripes\n    result = average_stripes\n    return result"}
{"output": "def solution():\n    num_sandwiches = 20\n    pounds_per_sandwich = 1\n    pounds_per_person = 4\n    cost_per_pound = 7.0\n    cost_per_pound = 3.0\n\n    # Calculate the total pounds of meat and cheese needed for all sandwiches\n    total_pounds_meat = num_sandwiches * pounds_per_sandwich\n    total_pounds_cheese = num_people * pounds_per_person * pounds_per_sandwich\n\n    # Calculate the total cost of meat and cheese for all sandwiches\n    total_cost = (total_pounds_meat * cost_per_pound) + (total_pounds_cheese * cost_per_pound)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cannolis\n    cannolis = 40\n\n    # Calculate the number of corns at Allan's house\n    corns = cannolis * 2\n\n    # Calculate the number of cannolis Allan bought\n    allan_cannolis = cannolis + 60\n\n    # Calculate the number of corns at Allan's house\n    allan_corns = allan_cannolis - 40\n\n    # Calculate the combined total of the number of corns and cannolis\n    total = cannolis + allan_corns\n\n    # Display the combined total\n    result = total\n    return result"}
{"output": "def solution():\n    \n    total_steps = 10000 * 7\n    walk_steps = total_steps / 2\n    short_walk_steps = 1000\n    remaining_steps = 2000\n    jog_steps = total_steps - walk_steps - short_walk_steps - remaining_steps\n    result = jog_steps\n    return result"}
{"output": "def solution():\n    # Calculate the total number of words in the book\n    total_words = 45 * 200\n\n    # Calculate the time it takes to read the book\n    time_to_read = total_words / 300\n\n    # Calculate the time it takes to get to the airport\n    time_to_airport = 60\n\n    # Calculate the time early to read the book\n    time_early = time_to_read - time_to_airport\n    result = time_early\n    return result"}
{"output": "def solution():\n    num_employees = 40\n    hourly_rate = 15\n    num_hours_worked = 40\n    num_expired_employees = num_employees / 4\n\n    # Calculate the total amount paid to employees in May\n    total_employee_pay = num_employees * hourly_rate * num_hours_worked\n\n    # Calculate the total amount paid to employees in June\n    total_june_pay = num_expired_employees * hourly_rate * num_hours_worked\n\n    # Calculate the total amount paid to employees in June\n    total_payment = total_employee_pay + total_june_pay\n    result = total_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    BASKET_PRICE = 3\n    DISCOUNT_PER_POUND = 0.5\n    MAGnets_PRICE = 0.25\n\n    # Define the number of each item purchased\n    num_pounds = 2\n    num_seashells = 1\n    num_magnets = 4\n\n    # Calculate the total cost of the purchase\n    total_cost = (num_pounds * BASKET_PRICE) + (num_pounds * DISCOUNT_PER_POUND) + (num_seashells * DISCOUNT_PER_POUND) + (num_magnets * MAGnets_PRICE)\n\n    # Calculate the amount of money Sally has left\n    money_left = 10 - total_cost\n\n    # Display the amount of money Sally has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    package_price = 400\n    pack_price = package_price * 2\n    discount = 0.2\n    finale_price = 150\n    discounted_price = (package_price - discount) * (1 - discount)\n    total_price = discounted_price + finale_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of madeleine cookies Shannon wants to make\n    madeleine_cookies = 30\n\n    # Define the number of madeleine cookies Shannon eats as a treat\n    treat_cookies = 2 * madeleine_cookies\n\n    # Define the number of cookies Shannon's recipe makes in 30 days\n    recipe_cookies = 1 * 12\n\n    # Calculate the number of cookies Shannon needs to make\n    remaining_cookies = madeleine_cookies - treat_cookies - recipe_cookies\n\n    # Calculate the number of dozens of cookies Shannon needs to make\n    dozens_of_cookies = remaining_cookies / recipe_cookies\n\n    # Display the number of dozens of cookies Shannon needs to make\n    result = dozens_of_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the number of candles Marcy makes\n    total_candles = 50000\n\n    # Calculate the number of uncovered candles\n    uncovered_candles = total_candles * 0.99\n\n    # Calculate the number of uncovered candles\n    uncovered_candles = total_candles - uncovered_candles\n\n    # Calculate the number of smell candles\n    smell_candles = uncovered_candles * 0.05\n\n    # Display the number of smell candles\n    result = smell_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the regular price of each blouse\n    REGULAR_PRICE = 20\n\n    # Calculate the discounted price of each blouse\n    discounted_price = REGULAR_PRICE * 0.7\n\n    # Calculate the total cost of the discounted blouses\n    total_cost = discounted_price * 4\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tallest_trees = 30\n    shortest_trees = tallest_trees / 2\n    average_trees = tallest_trees + shortest_trees + 1\n    joanne_apples = tallest_trees * 2\n    sister_apples = shortest_trees * 3\n    total_apples = 500\n    joanne_apples += joanne_apples\n    sister_apples += sister_apples\n    average_trees = total_apples - joanne_apples\n    result = average_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of heads and bumps\n    heads = 180\n    bumps = 304\n\n    # Calculate the number of camels and dromedaries\n    camels = heads // 2\n    dromedaries = bumps // 1\n\n    # Display the number of dromedaries\n    result = dromedaries\n    return result"}
{"output": "def solution():\n    # Calculate the total distance traveled in the first 4 days\n    first_four_days_distance = 200 * 4\n\n    # Calculate the total distance traveled over the next two days\n    next_two_days_distance = 0.3 * 200 * 2\n\n    # Calculate the total distance made during the second week\n    second_week_days_distance = 300 * 2\n\n    # Calculate the total distance made during the two-week-long trip\n    total_distance = first_four_days_distance + next_two_days_distance + second_week_days_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    peter_locker = 5\n    zack_locker = peter_locker / 4\n    timothy_locker = zack_locker / 2\n    result = timothy_locker\n    return result"}
{"output": "def solution():\n    \n    stanley_elevation = 10000\n    gust_air_blew = 4000\n    oliver_elevation = 3000\n    total_elevation = stanley_elevation + oliver_elevation\n    climb_elevation = total_elevation - stanley_elevation\n    result = climb_elevation\n    return result"}
{"output": "def solution():\n    \n    initial_dollars = 5000\n    first_bank_gift = 4000\n    second_bank_gift = first_bank_gift * 2\n    total_dollars = first_bank_gift + second_bank_gift\n    final_dollars = initial_dollars + total_dollars\n    result = final_dollars\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cats\n    initial_cats = 50\n\n    # Calculate the number of cats carried away\n    carried_cats = 4 * 5\n\n    # Calculate the number of cats remaining after the mouse\n    remaining_cats = initial_cats - carried_cats\n\n    # Calculate the number of cats ran after the mouse\n    ran_cats = remaining_cats * (3/5)\n\n    # Calculate the number of cats left on the rock\n    cats_left = remaining_cats - ran_cats\n\n    # Display the number of cats left on the rock\n    result = cats_left\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the first 6 months of the service\n    cost_first_6_months = 8 * 6  # $8 per month for 6 months\n\n    # Calculate the cost of the next 8 months of the service\n    cost_next_8_months = 12 * 8  # $12 per month for 8 months\n\n    # Calculate the cost of the service after 8 months of the normal rate\n    cost_next_8_months = 14 * 8  # $14 per month for 8 months\n\n    # Calculate the total cost of the service\n    total_cost = cost_first_6_months + cost_next_8_months + cost_next_14_months\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tattered_jeans_cost = 28\n    jogger_jeans_cost = tattered_jeans_cost - 6\n    total_savings = 6\n    tattered_jeans_total = tattered_jeans_cost / 3\n    jogger_jeans_total = tattered_jeans_total + jogger_jeans_cost\n    difference = jogger_jeans_total - tattered_jeans_total\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total capacity of the day trip\n    total_capacity = 4 * 60\n\n    # Calculate the number of employees that can be added to the minibusses\n    added_employees = 6 * 30\n\n    # Calculate the number of employees that can be added to the minivans\n    added_employees = 10 * 15\n\n    # Calculate the total number of employees that can be added to the day trip\n    total_employees = added_employees + added_employees\n    result = total_employees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds Lillian builds and buys\n    birds_built = 3\n    birds_bought = 3\n\n    # Calculate the total number of birds Lillian has\n    total_birds = (birds_built + birds_bought) * 2\n\n    # Calculate the number of birds Lillian can prefer the feeders\n    birds_prefered = total_birds + 10\n\n    # Calculate the number of birds Lillian can expect to see in her garden each day\n    birds_per_day = total_birds - birds_prefered\n\n    # Display the number of birds Lillian can expect to see in her garden each day\n    result = birds_per_day\n    return result"}
{"output": "def solution():\n    \n    bagel_price = 4\n    soup_price = bagel_price * 1.25\n    cake_price = bagel_price / 2\n    total_price = bagel_price + soup_price + cake_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the ticket to the amusement park and the selling price per card\n    ticket_cost = 100\n    selling_price = 1.5\n\n    # Calculate the total revenue from selling the cards\n    total_revenue = ticket_cost * selling_price\n\n    # Calculate the number of cards Kenny keeps to sell to the amusement park\n    kept_cards = total_revenue / 3\n\n    # Calculate the number of cards Kenny started with\n    starting_cards = total_revenue - kept_cards - 50\n\n    # Display the number of cards Kenny started with\n    result = starting_cards\n    return result"}
{"output": "def solution():\n    \n    total_guests = 36\n    hotdogs_needed = total_guests / 2\n    guests_with_second_hotdog = 40\n    guests_without_second_hotdog = total_guests - hotdogs_needed - guests_with_second_hotdog\n    result = guests_without_second_hotdog\n    return result"}
{"output": "def solution():\n    \n    indras_letters = 6\n    sister_letters = (indras_letters / 2) + 4\n    total_letters = indras_letters + sister_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    pot_price = 120\n    mixing_bowl_price = 20\n    utensils_price = 5\n    discount = 0.2\n    total_price = pot_price + mixing_bowl_price + utensils_price\n    discounted_price = total_price * (1 - discount)\n    result = discounted_price\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    skipping_rope_price = 6\n    board_game_price = 11\n    playground_ball_price = 2\n\n    # Define the amount of money Dora has saved\n    savings = 2\n\n    # Define the amount of money Dora's mother gave her\n    mother_money = 16\n\n    # Calculate the total cost of the skipping rope, board game, and playground ball\n    total_cost = skipping_rope_price + board_game_price + playground_ball_price\n\n    # Calculate the remaining amount of money Dora needs to buy the skipping rope, board game, and playground ball\n    remaining_money = total_cost - savings - mother_money\n\n    # Display the remaining amount of money Dora needs to buy the skipping rope, board game, and playground ball\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dragons Prince Thaddeus slew\n    thaddeus_dragons = 100\n\n    # Calculate the number of dragons Prince Arthur slew\n    arthur_dragons = thaddeus_dragons * 0.75\n\n    # Calculate the number of dragons Prince Walter slew\n    walter_dragons = arthur_dragons * 2\n\n    # Calculate the number of dragons Prince Bruce slew\n    bruce_dragons = walter_dragons / 5\n\n    # Calculate the total number of dragons\n    total_dragons = thaddeus_dragons + arthur_dragons + walter_dragons + bruce_dragons\n\n    # Display the total number of dragons\n    result = total_dragons\n    return result"}
{"output": "def solution():\n    \n    total_gallons = 15\n    containers = 5\n    gallons_per_container = total_gallons / containers\n    pints_per_container = gallons_per_container / 4\n    pints_needed = pints_per_container * 8\n    result = pints_needed\n    return result"}
{"output": "def solution():\n    chips_price = 40  # The vending machines sell chips for 40 cents\n    candy_price = 75  # The vending machines sell candy bars for 75 cents\n    total_spent = 5  # George spent $5\n    chips_bags = 3  # George got 3 bags of chips\n    remaining_money = total_spent - (chips_bags * chips_price)  # George has this much money left\n    candy_bars_price = candy_price / candy_bars_price  # Calculate the number of candy bars George bought\n\n    result = candy_bars_price\n    return result"}
{"output": "def solution():\n    \n    starting_lollipops = 25\n    kept_lollipops = 5\n    remaining_lollipops = starting_lollipops - kept_lollipops\n    friends = 4\n    lollipops_per_friend = remaining_lollipops / friends\n    result = lollipops_per_friend\n    return result"}
{"output": "def solution():\n    \n    cake_weight = 20\n    pieces_per_cake = 8\n    total_pieces = pieces_per_cake * 2\n    remaining_cake_weight = cake_weight - total_pieces\n    result = remaining_cake_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of oranges\n    total_oranges = 34 + 22\n\n    # Calculate the number of oranges each person will get\n    oranges_per_person = total_oranges / 3\n\n    # Calculate the number of oranges everyone will get\n    oranges_per_person_each = oranges_per_person\n\n    # Display the number of oranges everyone will get\n    result = oranges_per_person_each\n    return result"}
{"output": "def solution():\n    onions_per_serving = 2  # Antoine's soup serves 6 people\n    onions_per_pound = 2  # Antoine likes to double the amount of onions\n    onions_cost = onions_per_serving * onions_per_pound  # The cost of onions is $2.00 per pound\n    beef_stock_cost = 2  # The cost of 2 boxes of beef stock is $2.00 per box\n\n    # Calculate the total cost of onions\n    total_onions_cost = onions_per_serving * onions_cost\n\n    # Calculate the total cost of beef stock\n    total_beef_stock_cost = beef_stock_cost * 2  # Antoine needs 2 boxes of beef stock\n\n    # Calculate the cost per serving\n    cost_per_serving = total_onions_cost / 6  # Antoine's soup serves 6 people\n    result = cost_per_serving\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes for Wayne to reach the theater\n    wayadette_time = 5\n\n    # Define the time it takes for the drive from Wayne's hotel\n    drive_time = 4 * wayadette_time\n\n    # Calculate the time it takes for Bernadette to stay at the hotel\n    bernadette_hotel_time = drive_time / 4\n\n    # Calculate the time it takes for Bernadette to stay at the premiere theater\n    bernadette_high_rise_time = bernadette_hotel_time\n\n    # Calculate the total time it takes for Wayne to reach the theater\n    total_time = wayadette_time + bernadette_hotel_time + drive_time + bernadette_high_rise_time\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the room in yards\n    room_length_yards = 3\n\n    # Convert the length of the room to feet\n    room_length_feet = room_length_yards * 3\n\n    # Calculate the perimeter of the room\n    room_perimeter = room_length_feet / 360\n\n    # Display the perimeter of the room\n    result = room_perimeter\n    return result"}
{"output": "def solution():\n    # Calculate the total number of beads bought by each sister\n    elizabeth_beads = 1 + 2  # Elizabeth bought 1 pack of red, 2 packs of clear beads\n    margareth_beads = 3 + 4  # Margareth bought 3 packs of blue, 4 packs of red beads\n    total_beads = elizabeth_beads + margareth_beads  # Total number of beads\n    beads_per_sister = 20  # Each pack of beads contains 20 pieces of beads\n\n    # Calculate the difference in beads between the two sisters\n    difference = total_beads - beads_per_sister\n    result = difference\n    return result"}
{"output": "def solution():\n    initial_temp = 40  # Marcus's house is 40 degrees initially\n    baking_time = 3  # Marcus spends 3 hours baking\n    oven_temp = initial_temp - (baking_time * 5)  # Marcus raises the house's temperature by 5 degrees every hour the oven is on it raises the house's temperature by 5 degrees\n    window_open_time = 30  # Marcus opens a window for 30 minutes\n    cool_down_time = 2  # The house cools down 2 degrees for every 10 minutes the window is open\n\n    # Calculate the house's final temperature\n    final_temp = initial_temp + (baking_time * oven_temp) + (window_open_time * cool_down_time)\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    swim_time = 40\n    bike_time = 20\n    run_time = 50\n    jon_swim_increase = 0.1\n    jon_bike_increase = 5\n    jon_run_time = swim_time + (bike_time * jon_bike_increase) + (run_time * jon_run_increase)\n    james_time = run_time - (jon_swim_increase + james_bike_increase)\n    result = james_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of Movie C in minutes\n    C_LENGTH = 1.25 * 60\n\n    # Calculate the length of Movie B in minutes\n    B_LENGTH = C_LENGTH + 5\n\n    # Calculate the length of Movie A in minutes\n    A_LENGTH = B_LENGTH / 4\n\n    # Display the length of Movie A in minutes\n    result = A_LENGTH\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to run the horse and the cost of a single bail of hay\n    time_in_minutes = 30 * 60\n    cost_per_bail = 3\n\n    # Calculate the number of bags of hay Michael eats\n    bags_of_hay = time_in_minutes // 2\n\n    # Calculate the total cost of the hay\n    total_cost = bags_of_hay * cost_per_bail\n\n    # Calculate the amount of change Michael has after buying the hay\n    change = 6 * 5 - total_cost\n\n    # Display the amount of change\n    result = change\n    return result"}
{"output": "def solution():\n    eggs_in_cases = 4 * 12  # Rozanne uses 4 dozen eggs that were in cases\n    eggs_lost_in_cupboard = 2  # Rozanne uses 2 eggs that were loose in the cupboard\n    eggs_per_glass = 5  # Each glass needs 5 eggs\n\n    # Calculate the total number of eggs Rozanne can make\n    total_eggs = eggs_in_cases + eggs_lost_in_cupboard\n\n    # Calculate the number of trays Rozanne can put out\n    trays = total_eggs // eggs_per_glass\n    result = trays\n    return result"}
{"output": "def solution():\n    \n    joey_points = 214\n    scrabble_points = 26\n    marcy_points = 225\n    marcy_points = 10\n    total_points = joey_points + scrabble_points + marcy_points\n    joey_points_winning = total_points - joey_points\n    result = joey_points_winning\n    return result"}
{"output": "def solution():\n    # Calculate the total revenue from selling 17 sneakers on Monday\n    revenue_monday = 17 * 20\n\n    # Calculate the total revenue from selling 17 sneakers to the department store\n    revenue_department_store = 25 * (48 - 17)\n\n    # Calculate the total cost of the sneakers\n    total_cost = 576\n\n    # Calculate the total revenue from selling 17 sneakers to the department store\n    revenue_department_store = revenue_department_store * (48 - 17)\n\n    # Calculate the total profit\n    total_profit = revenue_monday + revenue_department_store\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of packets and the number of pieces of colors per packet\n    packets = 10\n    pieces_per_packet = 8\n\n    # Calculate the total number of pieces of colors\n    total_colors = (packets * pieces_per_packet) + (packets * pieces_per_packet)\n\n    # return the result\n    result = total_colors\n    return result"}
{"output": "def solution():\n    \n    super_ticket_price = 20\n    soda_price = 3\n    popcorn_price = (soda_price - 2) / 1\n    regular_price = popcorn_price - soda_price\n    result = regular_price\n    return result"}
{"output": "def solution():\n    initial_cost = 900  # The initial cost of filling up 20 helium balloons\n    increased_cost = 20  # The cost of filling each balloon was increased by $20\n    additional_cost = 20  # The additional cost of filling each balloon was increased by $20\n    num_balloons = 170  # Bentley wants to fill 170 balloons\n\n    # Calculate the total cost of filling the balloons after the price increase\n    total_cost_after_price_increase = initial_cost + (additional_cost * num_balloons)\n\n    # Calculate the total cost of filling the balloons after the price increase\n    total_cost_after_price_increase = total_cost_after_price_increase + additional_cost\n    result = total_cost_after_price_increase\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance traveled in the first 2 hours\n    distance_1 = 60 * 2\n\n    # Calculate the distance traveled in the second 1 hour\n    distance_2 = 30 * 1\n\n    # Calculate the total distance traveled\n    total_distance = distance_1 + distance_2\n\n    # Calculate the average speed\n    average_speed = total_distance / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sapphires and rubies\n    initial_sapphires = 8\n    initial_rubies = 2\n\n    # Define the value of each type of jenna's jewel\n    sapphire_value = 800\n    rubie_value = 1200\n\n    # Calculate the value of the traded sapphires\n    traded_sapphires_value = 3 * sapphire_value\n\n    # Calculate the value of the rubies\n    rubie_value = 2 * rubie_value\n\n    # Calculate the total value of all the jewels\n    total_value = initial_sapphires_value + rubie_value\n\n    # return the result\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    apples_per_day = 4\n    days = 30\n    total_apples = apples_per_day * days\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each raised bed\n    bed_width = 2\n    bed_length = 8\n    bed_height = 2\n\n    # Calculate the volume of each raised bed\n    bed_volume = bed_width * bed_length * bed_height\n\n    # Calculate the total volume of all raised beds\n    total_bed_volume = bed_volume * 10\n\n    # Calculate the total volume of potting soil needed\n    total_soil_volume = total_bed_volume * 2\n\n    # Calculate the total cost of potting soil\n    potting_soil_cost = total_soil_volume * 12\n\n    # return the result\n    result = potting_soil_cost\n    return result"}
{"output": "def solution():\n    \n    red_cards = 15\n    green_cards = red_cards * 1.6\n    yellow_cards = red_cards + green_cards\n    total_cards = red_cards + green_cards + yellow_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    katelyn_fairies = 50\n    friends_fairies = katelyn_fairies / 2\n    total_fairies = katelyn_fairies + friends_fairies\n    fairies_lew_away = 30\n    remaining_fairies = total_fairies - fairies_lew_away\n    result = remaining_fairies\n    return result"}
{"output": "def solution():\n    jennifer_puppies = 8\n    jennifer_spots = 3\n\n    brandon_puppies = 12\n    brandon_spots = 4\n\n    # Calculate the total number of puppies with spots\n    total_spots = jennifer_puppies + brandon_puppies\n\n    # Calculate the percentage of puppies with spots\n    percentage_spots = (total_spots / total_puppies) * 100\n    result = percentage_spots\n    return result"}
{"output": "def solution():\n    # Calculate the total weight of the sugar cubes\n    sugar_cubes_weight = 2 * 1\n\n    # Calculate the total weight of the carrots\n    carrots_weight = 4 * 12 * 75\n\n    # Calculate the total weight of the horses\n    total_weight = sugar_cubes_weight + carrots_weight\n\n    # Calculate the weight of the oats\n    oats_weight = total_weight - 2 * 75\n\n    result = oats_weight\n    return result"}
{"output": "def solution():\n    \n    aluminum_can_value = 2\n    plastic_bottle_value = 3\n    soda_cans_per_week = 3\n    water_bottles_per_week = 5\n    total_money_per_week = (aluminum_can_value * soda_cans_per_week) + (plastic_bottle_value * water_bottles_per_week)\n    total_money_per_month = total_money_per_week * 4\n    result = total_money_per_month\n    return result"}
{"output": "def solution():\n    \n    frederick_plants = 10\n    toni_plants = frederick_plants * 1.6\n    shondra_plants = toni_plants - 7\n    result = shondra_plants\n    return result"}
{"output": "def solution():\n    \n    # Define Ali's initial amount of money\n    ali_money = 21\n\n    # Calculate Leila's amount of money\n    leila_money = 100 / 2\n\n    # Calculate Ali's current amount of money\n    ali_money = ali_money + leila_money\n\n    # Display Ali's current amount of money\n    result = ali_money\n    return result"}
{"output": "def solution():\n    delivery_cost = 15  # The cost of the pizza delivery is $15\n    tip = delivery_cost / 5  # The tip is equal to 1/5 of the delivery cost\n\n    # Calculate the total amount Ashley needs to give the delivery man\n    total_amount = delivery_cost + tip\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the initial distance and the number of spots fell back\n    initial_distance = 100\n    fell_back = 5\n\n    # Define the number of spots moved back before falling behind 3\n    moved_back = 2\n\n    # Define the number of spots jumped ahead\n    jumped_back = 1\n\n    # Calculate the total distance traveled\n    total_distance = initial_distance - fell_back + moved_back + jumped_back\n\n    # Display the total distance traveled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    num_basketball_decks = 6\n    basketball_cards_per_deck = 25\n\n    num_baseball_boxes = 5\n    baseball_cards_per_box = 40\n\n    cards_kept = 50\n\n    cards_per_student = 10\n\n    # Calculate the total number of basketball cards\n    total_basketball_cards = num_basketball_decks * basketball_cards_per_deck\n\n    # Calculate the total number of baseball cards\n    total_baseball_cards = num_baseball_boxes * baseball_cards_per_box\n\n    # Calculate the total number of cards remaining\n    total_cards = total_basketball_cards + total_baseball_cards - cards_kept\n\n    # Calculate the number of students\n    num_students = total_cards // cards_per_student\n    result = num_students\n    return result"}
{"output": "def solution():\n    # Calculate the cost of Becky's apples before discount\n    becky_cost = 20 * 0.45\n\n    # Calculate the cost of Kelly's apples before discount\n    kelly_cost = 20 * 0.50\n\n    # Calculate the cost of Becky's apples after discount\n    becky_cost -= 1\n\n    # Calculate the cost of Kelly's apples after discount\n    kelly_cost -= 1\n\n    # Calculate the difference in cost between Kelly and Becky\n    cost_difference = kelly_cost - becky_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    sheets_per_room = 2\n    pillow_cases_per_room = 2 * sheets_per_room\n    towels_per_room = 2 * pillow_cases_per_room\n    total_sheets = sheets_per_room * 80\n    total_pillow_cases = pillow_cases_per_room * 80\n    total_towels = towels_per_room * 80\n    total_laundry = total_sheets + total_pillow_cases + total_towels\n    result = total_laundry\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of shoes\n    initial_shoes = 200\n\n    # Define the number of shoes received on Monday\n    monday_shoes = 5\n\n    # Define the number of shoes received on Wednesday and Friday\n    wednesday_shoes = 15\n    friday_shoes = 30\n\n    # Define the number of shoes received on Saturday\n    saturday_shoes = 180\n\n    # Calculate the total number of shoes received\n    total_received = monday_shoes + wednesday_shoes + friday_shoes\n\n    # Calculate the number of shoes received on Sunday\n    sunday_shoes = initial_shoes - total_received - saturday_shoes\n\n    # return the result\n    result = sunday_shoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jars and cupcakes per jar\n    jars = 6\n    cupcakes_per_jar = 8\n\n    # Calculate the total number of cupcakes\n    total_cupcakes = jars * cupcakes_per_jar\n\n    # Calculate the number of pans needed\n    pans = total_cupcakes / 12\n\n    # Display the number of pans needed\n    result = pans\n    return result"}
{"output": "def solution():\n    \n    pen_price = 2\n    paper_price = 3 * pen_price - 1\n    total_cost = pen_price + paper_price\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    num_students = 30\n    pencils_per_student = 10\n    total_pencils = num_students * pencils_per_student\n    used_pencils = total_pencils * (1/5)\n    remaining_pencils = total_pencils - used_pencils\n    end_of_year_pencils = remaining_pencils * (1/3)\n    pencils_left = remaining_pencils - end_of_year_pencils\n    result = pencils_left\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 5\n    extra_cookies = 2\n    cookies_eaten = total_cookies / (1 + extra_cookies)\n    carrot_sticks_eaten = cookies_eaten / 2\n    result = carrot_sticks_eaten\n    return result"}
{"output": "def solution():\n    \n    shark_length = 10\n    remoras_length = 2 * 6\n    total_length = shark_length + remoras_length\n    percentage_of_body_length = (total_length / total_length) * 100\n    result = percentage_of_body_length\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students\n    total_students = 20\n\n    # Calculate the number of students with desktop computers\n    desktop_computers = total_students * 0.75\n\n    # Calculate the number of students at the grade level\n    grade_level_students = total_students - desktop_computers\n\n    # Display the number of students at the grade level\n    result = grade_level_students\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to break in the new shoes and the number of days Jason can walk in a week\n    WALKING_TIME = 240\n    DAYS_PER_WEEK = 4\n\n    # Calculate the total time Jason spends walking in three weeks\n    total_walk_time = WALKING_TIME * DAYS_PER_WEEK\n\n    # Calculate the time Jason spends walking each day\n    walking_time_per_day = total_walk_time / 3\n\n    # Display the time Jason spends walking each day\n    result = walking_time_per_day\n    return result"}
{"output": "def solution():\n    total_spent = 300  # Sarah spent $300 on the books\n    book_cost = 15  # Each book costs $15\n    num_kids = 4  # Sarah gave an equal number of books to her 4 kids\n\n    # Calculate the total number of books Sarah bought\n    total_books = total_spent - book_cost\n\n    # Calculate the number of books each child gets\n    num_books_per_child = total_books / num_kids\n    result = num_books_per_child\n    return result"}
{"output": "def solution():\n    total_kids = 32  # There are 32 kids in Gina's class\n    allergic_to_dairy = 9  # 9 kids are allergic to dairy\n    allergic_to_peanuts = 6  # 6 kids are allergic to peanuts\n    allergic_to_both = 3  # 3 kids are allergic to both\n\n    # Calculate the number of allergic to any\n    allergic_to_any = total_kids - allergic_to_dairy - allergic_to_peanuts - allergic_to_both\n    result = allergic_to_any\n    return result"}
{"output": "def solution():\n    num_groups = 3\n    num_employees_per_group = 200\n    num_tour_guides_per_group = 7\n\n    # Calculate the total number of employees\n    total_employees = num_groups * num_employees_per_group\n\n    # Calculate the total number of people going on the tour\n    total_people = total_employees * num_tour_guides_per_group\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the plane tickets\n    plane_ticket_cost = 5000\n\n    # Calculate the cost of the hotel\n    hotel_cost = plane_ticket_cost * 1.2\n\n    # Calculate the normal cost per day\n    normal_cost_per_day = 1500\n\n    # Calculate the cost of the hotel per day\n    hotel_cost_per_day = normal_cost_per_day * 1.2\n\n    # Calculate the total cost of the trip\n    total_cost = plane_ticket_cost + hotel_cost_per_day * 3\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    ben_blue_paint = 4\n    ben_yellow_paint = 3\n    jasper_blue_paint = ben_blue_paint / 2\n    jasper_yellow_paint = ben_yellow_paint * 3\n    total_paint = jasper_blue_paint + jasper_yellow_paint\n    result = total_paint\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the 1959 penny\n    1959_weight = 48\n\n    # Calculate the weight of the 2010 penny\n    penny_2010_weight = 1959_weight * 0.75\n\n    # Calculate the combined weight of the two pennies\n    combined_weight = 1959_weight + penny_2010_weight + 1959_weight\n\n    # Display the combined weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    goal = 200\n    keegan_earnings = 83\n    tasha_earnings =91\n    total_earnings = keegan_earnings + tasha_earnings\n    remaining_goal = goal - total_earnings\n    result = remaining_goal\n    return result"}
{"output": "def solution():\n    \n    total_songs = 100\n    gabriel_songs = 20\n    luri_songs = gabriel_songs * 3\n    difference = luri_songs - gabriel_songs\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the number of oranges Stetson ate\n    oranges_ate = (2/5) * 60\n\n    # Calculate the total amount of money Stetson gave up\n    total_money = oranges_ate * 10\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    shoes_cost = 80  # Jillian's shoes cost $80\n    handbag_cost = 3 * shoes_cost - 20  # Jillian's handbag cost $20 less than 3 times as much as her shoes cost\n\n    # Calculate Jillian's bag cost\n    bag_cost = handbag_cost + shoes_cost\n    result = bag_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total distance James runs in a week\n    total_distance = 12 * 5  # James runs 12 miles a day for 5 days a week\n\n    # Calculate the total number of hours James runs in a week\n    total_hours = total_distance / 10  # James runs 10 miles an hour\n\n    result = total_hours\n    return result"}
{"output": "def solution():\n    num_horses = 4\n    oats_per_horse_per_meal = 5\n    num_meals_per_day = 2\n    oats_per_bag = 50\n    num_days = 5\n\n    # Calculate the total amount of oats consumed per day\n    total_oats_per_day = num_horses * oats_per_horse_per_meal * num_meals_per_day\n\n    # Calculate the total amount of oats used per day\n    total_oats_per_day = total_oats_per_day * num_days\n\n    # Calculate the total number of bags of oats needed\n    num_bags_of_oats = total_oats_per_day / oats_per_bag\n    result = num_bags_of_oats\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of puppies\n    total_puppies = 27\n\n    # Calculate the number of pomeranians\n    pomeranians = total_puppies * (2/3)\n\n    # Calculate the number of girl Pomeranians\n    girls = pomeranians / 3\n\n    # Display the number of girl Pomeranians\n    result = girls\n    return result"}
{"output": "def solution():\n    \n    southlandia_temp = 48\n    northlandia_temp = 21\n    idlandia_temp = -3\n    total_temp = southlandia_temp + northlandia_temp + idlandia_temp\n    average_temp = total_temp / 3\n    result = average_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the toy car and the initial savings\n    CAR_COST = 12\n    INITIAL_SAVINGS = 4\n\n    # Define the amount of money saved per day\n    SAVINGS_PER_DAY = 2\n\n    # Define the number of years it will take to save the toy car\n    years_to_save = 8\n\n    # Calculate the remaining amount of money\n    remaining_money = CAR_COST - INITIAL_SAVINGS\n\n    # Calculate the number of days it will take to save the remaining amount\n    days_to_save = remaining_money / SAVINGS_PER_DAY\n\n    # Display the number of days\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    eggs_per_tray = 24  # Each tray can hold 24 eggs\n    num_trays = 2  # Jaime has 2 trays\n    total_eggs = 64  # Jaime has 64 eggs\n\n    # Calculate the total number of trays\n    total_trays = num_trays\n\n    # Calculate the total number of eggs used on the trays\n    total_eggs_used = total_trays * eggs_per_tray\n\n    # Calculate the number of eggs won't place on the trays\n    eggs_left = total_eggs - total_eggs_used\n    result = eggs_left\n    return result"}
{"output": "def solution():\n    \n    small_pizza_cost = 8\n    family_size_pizza_cost = 3 * small_pizza_cost\n    total_cost = small_pizza_cost + family_size_pizza_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_packs = 2\n    pack_price = 4.0\n    coupon_amount = 2.0\n\n    # Calculate the total cost of buying 2 packs of razors\n    total_cost = num_packs * pack_price\n\n    # Calculate the total cost of buying 2 packs of razors with the coupon\n    total_cost -= coupon_amount\n\n    # Calculate the cost per individual razor\n    cost_per_rabor = total_cost / num_razors\n    result = cost_per_rabor\n    return result"}
{"output": "def solution():\n    \n    cheerleaders = 10\n    cheerleaders_height = 64\n    cheerleaders_total = cheerleaders * cheerleaders_height\n    cheerleaders_total -= 10\n    cheerleaders_total -= 10\n    cheerleaders_total -= 4\n    girls_total -= 2\n    human_pyramid_height = girls_total * 4\n    result = human_pyramid_height\n    return result"}
{"output": "def solution():\n    \n    work_hours_per_day = 8\n    walk_time_per_hour = 5\n    days = 5\n    total_work_hours = work_hours_per_day * days\n    total_walk_time = total_work_hours * walk_time_per_hour\n    result = total_walk_time\n    return result"}
{"output": "def solution():\n    \n    brett_age = 14\n    angela_age_in_four_years = brett_age * 3\n    angela_current_age = angela_age_in_four_years - 4\n    result = angela_current_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days Paul drives his car\n    days = 14\n\n    # Define the cost of each morning ride\n    morning_cost = 6\n\n    # Define the cost of each afternoon ride\n    afternoon_cost = 2\n\n    # Calculate the total cost of driving the car for one day\n    daily_cost = days * morning_cost\n\n    # Calculate the total cost of driving the car for one week\n    weekly_cost = daily_cost * 7\n\n    # Calculate the total cost of driving the car for two weeks\n    total_cost = weekly_cost * 2\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of oranges Ashley brought\n    ashley_oranges = 5 * 10\n\n    # Calculate the total number of oranges Brianne brought\n    brianne_oranges = ashley_oranges + 20\n\n    # Calculate the total number of oranges they can make\n    total_oranges = ashley_oranges + brianne_oranges\n\n    # Calculate the number of greek orange pies they can make\n    greek_orange_pies = total_oranges // 3\n\n    result = greek_orange_pies\n    return result"}
{"output": "def solution():\n    \n    # Define the flat fee and the price of the first venue\n    flat_fee = 200\n    venue1_price = 25\n\n    # Calculate the total cost of the first venue\n    venue1_total_cost = flat_fee\n\n    # Calculate the total cost of the second venue\n    venue2_total_cost = venue1_price + (vest1_price - venue2_total_cost)\n\n    # Calculate the number of guests needed to cover the total cost\n    guests_needed = venue1_total_cost / 5\n\n    # Display the number of guests needed\n    result = guests_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of insects Bodhi found\n    bodhi_insects = 43\n\n    # Calculate the number of insects David found\n    david_insects = bodhi_insects / 2\n\n    # Calculate the number of insects Lily found\n    lily_insects = david_insects + 7\n\n    # Display the number of insects Lily found\n    result = lily_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of yards used by Mariah and her grandma\n    mariah_to_grandma_ratio = 1/4\n    grandma_to_yards_ratio = 1/2\n\n    # Define the number of yards in a skein of yarn\n    yards_in_skein = 364\n\n    # Calculate the total number of yards used by Mariah and her grandma\n    mariah_yards = yards_in_skein * mariah_to_grandma_ratio\n    grandma_yards = yards_in_skein * grandma_to_grandma_ratio\n\n    # Calculate the total number of yards used\n    total_yards = mariah_yards + grandma_yards\n\n    # Display the total number of yards used\n    result = total_yards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gifts needed for each friend\n    friend1_gifts = 5\n    friend2_gifts = 5\n    friend3_gifts = 2\n\n    # Calculate the total number of gifts needed for the 5 friends\n    total_friend1_gifts = friend1_gifts + friend2_gifts\n\n    # Calculate the total number of gifts needed for the 3 friends\n    total_friend3_gifts = friend3_gifts + friend4_gifts\n\n    # Calculate the total number of gifts Cherrie bought\n    total_gifts = total_friend1_gifts + total_friend2_gifts + 10\n\n    # Display the total number of gifts\n    result = total_gifts\n    return result"}
{"output": "def solution():\n    \n    chair_width = 3\n    rug_width = chair_width + 5\n    couch_width = 2 * rug_width + 2\n    result = couch_width\n    return result"}
{"output": "def solution():\n    num_packs = 4\n    grape_pack_price = 2\n    new_pack_price = grape_pack_price / 2\n    total_paid = 7\n\n    # Calculate the total cost of all packs of gum\n    total_gum_cost = num_packs * grape_pack_price + new_pack_price\n\n    # Calculate the cost of each pack of strawberry gum\n    cost_per_pack = total_gum_cost / strawberry_packs\n    result = cost_per_pack\n    return result"}
{"output": "def solution():\n    # Calculate the cost of buying the cheapest lumber\n    cheapest_lumber_cost = (200 * 2 * 4) + (400 * 2 * 6)\n\n    # Calculate the maximum number of popsicles Frederick can make with the cheapest lumber\n    max_popsicles = max_popsicles * 24\n\n    result = max_popsicles\n    return result"}
{"output": "def solution():\n    num_dogs = 6\n    num_legs_per_dog = 4\n    snowshoe_price = 12.0\n\n    # Calculate the total number of legs needed for all dogs\n    total_legs = num_dogs * num_legs_per_dog\n\n    # Calculate the total number of snowshoes needed for all dogs\n    total_snowshoes = total_legs * snowshoe_price\n    result = total_snowshoes\n    return result"}
{"output": "def solution():\n    num_bus_trips_per_week = 2\n    cost_per_bus_trip = 2.20\n    num_days_per_week = 5\n    num_bus_trips_per_week = num_bus_trips_per_week * num_days_per_week\n\n    # Calculate the total cost of buying a weekly bus pass\n    total_cost = num_bus_trips_per_week * cost_per_bus_trip\n\n    # Calculate the amount saved by buying a weekly bus pass\n    amount_saved = total_cost - 20\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cows and sheep\n    cows = 30\n    sheep = 20\n\n    # Calculate the number of cows and sheep for the zoo\n    cows_zoo = cows * 2\n    sheep_zoo = sheep * 2\n\n    # Calculate the total number of animals\n    total_animals = cows_zoo + sheep_zoo\n\n    # Display the total number of animals\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    rose_onions = 12\n    rose_potatoes = 4\n    sophia_onions = rose_onions / 4\n    sophia_potatoes = rose_potatoes / 4\n    total_onions_and_potatoes = sophia_onions + sophia_potatoes\n    result = total_onions_and_potatoes\n    return result"}
{"output": "def solution():\n    # Calculate the total calories needed to reach the goal\n    total_calories_needed = 30 * 31 + 3500  # 30 lbs for July 19th, 31st is December 31st, and Andy needs to burn 3500 calories to burn a pound\n\n    # Calculate the amount of calorie deficit needed to reach the goal\n    calorie_deficit_needed = total_calories_needed / 3500  # Andy needs to burn 3500 calories to burn a pound\n\n    result = calorie_deficit_needed\n    return result"}
{"output": "def solution():\n    daily_pay = 30  # Gerald pays him $30 every day\n    weekly_spending = 100  # Gerald spent a total of $100\n    days_worked = 7  # Gerald worked for 7 days\n\n    # Calculate the total amount Gerald pays in a week\n    total_pay = daily_pay * days_worked\n\n    # Calculate the amount Gerald has left\n    remaining_money = weekly_spending - total_pay\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    water_per_kilometer = 60  # Hannah needs to drink 60 ml of water for each kilometer she runs\n    laps_per_kilometer = 8  # Hannah needs to run 8 laps\n    lap_distance = 0.25  # Each lap is 0.25 km\n\n    # Calculate the total distance Hannah needs to run\n    total_distance = laps_per_kilometer * lap_distance\n\n    # Calculate the total amount of water Hannah needs to drink\n    total_water = total_distance * water_per_kilometer\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    initial_money = 500\n    clothes_spending = initial_money * 0.2\n    remaining_money = initial_money - clothes_spending\n    cds_spending = remaining_money * 0.25\n    remaining_money -= cds_spending\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    lot_cost = 120000\n    house_cost = 3 * lot_cost\n    result = house_cost\n    return result"}
{"output": "def solution():\n    num_packs = 8\n    pack_price = 4\n    num_bags_per_pack = 5\n    sale_price = 8\n\n    # Calculate the total cost of all canvas bags\n    total_cost = num_packs * pack_price\n\n    # Calculate the total revenue from selling all canvas bags\n    total_revenue = num_bags_per_pack * sale_price\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    punches_per_minute = 25\n    rounds_per_day = 5\n    rounds_per_fight = 3\n    total_rounds = rounds_per_day * 5\n    total_punches = total_rounds * punches_per_minute\n    result = total_punches\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Suzanne made\n    suzanne_cookies = 36\n\n    # Calculate the number of cookies Josh made\n    josh_cookies = suzanne_cookies / 4\n\n    # Calculate the number of cookies Kelsie made\n    kelsie_cookies = josh_cookies * 2\n\n    # Display the number of cookies Kelsie made\n    result = kelsie_cookies\n    return result"}
{"output": "def solution():\n    num_10_bills = 4\n    num_20_bills = 6\n\n    # Calculate the total amount of money Ali has\n    total_money = (num_10_bills * 10) + (num_20_bills * 20)\n\n    # Calculate the amount of money Ali gives to her sister\n    sister_money = total_money / 2\n\n    # Calculate the remaining amount of money\n    remaining_money = total_money - sister_money\n\n    # Calculate the amount of money Ali uses to buy dinner\n    dinner_money = remaining_money * (3/5)\n\n    # Calculate the amount of money Ali has after buying dinner\n    money_after_buying_dinner = remaining_money - dinner_money\n    result = money_after_buying_dinner\n    return result"}
{"output": "def solution():\n    \n    rob_time = 2 * 60  # convert 2 hours to minutes\n    royce_time = (2 * rob_time) + 40\n    result = royce_time\n    return result"}
{"output": "def solution():\n    \n    num_grandchildren = 3\n    hat_wool = 2\n    scarf_wool = 4\n    sweater_wool = 12\n    mittens_wool = 1\n    socks_wool = 2\n    total_wool = (hat_wool + scarf_wool + sweater_wool + mittens_wool + socks_wool) * num_grandchildren\n    result = total_wool\n    return result"}
{"output": "def solution():\n    \n    total_problems = 100\n    monday_problems = 12\n    tuesday_problems = monday_problems * 3\n    remaining_problems = total_problems - monday_problems - tuesday_problems\n    wednesday_problems = remaining_problems / 4\n    remaining_problems -= wednesday_problems\n    result = remaining_problems\n    return result"}
{"output": "def solution():\n    \n    tony_rate = 6\n    bobby_rate = tony_rate - 1\n    kathy_rate = bobby_rate * 2\n    ricky_rate = kathy_rate - 2\n    total_rate = tony_rate + bobby_rate + kathy_rate + ricky_rate\n    result = total_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of loaves of bread\n    initial_loaves = 200\n\n    # Calculate the number of loaves sold in the morning\n    morning_loaves = 93\n\n    # Calculate the number of loaves sold in the afternoon\n    afternoon_loaves = 39\n\n    # Calculate the total number of loaves sold\n    total_loaves_sold = morning_loaves + afternoon_loaves\n\n    # Calculate the number of loaves returned by the grocery store\n    grocery_loaves = 6\n\n    # Calculate the number of loaves left\n    loaves_left = initial_loaves - total_loaves_sold - grocery_loaves\n\n    # Display the number of loaves left\n    result = loaves_left\n    return result"}
{"output": "def solution():\n    \n    red_tulips_per_row = 6\n    blue_tulips_per_row = 8\n    red_tulips_bought = 36\n    blue_tulips_bought = 24\n    total_red_tulips = red_tulips_bought * red_tulips_per_row\n    total_blue_tulips = blue_tulips_bought * blue_tulips_per_row\n    total_rows = total_red_tulips + total_blue_tulips\n    result = total_rows\n    return result"}
{"output": "def solution():\n    \n    total_cups = 27\n    cups_per_batch = 3/4\n    cups_per_batch = total_cups * cups_per_batch\n    batches_of_oatmeal_cookies = cups_per_batch / cups_per_batch\n    result = batches_of_oatmeal_cookies\n    return result"}
{"output": "def solution():\n    daily_consumption = 12  # Ada's daily electric consumption is 12 kilowatts per hour\n    device_consumption = 2  # Ada is planning to add a device for 2 kilowatts per hour a day\n    hourly_rate = 1.5  # Ada's hourly rate is $1.50\n    days_in_week = 7  # Ada is planning to add a weekly electric bill\n\n    # Calculate Ada's weekly electric consumption before and after adding the new device\n    weekly_consumption_before = daily_consumption * days_in_week\n\n    # Calculate Ada's weekly electric consumption after adding the new device\n    weekly_consumption_after = weekly_consumption * (daily_consumption + device_consumption)\n\n    # Calculate the difference between Ada's weekly electric consumption and the new device consumption\n    difference = weekly_consumption_before - weekly_consumption_after\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    people_per_hour = 2\n    hours_per_day = hours_per_day / 5\n    total_people = 5\n    total_hours = total_people * hours_per_day\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sofas Ophelia has\n    ophelia_sofas = 20\n\n    # Calculate the number of chairs Jenna has\n    jenna_chairs = 3 * ophelia_sofas\n\n    # Calculate the number of sofas each person has\n    ophelia_sofas_per_person = ophelia_sofas / 2\n    jenna_sofas_per_person = jenna_chairs / 2\n\n    # Calculate the total number of sofas and chairs\n    total_sofas = ophelia_sofas_per_person + jenna_sofas_per_person\n    result = total_sofas\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the headphone set and the total amount paid\n    HEADPHONE_SET_COST = 4\n    TOTAL_PAID = 48\n\n    # Calculate the amount of CDs Tom can buy with the headphone set\n    headphone_cds = TOTAL_PAID - HEADPHONE_SET_COST\n\n    # Calculate the number of CDs Tom can buy with the headphone set\n    cds_bought = headphone_cds // 4\n\n    # Display the number of CDs Tom can buy\n    result = cds_bought\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weeks and the number of hours spent on occasions\n    num_weeks = 8\n    num_hours_occasions = 4\n\n    # Calculate the total number of hours spent on occasions\n    total_hours_occasions = num_weeks - num_occasions\n\n    # Calculate the total number of hours spent on the first two weeks\n    total_hours_first_two_weeks = 5 * 2 * num_hours_occasions\n\n    # Calculate the total number of hours spent on the second week\n    total_hours_second_week = 6 * 1\n\n    # Calculate the total number of hours spent working out across the 8 weeks\n    total_hours = total_hours_first_two_weeks + total_hours_second_week\n\n    # return the result\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of passengers\n    passengers = 48\n\n    # On the first stop, 8 passengers get off\n    passengers -= 8\n\n    # On the second stop, 21 passengers get off\n    passengers -= (5 * 8)\n\n    # On the second stop, 3 times fewer passengers get on\n    passengers -= (3 * 21)\n\n    # Display the final number of passengers\n    result = passengers\n    return result"}
{"output": "def solution():\n    \n    # Define Jame's current age\n    jame_age = 27\n\n    # Calculate Jame's age in 8 years\n    jame_age_in_8_years = jame_age + 8\n\n    # Calculate Jame's current age\n    jame_current_age = jame_age - 5\n\n    # Calculate Jame's cousin's age in 8 years\n    cousin_age_in_8_years = 2 * jame_age_in_8_years - 5\n\n    # Calculate Jame's current age\n    jame_current_age = jame_current_age + 8\n\n    # Calculate the cousin's current age\n    cousin_current_age = cousin_age_in_8_years - 5\n\n    # Calculate the years separate the age of the two\n    years_separate_age = jame_current_age + cousin_current_age\n\n    # Display the years separate the age\n    result = years_separate_age\n    return result"}
{"output": "def solution():\n    \n    computer_cost = 1100\n    printer_cost = computer_cost - 400\n    total_cost = computer_cost + printer_cost\n    num_monitors = 2\n    monitor_cost = total_cost / num_monitors\n    result = monitor_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students\n    total_students = 20\n\n    # Calculate the number of shells brought by the boys\n    boys_shells = 60\n\n    # Calculate the number of shells brought by the girls\n    girls_shells = boys_shells * 4\n\n    # Calculate the total number of shells brought by the girls\n    girls_seashells = boys_shells + girls_shells\n\n    # Calculate the number of seashells brought by each girl\n    seashells_per_girl = girls_seashells / 2\n\n    # Display the number of seashells brought by each girl\n    result = seashells_per_girl\n    return result"}
{"output": "def solution():\n    \n    george_candies = 3\n    nick_candies = 2 * george_candies\n    total_candies = george_candies + nick_candies\n    result = total_candies\n    return result"}
{"output": "def solution():\n    \n    # Define Chenny's age\n    chenny_age = 10\n\n    # Calculate Alyana's age\n    alyana_age = chenny_age - 4\n\n    # Calculate Anne's age\n    anne_age = alyana_age - 2\n\n    # Display Anne's age\n    result = anne_age\n    return result"}
{"output": "def solution():\n    \n    # Define the thickness of the first book\n    book1_thickness = 31\n\n    # Define the thickness of the second book\n    book2_thickness = 50\n\n    # Define the thickness of the third book\n    book3_thickness = book2_thickness - 5\n\n    # Define the thickness of the fourth book\n    book4_thickness = book1_thickness * 2\n\n    # Calculate the total thickness of the four books\n    total_thickness = book1_thickness + book2_thickness + book3_thickness + book4_thickness\n\n    # Display the total thickness\n    result = total_thickness\n    return result"}
{"output": "def solution():\n    \n    total_vlogs = 72\n    first_week_vlogs = 18\n    second_week_vlogs = 21\n    third_week_vlogs = 15\n    total_vlogs = first_week_vlogs + second_week_vlogs + third_week_vlogs\n    vlogs_needed = total_vlogs - total_vlogs\n    result = vlogs_needed\n    return result"}
{"output": "def solution():\n    \n    bill_amount = 50\n    tip_percent = 20\n    tip_amount = bill_amount * (tip_percent / 100)\n    total_amount = bill_amount + tip_amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money\n    initial_money = 18\n\n    # Add $5 to the eldest's share\n    eldest_money += 5\n\n    # Add $10 to the second day\n    second_day_money += 10\n\n    # Add $8 to the third day\n    second_day_money += 8\n\n    # Triple the amount he had left after spending the $8\n    remaining_money = initial_money - second_day_money\n\n    # Display the remaining amount of money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    target_amount = 1125\n    first_half_amount = target_amount / 2\n    second_half_amount = first_half_amount * 2\n    savings_per_day = second_half_amount / 2\n    result = savings_per_day\n    return result"}
{"output": "def solution():\n    num_apples = 3\n    apple_price = 1.5\n\n    num_oranges = 5\n    orange_price = 0.8\n\n    num_peaches = 6\n    peach_price = 0.75\n\n    total_cost = (num_apples * apple_price) + (num_oranges * orange_price) + (num_peaches * peach_price)\n\n    change = 20 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of Jairus and Jenny\n    jairus_price = 0.8\n    jenny_price = 0.5\n\n    # Define the number of tasks\n    num_tasks = 20\n\n    # Calculate the total earnings for Jairus and Jenny\n    jairus_earnings = jairus_price * num_tasks\n    jenny_earnings = jenny_price * num_tasks\n\n    # Calculate the difference in earnings between Jairus and Jenny\n    earnings_difference = jairus_earnings - jenny_earnings\n\n    # Return the result\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    total_dollars = 100\n    jeff_ratio = 4\n    brad_dollars = total_dollars / (jeff_ratio + brad_ratio)\n    jeff_dollars = jeff_ratio * brad_dollars\n    result = jeff_dollars\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Jeff walks in a week\n    daily_distance = 3\n    weekly_distance = daily_distance * 5 * 7\n\n    # Calculate the total distance Jeff walks in a week\n    weekly_distance = weekly_distance * 5\n\n    result = weekly_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters Elise writes in full twice\n    full_letters = 2\n\n    # Define the number of letters Elise writes in half of it once\n    half_letters = full_letters / 2\n\n    # Calculate the total number of letters Elise has written\n    total_letters = full_letters + half_letters\n\n    # Display the total number of letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of families Ali calls\n    ali_families = 3\n\n    # Define the number of families each family calls\n    family_families = 3\n\n    # Calculate the total number of families\n    total_families = ali_families + (3 * family_families)\n\n    # Display the total number of families\n    result = total_families\n    return result"}
{"output": "def solution():\n    \n    # Define Mark's initial weight and the weight loss per month\n    initial_weight = 70\n    weight_loss_per_month = 10\n\n    # Calculate Mark's final weight after 3 months\n    final_weight = initial_weight - (weight_loss_per_month * 3)\n\n    # Display Mark's final weight\n    result = final_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toys James's play set has\n    play_set_toys = 80\n\n    # Calculate the number of toys Jonathan needs to make a sorted play set\n    toys_for_play_set = play_set_toys * 5\n\n    # Calculate the number of toys Jonathan currently has\n    toys_current = toys_for_play_set + 2\n\n    # Display the number of toys Jonathan currently has\n    result = toys_current\n    return result"}
{"output": "def solution():\n    notebook_price = 1.5\n    pen_price = 0.25\n    calculator_price = 12\n    geometry_set_price = 10\n\n    num_notebooks = 5\n    num_pens = 2\n    num_calculators = 1\n    num_geometry_sets = 1\n\n    discount = 0.1  # 10% discount\n\n    # Calculate the total cost of all items\n    total_notebook_cost = num_notebooks * notebook_price\n    total_pen_cost = num_pens * pen_price\n    total_calculator_cost = num_calculators * calculator_price\n    total_geometry_cost = num_geometry_sets * geometry_set_price\n\n    # Calculate the total cost before discount\n    total_cost_before_discount = total_notebook_cost + total_pen_cost + total_calculator_cost + total_geometry_cost\n\n    # Calculate the discount\n    discount_amount = total_cost_before_discount * discount\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost_before"}
{"output": "def solution():\n    \n    hamburgers = 5\n    hamburger_price = 4\n    fries_packs = 10\n    fries_price = 0.3\n    fruit_drinks_cans = 5\n    fruit_drink_price = 2\n    total_cost = (hamburgers * hamburger_price) + (fries_packs * fries_price) + (fruit_drinks_cans * fruit_drink_price)\n    change = 50 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of goods and commission rate\n    good_price = 1000\n    commission_rate = 0.3\n\n    # Calculate the commission earned from selling goods\n    good_commission = good_price * commission_rate\n\n    # Calculate the total earnings from selling goods\n    good_earnings = good_price - good_commission\n\n    # Calculate the additional commission earned from selling goods over $1000\n    additional_commission = good_commission * 0.1\n\n    # Calculate the total earnings from selling goods over $1000\n    total_commission = good_earnings + additional_commission\n\n    # Calculate the amount Antonella earned\n    antonella_earnings = 2500 - total_commission\n\n    # Display the amount Antonella earned\n    result = antonella_earnings\n    return result"}
{"output": "def solution():\n    \n    cases_of_water = 2\n    bottles_per_case = 24\n    total_bottles = cases_of_water * bottles_per_case\n    total_guests = 70\n    bottles_per_guest = 2\n    total_bottles_needed = total_guests * bottles_per_guest\n    additional_bottles_needed = total_bottles_needed - total_bottles\n    result = additional_bottles_needed\n    return result"}
{"output": "def solution():\n    \n    cold_time = 16\n    warm_time = 2 + 2 * cold_time\n    hot_distance = 3\n    hot_time = hot_distance * hot_time\n    time_difference = hot_time - cold_time\n    result = time_difference\n    return result"}
{"output": "def solution():\n    hourly_rate = 2  # John gets paid $2 per hour\n    hours_per_day = 5  # John works 5 hours per day\n    days_per_week = 4  # John works 4 days per week\n    total_hours = hours_per_day * days_per_week  # John wants to save $80\n\n    # Calculate the amount of money John will save per week\n    savings_per_week = total_hours * hourly_rate\n\n    # Calculate the number of weeks it will take John to save $80\n    weeks_to_save = 80 / savings_per_week\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    fish_cost = 40\n    combo_cost = fish_cost * 3\n    total_cost = fish_cost + combo_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    buttons_in_bag = 21\n    buttons_with_two_holes = 7\n    buttons_with_four_holes = buttons_in_bag - buttons_with_two_holes\n    total_holes = buttons_with_two_holes + buttons_with_four_holes\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    timothy_locker = 24\n    zack_locker = timothy_locker / 2\n    peter_locker = zack_locker / 4\n    result = peter_locker\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cups Octavia drinks in a daily recommendation\n    cups_per_recommendation = 4\n\n    # Calculate the total number of cups Octavia drinks in a daily recommendation\n    cups_per_daily = cups_per_recommendation / 2\n\n    # Calculate the total number of cups Juan drinks in a contract\n    cups_by_contract = cups_per_daily * 10\n\n    # Calculate the number of cups Juan needs to reduce his daily coffee intake\n    cups_to_reduce = cups_by_contract\n\n    # Display the number of cups Juan needs to reduce\n    result = cups_to_reduce\n    return result"}
{"output": "def solution():\n    \n    total_cages = 6\n    hamsters = 3\n    guinea_pigs = 3\n    total_hamsters = hamsters * 10\n    total_guinea_pigs = guinea_pigs * 5\n    total_rodents = total_cages + total_hamsters + total_guinea_pigs\n    result = total_rodents\n    return result"}
{"output": "def solution():\n    \n    mark_weight = 150\n    susan_weight = mark_weight - 20\n    bob_weight = susan_weight * 2\n    total_weight = mark_weight + susan_weight + bob_weight\n    num_friends = 3\n    average_weight = total_weight / num_friends\n    result = average_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial angle of the pyramid and the sun\n    initial_angle = 32\n    sun_angle = 5 * 10\n\n    # Calculate the total angle of the pyramids to the sun\n    total_angle = initial_angle + sun_angle\n\n    # Display the total angle\n    result = total_angle\n    return result"}
{"output": "def solution():\n    \n    sons = 2\n    candles_per_son = 12 + 4\n    candles_per_pack = 5\n    cost_per_pack = 3\n    total_cost = (sons * candles_per_son) + (candles_per_pack * candles_per_pack)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of pages Judy read in the first week\n    pages_week1 = 15 * 7  # Judy read for 15 minutes each night, 7 days in the first week\n\n    # Calculate the number of pages Judy read in the second week\n    pages_week2 = 100 - pages_week1  # Judy read a total of 100 pages in the second week\n\n    # Calculate the total number of pages Judy read in two weeks\n    pages_two_weeks = pages_week2 * 2  # Judy can read 2 pages per 1.5 minutes\n\n    result = pages_two_weeks\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sandwiches\n    sandwiches = 12\n\n    # Calculate the number of sandwiches Cody ate\n    cody_sandwiches = sandwiches // 3\n\n    # Calculate the number of sandwiches Trevor ate\n    trevor_sandwiches = sandwiches // 4\n\n    # Calculate the number of sandwiches left\n    sandwiches_left = sandwiches - cody_sandwiches - trevor_sandwiches\n\n    # Display the number of sandwiches left\n    result = sandwiches_left\n    return result"}
{"output": "def solution():\n    \n    shiloh_age = 44\n    nephew_age_in_7_years = shiloh_age + 7\n    nephew_age_now = nephew_age_in_7_years - 7\n    result = nephew_age_now\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money the tooth fairy lost\n    initial_money = 5\n\n    # Define the amount of money the tooth fairy gave to the first three teeth Sharon\n    first_three_money = 1\n\n    # Define the amount of money the tooth fairy gave to the second two teeth Sharon\n    second_three_money = 1\n\n    # Define the amount of money the tooth fairy gave to the third three teeth Sharon\n    third_three_money = (first_three_money + second_three_money) / 2\n\n    # Calculate the total amount of money the tooth fairy gave to Sharon\n    total_money = initial_money + second_three_money + third_three_money\n\n    # return the result\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    richie_goals = 80\n    mark_goals = richie_goals + 20\n    anna_goals = richie_goals - 45\n    total_goals = richie_goals + mark_goals + anna_goals\n    result = total_goals\n    return result"}
{"output": "def solution():\n    # Calculate Liam's earnings\n    liam_earnings = 63\n\n    # Calculate Mitchell's earnings from selling lemonades\n    mitchell_earnings = (21 * 4)\n\n    # Calculate the difference in earnings between Mitchell and Liam\n    earnings_difference = mitchell_earnings - liam_earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Peter has\n    initial_money = 70\n\n    # Calculate the amount of money spent on wooden action figures\n    wooden_cost = 5 * 5\n\n    # Calculate the amount of money spent on plastic action figures\n    plastic_cost = 2 * 2\n\n    # Calculate the total amount of action figures\n    total_cost = wooden_cost + plastic_cost\n\n    # Calculate the number of action figures Peter will have by the end of the week\n    num_action_figures = initial_money / 7\n\n    # Display the number of action figures Peter will have by the end of the week\n    result = num_action_figures\n    return result"}
{"output": "def solution():\n    spaying_cost = 200\n    num_vaccines = 3\n    vaccine_cost = 20\n    num_vases_broken = 4\n    vases_cost = 12\n\n    # Calculate the total cost of all vaccines\n    total_vaccine_cost = num_vaccines * vaccine_cost\n\n    # Calculate the total cost of all vases\n    total_vases_cost = num_vases * vases_cost\n\n    # Calculate the total cost of the kitten\n    total_kitten_cost = spaying_cost + total_vaccine_cost + total_vases_cost\n    result = total_kitten_cost\n    return result"}
{"output": "def solution():\n    \n    weekly_growth = 40\n    flower_shop1_roses = 20\n    flower_shop2_roses = 15\n    flower_shop3_roses = 30\n    total_roses = (flower_shop1_roses + flower_shop2_roses + flower_shop3_roses) * 4\n    roses_lack = total_roses - roses_lack\n    result = roses_lack\n    return result"}
{"output": "def solution():\n    \n    starting_balance = 3000\n    monthly_removal = 100\n    years = 2\n    remaining_balance = starting_balance - (monthly_removal * months)\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    bread_price = 3.00\n    sandwiches_per_loaf = 10\n    cheeses_cost = 30.00\n    condiments_per_sandwich = 10\n    sandwich_price = 7.00\n    total_sandwiches = sandwiches_per_loaf * sandwiches_per_loaf\n    total_cost = total_sandwiches * cheeses_cost + condiments_per_sandwich * sandwich_price\n    net_profit = total_cost - bread_price\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes and crayons per box\n    boxes = 3\n    crayons_per_box = 64\n\n    # Calculate the total number of small pieces of crayons\n    total_small_pieces = boxes * crayons_per_box\n\n    # Calculate the total number of muffin crayons\n    total_muffin_crayons = total_small_pieces * 8\n\n    # Calculate the total amount of money Kate can make\n    total_money = total_muffin_crayons * 1.5\n\n    # return the result\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    old_carpet_cost = 12 * 18 * 12\n    padding_carpet_cost = 2 * 18 * 12\n    contractor_carpet_cost = 4 * 34 * 18\n    total_cost = old_carpet_cost + padding_carpet_cost + contractor_carpet_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_birds = 50\n    day1_birds = 50\n    day2_birds = 120\n    day3_birds = 0\n    day4_birds = 120\n    day5_birds = 120\n    day6_birds = 20\n    day7_birds = 90\n    total_day1_birds = day1_birds + day2_birds + day3_birds + day4_birds + day6_birds + day7_birds\n    average_birds_per_day = total_birds / 7\n    result = average_birds_per_day\n    return result"}
{"output": "def solution():\n    \n    starting_value = 20\n    divided_by_5 = starting_value / 2\n    final_value = divided_by_5 - 12\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    boy_cards = 5\n    brother_cards = boy_cards - 3\n    total_cards = boy_cards + brother_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the actual temperature and the original temperature\n    actual_temp = 468\n    original_temp = 450\n\n    # Calculate the percentage for the original recipe\n    percentage_original = (original_temp / actual_temp) * 100\n\n    # Calculate the desired temperature\n    desired_temp = (desired_temp / 520) * 100\n\n    # Display the desired temperature\n    result = desired_temp\n    return result"}
{"output": "def solution():\n    \n    first_movie_length = 1 * 60 + 30\n    second_movie_length = 2 * 60 + 5\n    total_time = first_movie_length + second_movie_length\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define Herb's house value\n    herb_value = 76000\n\n    # Calculate Juan's house value\n    juan_house_value = herb_value * 0.7\n\n    # Calculate the total value of both houses\n    total_value = herb_value + juan_house_value\n\n    # Display the total value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    cups = 12\n    dishes = cups * 2\n    total_cups = 40\n    total_dishes = dishes + 20\n    total_utensils = total_cups + total_dishes\n    result = total_utensils\n    return result"}
{"output": "def solution():\n    num_boxes = 2\n    num_days = 45\n    box_price = 100.0\n    discount = 0.1  # 10% discount\n\n    # Calculate the total cost of one box of contacts\n    total_box_cost = num_boxes * box_price * (1 - discount)\n\n    # Calculate the total cost of two boxes of contacts\n    total_cost = total_box_cost * num_days\n\n    # Calculate the cost per pair of contacts\n    cost_per_contact = total_cost / num_boxes\n    result = cost_per_contact\n    return result"}
{"output": "def solution():\n    hourly_rate = 10\n    saturday_hours = 2\n    sunday_hours = 1\n\n    john_hours = 2 * saturday_hours\n    john_earnings = 3 * sunday_hours\n\n    # Calculate the total earnings of Jill\n    jill_earnings = jill_hours * hourly_rate\n\n    # Calculate the total earnings of John\n    john_earnings = john_hours * hourly_rate\n\n    # Calculate the difference in earnings between John and Jill\n    earnings_difference = john_earnings - jill_earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    calories_per_hour_aerobics = 500\n    hours_aerobics = 2\n    calories_burned_aerobics = 500\n    hours_running = 1\n    calories_burned_running = 600\n    ml_per_200_calories = 100\n    total_calories_aerobics = hours_aerobics * calories_burned_aerobics\n    total_calories_running = hours_running * calories_burned_running\n    total_calories_drunk = total_calories_aerobics + total_calories_running\n    ml_needed = total_calories_drunk / 200_calories\n    result = ml_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jelly beans in the jar\n    total_jelly_beans = 4500\n\n    # Calculate the number of blue jelly beans in the jar\n    blue_jelly_beans = total_jelly_beans * 0.9\n\n    # Calculate the number of red jelly beans in the jar\n    red_jelly_beans = blue_jelly_beans - 1\n\n    # Calculate the number of green jelly beans in the jar\n    green_jelly_beans = blue_jelly_beans * 0.1\n\n    # Calculate the difference between the number of green jelly beans and the number of red jelly beans\n    difference = green_jelly_beans - red_jelly_beans\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    initial_speed = 47  # Jared starts with 47 words per minute\n    increased_speed = 52  # Jared increased his typing speed to 52 WPM\n    increased_speed_increase = 5  # Jared increases his typing speed once more by 5 words\n\n    # Calculate the new typing speed after increasing by 5 words\n    new_speed = initial_speed + (increase * increased_speed_increase)\n\n    # Calculate the average of the three measurements\n    average_speed = (new_speed - increased_speed) / 3\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the weight Martin eats each day for breakfast\n    Cheerios_weight = 1.25\n    donuts_weight = 1.75\n\n    # Define the number of days in 5 weeks\n    days = 5\n\n    # Calculate Martin's weight after 5 weeks\n    weight_after_5_weeks = Cheerios_weight - (cheerios_weight * days) + donuts_weight\n\n    # Calculate the difference in his weight between the two breakfast options\n    weight_difference = weight_after_5_weeks - weight_after_5_weeks\n\n    # Display the weight difference\n    result = weight_difference\n    return result"}
{"output": "def solution():\n    num_invites = 100\n    num_friends_invited = 2\n    num_friends_invited += 10\n    num_friends_invited -= 8\n    num_seats_needed = num_invites * num_friends_invited + num_friends_invited * num_friends_invited\n    result = num_seats_needed\n    return result"}
{"output": "def solution():\n    # Calculate the weight of the Dachshund\n    dachshund_weight = 2 * 10  # Dachshund weighed twice as much as the Affenpinscher\n\n    # Calculate the weight of the Papillon\n    papillon_weight = dachshund_weight / 4  # Papillon weighed one-fourth as much as Dachshund\n\n    # Calculate the weight of the Mastiff\n    mastiff_weight = 44 * pachshund_weight  # Mastiff weighed 44 times the weight of the Papillon\n\n    # Calculate the total weight of all four dogs\n    total_weight = 10 + dachshund_weight + papillon_weight + mastiff_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    amazon_boots_cost = 16\n    amazon_shipping_cost = 4\n    ebay_boots_cost = 13\n    ebay_shipping_cost = 2 * amazon_boots_cost\n\n    # Calculate the total cost of all boots on Amazon.com\n    total_amazon_boots_cost = amazon_boots_cost + amazon_shipping_cost\n\n    # Calculate the total cost of all boots on eBay\n    total_ebay_boots_cost = ebay_boots_cost + ebay_shipping_cost\n\n    # Calculate the difference in cost between eBay and Amazon.com\n    cost_difference = total_ebay_boots_cost - total_amazon_boots_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    initial_height = 4\n    final_height = initial_height * 2\n    days = final_height / final_height\n    result = days\n    return result"}
{"output": "def solution():\n    mushrooms_weight = 100  # The cup of mushrooms weighs 100 grams\n    protein_weight = 3  # The cup has 3 grams of protein\n    mushrooms_eaten_per_day = 200  # John eats 200 grams of mushrooms every day\n    days_per_week = 7  # There are 7 days in a week\n\n    # Calculate the total amount of mushrooms John eats in a week\n    total_mushrooms = mushrooms_weight * days_per_week\n\n    # Calculate the total amount of protein John eats in a week\n    total_protein = total_mushrooms - total_protein\n    result = total_protein\n    return result"}
{"output": "def solution():\n    \n    # Define Jerry's current age\n    jerry_age_now = 5\n\n    # Calculate Jerry's age 5 years ago\n    jerry_age_5_years_ago = jerry_age_now - 5\n\n    # Calculate Jerry's current age\n    jerry_age_now = jerry_age_5_years_ago * 2\n\n    # Calculate Jerry's age in 3 years\n    jerry_age_in_3_years = jerry_age_now + 3\n\n    # Display Jerry's age in 3 years\n    result = jerry_age_in_3_years\n    return result"}
{"output": "def solution():\n    num_implants = 2\n    base_price = 2000\n    feature_cost = 500\n    deposit = 600\n    hourly_rate = 15\n\n    # Calculate the total cost of all implants\n    total_cost = num_implants * base_price + feature_cost\n\n    # Calculate the total amount George has already earned\n    total_earned = total_cost + deposit\n\n    # Calculate the number of hours George needs to work to pay for the dental work\n    hours_needed = total_earned / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    smallest_angle = 180 / 2\n    largest_angle = smallest_angle * 3\n    result = largest_angle\n    return result"}
{"output": "def solution():\n    \n    quarters = 8\n    dimes = 6\n    nickels = 14\n    pennies = 15\n    total_quarters = quarters * 25\n    total_dimes = dimes * 10\n    total_nickels = nickels * 5\n    total_pennies = pennies * 1\n    total_price = total_quarters + total_dimes + total_nickels + total_pennies\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    dogs = 5\n    cats = 2\n    birds = 10\n    legs_per_dog = 4\n    legs_per_cat = 4\n    legs_per_bird = 4\n    total_legs = (dogs * legs_per_dog) + (cats * legs_per_cat) + (birds * legs_per_bird)\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    initial_weight = 8\n    increase_percent = 50\n    increase_amount = initial_weight * (increase_percent / 100)\n    new_weight = initial_weight + increase_amount\n    final_weight = new_weight + 2\n    result = final_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of games Steve buys each year\n    games_per_year_1 = 1\n    games_per_year_2 = 2\n    games_per_year_3 = 4\n\n    # Define the number of games Steve gets for Christmas each year\n    games_for_christmas = 5\n\n    # Calculate the total number of games Steve has after 3 years\n    total_games = (games_per_year_1 * 12) + (games_per_year_2 * 12) + (games_per_year_3 * 12) + games_for_christmas\n\n    # Display the total number of games\n    result = total_games\n    return result"}
{"output": "def solution():\n    \n    distance = 1200\n    time = 3\n    speed = distance / time\n    additional_distance = 2000\n    additional_time = additional_distance / speed\n    result = additional_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pounds of chocolates Ruiz makes in the first hour\n    luiz_pounds_1 = 120\n\n    # Define the number of pounds of chocolates Marissa makes in the first hour\n    marissa_pounds_1 = (3/4) * luiz_pounds_1\n\n    # Define the number of hours worked\n    hours_worked = 12\n\n    # Calculate the total number of pounds of chocolates made in 12 hours\n    total_pounds = (luiz_pounds_1 + marissa_pounds_1) * hours_worked\n\n    # return the result\n    result = total_pounds\n    return result"}
{"output": "def solution():\n    \n    monday_spending = 8\n    tuesday_spending = monday_spending * 2\n    wednesday_spending = tuesday_spending * 4\n    total_spending = monday_spending + tuesday_spending + wednesday_spending\n    money_left = 100 - total_spending\n    result = money_left\n    return result"}
{"output": "def solution():\n    # Calculate the total amount earned from selling 15 cups of lemonade for 4 hours\n    price_15_hours = 15 * 0.5  # Patrick sold 15 cups of lemonade for 4 hours at $0.50 per cup\n\n    # Calculate the total amount earned from selling 10 cups of lemonade for 2 hours at $0.60 per cup\n    price_10_hours = 10 * 0.60  # Patrick sold 10 cups of lemonade for 2 hours at $0.60 per cup\n\n    # Calculate the total amount earned from selling lemonade for 6 hours\n    total_earned = price_15_hours + price_10_hours\n    result = total_earned\n    return result"}
{"output": "def solution():\n    # Calculate the number of rotations Jeremy drives in a month\n    miles_per_month = 400\n    rotations_per_tire = miles_per_month / 725\n\n    # Calculate the total number of rotations Jeremy drives in a month\n    total_rotations_per_month = rotations_per_tire * 12\n\n    # Calculate the number of years before the tire needs to be replaced\n    years_before_tire = total_rotations_per_month / 12\n    result = years_before_tire\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the jumbo bottle and the number of pumps of shampoo used\n    BOTTLE_COST = 24.00\n    NUM_PUMPS = 2\n\n    # Define the number of washings needed\n    NUM_WASHINGS = 120\n\n    # Calculate the total number of pumps needed\n    total_pumps = NUM_PUMPS * NUM_WASHINGS\n\n    # Calculate the cost per pump in cents\n    cost_per_pump = BOTTLE_COST / total_pumps\n\n    # Display the cost per pump in cents\n    result = cost_per_pump\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Joe has\n    initial_money = 50\n\n    # Calculate the discounted price of the outfit\n    discounted_price = initial_money * 0.7\n\n    # Calculate the total cost of the outfit\n    total_cost = discounted_price + 35\n\n    # Calculate the amount of money Joe will have left after the purchase\n    money_left = initial_money - total_cost\n\n    # Display the amount of money Joe will have left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    croissants_per_dozen = 12\n    butter_per_dozen = 0.25\n    dozens_per_day = 4\n    days_per_week = 7\n    total_croissants = dozens_per_day * days_per_week\n    total_butter = total_croissants * butter_per_dozen\n    result = total_butter\n    return result"}
{"output": "def solution():\n    \n    monica_street_length = 150\n    lewis_street_length = 490\n    monica_street_cost = 198\n    lewis_street_cost = (lewis_street_length - monica_street_length) * monica_street_cost\n    difference = lewis_street_cost - monica_street_cost\n    result = difference\n    return result"}
{"output": "def solution():\n    initial_funding = 100000  # John's initial funding of $100,000 for the first 5 months\n    additional_funding = initial_funding * 1.5  # John's research takes 50% more funding per month after the first 5 months\n    total_funding = initial_funding + (10 * additional_funding)  # John's research total funding for the first 5 months\n\n    # Calculate John's research cost for the first 5 months\n    research_cost_first_5_months = initial_funding * (1 + additional_funding)\n    result = research_cost_first_5_months\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of meat consumed by the team\n    total_meat = 6 + 8 + (8 * 1)  # first player ate 6 ounces, second player ate 8 ounces, third player ate 1 pound, fourth and fifth players ordered vegetarian meals\n    result = total_meat\n    return result"}
{"output": "def solution():\n    \n    # Define the number of members in the group and the average number of posts per day\n    members = 1000\n    posts_per_day = 3\n\n    # Calculate the total number of posts in March\n    total_posts = members * posts_per_day * 7\n\n    # Display the total number of posts\n    result = total_posts\n    return result"}
{"output": "def solution():\n    \n    weeks_per_year = 52\n    gallons_per_load = 20\n    cost_per_gallon = 0.15\n    total_gallons = weeks_per_year * gallons_per_load\n    total_cost = total_gallons * cost_per_gallon\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    aquarium_cost = 10\n    rocks_cost = 2 * 2.5\n    coral_cost = 2 * 3\n    fish_cost = 20 * 0.5\n    total_cost = aquarium_cost + rocks_cost + coral_cost + fish_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the beanstalk in the first week\n    week1_height = 3\n\n    # Calculate the height of the beanstalk in the second week\n    week2_height = week1_height * 2\n\n    # Calculate the height of the beanstalk in the third week\n    week3_height = week2_height + 4\n\n    # Calculate the total height of the beanstalk after 3 weeks\n    total_height = week1_height + week2_height + week3_height\n\n    # Display the total height\n    result = total_height\n    return result"}
{"output": "def solution():\n    \n    # Define Prince's hourly wage and number of hours worked per day\n    HOURLY_WAGE = 15\n    HOURS_WORKED_PER_DAY = 10\n\n    # Define the weight of the bull\n    BULL_WEIGHT = 750\n\n    # Calculate Prince's daily earnings\n    daily_earnings = HOURLY_WAGE * HOURS_WORKED_PER_DAY\n\n    # Calculate the number of days it will take Prince to sell the meat\n    days_to_sell = BULL_WEIGHT / daily_earnings\n\n    # Display the number of days\n    result = days_to_sell\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and seats per row\n    rows = 4\n    seats_per_row = 18\n\n    # Calculate the total number of seats\n    total_seats = rows * seats_per_row\n\n    # Calculate the number of occupied seats\n    occupied_seats = total_seats // 4\n\n    # Calculate the number of remaining seats\n    remaining_seats = total_seats - occupied_seats\n\n    # Calculate the number of occupied seats\n    occupied_seats = remaining_seats // 3\n\n    # Calculate the number of students\n    students = remaining_seats - occupied_seats\n\n    # Display the number of students\n    result = students\n    return result"}
{"output": "def solution():\n    num_streetlights_per_intersection = 4\n    num_intersection_poles = 6\n    num_streetlights_not_working = 20\n\n    # Calculate the total number of poles on the road\n    total_poles = num_intersection_poles * num_streetlights_per_intersection\n\n    # Calculate the total number of functioning street lights on the road\n    total_functioning_lights = total_poles * num_streetlights_not_working\n    result = total_functioning_lights\n    return result"}
{"output": "def solution():\n    \n    # Define the number of DVDs played before it break\n    DVDS_PAID = 1000\n\n    # Define the number of DVDs played by the first and second DVDs\n    dvd1_played = 356\n    dvd2_played = 135\n\n    # Calculate the total number of DVDs played before it break\n    total_played = dvd1_played + dvd2_played\n\n    # Display the total number of DVDs played before it break\n    result = total_played\n    return result"}
{"output": "def solution():\n    \n    weeks = 6\n    hours_per_week = 2\n    sessions_cost_per_hour = 125\n    total_hours = weeks * hours_per_week * sessions_cost_per_hour\n    total_cost = total_hours * sessions_cost_per_hour\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of gum pieces\n    initial_gum = 20\n\n    # Calculate the number of gum pieces Jim chews at the school day\n    school_gum = initial_gum // 2\n\n    # Calculate the number of gum pieces Jim chews on the way home\n    school_gum -= school_gum\n\n    # Calculate the number of gum pieces Jim chews on the way home\n    dinner_gum = 2\n\n    # Calculate the number of gum pieces Jim has left after dinner\n    remaining_gum = initial_gum - school_gum - dinner_gum\n\n    # Calculate the number of gum pieces Jim gives to his sister\n    sister_gum = remaining_gum / 2\n\n    # Calculate the final number of gum pieces Jim has left\n    final_gum = remaining_gum - sister_gum\n\n    # Display the final number of gum pieces Jim has left\n    result = final_gum\n    return"}
{"output": "def solution():\n    \n    current_age = 16 + 12\n    future_age = current_age + 4\n    result = future_age\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the baseball coaches\n    baseball_cost = 9 * 3\n\n    # Calculate the total cost of the basketball coaches\n    basketball_cost = 8 * 14\n\n    # Calculate the difference in cost between the basketball coaches and the baseball coach\n    difference = basketball_cost - baseball_cost\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and flowers per row\n    rows = 10\n    flowers_per_row = 20\n\n    # Calculate the total number of flowers in the garden\n    total_flowers = rows * flowers_per_row\n\n    # Calculate the number of flowers that have bloomed\n    bloomed_flowers = total_flowers * (4/5)\n\n    # Display the number of flowers that have bloomed\n    result = bloomed_flowers\n    return result"}
{"output": "def solution():\n    # Convert 1000kb to seconds\n    total_seconds = 1000 * 60\n\n    # Calculate Ashley's internet speed in Mb per hour\n    speed = total_seconds / 20\n\n    result = speed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars pulled on the first three days\n    first_three_days = 10 * 3\n\n    # Define the number of cars pulled on the remaining days\n    remaining_days = 7 - 4\n\n    # Calculate the total number of cars pulled\n    total_cars = first_three_days + remaining_days\n\n    # Display the total number of cars pulled\n    result = total_cars\n    return result"}
{"output": "def solution():\n    \n    # Define Adam's height and growth rate\n    height = 40\n    growth_rate = 2\n\n    # Convert Adam's height to inches\n    adam_height_inches = height * 12\n\n    # Calculate how many years until he is tall enough to ride the roller coaster\n    years_until_ride = height_inches - adam_height_inches\n\n    # Display the number of years until he is tall\n    result = years_until_ride\n    return result"}
{"output": "def solution():\n    # Calculate the total revenue from selling 10 cars\n    total_revenue = 10 * 25000\n\n    # Calculate the amount paid to acquire the cars\n    cars_payment = 0.3 * total_revenue\n\n    # Calculate the total commission earned\n    commission = 0.1 * total_revenue\n\n    # Calculate the total profit earned\n    total_profit = commission - cars_payment\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of riders and the percentage of surfers that can stay upright\n    initial_riders = 100\n    stay_upright_percentage = 0.25\n\n    # Calculate the number of surfers that can stay upright\n    stay_upright_riders = initial_riders * stay_upright_percentage\n\n    # Calculate the number of women\n    women = riders * 0.6\n\n    # Calculate the number of men that can stay upright\n    men_stay_upright = stay_upright_riders - women\n\n    # Display the number of men that can stay upright\n    result = men_stay_upright\n    return result"}
{"output": "def solution():\n    \n    diamond_jewell_price = 2000\n    gold_jewell_price = diamond_jewell_price * (4/5)\n    silver_jewell_price = gold_jewell_price - 400\n    total_price = diamond_jewell_price + gold_jewell_price + silver_jewell_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    snowflake_stamps = 16\n    truck_stamps = snowflake_stamps + 3\n    rose_stamps = truck_stamps - 9\n    total_stamps = snowflake_stamps + truck_stamps + rose_stamps\n    result = total_stamps\n    return result"}
{"output": "def solution():\n    \n    bob_distance = 75\n    tom_speed = 55\n    bob_distance_to_catch_up = bob_distance / tom_speed\n    time_to_catch_up = bob_distance / bob_speed\n    result = time_to_catch_up\n    return result"}
{"output": "def solution():\n    \n    naomi_fish = 17\n    darren_fish = naomi_fish - 6\n    tommy_fish = darren_fish + 3\n    result = tommy_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per class and the number of classes\n    COST_PER_CLASS = 10\n    NUM_CLASSES = 10\n\n    # Calculate the total cost of the classes\n    total_cost = COST_PER_CLASS * NUM_CLASSES\n\n    # Calculate the cost of the remaining classes\n    remaining_cost = 60 - total_cost\n\n    # Calculate the number of classes Manny can miss before they won't sign him up again\n    num_missed_classes = remaining_cost // COST_PER_CLASS\n\n    # Display the number of classes Manny can miss before they won't sign him up again\n    result = num_missed_classes\n    return result"}
{"output": "def solution():\n    \n    jewel_production = 50\n    julie_production = jewel_production * 2\n    total_production = jewel_production + julie_production\n    weekly_production = total_production * 7\n    result = weekly_production\n    return result"}
{"output": "def solution():\n    \n    # Define Paisley's distance\n    paisley_distance = 4\n\n    # Calculate Reggie's distance\n    reggie_distance = paisley_distance * 5\n\n    # Calculate Lynn's distance\n    lynn_distance = reggie_distance - 3\n\n    # Display Lynn's distance\n    result = lynn_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of apples and oranges\n    APPLE_PRICE = 5.20\n    ORANGE_PRICE = 3.30\n\n    # Define the number of apples and oranges\n    num_apples = 5\n    num_oranges = 5\n\n    # Calculate the total cost of the apples\n    apple_cost = num_apples * APPLE_PRICE\n\n    # Calculate the total cost of the oranges\n    orange_cost = num_oranges * ORANGE_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = apple_cost + orange_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the hole\n    length = 6\n    width = 4\n    depth = 3\n\n    # Calculate the volume of the hole\n    volume = length * width * depth\n\n    # Calculate the time it will take to shovel the earth\n    time = volume * 3\n\n    # Display the time it will take to dig the hole\n    result = time\n    return result"}
{"output": "def solution():\n    \n    base_price = 30000\n    extra_price = 7500\n    leather_seat_price = base_price / 3\n    running_board_price = leather_seat_price - 500\n    upgrade_price = base_price + extra_price + leather_seat_price + running_board_price\n    combined_price = base_price + upgrade_price\n    result = combined_price\n    return result"}
{"output": "def solution():\n    # Calculate Tim's salary after a 5% raise\n    salary_after_raise = 20000 * 1.05\n\n    # Calculate Tim's salary after a bonus\n    salary_after_bonus = salary_after_raise + (salary_after_raise * 0.5)\n\n    # Calculate Tim's salary after a year\n    salary_after_year = salary_after_bonus + (salary_after_bonus * 0.5)\n\n    result = salary_after_year\n    return result"}
{"output": "def solution():\n    \n    suits = 10\n    dress_pants = 10\n    dress_shirts_per_suit = 3\n    suit_cost = 750\n    dress_pants_cost = dress_pants_cost / 5\n    dress_shirt_cost = 60\n    total_cost = (suit_cost * suits) + (dress_pants_cost * dress_shirts_per_suit) + (dress_pants_cost * dress_shirts_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    political_articles_per_day = 20\n    sister_articles_per_day = 10\n    days_in_month = 28\n    total_political_articles = political_articles_per_day * days_in_month\n    total_weather_articles = sister_articles_per_day * days_in_month\n    total_business_news_articles = business_articles_per_day * days_in_month\n    total_articles = total_political_articles + total_weather_articles\n    result = total_articles\n    return result"}
{"output": "def solution():\n    \n    steve_age = 60\n    wife_age = steve_age + 4\n    mom_age = steve_age / 2\n    son_age = mom_age - 3\n    son_age_now = son_age + wife_age\n    result = son_age_now\n    return result"}
{"output": "def solution():\n    # Calculate the amount of flour in one bag\n    flour_per_bag = 8 * 2\n\n    # Calculate the total amount of flour in three bags\n    total_flour = flour_per_bag * 3\n\n    result = total_flour\n    return result"}
{"output": "def solution():\n    \n    alisa_speed = 12\n    alisa_time = 4.5\n    alisa_distance = alisa_speed * alisa_time\n    stanley_speed = 10\n    stanley_time = 2.5\n    stanley_distance = stanley_speed * stanley_time\n    total_distance = alisa_distance + stanley_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    soil_rate = 4\n    clay_rate = soil_rate / 2\n    soil_length = 24\n    clay_length = 8\n    total_soil_length = soil_length * soil_rate\n    total_clay_length = clay_length * clay_rate\n    total_time = total_soil_length + total_clay_length\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    classmates = 25\n    cupcakes_per_person = 2\n    total_cupcakes = classmates * cupcakes_per_person\n    result = total_cupcakes\n    return result"}
{"output": "def solution():\n    initial_likes = 2000  # Fishio received 2000 likes on the photo after 1 week\n    new_likes = initial_likes * 70  # Three weeks later, the number of likes was 70 times as many as the initial number of likes\n    total_likes = initial_likes + new_likes  # Calculate the total number of likes\n\n    result = total_likes\n    return result"}
{"output": "def solution():\n    num_pomegranates = 20\n    price_per_pomegranate = 20\n    discount_1 = 2\n    price_per_fruit = 30\n    discount_2 = 0.1\n\n    # Calculate the total cost before discount\n    total_cost_before_discount = num_pomegranates * price_per_pomegranate\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = num_pomegranates * price_per_pomegranate - discount_1\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = num_pomegranates * price_per_fruit\n\n    # Calculate the final price after discount\n    final_price_after_discount = total_cost_after_discount - total_cost_after_discount\n\n    # Calculate the difference between the final price paid for the pomegranates on the two days\n    price_difference = final_price_after_discount - final_price_after_discount\n    result = price_difference\n    return result"}
{"output": "def solution():\n    \n    red_sales = 400\n    green_sales = red_sales / 2\n    first_month_sales = red_sales + green_sales\n    second_month_sales = (3/4) * first_month_sales\n    total_sales = first_month_sales + second_month_sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the first paid hour\n    first_paid_hour = 15\n\n    # Calculate the cost of the second paid hour\n    second_paid_hour = 2 * first_paid_hour\n\n    # Calculate the total cost of the carriage\n    total_cost = first_paid_hour + (2 * second_paid_hour)\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    starting_amount = 200\n    current_amount = 420\n    remaining_amount = starting_amount - current_amount\n    amount_to_withheld = remaining_amount - 300\n    result = amount_to_withheld\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and deviled egg halves needed\n    guests = 16\n    egg_halves_needed = 2\n\n    # Calculate the total number of egg halves needed\n    total_egg_halves = egg_halves_needed * guests\n\n    # Calculate the number of dozens of eggs needed\n    dozens_of_eggs = total_egg_halves / 12\n\n    # Display the number of dozens of eggs needed\n    result = dozens_of_eggs\n    return result"}
{"output": "def solution():\n    total_pages = 15  # Shiela is required to submit a 15-page research paper\n    writing_fraction = 1/3  # Shiela already written 1/3 of the paper\n\n    # Calculate the number of pages Shiela has already written\n    pages_written = total_pages * writing_fraction\n\n    # Calculate the number of pages Shiela has left to write\n    pages_left = total_pages - pages_written\n    result = pages_left\n    return result"}
{"output": "def solution():\n    pages_per_day = 10  # Mike plans to read 10 pages a day\n    total_pages = 200  # The book has 200 pages\n    days = 30  # The assignment is to finish reading in 30 days\n\n    # Calculate the number of pages Mike needs to read before the deadline\n    pages_before_deadline = pages_per_day * total_pages\n\n    # Calculate the number of days before the deadline\n    days_before_deadline = pages_before_deadline / pages_per_day\n    result = days_before_deadline\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the plane and the monthly rent and fuel\n    plane_cost = 150000\n    monthly_rental_cost = 5000\n    fuel_cost_per_month = monthly_rental_cost * 2\n\n    # Calculate the total monthly expenses\n    monthly_expenses = monthly_rental_cost + fuel_cost_per_month\n\n    # Calculate the total yearly expenses\n    yearly_expenses = monthly_rental_cost * 12\n\n    # Calculate the total cost for the first year\n    total_cost = yearly_expenses + yearly_expenses\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    rice_time = 30\n    pork_time = rice_time + 20\n    beans_time = (rice_time + pork_time) / 2\n    total_time = rice_time + pork_time + beans_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    almonds_cost = 10  # A pound of almonds costs $10\n    walnuts_cost = 15  # A pound of walnuts costs $15\n    mixture_1_2_pound = 1/2  # A mixture of 1/2 pound almonds\n    mixture_2_5_pound = 1/5  # A mixture of 1/5 pound almonds\n    mixture_3_5_pound = 1/3  # A mixture of 1/3 pound walnuts\n    mixture_3_pound = 1/3  # A mixture of 1/3 pound walnuts\n\n    # Calculate the total cost of the mixture\n    total_mixture_cost = mixture_1_2_pound * mixture_2_pound + mixture_3_pound * mixture_3_pound\n\n    # Calculate the difference in cost between the two amounts\n    cost_difference = total_mixture_cost - total_mixture_cost\n    result = cost_difference"}
{"output": "def solution():\n    # Calculate the number of sheep on Lee's farm\n    legs_on_farm = 70\n    legs_on_farm = legs_on_farm * 2\n    heads_on_farm = 20\n    sheep_on_farm = legs_on_farm - legs_on_farm - heads_on_farm\n    result = sheep_on_farm\n    return result"}
{"output": "def solution():\n    \n    normal_price = 5\n    expensive_price = normal_price * 1.2\n    weekly_coffee_cost = weekly_coffee_cost * 7\n    donut_price = 2\n    total_cost = normal_price + expensive_price + donut_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_cost = 20\n    chips_cost = 2 * 2\n    chicken_cost = 8\n    soda_cost = 1\n    total_spent = chips_cost + chicken_cost + soda_cost\n    apple_pie_cost = total_cost - total_spent\n    result = apple_pie_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of newspapers delivered\n    total_newspapers = 600\n\n    # Define the number of newspapers delivered to District A\n    district_a_newspapers = 198\n\n    # Define the number of newspapers delivered to District C\n    district_c_newspapers = 209\n\n    # Calculate the number of newspapers delivered to District B\n    district_b_newspapers = total_newspapers - district_a_newspapers - district_b_newspapers\n\n    # Display the number of newspapers delivered to District B\n    result = district_b_newspapers\n    return result"}
{"output": "def solution():\n    \n    class_meets_per_week = 4\n    class_hours_per_class = 2\n    weeks = 6\n    total_class_hours = class_meets_per_week * class_hours_per_class * weeks\n    recipe_time_per_recipe = 1.5\n    recipes_ learned = total_class_hours // recipe_time_per_recipe\n    result = recipes_learned\n    return result"}
{"output": "def solution():\n    \n    total_teachers = 150\n    history_teachers = total_teachers * 0.6\n    math_teachers = total_teachers - history_teachers\n    sleep_time_per_teacher = 6\n    total_sleep_time = math_teachers * sleep_time_per_teacher\n    result = total_sleep_time\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Aurelia has\n    aurelia_money = 120\n\n    # Calculate Kassidy's money\n    kassidy_money = aurelia_money * 3/4\n\n    # Calculate Rayna's money\n    rayna_money = kassidy_money + 60\n\n    # Calculate the total amount of money they have\n    total_money = aurelia_money + kassidy_money + rayna_money\n\n    # Calculate how much each person would have if they share equally\n    each_person_money = total_money / 2\n\n    # Display how much each person would have\n    result = each_person_money\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each quarter in minutes\n    QUARTER_LENGTH = 12\n\n    # Calculate the total length of the four quarters in minutes\n    total_length = 4 * QUARTER_LENGTH * 4\n\n    # Calculate the length of the last quarter in minutes\n    last_quarter_length = total_length - 5\n\n    # Display the length of the entire game\n    result = last_quarter_length\n    return result"}
{"output": "def solution():\n    \n    total_employees = 50\n    management_employees = total_employees * 0.2\n    oversee_employees = total_employees * 0.3\n    result = oversee_employees\n    return result"}
{"output": "def solution():\n    flour_per_muffin = 5\n    sugar_per_muffin = 3\n    salt_per_muffin = 0.25\n    num_muffins = 16\n\n    # Calculate the total tablespoons of flour needed for 16 muffins\n    total_flour = flour_per_muffin * num_muffins\n\n    # Calculate the total tablespoons of sugar needed for 16 muffins\n    total_sugar = sugar_per_muffin * num_muffins\n\n    # Calculate the total tablespoons of salt needed for 16 muffins\n    total_salt = salt_per_muffin * num_muffins\n\n    # Calculate the total tablespoons of dry ingredients needed\n    total_dry_ingredients = total_flour + total_sugar + total_salt\n    result = total_dry_ingredients\n    return result"}
{"output": "def solution():\n    \n    robert_candy = 3\n    cindy_candy = 5\n    aaron_candy = 4\n    total_candy = robert_candy + cindy_candy + aaron_candy\n    num_people = 2\n    candy_per_person = total_candy / num_people\n    result = candy_per_person\n    return result"}
{"output": "def solution():\n    \n    type_a_candies = 7\n    type_b_candies = 10\n    type_a_price = 0.5\n    type_b_price = 0.75\n    total_cost = (type_a_candies * type_a_price) + (type_b_candies * type_b_price)\n    change = 15 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    total_good_days = 12\n    total_bad_days = 12\n    total_good_days = total_good_days - total_bad_days\n    total_neutral_days = total_good_days - total_neutral_days\n    good_days_left = total_good_days - 3 * good_days_left\n    result = good_days_left\n    return result"}
{"output": "def solution():\n    \n    janey_books = 21\n    sally_books = (janey_books - 3) / 2\n    result = sally_books\n    return result"}
{"output": "def solution():\n    \n    # Define the growth rate of the bamboo in inches per day\n    GROWTH_RATE = 30\n\n    # Define the height of the bamboo in feet\n    height_feet = 20\n\n    # Convert the height to inches\n    height_inches = 600\n\n    # Calculate the number of days it will take to reach the height of 600 inches\n    days = (height_inches - (growth_rate * 7)) / height_feet\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of toys\n    initial_toys = 4\n\n    # Define the number of dogs in the shelter\n    initial_dogs = 4\n\n    # Define the number of dogs in the shelter\n    final_dogs = 8\n\n    # Calculate the number of toys James has left\n    left_toys = initial_dogs + initial_dogs\n\n    # Calculate the number of toys James gets back to\n    back_toys = 2 * left_toys\n\n    # Calculate the number of toys James gets back to\n    back_toys = 2 * left_toys\n\n    # Calculate the total number of toys James needs\n    total_toys = initial_toys + left_toys + back_toys + 3\n\n    # Display the total number of toys\n    result = total_toys\n    return result"}
{"output": "def solution():\n    # Calculate the amount Dylan invested\n    dylan_investment = (2/5) * 1200\n\n    # Calculate the remaining amount after Dylan's investment\n    remaining_amount = 1200 - dylan_investment\n\n    # Calculate the amount Frances invested\n    frances_investment = (2/3) * remaining_amount\n\n    # Calculate the amount Skyler's investment\n    skyler_investment = remaining_amount - frances_investment\n\n    result = skyler_investment\n    return result"}
{"output": "def solution():\n    \n    carol_signatures = 20\n    jennifer_signatures = 44\n    summer_vacation_weeks = 3\n    summer_vacation_signatures = 100\n    total_weeks = 5\n    total_signatures_collected = carol_signatures + jennifer_signatures + summer_vacation_weeks\n    remaining_balance = total_balance - total_weeks\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    lorie_hourly_pay = 10\n    karen_hourly_pay = lorie_hourly_pay * 2\n    lorie_hours_per_day = 3\n    karen_hours_per_day = lorie_hours_per_day / karen_hourly_pay\n    lorie_earnings = lorie_hours_per_day * lorie_hours_per_day\n    karen_earnings = karen_hours_per_day * karen_hours_per_day\n    result = karen_earnings\n    return result"}
{"output": "def solution():\n    num_potatoes = 96\n    num_potatoes_made = 6\n    num_browns_made = 36\n\n    # Calculate the total number of potatoes that can be made\n    total_potatoes = num_potatoes / num_potatoes_made\n\n    # Calculate the total number of hash browns that can be made\n    total_num_browns = total_potatoes * num_browns_made\n    result = total_num_browns\n    return result"}
{"output": "def solution():\n    \n    max_load = 700\n    adult_weight = 80\n    num_adults = 8\n    total_adult_weight = adult_weight * num_adults\n    max_load_exceeded = max_load - total_adult_weight\n    result = max_load_exceeded\n    return result"}
{"output": "def solution():\n    \n    katarina_cookies = 68\n    max_cookies = katarina_cookies - 5\n    monster_cookies = max_cookies + 12\n    summer_cookies = max_cookies + 23\n    total_cookies = katarina_cookies + max_cookies + monster_cookies + summer_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    final_length = 140  # The final design is 140cm long\n    original_length = final_length / 0.5  # Shania's original length is 50% of its original length\n    lace_trim = 20  # Shania adds 20cm to the bottom of the dress with a lace trim\n\n    # Calculate the original length of the dress\n    original_length = original_length + lace_trim\n    result = original_length\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to mow the lawn in \"turtle\" mode\n    turtle_time = 1\n\n    # Define the time it takes to mow the lawn in \"rabbit\" mode\n    rabbit_time = 40\n\n    # Calculate the time it takes to mow the lawn in \"turtle\" mode\n    turtle_time = turtle_time / 2\n\n    # Calculate the time it takes to mow the lawn in \"rabbit\" mode\n    rabbit_time = rabbit_time / 2\n\n    # Calculate the total time it takes to mow the lawn\n    total_time = turtle_time + rabbit_time\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_time = 30\n    library_time = 6 + 13\n    late_time = total_time - library_time\n    result = late_time\n    return result"}
{"output": "def solution():\n    apple_weight = 1\n    apple_price = 4\n\n    banana_weight = 2\n    banana_price = 2\n\n    orange_weight = 2\n    orange_price = 3\n\n    # Calculate the total cost of apples\n    apple_cost = apple_weight * apple_price\n\n    # Calculate the total cost of bananas\n    banana_cost = banana_weight * banana_price\n\n    # Calculate the total cost of oranges\n    orange_cost = orange_weight * orange_price\n\n    # Calculate the total cost of all items\n    total_cost = apple_cost + banana_cost + orange_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    greta_cookies = 30\n    celinda_cookies = greta_cookies * 2\n    total_cookies = greta_cookies + celinda_cookies\n    eaten_cookies = 10\n    remaining_cookies = total_cookies - eaten_cookies\n    result = remaining_cookies\n    return result"}
{"output": "def solution():\n    \n    combined_age = 44\n    triplet_age = combined_age - (2 * triplet_age)\n    twin_age = triplet_age + 7\n    result = twin_age\n    return result"}
{"output": "def solution():\n    \n    math_homework = 20\n    reading_homework = 40\n    history_homework = 20\n    total_homework_time = math_homework + reading_homework + history_homework\n    hours_to_eat_dinner = 3 * 60\n    nap_time = total_homework_time - hours_to_eat_dinner\n    result = nap_time\n    return result"}
{"output": "def solution():\n    num_lollipops = 5\n    lollipop_price = 0.4\n\n    num_candies = 4\n    candy_price = 3.20\n\n    # Calculate the total cost of all lollipops\n    total_lollipop_cost = num_lollipops * lollipop_price\n\n    # Calculate the total cost of all candies\n    total_candy_cost = num_candies * candy_price\n\n    # Calculate the total cost of all items\n    total_cost = total_lollipop_cost + total_candy_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of coins saved by Rong per month\n    rong_coins = 20\n\n    # Define the number of coins saved by Neil per month\n    neil_coins = (2/5) * rong_coins\n\n    # Calculate the total number of coins saved by Rong in 10 years\n    rong_total = rong_coins * 12 * 10\n\n    # Calculate the total number of coins saved by Neil in 10 years\n    neil_total = neil_coins * 12 * 10\n\n    # Calculate the total number of coins saved by both of them\n    total_coins = rong_total + neil_total\n\n    # Display the total number of coins saved\n    result = total_coins\n    return result"}
{"output": "def solution():\n    num_vaccines = 2\n    vaccine_price = 20\n    heartworm_check_percentage = 0.6\n    total_bill = num_vaccines * vaccine_price\n\n    heartworm_check_amount = total_bill * heartworm_check_percentage\n    heartworm_check_amount = total_bill * heartworm_check_amount\n\n    money_left = 125 - heartworm_check_amount\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each fruit\n    BANANA_PRICE = 0.5\n    APPLE_PRICE = BANANA_PRICE * 2\n    ORANGE_PRICE = BANANA_PRICE * 3\n\n    # Define the number of fruits in each crate\n    bananas = 5\n    apples = 12\n    oranges = 7\n\n    # Calculate the total cost of the fruits\n    total_cost = (bananas * BANANA_PRICE) + (apples * APPLE_PRICE) + (oranges * ORANGE_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    red_squares = 14\n    blue_squares = red_squares + 4\n    green_squares = blue_squares + 6\n    white_squares = green_squares - 12\n    total_squares = red_squares + blue_squares + green_squares + white_squares\n    result = total_squares\n    return result"}
{"output": "def solution():\n    \n    total_chairs = 42 + 15\n    high_chairs = 8\n    regular_chairs = 5 * high_chairs\n    remaining_chairs = total_chairs - high_chairs - regular_chairs\n    result = remaining_chairs\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of deer in the field\n    total_deer = 50\n\n    # Calculate the number of bucks\n    bucks = total_deer * 0.5\n\n    # Calculate the number of 8 point bucks\n    8_point_bucks = bucks * 0.2\n\n    # Display the number of 8 point bucks\n    result = 8_point_bucks\n    return result"}
{"output": "def solution():\n    \n    adam_points = 50\n    betty_points = adam_points * 1.3\n    martha_points = betty_points * 3\n    tom_points = tom_points - 30\n    total_points = adam_points + betty_points + martha_points + 400\n    missing_points = total_points - 400\n    result = missing_points\n    return result"}
{"output": "def solution():\n    num_children = 3\n    num_grandchildren_per_child = 3\n    num_babies_per_grandchild = 3\n\n    # Calculate the total number of grandchildren\n    total_grandchildren = num_children * num_grandchildren_per_child\n\n    # Calculate the total number of babies\n    total_babies = total_grandchildren * num_babies_per_grandchild\n\n    # Calculate the number of great grand-babies\n    num_great_grand_babies = total_babies - total_grandchildren\n    result = num_great_grand_babies\n    return result"}
{"output": "def solution():\n    \n    # Define Greta's paycheck\n    paycheck = 2400\n\n    # Calculate the amount Greta puts into her retirement account\n    retirement_amount = paycheck * 0.5\n\n    # Calculate the amount Greta uses to make her monthly car payment\n    car_payment = paycheck * 0.2\n\n    # Calculate the amount Greta has left to spend\n    left_to_spend = paycheck - retirement_amount - car_payment\n\n    # Display the amount Greta has left to spend\n    result = left_to_spend\n    return result"}
{"output": "def solution():\n    total_pencils = 20  # There are 20 pencils in the box\n    missing_pencils = 4  # There are 4 missing pencils\n\n    # Calculate the number of pairs of pencils in the box\n    pairs_of_pencils = total_pencils - missing_pencils\n    result = pairs_of_pencils\n    return result"}
{"output": "def solution():\n    \n    city_fireworks = 15 * 20\n    house_fireworks = city_fireworks * 0.4\n    backyard_fireworks = 3 * 5\n    total_fireworks = city_fireworks + house_fireworks + backyard_fireworks\n    result = total_fireworks\n    return result"}
{"output": "def solution():\n    \n    num_people = 12 + 7\n    seats_per_person = 1 + 2 + 3\n    drinks_per_person = 2\n    snacks_per_person = 3\n    total_drinks = seats_per_person * drinks_per_person * total_drinks\n    total_snacks = seats_per_person * snacks_per_person * total_snacks\n    total_spent = total_drinks + total_snacks\n    result = total_spent\n    return result"}
{"output": "def solution():\n    \n    gissela_truck = 4000\n    gordy_truck = gissela_truck + 800\n    total_gravel = 11600\n    gary_truck = total_gravel - gissela_truck - gordy_truck\n    result = gary_truck\n    return result"}
{"output": "def solution():\n    \n    total_males = 8\n    total_females = 6\n    male_dumplings = 3\n    female_dumplings = 3\n    total_dumplings = (total_males * male_dumplings) + (total_females * female_dumplings)\n    larry_dumplings = (total_males * male_dumplings) + (total_females * female_dumplings)\n    result = larry_dumplings\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of Gerald's money to Julia's money\n    gerald_ratio = 3\n    julia_ratio = 2\n\n    # Calculate the total ratio\n    total_ratio = gerald_ratio + julia_ratio\n\n    # Calculate the amount of money Gerald spent\n    gerald_spent = 10\n\n    # Calculate the amount of money Gerald has left\n    gerald_left = gerald_spent - gerald_spent\n\n    # Display the amount of money Gerald has left\n    result = gerald_left\n    return result"}
{"output": "def solution():\n    cat_speed = 15  # feet per second\n    turtle_speed = cat_speed / 5  # feet per second\n    time = 40  # seconds\n\n    # Calculate the distance Martha's cat can crawl in 40 seconds\n    distance = cat_speed * time\n    result = distance\n    return result"}
{"output": "def solution():\n    goal = 6300  # The goal is to raise $6300\n    raised_after_first_3_hours = 2100  # After the first 3 hours, they have raised $2100\n    remaining_goal = goal - raised_after_first_3_hours  # The remaining goal is to raise $6300\n\n    # Calculate the number of hours needed to fundraise the remaining goal\n    hours_needed = remaining_goal / equal_raised_per_hour\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total water used by the city for industrial purposes\n    industrial_water = 0.8 * 40\n\n    # Calculate the total water used by the city for non-industrial purposes\n    non_industrial_water = 0.8 * industrial_water\n\n    # Calculate the percentage of the total water used by the city for non-industrial purposes\n    percentage_non_industrial_water = (non_industrial_water / total_water) * 100\n    result = percentage_non_industrial_water\n    return result"}
{"output": "def solution():\n    days_per_week = 7\n    price_per_day = 12\n    num_weeks = 2\n\n    # Calculate the total cost of tutoring for one week\n    total_cost_per_week = days_per_week * price_per_day\n\n    # Calculate the total cost of tutoring for two weeks\n    total_cost = total_cost_per_week * num_weeks\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of quarts made in 48 hours\n    quarts_chocolate = 100 * 2  # 100 quarts of chocolate ice cream in 2 hours\n    quarts_vanilla = 50 * 4  # 50 quarts of vanilla ice cream in 4 hours\n    total_quarts = quarts_chocolate + quarts_vanilla\n    result = total_quarts\n    return result"}
{"output": "def solution():\n    num_croissants = 5\n    croissant_price = 3.0\n\n    num_cinnamon_rolls = 4\n    cinnamon_roll_price = 2.5\n\n    num_mini_quiches = 3\n    mini_quich_price = 4.0\n\n    num_blueberry_muffins = 13\n    blueberry_muffin_price = 1.0\n\n    # Calculate the total cost of all croissants\n    total_croissant_cost = num_croissants * croissant_price\n\n    # Calculate the total cost of all cinnamon rolls\n    total_cinnamon_roll_cost = num_cinnamon_rolls * cinnamon_roll_price\n\n    # Calculate the total cost of all mini quiches\n    total_mini_quiches_cost = num_mini_quiches * mini_quich_price\n\n    # Calculate the total cost of all blueberry muffins"}
{"output": "def solution():\n    num_scoops_of_ice_cream = 2\n    cost_per_scoop = 1.5\n    erin_budget = 6.0\n\n    # Calculate the total cost of the ice cream scoops\n    total_cost = num_scoops_of_ice_cream * cost_per_scoop\n\n    # Calculate the number of scoops of ice cream needed to reach Erin's budget\n    num_scoops_needed = (erin_budget - erin_budget) / cost_per_scoop\n    result = num_scoops_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of candy pieces\n    initial_candy = 100\n\n    # Define the number of candy pieces eaten by Ginger and Amy per day\n    ginger_candy_per_day = 4\n    amy_candy_per_day = 3\n\n    # Calculate the number of candy pieces eaten by Amy after two weeks\n    amy_candy_after_two_weeks = initial_candy - (ginger_candy_per_day * 7 * 2)\n\n    # Calculate the difference in candy pieces between Ginger and Amy\n    candy_difference = amy_candy_after_two_weeks - amy_candy_after_two_weeks\n\n    # Display the difference in candy pieces\n    result = candy_difference\n    return result"}
{"output": "def solution():\n    mosaic_tiles_per_sqft = 24\n    total_sqft = 36\n\n    # Calculate the total number of mosaic tiles needed\n    total_tiles = total_sqft * mosaic_tiles_per_sqft\n\n    # Calculate the number of tiles needed for two thirds of the bathroom\n    num_tiles_two_thirds = total_tiles * (2/3)\n\n    result = num_tiles_two_thirds\n    return result"}
{"output": "def solution():\n    \n    cost_per_pound = 20\n    cost_per_pound_of_blueberries = 1.5\n    pounds_of_blueberries = 30\n    total_cost = cost_per_pound_of_blueberries * pounds_of_blueberries\n    savings = total_cost - cost_per_pound_of_blueberries\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    num_computers = 500\n    original_price = 700\n    new_price = original_price * 1.1\n    total_cost = num_computers * new_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    cheese_weight = 2  # ounces\n    egg_size = 6  # ounces\n    cheese_calories_per_ounce = 120  # calories per ounce\n    ham_weight = cheese_weight / egg_size  # ounces\n    cheese_calories = cheese_weight * cheese_calories_per_ounce  # calories per ounce\n    ham_calories = ham_weight * ham_calories_per_ounce  # calories per ounce\n    total_calories = cheese_calories + ham_calories  # total calories for the omelet\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    pencil_cost = 0.5\n    eraser_cost = 0.25\n    num_pencils = 6\n    num_erasers = 8\n    total_cost = (pencil_cost * num_pencils) + (eraser_cost * num_erasers)\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people and the percentage of people who receive interviews\n    total_people = 100\n    interviews_percentage = 0.3\n\n    # Calculate the number of people who receive interviews\n    interviews = total_people * interviews_percentage\n\n    # Calculate the number of people who receive a job offer\n    offerers = total_people * 0.2\n\n    # Calculate the number of people who accept the position\n    position = offerers / 3\n\n    # Display the number of people who accept the position\n    result = position\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sacks and the amount of rice per sack\n    num_sacks = 20\n    rice_per_sack = 25\n\n    # Calculate the total amount of rice given away\n    total_rice = num_sacks * rice_per_sack\n\n    # Calculate the amount of rice given to cousin and brother\n    cousin_brother_rice = total_rice - 3 * rice_per_sack\n\n    # Calculate the total amount of rice given to cousin and brother\n    total_given = cousin_brother_rice + 4 * rice_per_sack\n\n    # return the result\n    result = total_given\n    return result"}
{"output": "def solution():\n    \n    coco_crunch_boxes = 3\n    fruit_loops_boxes = 5\n    this_week_boxes = coco_crunch_boxes + fruit_loops_boxes\n    last_week_boxes = 4\n    difference = this_week_boxes - last_week_boxes\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the tap rates for each hand\n    right_rate = 300\n    left_rate = 250\n    arms_rate = 200\n\n    # Calculate the total tap rate for each hand\n    right_taps = right_rate * 5\n    left_taps = left_rate * 2\n\n    # Calculate the total tap rate for both hands\n    right_taps = right_taps * 2\n    left_taps = left_rate * 2\n\n    # Calculate the combined total taps\n    combined_taps = right_taps + left_taps + arms_taps\n\n    # Display the combined total taps\n    result = combined_taps\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Ron does\n    initial_money = 450\n\n    # Define the amount of money Ron will fine for unauthorized road maintenance\n    unauthorized_money = 120\n\n    # Define the cost of each bucket of asphalt\n    asphalt_cost = 25\n\n    # Calculate the total cost of fixing the pothole\n    total_cost = initial_money + unauthorized_money + asphalt_cost\n\n    # Calculate the amount of money Ron saves by fixing the pothole\n    savings = total_cost - total_cost\n\n    # Display the amount of money Ron saves\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    normal_chairs = 170\n    baby_chairs = 23\n    normal_chairs -= 20\n    baby_chairs -= 13\n    total_chairs -= normal_chairs\n    result = total_chairs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per pizza\n    SLICES_PER_PIZZA = 12\n\n    # Calculate the total number of slices\n    total_slices = 4 * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by Bryce and 2 friends\n    slices_eaten_by_bryce = (2/3) * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by the two remaining friends\n    slices_eaten_by_friends = (2/3) * SLICES_PER_PIZZA\n\n    # Calculate the number of slices left\n    slices_left = total_slices - slices_eaten_by_friends - slices_eaten_by_friends\n\n    # Display the number of slices left\n    result = slices_left\n    return result"}
{"output": "def solution():\n    \n    cat_sausages = 9\n    dog_sausages = (2/3) * cat_sausages\n    total_sausages = cat_sausages + dog_sausages\n    average_sausages = total_sausages / 2\n    result = average_sausages\n    return result"}
{"output": "def solution():\n    \n    topher_length = 8 * 12 + 4\n    bobby_length = 9 * topher_length + 10\n    result = bobby_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students' and teachers' cars\n    num_students = 64\n    num_teachers = 32\n\n    # Calculate the total number of students' and teachers' cars' windows\n    total_students_windows = num_students * 0.25\n    total_teachers_windows = num_teachers * 0.75\n\n    # Calculate the total number of windows smashed\n    total_windows_smashed = total_students_windows + total_teachers_windows\n\n    # return the result\n    result = total_windows_smashed\n    return result"}
{"output": "def solution():\n    \n    blue_spools = 15\n    dark_blue_spools = 45\n    green_spools = 40\n    dark_green_spools = 50\n    total_spools = blue_spools + dark_blue_spools + green_spools\n    percent_blue = (blue_spools / total_spools) * 100\n    result = percent_blue\n    return result"}
{"output": "def solution():\n    \n    total_people = 5000\n    voted_by_midday = total_people * (2/5)\n    remaining_people = total_people - voted_by_midday\n    voted_by_16 = remaining_people * (2/3)\n    not_voted_by_16 = remaining_people - voted_by_16\n    result = not_voted_by_16\n    return result"}
{"output": "def solution():\n    \n    pieces_per_day = 4\n    pieces_per_pack = 15\n    days = 30\n    total_pieces = pieces_per_day * days\n    packs_needed = total_pieces / pieces_per_pack\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of smores needed\n    total_smores = 9 * 2 + 6 * 1\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_smores / 3\n\n    result = total_boxes\n    return result"}
{"output": "def solution():\n    \n    dora_age = 15\n    father_age = 2 * dora_age + 8\n    mother_age = father_age - 4\n    total_age = dora_age + father_age + mother_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    num_siblings = 3\n    found_money = 20\n\n    # Calculate the total amount of money Greg has\n    total_money = found_money + (num_siblings * found_money)\n\n    # Divide the total money equally among the siblings\n    money_per_sibling = total_money / 2\n    result = money_per_sibling\n    return result"}
{"output": "def solution():\n    \n    math_books_weight = 2\n    english_books_weight = 4\n    history_books_weight = english_books_weight * 2\n    total_books_weight = math_books_weight + english_books_weight + history_books_weight\n    result = total_books_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of voters\n    total_voters = 100\n\n    # Calculate the number of votes received by candidate A\n    votes_A = total_voters * 0.2\n\n    # Calculate the number of votes received by candidate B\n    votes_B = votes_A * 1.5\n\n    # Calculate the number of votes received by candidate C\n    votes_C = total_voters - votes_A - votes_B\n\n    # Display the number of votes received by candidate C\n    result = votes_C\n    return result"}
{"output": "def solution():\n    \n    boris_apples = 100\n    beck_apples = boris_apples - 23\n    beck_apples -= 10\n    difference = beck_apples - boris_apples\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_cube_size = 32\n    giant_cube_size = 4\n    medium_cube_size = 2\n    small_cube_size = 1/2\n    num_giant_cubes = 3\n    num_medium_cubes = 7\n    num_small_cubes = 8\n    total_giant_water = giant_cube_size * num_giant_cubes\n    total_medium_water = medium_cube_size * num_medium_cubes\n    total_small_water = small_cube_size * num_small_cubes\n    total_water = total_giant_water + total_medium_water + total_small_water\n    water_left = total_cube_size - total_water\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    clara_books = 20\n    steven_books = clara_books / 2\n    alice_books = steven_books + 6\n    difference = clara_books - alice_books\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a gallon jar\n    GALLON_PRICE = 5\n\n    # Calculate the cost of a half-gallon jar\n    half_gallon_cost = GALLON_PRICE + 2\n\n    # Calculate the total cost of 10-gallon jars\n    total_cost_10_gallons = 10 * GALLON_PRICE\n\n    # Calculate the total cost of 16 half-gallon jars\n    total_cost_16_gallons = 16 * HALF_GALLON_PRICE\n\n    # Calculate the total cost of all the jars\n    total_cost = total_cost_10_gallons + total_cost_16_gallons\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_students = 50\n    bake_likes = 10\n    basketball_likes = 5\n    music_likes = (total_students - bake_likes - basketball_likes) / 2\n    video_likes = music_likes - music_likes\n    result = video_likes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of birds\n    initial_birds = 12\n\n    # Calculate the number of birds scaring away\n    scaring_away = initial_birds * (1/3)\n\n    # Calculate the number of birds after the stone\n    final_birds = initial_birds - scaring_away + 20\n\n    # Display the final number of birds\n    result = final_birds\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the percentage of girls\n    total_students = 80\n    girls_percentage = 40\n\n    # Calculate the number of girls in each class\n    girls_per_class = total_students * (girls_percentage / 100)\n\n    # Calculate the number of boys in each class\n    boys_per_class = total_students - girls_per_class\n\n    # Display the number of boys in each class\n    result = boys_per_class\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cake slices\n    initial_slices = 3\n\n    # Define the number of cake slices Mara had\n    initial_slices += 2\n\n    # Define the number of cake slices Mara ate\n    eaten_slices = 2\n\n    # Define the number of cake slices Stole off\n    stole_slices = 5\n\n    # Calculate the total number of cake slices\n    total_slices = initial_slices - eaten_slices + stole_slices\n\n    # Calculate the number of cake slices remaining\n    remaining_slices = total_slices - initial_slices\n\n    # Display the number of cake slices remaining\n    result = remaining_slices\n    return result"}
{"output": "def solution():\n    num_dogs = 8\n    num_cats = 5\n    num_wings = 3\n    num_horses = 12\n\n    # Calculate the total number of animals that need to be bathed\n    total_bathed_animals = num_dogs + num_cats\n\n    # Calculate the total number of animals that need to be trimmed\n    total_wings_trimmed_animals = num_wings * num_horses\n\n    # Calculate the total number of animals that need to be brushed\n    total_groomed_animals = total_bathed_animals + total_wings_trimmed_animals + total_horses\n\n    # Calculate the number of animals that need to be groomed each day\n    animals_per_day = total_groomed_animals / 7\n    result = animals_per_day\n    return result"}
{"output": "def solution():\n    \n    packs_bought = 3\n    cost_per_pack = 1800\n    total_cost = packs_bought * cost_per_pack\n    total_cards_value = 4000 + 1000\n    average_cards_value = 30 * 50\n    total_cards_value = total_cards_value + average_cards_value\n    profit = total_cards_value - total_packs_value\n    result = profit\n    return result"}
{"output": "def solution():\n    num_adults = 2\n    adult_fee = 26\n\n    num_children = 2\n    child_fee = 12\n\n    # Calculate the total cost of the first amusement park\n    first_cost = (num_adults * adult_fee) + (num_children * child_fee)\n\n    # Calculate the total cost of the second amusement park\n    second_cost = (num_adults * adult_fee) + (num_children * child_fee)\n\n    # Calculate the amount saved by choose the second amusement park\n    savings = second_cost - first_cost\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    tomatoes_per_day = 500\n    cost_per_tomato = 0.5\n    new_vendor_price_per_tomato = 0.4\n    days_per_week = 7\n    total_cost = tomatoes_per_day * cost_per_tomato * days_per_week\n    total_new_vendor_cost = tomatoes_per_day * new_vendor_price_per_tomato * days_per_week\n    savings = total_cost - total_new_vendor_cost\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    sean_marbles = 56\n    cal_marbles = sean_marbles / 2\n    carl_marbles = 4 * sean_marbles\n    total_marbles = sean_marbles + cal_marbles\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of groups\n    total_students = 50\n    num_groups = 6\n\n    # Calculate the number of students per group\n    students_per_group = total_students / num_groups\n\n    # Calculate the number of additional groups needed to form the students\n    additional_groups = students_per_group - students_per_group\n\n    # return the result\n    result = additional_groups\n    return result"}
{"output": "def solution():\n    # Calculate the total number of chairs rented during weekdays\n    weekday_rented = 60 * 5\n\n    # Calculate the total number of chairs rented during weekends\n    weekend_rented = 100 * 2\n\n    # Calculate the total number of chairs rented in two 4-week months\n    total_rented = weekday_rented + weekend_rented\n    result = total_rented\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of bananas\n    initial_bananas = 48\n\n    # Calculate the number of bananas stolen on the first day\n    day1_bananas = initial_bananas / 2\n\n    # Calculate the number of bananas stolen on the second day\n    day2_bananas = day1_bananas + 25\n\n    # Calculate the number of bananas stolen on the third day\n    day3_bananas = 6\n\n    # Calculate the total number of bananas added\n    total_bananas = day1_bananas + day2_bananas + day3_bananas\n\n    # Display the total number of bananas\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roommates and the monthly bill\n    num_roommates = 4\n    monthly_bill = 100\n\n    # Calculate the total monthly bill\n    total_bill = num_roommates * monthly_bill\n\n    # Calculate the cost per roommate\n    cost_per_roommate = total_bill / num_roommates\n\n    # Display the cost per roommate\n    result = cost_per_roommate\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of glasses and plates\n    initial_glasses = 8 * 12\n    initial_plates = 4 * 12\n\n    # Subtract the number of broken glasses and plates from the initial number of glasses and plates\n    final_glasses = initial_glasses - 10\n    final_plates = initial_plates - 6\n\n    # Display the final number of glasses and plates\n    result = final_glasses\n    return result"}
{"output": "def solution():\n    \n    small_sticker_1 = 30\n    small_sticker_2 = 40\n    large_sticker_1 = small_sticker_1 / 3\n    small_sticker_2 = small_sticker_2 / 3\n    lorraine_small_stickers = 30\n    lorraine_large_stickers = 40\n    lorraine_large_stickers = large_sticker_1 * 0.9\n    lorraine_large_stickers = large_sticker_2 * 0.5\n    lorraine_small_stickers = large_sticker_1 * 0.9\n    lorraine_large_stickers = large_sticker_2 * 0.5\n    lorraine_large_stickers = large_sticker_2 * 0.5\n    lorraine_buttons = lorraine_large_stickers + lorraine_large_stickers\n    colleen_buttons = colleen_large_stickers - lorraine"}
{"output": "def solution():\n    \n    # Define the number of matches Joey played on Monday\n    monday_matches = 2\n\n    # Define the number of matches Joey played on Friday\n    friday_matches = 1\n\n    # Define the number of matches Joey played on Saturday\n    saturday_matches = monday_matches * 2\n\n    # Calculate the total number of matches Joey played in one week\n    total_matches = monday_matches + friday_matches + saturday_matches\n\n    # Display the total number of matches\n    result = total_matches\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people on the council\n    total_people = 33\n\n    # Calculate the number of votes against the council\n    against_votes = total_people // 3\n\n    # Calculate the number of votes in favor of the new regulation\n    favor_votes = against_votes * 2\n\n    # Display the number of votes in favor of the new regulation\n    result = favor_votes\n    return result"}
{"output": "def solution():\n    \n    small_students = 11\n    medium_students = small_students * 2\n    large_students = medium_students / 2\n    extra_large_students = large_students + 6\n    total_students = small_students + medium_students + large_students + extra_large_students\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    original_price = 140\n    discount_percent = 5\n    discount_amount = original_price * (discount_percent / 100)\n    discounted_price = original_price - discount_amount\n    result = discounted_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of playlists and the length of each song\n    playlists = 20\n    song_length = 10\n\n    # Calculate the total length of the playlists\n    total_length = playlists * song_length\n\n    # return the result\n    result = total_length\n    return result"}
{"output": "def solution():\n    # Calculate the number of people who think horse #2 will win the big race\n    num_horse_2 = 0.2 * 50\n\n    # Calculate the number of people who did not win the big race\n    num_remaining = 50 - num_horse_2\n\n    # Calculate the number of people who think horse #7 will win the big race\n    num_horse_7 = 0.6 * num_remaining\n\n    # Calculate the number of people who think horse #12 will win the big race\n    num_horse_12 = num_remaining - num_horse_7\n\n    result = num_horse_12\n    return result"}
{"output": "def solution():\n    \n    # Define the fraction of Pomeranians that are girls\n    GIRLS_PER_GIRL = 1/3\n\n    # Calculate the number of pomeranians that are puppies\n    pomeranians = 6 * GIRLS_PER_GIRL\n\n    # Calculate the number of puppies that Jana has\n    jana_puppies = pomeranians * 2\n\n    # Display the number of puppies that Jana has\n    result = jana_puppies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Jayden had\n    jayden_money = 70\n\n    # Calculate the amount of money Ava gave Jayden\n    ava_money = jayden_money / 2\n\n    # Calculate the total amount of money Jayden has\n    total_money = jayden_money + ava_money\n\n    # Calculate the amount of money Jayden still needs to buy the camera\n    camera_cost = 200\n\n    # Calculate the amount of money Jayden still needs to buy the camera\n    jayden_needed = camera_cost - jayden_money\n\n    # Display the amount of money Jayden still needs to buy the camera\n    result = jayden_needed\n    return result"}
{"output": "def solution():\n    \n    total_cases = 250\n    first_house_cases = total_cases / 2\n    third_house_cases = first_house_cases * 2\n    result = third_house_cases\n    return result"}
{"output": "def solution():\n    \n    leila_cucumber_cost = 3 * 2\n    jack_tomato_cost = 5 * 1\n    chase_lettuce_cost = 1 * 3\n    total_cost = leila_cucumber_cost + jack_tomato_cost + chase_lettuce_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    bananas = 200\n    pears = bananas * 1.45\n    total_fruits = bananas + pears\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Marissa had\n    initial_money = 80\n\n    # Calculate the amount of money Marissa had left after buying the ball\n    remaining_money = initial_money - initial_money\n\n    # Calculate the number of candy bars Marissa bought for Jimmy\n    candy_bars_bought = remaining_money / 5\n\n    # Display the number of candy bars Marissa bought for Jimmy\n    result = candy_bars_bought\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per kilogram of oranges\n    ORANGE_COST = 3\n\n    # Define the amount of juice needed per liter\n    juice_per_liter = 1\n\n    # Calculate the total amount of oranges needed\n    total_oranges = juice_per_liter * 5\n\n    # Calculate the total cost of the oranges\n    total_cost = total_oranges * ORANGE_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of books Ahmed has read in one hour\n    ahmed_books = 300 / 2\n\n    # Calculate the total number of books Ezra has read\n    total_books_read = ahmed_books + 300 + 150\n\n    result = total_books_read\n    return result"}
{"output": "def solution():\n    # Calculate Tanya's earnings for Monday and Wednesday\n    monday_hours = 4 * 5  # Tanya teaches 4 classes for 5 hours on Monday\n    wednesday_hours = 2 * 2  # Tanya teaches 2 classes for 2 hours on Wednesday\n    monday_earnings = monday_hours * 15  # Tanya earns $15 for every hour on Monday\n    wednesday_earnings = wednesday_hours * 5  # Tanya earns $5 for every hour on Wednesday\n    total_earnings = monday_earnings + wednesday_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of vanilla and fruity scents\n    vanilla_scents = 4\n    fruity_scents = 8\n\n    # Define the number of vanilla and fruity scents sold by the end of the day\n    vanilla_sold = 5\n    fruity_sold = 2\n\n    # Calculate the number of vanilla and fruity scents sold\n    vanilla_sold = vanilla_scents - vanilla_sold\n    fruity_sold = fruity_scents - fruity_sold\n\n    # Calculate the difference between the number of vanilla and fruity scents\n    difference = vanilla_sold - fruity_sold\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    num_eggplants = 20\n    eggplant_price = 3\n    num_corn_ears = 25\n    total_price = 135\n\n    # Calculate the total revenue from selling all eggplants\n    total_eggplant_revenue = num_eggplants * eggplant_price\n\n    # Calculate the total revenue from selling all corn ears\n    total_corn_revenue = total_price - total_eggplant_revenue\n\n    # Calculate the price per ear of corn\n    corn_price = total_corn_revenue / num_corn_ears\n    result = corn_price\n    return result"}
{"output": "def solution():\n    \n    saturday_hours = 7\n    sunday_hours = 5\n    total_hours = saturday_hours + sunday_hours\n    reading_hours = 3\n    remaining_hours = total_hours - reading_hours\n    video_games_hours = remaining_hours / 3\n    soccer_hours = (remaining_hours - video_games_hours) / total_hours * 100\n    result = soccer_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pencils\n    initial_pencils = 50\n\n    # Calculate the number of pencils given to Brandon\n    brandon_pencils = initial_pencils * (1/2)\n\n    # Calculate the number of pencils remaining after Brandon's gift\n    remaining_pencils = initial_pencils - brandon_pencils\n\n    # Calculate the number of pencils given to Charlie\n    charlie_pencils = remaining_pencils * (3/5)\n\n    # Calculate the number of pencils Anthony kept\n    kept_pencils = remaining_pencils - charlie_pencils\n\n    # Display the number of pencils Anthony kept\n    result = kept_pencils\n    return result"}
{"output": "def solution():\n    museum_distance = 150\n    driving_distance = 75\n    back_distance = museum_distance * back_distance\n    time_spent = 6\n\n    # Calculate the total time Jack spent at the museum\n    total_time = time_spent + time_spent\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    cars = 57\n    motorcycles = 73\n    wheels_per_car = 4\n    wheels_per_motorcycle = 2\n    total_wheels = (cars * wheels_per_car) + (motorcycles * wheels_per_motorcycle)\n    remaining_wheels = 650 - total_wheels\n    result = remaining_wheels\n    return result"}
{"output": "def solution():\n    \n    original_price = 1000\n    discount = 0.2\n    discounted_price = original_price - (original_price * discount)\n    result = discounted_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies and the cost of a normal movie\n    num_movies = 600\n    normal_movie_cost = 10\n\n    # Calculate the number of movies in the series\n    num_series_movies = num_movies // 3\n\n    # Calculate the cost of the normal movie\n    normal_movie_cost = num_movies * normal_movie_cost\n\n    # Calculate the number of remaining movies\n    num_remaining_movies = num_movies - num_movies - num_series_movies\n\n    # Calculate the cost of the older movies\n    older_movie_cost = num_remaining_movies * 0.4\n\n    # Calculate the total cost of replacing the movies\n    total_cost = (num_normal_movies * normal_movie_cost) + (num_older_movies * older_movie_cost)\n\n    # Display the total cost of replacing the movies\n    result = total_cost\n    return result"}
{"output": "def solution():\n    peaches_price = 2.0\n    plums_price = 1.0\n    apricots_price = 3.0\n    peaches_weight = 6\n    plums_weight = 8\n    apricots_weight = 6\n\n    # Calculate the total cost of peaches\n    peaches_cost = peaches_price * peaches_weight\n\n    # Calculate the total cost of plums\n    plums_cost = plums_price * plums_weight\n\n    # Calculate the total cost of apricots\n    apricots_cost = apricots_price * apricots_weight\n\n    # Calculate the total cost of all fruit\n    total_cost = peaches_cost + plums_cost + apricots_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    driving_time = 6\n    driving_speed = 50\n    hiking_speed = (driving_time / 2) - 5\n    total_distance = driving_time * driving_speed\n    vacation_spot_distance = total_distance - hiking_speed\n    result = vacation_spot_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the scores\n    enemy_score = 10\n    berry_score = 5\n    second_score = 30\n\n    # Calculate the number of enemies and berries collected by Ava\n    ava_enemies = emma_enemies + 8\n    emma_berries = emma_berries + 3\n\n    # Calculate the number of berries collected by Ava\n    ava_berries = emma_berries + 3\n\n    # Calculate the number of points collected by Ava\n    ava_points = ava_enemies * enemy_score\n\n    # Calculate the number of berries collected by Emma\n    emma_berries = emma_berries * berry_score\n\n    # Calculate the number of points collected by Ava\n    ava_second_points = ava_berries * berry_score\n\n    # Calculate the difference between Ava and Emma's scores\n    score_difference = abs(ava_points - emma_second_points"}
{"output": "def solution():\n    \n    total_pizzas = 4\n    total_cost = 64\n    cost_of_two_pizzas = 30\n    cost_of_other_pizzas = (total_cost - cost_of_two_pizzas) / 2\n    result = cost_of_other_pizzas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Chase and Rider ride their bikes each day\n    chase_rides = 5\n    rider_rides = 2 * chase_rides\n\n    # Calculate the total number of times they ride their bikes in a week\n    total_rides = (chase_rides + rider_rides) * 7\n\n    # Display the total number of times they ride their bikes in a week\n    result = total_rides\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of orange and white fish\n    orange_fish = 7\n    white_fish = 4\n\n    # Define the number of orange and white fish in Bob's pond\n    orange_fish = 3\n    white_fish = 17 - orange_fish\n\n    # Calculate the number of white fish Bob bought\n    white_fish = white_fish * 2\n\n    # Display the number of white fish Bob bought\n    result = white_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the fuel efficiency in miles per gallon\n    efficiency = 10\n\n    # Define the regular gas price per gallon\n    regular_price = 3\n\n    # Define the distance between the home and office\n    distance_1 = 5\n    distance_2 = 5\n\n    # Calculate the total distance to be consumed\n    total_distance = distance_1 * 2 + distance_2 * distance_3\n\n    # Calculate the total amount of money consumed per week\n    total_money = total_distance * efficiency\n\n    # return the result\n    result = total_money\n    return result"}
{"output": "def solution():\n    num_twenties = 10\n    num_quarters = 140\n    percent_spent = 3/5\n\n    # Calculate the total amount of money Carrie paid for the lunch\n    total_money = (num_twenties * 0.75) + (num_quarters * 0.75) + (num_twenties * 0.25)\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    tomatoes_per_plant = 22\n    eggplants_per_plant = 4\n    planted_tomatoes = 5\n    planted_eggplants = 8\n    total_tomatoes = tomatoes_per_plant * planted_tomatoes\n    total_eggplants = eggplants_per_plant * planted_eggplants\n    total_fruits = total_tomatoes + total_eggplants\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    total_tvs = 40\n    smart_tvs = total_tvs / 4\n    analog_tvs = total_tvs / 8\n    oled_tvs = total_tvs - smart_tvs - analog_tvs\n    result = oled_tvs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money and the cost of the trip\n    initial_money = 50\n    trip_cost = 300\n\n    # Calculate the amount of money John has to cover\n    cover_money = trip_cost / 2\n\n    # Calculate the amount of money John is missing\n    missing_money = initial_money - cover_money\n\n    # Display the amount of money John is missing\n    result = missing_money\n    return result"}
{"output": "def solution():\n    \n    temp_temp = 32\n    burn_per_log = 5\n    temp_difference = 45 - 33\n    logs_needed = (temp_diff - temp_temp) / burn_per_log\n    result = logs_needed\n    return result"}
{"output": "def solution():\n    \n    total_people = 90\n    formed_groups = 9\n    seashells_per_group = 2\n    total_groups = formed_groups * 3/5\n    total_seashells = (total_groups * seashells_per_group) + (total_groups * seashells_per_group)\n    result = total_seashells\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 172\n\n    # Calculate the number of people on the first stop\n    first_stop_people = initial_people - 47\n\n    # Calculate the number of people on the second stop\n    second_stop_people = initial_people + 13\n\n    # Calculate the total number of people on the train\n    total_people = initial_people + second_stop_people\n\n    # Display the total number of people on the train\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    bottle_caps_per_day = 10\n    bottle_cap_value = 0.25\n    days_per_month = 30\n    total_bottle_caps = bottle_caps_per_day * days_per_month\n    total_money = total_bottle_caps * bottle_cap_value\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    regular_hourly_rate = 20\n    regular_hours = 8\n    additional_hours = 11 - regular_hours\n    special_hourly_rate = regular_hourly_rate * 0.7\n    regular_pay = regular_hours * regular_pay\n    additional_pay = additional_hours * special_hourly_rate\n    total_pay = regular_pay + additional_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    female_lions = 12\n    male_lions = female_lions / 2\n    cubs = 14\n    total_lions = female_lions + male_lions + cubs\n    result = total_lions\n    return result"}
{"output": "def solution():\n    \n    original_price = 40\n    discount = 0.25\n    discounted_price = original_price * (1 - discount)\n    money_left = discounted_price - 50\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial employee number and the salary per month\n    initial_employee = 200\n    salary_per_month = 4000\n\n    # Calculate the total salary paid to the employees after three months\n    total_salary = initial_employee * salary_per_month\n\n    # Calculate the total amount paid to the employees after three months\n    total_paid = total_salary * 3\n\n    # return the result\n    result = total_paid\n    return result"}
{"output": "def solution():\n    \n    deck_halls_time = 150\n    jingle_bells_time = 240\n    deck_halls_total_time = deck_halls_time * 2\n    jingle_bells_total_time = jingle_bells_time * 1\n    total_time = deck_halls_total_time + jingle_bells_total_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    # Calculate Billy's earnings\n    billy_earnings = 10 * 20  # Billy earns $10 per hour for 20 hours\n\n    # Calculate Billy's earnings after 2 months\n    billy_earnings += 10 * 2  # Billy earns $10 per hour for 20 hours\n\n    # Calculate Billy's earnings after 2 months\n    billy_earnings += 1.5 * 20  # Sally earns $1.50 per hour for 20 hours\n\n    # Calculate Sally's earnings\n    sally_earnings = 1.5 * 20  # Sally's starting salary is $0.50 more per hour than Billy's starting salary\n\n    # Calculate the difference in earnings between Billy and Sally\n    earnings_difference = billy_earnings - sally_earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a loaf of bread and a bagel of bread\n    LOAF_COST = 2\n    BAGEL_COST = 1\n\n    # Define the number of loaves of bread and bagels of bread\n    num_loaves = 3\n    num_bagels = 2\n\n    # Calculate the total cost of 3 loaves of bread\n    total_cost_3_loaves = num_loaves * LOAF_COST\n\n    # Calculate the total cost of 2 bagels of bread\n    total_cost_2_bagels = num_bagels * BAGEL_COST\n\n    # Calculate the difference in cost between 3 loaves of bread and 2 bagels\n    cost_difference = total_cost_3_loaves - total_cost_2_bagels\n\n    # Display the difference in cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    pierson_points = 278\n    nikita_points = (pierson_points / 2) + 11\n    total_points = pierson_points + nikita_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    num_classes = 40\n    num_students_per_class = 25\n    num_teachers_per_class = 3\n    num_trees_per_child = 1\n    num_trees_per_teacher = 2\n    total_students = num_classes * num_students_per_class\n    total_teachers = num_classes * num_teachers_per_class\n    total_trees = total_students * num_trees_per_child + total_teachers * num_trees_per_teacher\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stuffed animals\n    puppies = 3\n    koalas = 5\n    zebras = 2\n    frogs = 4\n\n    # Calculate the total number of stuffed animals\n    total_animals = puppies + koalas + zebras + frogs\n\n    # Calculate the number of stuffed goats needed\n    goats_needed = total_animals * 0.3\n\n    # Display the number of stuffed goats needed\n    result = goats_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hours playing\n    total_hours = 30\n\n    # Define the number of hours Kris plays for each day\n    daily_hours = 0.5\n    weekly_hours = 2\n\n    # Calculate the total number of hours Kris plays in 2 weeks\n    total_hours_2_weeks = daily_hours * 2 * 2 * 2\n\n    # Calculate the total number of hours Kris still needs to play\n    remaining_hours = total_hours - total_hours_2_weeks\n\n    # return the result\n    result = remaining_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the speeds of the first car and the second car\n    car1_speed = 60\n    car2_speed = 70\n\n    # Calculate the distance traveled by the first car\n    car1_distance = car1_speed * 2\n\n    # Calculate the distance traveled by the second car\n    car2_distance = car2_speed * 2\n\n    # Calculate the total distance traveled\n    total_distance = car1_distance + car2_distance\n\n    # Return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    diamond_cost = 600\n    gold_cost = 300\n    total_cost = diamond_cost + gold_cost\n    premium_percent = 30\n    premium_amount = total_cost * (premium_percent / 100)\n    total_cost_with_premium = total_cost + premium_amount\n    result = total_cost_with_premium\n    return result"}
{"output": "def solution():\n    \n    third_graders = 340\n    fourth_graders = 40\n    fourth_graders = 100\n    fifth_graders = 400\n    fourth_pass_rate = fourth_graders * 2\n    third_pass_rate = third_graders * 340\n    fourth_pass_rate = fourth_graders * 4\n    fifth_pass_rate = fourth_pass_rate * fifth_graders\n    total_pass_rate = third_pass_rate + fourth_pass_rate + fifth_pass_rate\n    result = total_pass_rate\n    return result"}
{"output": "def solution():\n    \n    glass_chips_per_bag = 72\n    glass_chips_per_square_inch = 12\n    total_glass_chips = glass_chips_per_bag * 2\n    total_glass_chips_inches = total_glass_chips * glass_chips_per_square_inch\n    mosaic_height_inches = 3\n    result = mosaic_height_inches\n    return result"}
{"output": "def solution():\n    \n    quarts_left = 10\n    quarts_per_student_1 = 1.5\n    quarts_per_student_2 = 2\n    total_quarts_drunk = 4 * quarts_per_student_1 + 16 * quarts_per_student_2\n    gallons_left = quarts_left - total_quarts_drunk\n    result = gallons_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of butterscotch candies\n    initial_candies = 100\n\n    # Define the number of butterscotch candies sold\n    candies_sold = 150 + 100\n\n    # Calculate the remaining number of butterscotch candies to sell\n    remaining_candies = initial_candies - candies_sold\n\n    # Display the remaining number of butterscotch candies to sell\n    result = remaining_candies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of students on campus\n    initial_students = 10\n\n    # Calculate the number of students on campus after one month\n    after_one_month = initial_students * 2\n\n    # Calculate the number of students on campus after May\n    after_may = after_one_month - (after_one_month * 12)\n\n    # Calculate the additional students who would have joined by the end of May\n    additional_students = after_may - initial_students\n\n    # Display the additional students\n    result = additional_students\n    return result"}
{"output": "def solution():\n    # Calculate the number of branches Felix climbed per day\n    branches_per_day = (105 - 0.25) / 7  # Felix made $105 during the week and charges $0.25 for each branch\n    result = branches_per_day\n    return result"}
{"output": "def solution():\n    \n    initial_flowers = 3\n    initial_flowers_5 = 5\n    initial_flowers_6 = 4\n    initial_flowers_4 = 6\n    initial_flowers_7 = 7\n    total_flowers = initial_flowers + initial_flowers_6 + initial_flowers_4 + initial_flowers_7\n    flowers_dropped = 6\n    flowers_left = total_flowers - flowers_dropped\n    result = flowers_left\n    return result"}
{"output": "def solution():\n    \n    total_marshmallows = 35\n    john_marshmallows = 9\n    desean_marshmallows = 9\n    dropped_marshmallows = 3\n    remaining_marshmallows = total_marshmallows - (john_marshmallows + desean_marshmallows - dropped_marshmallows)\n    mores_per_kid = remaining_marshmallows // remaining_marshmallows\n    result = mores_per_kid\n    return result"}
{"output": "def solution():\n    jack_play_time = 0.25 * 20  # Jack can play 1 quarter for 20 minutes\n    jack_friends_play_time = jack_play_time * 2  # Two of his friends can play half as long as Jack\n    jack_friends_play_time = jack_friends_play_time * 1.5  # One of his friends plays for 1.5 times as long as Jack\n    total_play_time = jack_friends_play_time + jack_friends_play_time + jack_friends_play_time  # Total time in minutes\n    total_play_time_4_hours = 4 * 60  # 4 hours in minutes\n\n    # Calculate the total amount of money used\n    total_money_used = total_play_time * total_play_time_4_hours\n    result = total_money_used\n    return result"}
{"output": "def solution():\n    jar_size = 10  # Tanya makes enough to fill a 10-ounce jar each time\n    citrus_zest = 2 * jar_size  # Tanya uses the same amount of citrus zest as fragrance\n    sugar = 2 * jar_size  # Tanya uses twice as much salt as zest\n    oil = 2 * jar_size  # Tanya uses twice as much oil as salt\n\n    # Calculate the total amount of oil Tanya uses\n    total_oil = jar_size + citrus_zest + sugar + oil\n    result = total_oil\n    return result"}
{"output": "def solution():\n    num_goats = 3\n    goat_price = 500\n\n    num_cows = 2\n    cow_price = 1500\n\n    # Calculate the total cost of all goats\n    total_goat_cost = num_goats * goat_price\n\n    # Calculate the total cost of all cows\n    total_cow_cost = num_cows * cow_price\n\n    # Calculate the total cost of all items\n    total_cost = total_goat_cost + total_cow_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_cupcakes = 63\n    chocolate_cupcakes = 8\n    toffee_cupcakes = 40\n    cupcakes_already_buyed = chocolate_cupcakes + toffee_cupcakes\n    cupcakes_to_buyed = total_cupcakes - cupcakes_already_buyed\n    result = cupcakes_to_buyed\n    return result"}
{"output": "def solution():\n    \n    robert_cars = 20\n    joe_cars = robert_cars * 2\n    sold_cars = robert_cars * 0.2\n    given_cars = sold_cars * 2\n    remaining_cars = joe_cars - sold_cars - given_cars\n    result = remaining_cars\n    return result"}
{"output": "def solution():\n    num_students = 20\n    total_raised = 175000\n    organizations_raised = 50000\n\n    # Calculate the total amount raised from non-organizations\n    non_organizations_raised = total_raised - organizations_raised\n\n    # Calculate the amount raised per student\n    amount_per_student = non_organizations_raised / num_students\n    result = amount_per_student\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Sandy walked on the first day\n    day1_hours = 8\n\n    # Define the number of hours Sandy walked on the second day\n    day2_hours = day1_hours / 2\n\n    # Calculate the total number of hours Sandy walked in two days\n    total_hours = day1_hours + day2_hours + day3_hours\n\n    # Convert the total hours to minutes\n    total_minutes = total_hours * 60\n\n    # return the result\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    initial_cars = 50\n    first_break_cars = 20\n    lunch_break_cars = initial_cars / 2\n    total_cars = initial_cars + first_break_cars + lunch_break_cars\n    result = total_cars\n    return result"}
{"output": "def solution():\n    \n    cycles_per_day = 30\n    tasks_per_cycle = 5\n    tasks_per_week = tasks_per_cycle * 7\n    earnings_per_task = 1.20\n    total_earnings = cycles_per_day * tasks_per_week * earnings_per_task\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    sasha_first_game = 14\n    julie_first_game = sasha_first_game - 4\n    sasha_second_game = julie_first_game - 6\n    total_points = sasha_first_game + julie_first_game + sasha_second_game\n    result = total_points\n    return result"}
{"output": "def solution():\n    num_cat_food_packages = 8\n    cat_food_tins_per_package = 11\n\n    num_dog_food_packages = 6\n    dog_food_tins_per_package = 6\n\n    # Calculate the total number of tins of cat food\n    total_cat_food_tins = num_cat_food_packages * cat_food_tins_per_package\n\n    # Calculate the total number of tins of dog food\n    total_dog_food_tins = num_dog_food_packages * dog_food_tins_per_package\n\n    # Calculate the difference between the number of tins of cat food and dog food\n    difference = total_cat_food_tins - total_dog_food_tins\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cards\n    total_cards = 341\n\n    # Calculate the number of cards Smendrick has\n    smendrick_cards = 3 * total_cards\n\n    # Calculate the number of cards Becca has\n    becca_cards = smendrick_cards + 12\n\n    # Display the number of cards Becca has\n    result = becca_cards\n    return result"}
{"output": "def solution():\n    \n    green_eggs = 5\n    blue_eggs = 2 * green_eggs\n    pink_eggs = blue_eggs - 1\n    yellow_eggs = pink_eggs / 3\n    total_eggs = green_eggs + blue_eggs + pink_eggs + yellow_eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    book_weight = 4  # The book weighs 4 pounds\n    book_cost = 32  # The book costs $32\n    miles_to_return = 20  # Milly needs to be returned to the distribution center 20 miles away\n    shipping_price_per_pound = 0.35  # The shipping company charges $0.35 per pound\n    miles_to_refund = miles_to_return * 0.08  # The book costs $0.08 per mile\n    shipping_price_per_pound = 0.35  # The shipping company charges $0.35 per pound\n    refund_percentage = 0.75  # Amazon will refund 75% of the book's purchase price\n\n    # Calculate the total cost of the book\n    total_cost = book_weight * book_cost + shipping_price_per_pound * miles_to_refund\n\n    # Calculate the amount of money Milly will lose\n    money_lost = total_cost - total_cost\n    result = money_lost\n    return result"}
{"output": "def solution():\n    \n    initial_money = 40\n    father_money = 100\n    jeans_cost = 2 * 30\n    bag_cost = 20\n    total_cost = jeans_cost + bag_cost\n    remaining_money = initial_money - father_money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of bars of chocolate produced in a month\n    TOTAL_BARS = 50000\n\n    # Define the number of bars of chocolate produced in the first week\n    week1_bars = 8000\n\n    # Define the number of bars of chocolate produced in the second week\n    week2_bars = week1_bars / 2\n\n    # Define the number of bars of chocolate produced in the third week\n    week3_bars = week1_bars * 3\n\n    # Calculate the total number of bars of chocolate produced\n    total_bars = week1_bars + week2_bars + week3_bars\n\n    # Calculate the bars of chocolate produced in the fourth week\n    week4_bars = total_bars - total_bars\n\n    # Display the bars of chocolate produced in the fourth week\n    result = week4_bars\n    return result"}
{"output": "def solution():\n    \n    videos_per_week = 18\n    hours_per_week = 2\n    minutes_per_week_writing_amateur = hours_per_week * 60\n    minutes_per_week_makeup = 15 * 6\n    total_minutes_per_week = videos_per_week * minutes_per_week_writing_amateur + minutes_per_week_makeup\n    total_minutes_per_month = total_minutes_per_week * 4\n    result = total_minutes_per_month\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of Angela's installation\n    mirrors_cost = 4 * 129\n    shelves_cost = 2 * 2 * 15\n    pictures_cost = 10 * 15\n    total_cost = mirrors_cost + shelves_cost + pictures_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Eva's savings\n    eva_savings = 20\n\n    # Calculate Anthony's savings\n    anthony_savings = eva_savings + 10\n\n    # Calculate Roy's savings\n    roy_savings = anthony_savings * 1.4\n\n    # Display Roy's savings\n    result = roy_savings\n    return result"}
{"output": "def solution():\n    \n    # Define Pompei's mountain height\n    POMPEI_HEIGHT = 1\n\n    # Calculate Saskay's mountain height\n    SASKAY_HEIGHT = POMPEI_HEIGHT * 12\n\n    # Calculate Kagiyami's mountain height\n    Kagiyami_HEIGHT = SASKAY_HEIGHT * 4\n\n    # Calculate Naruto's mountain height\n    NARuto_HEIGHT = Kagiyami_HEIGHT * 10\n\n    # Display Naruto's mountain height\n    result = Naruto_HEIGHT\n    return result"}
{"output": "def solution():\n    \n    speed = 8\n    time_1 = 4\n    time_2 = 6\n    distance_1 = speed * time_1\n    distance_2 = speed * time_2\n    total_distance = distance_1 + distance_2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes for 3 kangaroos to travel across a highway\n    time_kangaroos = 3 * 18  # 3 kangaroos traveling at the same speed a total of 18 hours\n\n    # Calculate the time it takes for 4 turtles to travel across a highway\n    time_turtles = 4 * (18 / 2)  # 4 turtles traveling at half the speed of a kangaroo to do\n\n    # Calculate the total time it will take for all four turtles to travel across a highway\n    total_time = time_kangaroos + time_turtles\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    kora_dishes = 20\n    rory_dishes = kora_dishes + 20\n    jada_dishes = 2 * rory_dishes\n    total_dishes = kora_dishes + rory_dishes + jada_dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    old_laptop_cost = 600\n    new_laptop_cost = old_laptop_cost - 200\n    savings = old_laptop_cost - 200 + 150 + 80\n    extra_cost = 50\n    total_savings = savings + extra_cost\n    result = total_savings\n    return result"}
{"output": "def solution():\n    \n    large_apples = 3\n    small_apples = 5\n    slices_per_large_apple = 5\n    slices_per_small_apple = 3\n    total_slices = (large_apples * slices_per_large_apple) + (small_apples * slices_per_small_apple)\n    slices_left = total_slices - 15\n    result = slices_left\n    return result"}
{"output": "def solution():\n    \n    # Define the daily milk production and the number of cows\n    daily_milk_production = 5\n    num_cows = 3\n\n    # Define the target milk production\n    target_milk_production = 25\n\n    # Calculate the total milk production needed per day\n    total_milk_production_needed = target_milk_production - (daily_milk_production * num_cows)\n\n    # Calculate the number of additional cows needed to reach the target milk production\n    additional_cows_needed = total_milk_production_needed / daily_milk_production\n\n    # Return the result\n    result = additional_cows_needed\n    return result"}
{"output": "def solution():\n    \n    original_length = 12000000\n    used_length = original_length * (1/6) + (2/3) + (1/2)\n    not_used_length = original_length - used_length\n    result = not_used_length\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the car and phone\n    CAR_COST = 10000\n    PHONE_COST = 800\n\n    # Define the initial amount of money Gabriel has\n    initial_money = 5000\n\n    # Define the amount of money Gabriel's brother gave him\n    brother_money = 200\n\n    # Calculate the total cost of the car and phone\n    total_cost = CAR_COST + PHONE_COST\n\n    # Calculate the amount of money Gabriel still needs\n    remaining_money = total_cost - brother_money\n\n    # Display the amount of money Gabriel still needs\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    hat_cost = 70  # Thea bought a hat from the craftsman worth $70\n    total_paid = 4 * 20  # Thea gave the craftsman four $20 bills\n\n    # Calculate the change Thea received\n    change = hat_cost - total_paid\n    result = change\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the squirt guns\n    squirt_cost = 6 * 2\n\n    # Calculate the total cost of the water balloons\n    water_cost = 3 * 3\n\n    # Calculate the total cost of all the items\n    total_cost = squirt_cost + water_cost\n\n    # Calculate the amount of money left\n    money_left = 20 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    jack_dishes = 60\n    peter_dishes = jack_dishes / 2\n    total_socks = jack_dishes * 2\n    total_dishes += peter_dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    total_students = 20\n    good_at_math_only = 5\n    good_at_english_only = 8\n    good_at_both = total_students - good_at_math_only - good_at_english_only\n    result = good_at_both\n    return result"}
{"output": "def solution():\n    \n    total_show_time = 2 * 60  # convert 2 hours to minutes\n    stage_time = 6\n    exit_time = 2\n    intermission_time = 10\n    group_time = (total_show_time - stage_time - exit_time) // intermission_time\n    result = group_time\n    return result"}
{"output": "def solution():\n    original_amount = 300  # Brenda invested $300 into the scheme\n    interest_rate = 3/4  # The rate of interest is three-quarters of the original amount per year\n    years = 3  # Brenda wants to know how much she will have after 3 years\n\n    # Calculate the amount Brenda will have after 3 years\n    total_amount = original_amount * (1 + interest_rate) * years\n    result = total_amount\n    return result"}
{"output": "def solution():\n    num_white_shirts = 40\n    num_floral_shirts = 50\n\n    # Calculate the number of white shirts with collars\n    num_white_collars = num_white_shirts / 2\n\n    # Calculate the number of floral shirts with buttons\n    num_buttons = 20\n\n    # Calculate the number of floral shirts with no buttons\n    num_no_buttons = num_floral_shirts - num_white_collars - num_buttons\n\n    # Calculate the difference between the number of floral shirts with no buttons and the number of white shirts with no collars\n    difference = num_no_buttons - num_no_buttons\n    result = difference\n    return result"}
{"output": "def solution():\n    total_eggs = 900  # The farmer has 900 eggs\n    eggs_per_tray = 30  # Each tray holds 30 eggs\n    price_per_tray = 2.5  # The farmer sells the farmer for $2.5 per tray\n\n    # Calculate the total number of trays\n    total_trays = total_eggs / eggs_per_tray\n\n    # Calculate the total earnings from selling the trays\n    total_earnings = total_trays * price_per_tray\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of goats in Farm X and Farm Y\n    goats_X = 55\n    goats_Y = 45\n\n    # Define the number of goats sold from Farm X and Farm Y\n    goats_X_sold = 10\n    goats_Y_sold = goats_X_sold * 2\n\n    # Calculate the total number of goats\n    total_goats = goats_X + goats_Y_sold + goats_Y_sold\n\n    # Calculate the number of goats left\n    goats_left = total_goats - total_goats\n\n    # Display the number of goats left\n    result = goats_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pairs of shoes James buys per month and the annual cost\n    SHOES_PER_MONTH = 2\n    MONTHLY_COST = 2840\n\n    # Calculate the total cost of shoes James buys in a year\n    total_cost = 2 * SHOES_PER_MONTH * 12\n\n    # Calculate the average cost per pair of shoes\n    avg_cost = total_cost / total_cost\n\n    # Display the average cost per pair of shoes\n    result = avg_cost\n    return result"}
{"output": "def solution():\n    \n    green_food_cost = 25\n    red_food_cost = 18\n    baskets_of_green_food = 3\n    discount = 2\n    total_cost = (green_food_cost * baskets_of_green_food) + (red_food_cost * baskets_of_red_food)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_rooms = 90\n    time_per_room = 20  # minutes\n    num_half_rooms = num_rooms / 2\n\n    # Calculate the total time it would take to clean one-half of the rooms\n    total_time = num_half_rooms * time_per_room\n\n    # Convert the total time to hours\n    total_time_hours = total_time / 60\n    result = total_time_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of homes built in the first year\n    homes_first_year = 12\n\n    # Define the number of homes built in the next year\n    homes_next_year = homes_first_year * 3\n\n    # Define the number of homes built in the third year\n    homes_third_year = homes_next_year * 2\n\n    # Calculate the total number of homes built over the next three years\n    total_homes = homes_first_year + homes_next_year + homes_third_year\n\n    # Display the total number of homes built\n    result = total_homes\n    return result"}
{"output": "def solution():\n    \n    brother_age = 87 / 3\n    sister_age = brother_age + 2\n    mom_age = 3 * brother_age - 1\n    my_age = sister_age + mom_age\n    result = my_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the number of glue sticks per student\n    num_students = 27\n    glue_sticks_per_student = 2\n\n    # Calculate the total number of glue sticks needed\n    total_glue_sticks = num_students * glue_sticks_per_student\n\n    # Calculate the number of packs needed\n    packs_needed = total_glue_sticks // 8\n    if total_glue_sticks % 8!= 0:\n        packs_needed += 1\n\n    # Display the number of packs needed\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    \n    initial_volume = 4000\n    doubled_volume = initial_volume * 2\n    third_day_volume = 6000\n    total_volume = initial_volume + doubled_volume + third_day_volume\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    initial_infects = 10\n    additional_infects_per_day = 6\n    days = 3\n    total_infected = initial_infects * additional_infects_per_day * days\n    result = total_infected\n    return result"}
{"output": "def solution():\n    \n    rafaela_tip = 20\n    julieta_tip = rafaela_tip * 0.9\n    total_tip = rafaela_tip + julieta_tip\n    total_money = total_tip * 2\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of oranges\n    initial_oranges = 12\n\n    # Calculate the number of oranges given to the daughters\n    daughters_oranges = 3 * 2\n\n    # Calculate the total number of oranges given away\n    total_given_away = daughters_oranges + 3\n\n    # Calculate the number of oranges left with\n    oranges_left = initial_oranges - total_given_away\n\n    # Display the number of oranges left with\n    result = oranges_left\n    return result"}
{"output": "def solution():\n    claire_badges_per_month = 1\n    amber_badges_per_month = claire_badges_per_month * 2\n    wendy_badges_per_month = 3 * claire_badges_per_month\n    amber_badges_per_year = amber_badges_per_month * 12\n    wendy_badges_per_year = wendy_badges_per_year * 12\n    difference = wendy_badges_per_year - amber_badges_per_year\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of banana bread loaves and slices per loaf\n    NUM_LOAVES = 2\n    SLICES_PER_LOAF = 8\n\n    # Calculate the total number of slices\n    total_slices = NUM_LOAVES * SLICES_PER_LOAF\n\n    # Calculate the number of fundraiser sold\n    fundraiser_slices = total_slices * 0.5\n\n    # Calculate the total amount raised\n    total_raised = fundraiser_slices * 0.5\n\n    # Display the total amount raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gold coins\n    gold_coins = 70\n\n    # Calculate the number of silver coins\n    silver_coins = gold_coins + 30\n\n    # Calculate the total number of coins\n    total_coins = gold_coins + silver_coins\n\n    # Display the total number of coins\n    result = total_coins\n    return result"}
{"output": "def solution():\n    total_burritos = 600\n    num_students = 50\n    burritos_per_student = 10\n    num_eating = 20\n\n    # Calculate the total number of burritos given away\n    total_given_away = num_students * burritos_per_student\n\n    # Calculate the number of leftover burritos\n    leftover_burritos = total_burritos - total_given_away\n    result = leftover_burritos\n    return result"}
{"output": "def solution():\n    \n    red_cars = 12\n    green_cars = red_cars - 2\n    blue_cars = green_cars * 3\n    total_cars = 75\n    yellow_cars = total_cars - red_cars - green_cars - blue_cars\n    result = yellow_cars\n    return result"}
{"output": "def solution():\n    \n    total_books = 85\n    anne_books = total_books - 12\n    sofie_books = anne_books + 25\n    fawn_books = total_books - anne_books - sofie_books\n    result = fawn_books\n    return result"}
{"output": "def solution():\n    \n    potatoes_weight = 5\n    sweet_potatoes_weight = potatoes_weight * 2\n    carrots_weight = sweet_potatoes_weight - 3\n    result = carrots_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of small jello cups and the number of kids\n    small_jello_cups = 10\n    num_kids = 30\n\n    # Calculate the total number of jello cups needed\n    total_jello_cups = num_kids * 4\n\n    # Calculate the total number of jello cups needed\n    total_jello_cups = total_jello_cups * small_jello_cups\n\n    # Calculate the total cost of the jello cups\n    total_cost = total_jello_cups * 1.25\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_phones = 5\n    phone_price = 700\n    total_paid = 4000\n\n    # Calculate the total cost of all phones\n    total_phones_cost = num_phones * phone_price\n\n    # Calculate the amount of change the seller will receive\n    change = total_paid - total_phones_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    total_cost = 400\n    madeline_monthly_cost = total_cost * 0.6\n    keenan_monthly_cost = total_cost - madeline_monthly_cost\n    keenan_weekly_cost = keenan_monthly_cost / 4\n    result = keenan_weekly_cost\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 60\n    day1_pieces = total_pieces * (2/5)\n    day2_pieces = 10\n    remaining_pieces = total_pieces - day1_pieces - day2_pieces\n    day3_pieces = remaining_pieces * (7/13)\n    total_pieces_eaten = day1_pieces + day2_pieces + day3_pieces\n    result = total_pieces_eaten\n    return result"}
{"output": "def solution():\n    soda_cost = 21.0\n    water_cost = 8.0\n    num_soda = 7\n    num_water = 4\n\n    # Calculate the total cost of soda\n    total_soda_cost = soda_cost * num_soda\n\n    # Calculate the total cost of water\n    total_water_cost = water_cost * num_water\n\n    # Calculate the total cost of all items\n    total_cost = total_soda_cost + total_water_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money David has\n    initial_money = 12.48\n\n    # Define the number of bolts David wants to buy\n    bolts_needed = 16\n\n    # Define the cost of each bolt\n    bolt_cost = 0.03\n\n    # Calculate the total cost of the bolts\n    total_cost = bolts_needed * bolt_cost\n\n    # Calculate the amount of money David has left\n    money_left = initial_money - total_cost\n\n    # Display the amount of money David has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    # Calculate Ella's earnings after 12 hours of dog walking\n    earnings = 33 * 3  # Ella earned $33 for 3 hours of dog walking\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    starting_marbles = 52\n    friend_marbles = 28\n    lost_marbles = starting_marbles / 4\n    remaining_marbles = starting_marbles - friend_marbles - lost_marbles\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    num_multiple_choice = 10\n    num_multiple_choice_percent = 0.8\n\n    num_true_false_percent = 0.9\n    num_long_answer_percent = 0.6\n\n    num_multiple_choice_points = num_multiple_choice * num_multiple_choice_percent\n\n    num_true_false_points = num_true_false_percent * num_multiple_choice_percent\n\n    num_long_answer_points = num_long_answer_percent * num_long_answer_percent\n\n    # Calculate the total points scored by Amy\n    total_points_scored = (num_multiple_choice_points * num_multiple_choice_percent) + (num_true_false_points * num_success_points) + (num_long_answer_points * num_long_answer_points)\n    result = total_points_scored\n    return result"}
{"output": "def solution():\n    \n    # Define the profit and the number of chickens\n    PROFIT = 2000\n    NUM_CHICKENS = 300\n\n    # Calculate the total revenue from selling the chickens\n    total_revenue = NUM_CHICKENS * (3/5)\n\n    # Calculate the cost of buying the chickens\n    cost = total_revenue - total_revenue\n\n    # Display the cost\n    result = cost\n    return result"}
{"output": "def solution():\n    \n    total_glasses_sold = 32\n    julie_glasses_sold = 14\n    micah_glasses_sold = (total_glasses_sold - julie_glasses_sold) / 3\n    difference = julie_glasses_sold - micah_glasses_sold\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    hair_cost = 400\n    manicure_cost = hair_cost / 4\n    pedicure_cost = manicure_cost * 3 / 4\n    total_cost = hair_cost + manicure_cost + pedicure_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    rope_length = 20\n    friend_cost = 2\n    profit_per_meter = 1.5\n    total_cost = (rope_length * friend_cost) + profit_per_meter\n    money_left = rope_length - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    melanie_age_in_10_years = 18\n    melanie_present_age = melanie_age_in_10_years - 10\n    age_in_three_years = melanie_present_age * 3\n    result = age_in_three_years\n    return result"}
{"output": "def solution():\n    bacon_packs = 5\n    bacon_price = 10\n\n    chicken_packs = 6\n    chicken_price = bacon_price * 2\n\n    strawberry_packs = 3\n    strawberry_price = 4\n\n    apple_packs = 7\n    apple_price = strawberry_packs / 2\n\n    total_budget = 65\n\n    # Calculate the total cost of all bacon packs\n    total_bacon_cost = bacon_packs * bacon_price\n\n    # Calculate the total cost of all chicken packs\n    total_chicken_cost = chicken_packs * chicken_price\n\n    # Calculate the total cost of all strawberries\n    total_strawberry_cost = strawberry_packs * strawberry_price\n\n    # Calculate the total cost of all items\n    total_cost = total_bacon_cost + total_chicken_cost + total_strawberry_cost + total"}
{"output": "def solution():\n    \n    final_concert_time = 65\n    usual_concert_time = final_concert_time * 2\n    encore_time = 15\n    usual_concert_time = usual_concert_time - encore_time\n    result = usual_concert_time\n    return result"}
{"output": "def solution():\n    \n    starting_toys = 200\n    toys_given_to_alyssa = 40\n    toys_given_to_bonnie = 80\n    toys_given_to_nicky = 30\n    total_toys_given = toys_given_to_alyssa + toys_given_to_bonnie + toys_given_to_nicky\n    remaining_toys = starting_toys - total_toys_given\n    result = remaining_toys\n    return result"}
{"output": "def solution():\n    \n    tuesdays_chimichangas = 125\n    wednesdays_chimichangas = 125\n    friday_chimichangas = 2 * tuesdays_chimichangas\n    total_chimichangas = tuesdays_chimichangas + wednesdays_chimichangas + friday_chimichangas\n    result = total_chimichangas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of microphones in the stage\n    stage_microphones = 50\n\n    # Calculate the number of microphones that won't find any space in after arrangement\n    no_space_arrangement = stage_microphones * 0.2\n\n    # Calculate the number of pairs of microphones that can fit in in after arrangement\n    pairs_of_microphones = stage_microphones - no_space_arrangement\n\n    # Display the number of pairs of microphones\n    result = pairs_of_microphones\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds in the bushes\n    birds_in_bushes = 6\n\n    # Calculate the number of birds flying overhead\n    flying_overhead_birds = birds_in_bushes * (2/3)\n\n    # Calculate the number of birds in the feeding\n    feeding_birds = 3 * 8\n\n    # Calculate the total number of birds counted\n    total_birds = birds_in_bushes + flying_overhead_birds + feeding_birds\n\n    # Display the total number of birds counted\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 55\n    eaten_cookies = 5\n    remaining_cookies = total_cookies - eaten_cookies\n    jars = 5\n    cookies_per_jar = remaining_cookies / jars\n    result = cookies_per_jar\n    return result"}
{"output": "def solution():\n    num_orchids = 5\n    num_daisies = 4\n    num_orchids_petals = 5\n    num_daisies_petals = 10\n\n    # Calculate the total number of petals of the orchids\n    total_orchid_petals = num_orchids * num_orchids_petals\n\n    # Calculate the total number of petals of the daisies\n    total_daisie_petals = num_daisies * num_daisies_petals\n\n    # Calculate the difference in petals between the daisies and the orchids\n    diff_petals = total_daisie_petals - total_orchid_petals\n    result = diff_petals\n    return result"}
{"output": "def solution():\n    total_plants = 100  # There are 100 plants in Mrs. Smith's garden\n    indoor_plants = total_plants / 4  # One-fourth of her plants are indoor plants\n    remaining_plants = total_plants - indoor_plants  # Calculate the number of remaining plants\n    outdoor_plants = (2/3) * remaining_plants  # Two-thirds of the remaining plants are outdoor plants\n    flowering_plants = remaining_plants - outdoor_plants  # The rest are flowering plants\n\n    # Calculate the percentage of flowering plants that are flowering plants\n    flowering_percentage = (flowering_plants / total_plants) * 100\n    result = flowering_percentage\n    return result"}
{"output": "def solution():\n    # Calculate the speed of a whirligigig\n    whirligigig_speed = 5 * 121  # the whirligigigig spins at five times faster than a thingamabob\n    # Calculate the speed of a whatchamacallit\n    whatchamacallit_speed = 11 * 121  # the whatchamacallit spins eleven times faster than a thingamabob\n    # Calculate the speed of a whirligigig\n    whirligig_speed = whatchamacallit_speed / 5  # the whirligigigigig spins at five times faster than a thingamabob\n    result = whirligig_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the salad and yogurt\n    SALAD_PRICE = 6\n    YOGURT_PRICE = SALAD_PRICE / 2\n\n    # Define the number of carrots Ellen eats each day\n    carrots_per_day = 2\n\n    # Calculate the total cost of the goods\n    total_cost = 11\n\n    # Calculate the total cost of the carrots\n    carrot_cost = total_cost - (salad_price + yogurt_price)\n\n    # Display the total cost of one carrot\n    result = carrot_cost\n    return result"}
{"output": "def solution():\n    hours_per_day = 8  # Mark works at his job for 8 hours per day\n    days_per_week = 5  # Mark works for 5 days per week\n    hourly_rate_original = 10  # Mark used to make $10 per hour\n    hourly_rate_new = 2  # Mark raised his pay by $2 per hour\n\n    # Calculate Mark's new hourly rate\n    new_hourly_rate = hourly_rate_original + hourly_rate_new\n\n    # Calculate Mark's weekly earnings\n    weekly_earnings = new_hourly_rate * hours_per_day * days_per_week\n    result = weekly_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the amount earned from Tasha's sales\n    tasha_earnings = 80\n\n    # Calculate the amount earned from mowing Kamala's lawn\n    kamala_earnings = 3 * joe_earnings\n\n    # Calculate the amount earned from mowing Alba's lawn\n    alba_earnings = 5 * joe_earnings\n\n    # Calculate the total earnings\n    total_earnings = tasha_earnings + kamala_earnings + alba_earnings\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    martin_weight = 55  # Martin's weight is 55 kg\n    carl_weight = martin_weight + 16  # Carl's weight is 16 kg more than Martin's weight\n    christian_weight = carl_weight + 8  # Christian's weight is 8 kg more than Carl's weight\n    harry_weight = christian_weight - 5  # Harry is 5 kg less than Christian's weight\n\n    result = harry_weight\n    return result"}
{"output": "def solution():\n    \n    rental_frequency = 10\n    rental_duration = 3\n    hourly_rate = 25\n    payment = 500\n    total_rental_duration = rental_frequency * rental_duration * rental_duration\n    total_earnings = total_rental_duration * hourly_rate\n    profit = total_earnings - payment\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    martha_notebooks = 7\n    joseph_notebooks = 3 * martha_notebooks\n    total_notebooks = joseph_notebooks + 5\n    difference = total_notebooks - joseph_notebooks\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    dijana_distance = 50\n    anis_distance = dijana_distance * (1 + 1/5)\n    total_distance = dijana_distance + anis_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Susan made and the number of nephews\n    susan_cookies = 100\n    num_nephews = 6\n\n    # Calculate the number of cookies each nephew will get\n    cookies_per_nephew = susan_cookies // num_nephews\n\n    # Calculate the number of cookies each nephew will get\n    cookies_per_nephew = cookies_per_nephew // num_nephews\n\n    # Display the number of cookies each nephew will get\n    result = cookies_per_nephew\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pages Daniel read yesterday and today\n    daniel_yesterday = 10\n    daniel_today = 13\n\n    # Calculate the number of pages Denise read yesterday and today\n    denise_yesterday = daniel_yesterday + 5\n    denise_today = daniel_today * 2\n\n    # Calculate the difference in the number of pages Denise and Daniel read\n    difference = denise_yesterday - denise_today\n\n    # Display the difference in the number of pages Denise read\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    adult_bowls = 4\n    child_bowls = 8\n    total_bowls = adult_bowls + child_bowls\n    meals_per_child = total_bowls // meals_per_child\n    result = meals_per_child\n    return result"}
{"output": "def solution():\n    \n    notebook_price = 1.5\n    ballpen_price = 0.5\n    num_notebooks = 5\n    num_ballpen = 1\n    total_cost = (notebook_price * num_notebooks) + (ballpen_price * num_ballpen)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    small_masks_per_yard = 4/2  # Jo can make 4 small masks with 2 yards of material per yard\n    large_masks_per_yard = 3/2.25  # Jo can make 3 large masks with 2.25 yards of material per yard\n    small_masks_needed = 20  # Jo needs to make 20 small masks for her class\n    large_masks_needed = 8  # Jo needs to make 8 large masks for her class\n\n    # Calculate the total material needed for small masks\n    total_small_masks_needed = small_masks_needed * small_masks_per_yard\n\n    # Calculate the total material needed for large masks\n    total_large_masks_needed = large_masks_needed * large_masks_per_yard\n\n    # Calculate the total material needed for the class\n    total_material_needed = total_small_masks_needed + total_large_masks_needed\n    result = total_material_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of Fast and Furious movies\n    num_fastas = 9\n    num_furious = 3\n\n    # Define the total amount spent\n    total_spent = 216\n\n    # Calculate the total number of movies seen\n    total_movies = num_fastas + num_furious\n\n    # Calculate the average price per ticket\n    average_price = total_spent / total_movies\n\n    # Display the average price per ticket\n    result = average_price\n    return result"}
{"output": "def solution():\n    sleeps_per_night = 10  # Harold sleeps for 10 hours a night\n    sleep_hours_worked = sleeps_per_night - 2  # Harold works 2 hours less than sleeps\n    dog_hours_walked = 1  # Harold walks his dog for an hour each day\n\n    # Calculate the total number of hours Harold works in a day\n    total_sleep_hours = sleeps_per_night * sleep_hours_worked\n\n    # Calculate the total number of hours Harold walks in a day\n    total_dog_hours = dog_hours_walked * dog_hours_walked\n\n    # Calculate the total number of free time Harold has left in his day\n    free_time_left = total_sleep_hours - total_dog_hours\n    result = free_time_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of blue and red shoe boxes\n    blue_boxes = 7\n    red_boxes = 9\n\n    # Define the number of blue and red shoe boxes used to go fishing\n    blue_boxes_used = 3\n    red_boxes_used = red_boxes_used / 3\n\n    # Calculate the number of blue and red shoe boxes left\n    blue_boxes_left = blue_boxes - blue_boxes_used\n    red_boxes_left = red_boxes - red_boxes_used\n\n    # Display the number of red and blue shoe boxes left\n    result = red_boxes_left\n    return result"}
{"output": "def solution():\n    \n    sarah_books = 9\n    joseph_books = sarah_books * 2\n    joseph_books -= 2\n    result = joseph_books\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 30\n\n    # Calculate the number of marbles given to Jamie\n    jamie_marbles = initial_marbles // 5\n\n    # Calculate the number of marbles given to Donald\n    donald_marbles = initial_marbles - jamie_marbles - 10\n\n    # Calculate the number of marbles left for Dean\n    dean_marbles = initial_marbles - jamie_marbles - donald_marbles\n\n    # Display the number of marbles left for Dean\n    result = dean_marbles\n    return result"}
{"output": "def solution():\n    \n    duncan_age_now = 60\n    duncan_age_8_years_ago = duncan_age_now - 8\n    adam_age_4_years_ago = duncan_age_8_years_ago / 2\n    adam_age_now = adam_age_4_years_ago + 8\n    adam_age_in_8_years = adam_age_now + 8\n    result = adam_age_in_8_years\n    return result"}
{"output": "def solution():\n    \n    brown_farm_acres = 200\n    smith_farm_acres = 2 * brown_farm_acres + 100\n    total_acres = brown_farm_acres + smith_farm_acres\n    result = total_acres\n    return result"}
{"output": "def solution():\n    \n    packages_per_hour = 50 - 10\n    pay_per_package = 0.20\n    hours_worked = 8\n    total_pay = packages_per_hour * pay_per_package * hours_worked\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    normal_sudoku_time = 45\n    animee_sudoku_time = normal_sudoku_time * 4\n    normal_sudoku_bottles = normal_sudoku_time / 0.5\n    animee_sudoku_bottles = animee_sudoku_time / 0.5\n    total_bottles = normal_sudoku_bottles + animee_sudoku_bottles\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    red_balloons = 2\n    yellow_balloons = 3\n    total_balloons = 58\n    red_balloons = 20\n    yellow_balloons = total_balloons - red_balloons - yellow_balloons\n    result = yellow_balloons\n    return result"}
{"output": "def solution():\n    miles_per_day = 100  # Jon drives 100 miles per day\n    days_per_month = 30  # There are 30 days in a month\n    tune_ups_per_1000_miles = 1000  # Jon's car needs a tune-up every 1000 miles\n\n    # Calculate the total number of tune-ups Jon needs in a month\n    total_tune_ups = miles_per_day * days_per_month * tune_ups_per_1000_miles\n    result = total_tune_ups\n    return result"}
{"output": "def solution():\n    \n    tuesday_hours = 5\n    wednesday_hours = tuesday_hours * 2\n    thursday_hours = wednesday_hours - 2\n    total_hours = tuesday_hours + wednesday_hours + thursday_hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    cake_cost = 11\n    num_balloons = 12\n    balloon_price = 0.5\n    num_ice_cream_tubs = 2\n    ice_cream_price = 7\n    num_ice_cream_tubs = 2\n\n    # Calculate the total cost of the cake\n    total_cake_cost = cake_cost\n\n    # Calculate the total cost of the balloons\n    total_balloon_cost = num_balloons * 12\n\n    # Calculate the total revenue from selling the balloons\n    total_balloon_revenue = num_balloons * balloon_price\n\n    # Calculate the total cost of the ice cream\n    total_ice_cream_cost = num_ice_cream_tubs * ice_cream_price\n\n    # Calculate the total amount of money Julia and Nadine received\n    total_money = total_cake_cost + total_balloon_revenue"}
{"output": "def solution():\n    \n    apples = 3\n    bananas = 5\n    oranges = 6\n    apples_left = apples - 2\n    bananas_left = bananas - 5\n    oranges_left = oranges - 2\n    total_left = apples_left + bananas_left + oranges_left\n    result = total_left\n    return result"}
{"output": "def solution():\n    num_tennis = 6\n    num_volleyball = num_tennis * 2\n    num_boys = 16\n    num_girls = 22\n\n    # Calculate the total number of students\n    total_students = num_tennis + num_volleyball + num_boys + num_girls\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the cost per lollypop\n    num_students = 30\n    cost_per_lollippop = 0.8\n\n    # Calculate the total revenue from selling lollipops\n    total_revenue = num_students * cost_per_lollippop\n\n    # Calculate the total number of lollipops sold\n    total_lollipops = num_students * 10\n\n    # Calculate the total cost of buying the lollipops\n    total_cost = total_lollipops * 0.5\n\n    # Calculate the profit from selling lollipops\n    profit = total_cost - total_lollipops\n\n    # Return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    num_cats = 3\n    num_dogs = num_cats * 3\n    num_rabbits = num_dogs - 2\n    num_fish_tank = num_rabbits * 3\n    num_gerbils = num_fish_tank / 3\n\n    # Calculate the total number of pets Larry has\n    total_pets = num_cats + num_dogs + num_rabbits + num_gerbils\n    result = total_pets\n    return result"}
{"output": "def solution():\n    total_slices = 24  # The loaf of bread has 24 slices\n    abby_slices_per_day = 2  # Abby can eat 2 slices per day\n    josh_slices_per_day = 2 * abby_slices_per_day  # Josh can eat twice as much as Abby\n\n    # Calculate the number of days the loaf will last\n    num_days = total_slices / (abby_slices_per_day + josh_slices_per_day)\n    result = num_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of years Martha collects shells\n    years_collected = 5\n\n    # Calculate the number of shells Martha will collect in a month\n    shells_per_month = 12\n\n    # Calculate the total number of shells Martha will collect in 10th birthday\n    total_shells = shells_per_month * months_collected\n\n    # Display the total number of shells\n    result = total_shells\n    return result"}
{"output": "def solution():\n    total_cups = 27\n    num_rows = 3\n    cups_per_row = total_cups / num_rows\n    remaining_cups = 15\n\n    # Calculate the number of cups of mint tea in each row\n    mint_cups_per_row = remaining_cups / (num_rows + 1)\n    result = mint_cups_per_row\n    return result"}
{"output": "def solution():\n    \n    # Define the number of berries the sloth takes for the meal of berries\n    sloth_time = 4\n\n    # Calculate the number of berries the sloth can collect in 8 hours\n    total_time = 8\n\n    # Calculate the number of berries the sloth can pick up per trip\n    berries_per_trip = (total_time / sloth_time) / 24\n\n    # Calculate the minimum number of berries the sloth can pick up per trip down to the ground\n    min_berries_per_trip = berries_per_trip - berries_per_trip\n\n    # Display the minimum number of berries the sloth can pick up per trip down\n    result = min_berries_per_trip\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of water in the pool\n    initial_water = 10000\n\n    # Calculate the amount of water used to fill the tank\n    water_used = initial_water / 2\n\n    # Calculate the amount of water remaining in the tank after 6 days\n    remaining_water = initial_water - water_used - 500 * 6\n\n    # Display the amount of water remaining in the tank\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    total_money = 150\n    friday_tickets = 5\n    saturday_tickets = 10\n    other_day_tickets = 7\n    popcorn_tickets = 8\n    candy_boxes = 2\n\n    # Calculate the total cost of tickets for Fridays and Saturdays\n    friday_cost = friday_tickets * friday_tickets\n\n    # Calculate the total cost of tickets for Saturdays\n    saturday_cost = saturday_tickets * saturday_tickets\n\n    # Calculate the total cost of tickets for other days\n    other_day_cost = other_day_tickets * other_day_tickets\n\n    # Calculate the total cost of popcorn and candy\n    popcorn_cost = popcorn_tickets * candy_boxes\n\n    # Calculate the maximum number of movies Colby can see if he already saw 5 movies on a Friday or Saturday\n    max_movies = (total_money - friday_cost - saturday"}
{"output": "def solution():\n    \n    cinnamon_rolls = 200\n    blueberry_muffins = 300\n    normal_cinnamon_calories = 600\n    normal_blueberry_muffin_calories = 450\n    pastry_calories = (normal_cinnamon_rolls * normal_cinnamon_calories) / 3\n    total_calories = pastry_calories * pastry_calories\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    # Define the number of Junebugs removed on Monday\n    monday_junebugs = 39\n\n    # Define the number of Junebugs removed on Tuesday and Wednesday\n    tuesday_wednesday_junebugs = monday_junebugs * 2\n\n    # Define the number of Junebugs removed on Thursday and Friday\n    thursday_junebugs = 48\n    friday_junebugs = 57\n\n    # Calculate the total number of Junebugs removed\n    total_junebugs = monday_junebugs + tuesday_wednesday_junebugs + thursday_junebugs + friday_junebugs\n\n    # Calculate the average number of Junebugs removed per day\n    average_junebugs = total_junebugs / 5\n\n    # Display the average number of Junebugs removed per day\n    result = average_junebugs\n    return result"}
{"output": "def solution():\n    \n    bus_speed = 60\n    bus_time = 5\n    car_speed = 30\n    car_time = 8\n    bus_distance = bus_speed * bus_time\n    car_distance = car_speed * car_time\n    difference = bus_distance - car_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of stuffed animals\n    total_stuffed_animals = 31 * 8\n\n    # Calculate the total number of multicolored rings\n    total_multicolored_rings = 9\n\n    # Calculate the total number of toys\n    total_toys = total_stuffed_animals + total_multicolored_rings\n\n    # Calculate the number of bouncy balls in the tube\n    bouncy_balls = 62 - total_toys\n    result = bouncy_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the combined age of Peter and Jean\n    combined_age = 100\n\n    # Calculate Paul's age\n    paul_age = combined_age - 10\n\n    # Calculate John's age\n    john_age = paul_age + 10\n\n    # Calculate Peter's age\n    peter_age = paul_age + john_age\n\n    # Display Peter's age\n    result = peter_age\n    return result"}
{"output": "def solution():\n    num_friends = 4\n    num_water_balloons_per_friend = 2\n    num_water_balloons_given_by_mom = 1\n    num_additional_balloons_per_person = 3\n\n    # Calculate the total number of water balloons Maria gave to her friends\n    total_water_balloons_given_by_friends = num_friends * num_water_balloons_per_friend\n\n    # Calculate the total number of water balloons Maria gave to her mom\n    total_water_balloons_given_by_mom = num_additional_balloons_per_person * num_water_balloons_given_by_mom\n\n    # Calculate the total number of balloons the girls have\n    total_balloons = total_water_balloons_given_by_friends + total_water_balloons_given_by_m"}
{"output": "def solution():\n    # Calculate the total number of boxes donated\n    total_boxes_donated = 10 * 5\n\n    # Calculate the total number of boxes remaining\n    total_boxes_remaining = 10 + 10\n\n    # Calculate the total number of boxes that can fit in all the boxes\n    total_boxes_remaining = total_boxes_remaining * 2\n\n    # Calculate the number of new tables needed\n    new_tables_needed = total_boxes_remaining // 15\n\n    result = new_tables_needed\n    return result"}
{"output": "def solution():\n    \n    zoey_seeds = 40\n    zoey_distance = zoey_seeds * 10\n    sydney_seeds = 35\n    sydney_distance = sydney_seeds * 12\n    total_distance = zoey_distance + sydney_distance\n    average_distance = total_distance / 3\n    result = average_distance\n    return result"}
{"output": "def solution():\n    \n    widgets_per_hour_6 = 60\n    widgets_per_hour_9 = 45\n    price_per_widget = 6\n    hours_per_day = 24\n    days_per_month = 30\n    widgets_per_month = widgets_per_hour_6 * hours_per_day * days_per_month\n    widgets_to_buy_3000 = widgets_per_hour_9000 * widgets_per_month\n    money_to_buy_9000 = widgets_to_buy_9000 - widgets_to_buy_3000\n    money_to_buy_more = money_to_buy_9000 - widgets_to_buy_3000\n    result = money_to_buy_more\n    return result"}
{"output": "def solution():\n    # Calculate the total number of pesos added after 12 hours\n    added_pesos_12_hours = 70 * 12\n\n    # Calculate the total number of pesos added after 24 hours\n    added_pesos_24_hours = 70 * 24\n\n    # Calculate the total number of pesos added after 5 pm\n    total_added_pesos = added_pesos_12_hours + added_pesos_24_hours\n\n    # Calculate the amount of money saved by Cameron\n    amount_saved = total_added_pesos - 1000 - 1600\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    goats = 15\n    sheep = 12\n    goat_weight = 5\n    sheep_weight = 2 * goat_weight - 3\n    total_goat_weight = goats * goat_weight\n    total_sheep_weight = sheep * sheep_weight\n    total_hay_weight = total_goat_weight + total_sheep_weight\n    result = total_hay_weight\n    return result"}
{"output": "def solution():\n    hourly_rate = 50  # John earned 50 dollars an hour\n    weekly_hours = 6  # John worked 6 hours in the week\n    gas_cost = 50  # John spends 50 dollars on gas\n    deposit = 100  # John wants to deposit 100 dollars in the bank\n    pencils_bought = 5  # John buys 5 pencils that cost 10 dollars each\n\n    # Calculate the total amount John earned in the week\n    weekly_earnings = hourly_rate * weekly_hours * weekly_hours\n\n    # Calculate the total amount John spent on gas\n    gas_spending = gas_cost\n\n    # Calculate the total amount John spent on pencils\n    pencils_cost = pencils_cost * pencils_bought\n\n    # Calculate the remaining amount John can spend on pens\n    remaining_amount = weekly_earnings - gas_spending\n\n    # Calculate the number of 25 dollar pens John can buy"}
{"output": "def solution():\n    \n    craig_words = 20\n    craig_letters = 15\n    brother_letters = craig_letters + 50\n    total_letters = (craig_words * craig_letters) + brother_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    num_rows = 7\n    num_schools = 5\n    num_drills_per_row = 8\n\n    # Calculate the total number of drills\n    total_drills = num_rows * num_schools * num_drills_per_row\n    result = total_drills\n    return result"}
{"output": "def solution():\n    # Calculate the total number of bottles of apple juice the teacher has for herself\n    total_bottles = 29 * 9  # 9 coupons, each coupon can be redeemed for 100 bottles of apple juice\n    # Calculate the total number of bottles of apple juice the teacher gives to drink for lunch\n    total_bottles += 2 * 9  # each student gives 2 bottles of apple juice to drink for lunch\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    labor_cost = 40 + 35 * 2.25\n    parts_cost = 60\n    total_cost = labor_cost + parts_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_cds = 10\n    cost_per_cd = 15\n    discount = 0.4  # 40% discount\n    num_no_like = 5\n    num_sold = 40\n\n    # Calculate the total cost of all the CDs before the discount\n    total_cost_before_discount = num_cds * cost_per_cd\n\n    # Calculate the discounted cost of all the CDs after the discount\n    discounted_cost_after_discount = total_cost_before_discount * (1 - discount)\n\n    # Calculate the total cost of all the CDs after the discount\n    total_cost_after_discount = discounted_cost_after_discount * num_cds\n\n    # Calculate the amount of money James was out\n    money_out = total_cost_after_discount - total_cost_after_discount\n    result = money_out\n    return result"}
{"output": "def solution():\n    \n    yams_sold = 6\n    yam_price = 1.5\n    sweet_potatoes_sold = 10\n    sweet_potatoes_price = 2\n    carrots_sold = 4\n    carrot_price = 1.25\n    total_earnings = (yams_sold * yam_price) + (sweet_potatoes_sold * sweet_potatoes_price) + (carrots_sold * carrot_price)\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    distance = 20\n    speed = 2\n    swim_time = distance * 0.6\n    island_time = swim_time / 2\n    remaining_distance = distance - island_time\n    remaining_speed = remaining_distance / 2\n    total_time = swim_time + remaining_speed\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    sam_last_friday_loaves = 7\n    bakery_last_friday_loaves = sam_last_friday_loaves - 40\n    total_loaves = bakery_last_friday_loaves + sam_last_friday_loaves\n    result = total_loaves\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 15\n\n    # Define the number of stickers lost during playtime\n    playtime_stickers = 7\n\n    # Define the number of stickers given for helping classmates\n    helping_stickers = 5\n\n    # Calculate the total number of stickers\n    total_stickers = initial_stickers + playtime_stickers + helping_stickers\n\n    # Display the total number of stickers\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the commission rate for each copy of the New York Times\n    NY_TATRES_COMMISSION = 0.1\n\n    # Define the commission rate for each copy of Wall Street Journal\n    WALL_COMMISSION_RATE = 0.08\n\n    # Define the number of copies of each copy of the Wall Street Journal\n    NY_TATRES_COMMISSION = 6\n    WALL_COMMISSION = 10\n\n    # Define the cost of each copy of the New York Times\n    NY_TATRES_PRICE = 5\n\n    # Define the cost of each copy of Wall Street Journal\n    WALL_COMMISSION = 15\n\n    # Calculate the commission earned for each copy of the Wall Street Journal\n    NY_TATRES_COMMISSION = NY_TATRES_COMMISSION * NY_TATRES_COMMISSION\n    WALL_COMMISSION = WALL_COMMISSION * WALL_COMMISSION\n\n    # Calculate the total commission earned\n    total_commission = NY_"}
{"output": "def solution():\n    \n    deanna_age = 26\n    marcus_age = deanna_age - 5\n    leo_age = marcus_age / 2\n    result = leo_age\n    return result"}
{"output": "def solution():\n    \n    total_points = 45\n    azibo_points = (total_points - 20) / 3\n    bahati_points = azibo_points + 20\n    dinar_points = dinar_points + 10\n    azibo_points = azibo_points - bahati_points\n    result = azibo_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pages to the inch\n    PAGES_PER_INCH = 100\n\n    # Define the length of the book in inches\n    INCH_TO_INCH = 1.5\n\n    # Calculate the number of pages on each side of the book\n    pages_per_side = PAGES_PER_INCH / 2\n\n    # Calculate the total number of pages in the book\n    total_pages = pages_per_side * 3 * INCH_TO_INCH\n\n    # Display the total number of pages\n    result = total_pages\n    return result"}
{"output": "def solution():\n    reports_per_15_min = 30  # Vince can staple 30 reports every 15 minutes\n    stapling_duration = 8  # Vince staplees reports from 8:00 AM to 11:00 AM\n    stapling_duration = 11  # Vince staplees reports from 11:00 AM to 11:00 PM\n\n    # Calculate the total number of reports stapled by Vince\n    total_reports = (stapling_duration * 60) - stapling_duration\n\n    # Convert the total number of reports to minutes\n    total_minutes = total_minutes * 60\n\n    # Calculate the total number of reports stapled by Vince\n    total_stapled = total_reports * stapling_duration\n    result = total_stapled\n    return result"}
{"output": "def solution():\n    sleep_speed = 10  # in p.m.\n    sleepwalk_time = 6  # in minutes\n    cameras_sleepwalking_time = (2 * 15) + 38  # in minutes\n    bathroom_sleepwalking_time = sleepwalk_time - 5  # in minutes\n\n    # Calculate the total sleep time for the day\n    total_sleepwalk_time = sleepwalk_time + cameras_sleepwalking_time + bathroom_sleepwalking_time\n\n    # Convert the total sleep sleep time to minutes\n    total_sleep_time_minutes = total_sleepwalk_time * 60\n\n    result = total_sleep_time_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of measuring cups Jonathan has\n    cups = 2 * 12\n\n    # Calculate the number of measuring spoons Jonathan has\n    spoons = cups * (2/3)\n\n    # Calculate the number of utensils Jonathan has remaining\n    utensils_remaining = spoons - 6\n\n    # Display the number of utensils Jonathan has remaining\n    result = utensils_remaining\n    return result"}
{"output": "def solution():\n    # Calculate the number of occupied beds in the hospital after one week\n    occupied_beds = 1000 * (1/5)  # 1/5 occupied beds\n\n    # Calculate the number of unoccupied beds in the hospital after two weeks\n    unoccupied_beds = 1000 - occupied_beds  # the total number of unoccupied beds\n    result = unoccupied_beds\n    return result"}
{"output": "def solution():\n    \n    # Define the number of work emails and the fraction that are to family\n    work_emails = 7\n    family_fraction = 2/3\n\n    # Calculate the number of remaining emails\n    remaining_emails = 6teen - work_emails\n\n    # Calculate the number of family emails\n    family_emails = remaining_emails * family_fraction\n\n    # Calculate the number of remaining emails\n    remaining_emails = remaining_emails - family_emails\n\n    # Calculate the number of emails to her boyfriend\n    boyfriend_emails = remaining_emails / 3\n\n    # Display the number of emails to her boyfriend\n    result = boyfriend_emails\n    return result"}
{"output": "def solution():\n    \n    aliya_age = 3\n    shawna_age = aliya_age * 3\n    father_age = shawna_age * 5\n    result = father_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of attending the concert\n    initial_attending = 48\n\n    # Calculate the number of attending people Kelly was right\n    kelly_attending = initial_attending * 1.2\n\n    # Calculate the actual number of attending people\n    actual_attending = kelly_attending + initial_attending\n\n    # Display the actual number of attending people\n    result = actual_attending\n    return result"}
{"output": "def solution():\n    \n    jason_balls = 2\n    jeffrey_balls = jason_balls * 2\n    jordan_balls = jason_balls * 2\n    total_balls = jason_balls + jeffrey_balls + jordan_balls\n    result = total_balls\n    return result"}
{"output": "def solution():\n    \n    holes_day1 = 10\n    holes_day2 = 13\n    holes_day3 = 8\n    holes_day4 = holes_day1 * 4\n    holes_day5 = holes_day2 * 4\n    holes_day4 = holes_day3 * 4\n    total_holes = holes_day1 + holes_day2 + holes_day3 + holes_day4 + holes_day5\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    amora_chips = 70\n    lainey_chips = 70\n    other_person_chips = amora_chips + 15\n    total_chips = amora_chips + lainey_chips + other_person_chips\n    result = total_chips\n    return result"}
{"output": "def solution():\n    \n    supplies_cost = 400\n    tickets_cost = supplies_cost * 1.5\n    total_cost = supplies_cost + tickets_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_pokemon = 339\n    alex_pokemon = stan_pokemon + 5\n    stan_pokemon = (4 * alex_pokemon) - 13\n    result = stan_pokemon\n    return result"}
{"output": "def solution():\n    \n    episode_length = 20\n    total_episodes = episode_length / 2\n    total_minutes = total_episodes * episode_length\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance the bird leaves in the north\n    north_distance = 10 * 30\n\n    # Calculate the distance the bird leaves in the north\n    north_distance = 2 * 18\n\n    # Calculate the distance the bird leaves in the south\n    south_distance = 5 * 22\n\n    # Calculate the total distance the bird leaves\n    total_distance = north_distance + south_distance\n\n    # Calculate the distance the bird changes\n    change_distance = total_distance - north_distance - change_distance\n\n    # Display the distance the bird changes\n    result = change_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of brownies\n    initial_brownies = 1 * 12 + 1 * 12\n\n    # Define the number of brownies waiting and eaten\n    waiting_brownies = 4 * 12\n    eaten_brownies = 1.5 * 12\n\n    # Calculate the total number of brownies\n    total_brownies = initial_brownies + waiting_brownies + eaten_brownies\n\n    # Calculate the number of brownies left over\n    left_over_brownies = initial_brownies - total_brownies\n\n    # return the result\n    result = left_over_brownies\n    return result"}
{"output": "def solution():\n    \n    nani_age = 8\n    brother_age = nani_age * 2\n    sister_age = nani_age * 0.25\n    total_age = nani_age + brother_age + sister_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    num_racquets = 12\n    synthetic_gut_time = 15\n    polyester_gut_time = 22\n    hybrid_gut_time = 18\n    total_time = (synthetic_gut_time * num_racquets) + ( polyester_gut_time * num_racquets) + (hybrid_gut_time * num_racquets)\n    result = total_time\n    return result"}
{"output": "def solution():\n    num_phones = 3  # John and his 2 kids\n    phone_price = 600  # The phone price is $600\n\n    # Calculate the total cost of the phones before the first 2\n    total_cost_before_2_phones = num_phones * phone_price\n\n    # Calculate the total cost of the phones after the first 2\n    total_cost_after_2_phones = total_cost_before_2_phones * 2\n\n    # Calculate the total cost of all phones\n    total_cost = total_cost_after_2_phones + total_cost_after_2_phones\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    carlton_players = 13\n    zeke_players = carlton_players + 7\n    total_players = carlton_players + zeke_players\n    result = total_players\n    return result"}
{"output": "def solution():\n    \n    length = 15\n    width = 10\n    fence_length = length * width\n    slats_per_foot = 2\n    total_slats = fence_length * slats_per_foot\n    result = total_slats\n    return result"}
{"output": "def solution():\n    # Calculate the total number of oranges Mrs. Harrington bought\n    total_oranges = 12 * 20\n\n    # Calculate the number of oranges Mrs. Harrington gave her mom and her sister\n    given_oranges = 2 * 20\n\n    # Calculate the number of oranges Mrs. Harrington kept\n    kept_oranges = total_oranges / 4\n\n    # Calculate the number of oranges Mrs. Harrington sold\n    sold_oranges = total_oranges - given_oranges - kept_oranges\n\n    result = sold_oranges\n    return result"}
{"output": "def solution():\n    \n    usa_states = (1/2) * 60\n    india_states = (1/2) * usa_states + 4\n    total_states = usa_states + india_states\n    result = total_states\n    return result"}
{"output": "def solution():\n    \n    dictionary_cost = 18\n    dinosaur_book_cost = 13\n    childrens_cookbook_cost = 8\n    saved_money = 14\n    hourly_rate = 5\n    total_cost = dictionary_cost + dinosaur_book_cost + childrens_cookbook_cost\n    hours_needed = total_cost / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    total_cherries = 60\n    robert_cherries = 30\n    jerry_cherries = robert_cherries + 10\n    robert_jerry_cherries = robert_cherries - jerry_cherries\n    difference = robert_jerry_cherries - jerry_cherries\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    gingerbread_sold = 10\n    apple_pie_sold = 15\n    sunday_gingerbread_sold = gingerbread_sold - 4\n    sunday_gingerbread_sold = gingerbread_sold + 5\n    sunday_apple_pie_sold = sunday_apple_pie_sold + 15\n    total_gingerbread_sold = gingerbread_sold * 6\n    total_apple_pie_sold = apple_pie_sold * 15\n    total_sales = total_gingerbread_sold + total_apple_pie_sold\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of sunscreen per bottle and the number of hours worked per day\n    SUNSCREEN_PER_BOTTLE = 8\n    HOURS_PER_DAY = 4\n\n    # Calculate the total amount of sunscreen needed for 8 days\n    total_sunscreen_needed = SUNSCREEN_PER_BOTTLE * HOURS_PER_DAY * 8\n\n    # Display the total amount of sunscreen needed\n    result = total_sunscreen_needed\n    return result"}
{"output": "def solution():\n    \n    blue_car_price = 100\n    red_car_price = blue_car_price * 0.4\n    total_price = blue_car_price + red_car_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define Emil's current age\n    emil_age = 19\n\n    # Calculate Emil's age when he turns 24\n    emil_age_24 = emil_age - 24\n\n    # Calculate Emil's age when he turns 24\n    emil_age_24 = emil_age_24 / 2\n\n    # Calculate Emil's brother's age when he turns 24\n    brother_age_24 = emil_age_24 * 2\n\n    # Calculate Emil's current age\n    emil_age_now = emil_age_24 + emil_age_24\n\n    # Calculate the sum of his dad and his brother's ages\n    sum_of_brother_ages = emil_age_now + dad_age_24 + brother_age_24\n\n    # Display the sum of his dad and his brother's ages\n    result = sum_of_brother_ages\n    return result"}
{"output": "def solution():\n    \n    mother_beads = 20\n    sister_beads = mother_beads + 10\n    friend_beads = mother_beads * 2\n    total_beads = mother_beads + sister_beads + friend_beads\n    result = total_beads\n    return result"}
{"output": "def solution():\n    \n    thursday_crawfish = 3\n    friday_crawfish = thursday_crawfish * 4\n    saturday_crawfish = friday_crawfish / 2\n    total_crawfish = thursday_crawfish + friday_crawfish + saturday_crawfish\n    serving_size = 3\n    servings = total_crawfish // serving_size\n    result = servings\n    return result"}
{"output": "def solution():\n    \n    total_students = 30\n    football_players = total_students * 0.2\n    remaining_students = total_students - football_players\n    cheerleaders = remaining_students * 0.25\n    band_players = remaining_students - cheerleaders\n    total_early_students = football_players + band_players\n    result = total_early_students\n    return result"}
{"output": "def solution():\n    \n    sophie_size = 5\n    charlie_size = sophie_size * 5\n    total_size = sophie_size + charlie_size\n    average_size = total_size / 2\n    result = average_size\n    return result"}
{"output": "def solution():\n    \n    flower_bed_length = 111\n    flower_width = 12\n    flowering_plants_per_plant = 1.5\n    flowers_owned = 17\n    flowering_plants_needed = flower_bed_length - (flower_width * flowering_plants_per_plant)\n    cost_per_flowering_plant = 6\n    total_cost = flowering_plants_needed * cost_per_flowering_plant\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pretzels Edgar eats per day\n    edgar_pretzels_per_day = 18\n\n    # Calculate the number of pretzels his brother eats per day\n    brother_pretzels_per_day = edgar_pretzels_per_day / 2\n\n    # Calculate the number of pretzels his brother eats in a week\n    brother_pretzels_per_week = brother_pretzels_per_day * 7\n\n    # Display the number of pretzels his brother eats in a week\n    result = brother_pretzels_per_week\n    return result"}
{"output": "def solution():\n    num_baskets = 5\n    petunias_per_basket = 3\n    sweet_potato_vines_per_basket = 2\n    petunias_cost = 3.0\n    sweet_potato_vines_cost = 2.5\n\n    # Calculate the total cost of all petunias\n    total_petunias_cost = num_baskets * petunias_per_basket * petunias_cost\n\n    # Calculate the total cost of all sweet potato vines\n    total_sweet_potato_vines_cost = num_baskets * sweet_potato_vines_per_basket * sweet_potato_vines_cost\n\n    # Calculate the total cost of all hanging baskets\n    total_cost = total_petunias_cost + total_sweet_potato_vines_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    soil_weight = 30\n    rose_weight = 1\n    carnation_weight = 1.5\n    sunflowers = 4\n    carnations = 10\n    sunflower_weight = 3\n    carnation_weight = 1\n    total_weight = (sunflowers * sunflower_weight) + (carnations * carnation_weight)\n    roses = soil_weight // rose_weight\n    result = roses\n    return result"}
{"output": "def solution():\n    monthly_income = 2000.00  # Jessica makes $2,000.00 a month\n    percentage_to_set = 0.25  # Jessica sets 25% of her paycheck aside to put towards fancy shoes\n    cost_per_pair = 1000.00  # Each pair of shoes she buys costs $1,000.00\n    months_per_year = 12  # There are 12 months in a year\n\n    # Calculate the amount of money Jessica has to set towards fancy shoes\n    money_to_set = monthly_income * percentage_to_set\n\n    # Calculate the number of shoes Jessica can buy in a year\n    shoes_per_month = money_to_set / money_to_set\n    shoes_per_year = shoes_per_month * 12\n    result = shoes_per_year\n    return result"}
{"output": "def solution():\n    \n    peel_shrimp_per_minute = 6\n    saute_shrimp_per_minute = 30\n    total_shrimp = 90\n    time_to_peel = total_shrimp / peel_shrimp_per_minute\n    time_to_saute = time_to_peel / saute_shrimp_per_minute\n    total_time = time_to_peel + time_to_saute\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    starting_temp = 2 * 3 + 3 * 4\n    final_temp = 2 * 2\n    temperature_difference = final_temp - starting_temp\n    result = temperature_difference\n    return result"}
{"output": "def solution():\n    # Calculate the age of Bill's dad when he was 30 years old\n    age_when_dad_was_30 = 30\n\n    # Calculate the age of Bill's father when he was 30 years old\n    age_when_father_was_30 = age_when_dad_was_30 * 3\n\n    # Calculate Bill's age when he was 30 years old\n    age_when_father_was_30 = age_when_father_was_30 + age_when_father_was_30\n\n    # Calculate Bill's age when he saw the Comet for the first time\n    age_when_first_time = age_when_father_was_30 + age_when_father_was_30\n\n    result = age_when_first_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of checks written per month for each service\n    electric_checks = 12\n    gas_checks = 12\n    church_checks = 2 * electric_checks\n    pest_lawn_checks = 0.25 * gas_checks\n\n    # Calculate the total number of checks written per year\n    total_checks = electric_checks + gas_checks + church_checks + pest_lawn_checks\n\n    # Display the total number of checks written per year\n    result = total_checks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of planes\n    planes = 2\n\n    # Calculate the number of flights the first plane goes to Greece\n    greece_flights = planes * 0.75\n\n    # Calculate the number of remaining flights\n    remaining_flights = planes - greece_flights\n\n    # Calculate the number of trips the first plane makes throughout each day\n    trips_first_plane = 44 / 2\n\n    # Calculate the number of flights to France the first plane takes in one day\n    frights_first_plane = remaining_flights / 2\n\n    # Display the number of flights to France\n    result = frights_first_plane\n    return result"}
{"output": "def solution():\n    \n    tobias_time = 20\n    chikote_time = tobias_time * 2\n    igneous_time = (tobias_time + chikote_time) / 2\n    total_time = tobias_time + chikote_time + igneous_time\n    time_in_minutes = total_time * 60\n    result = time_in_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the trousers\n    initial_cost = 30\n\n    # Define the amount of money Adam's mother gave him\n    mother_money = 6\n\n    # Define the amount of money Adam's father gave him\n    father_money = initial_cost * 2\n\n    # Calculate the total amount of money Adam has\n    total_money = initial_cost + mother_money + father_money\n\n    # Display the total amount of money Adam has to contribute\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define Akbar's age and Alessandro's age\n    akbar_age = 3\n    alessandro_age = 4\n\n    # Calculate the average age of the group\n    average_age = 20 / 4\n\n    # Calculate Helene's age\n    helene_age = 2 * average_age\n\n    # Calculate the total age of the group\n    total_age = akbar_age + alessandro_age + helene_age\n\n    # Calculate the age of Wilfred\n    wilfred_age = total_age - 20\n\n    # Display the age of Wilfred\n    result = wilfred_age\n    return result"}
{"output": "def solution():\n    # Calculate the total amount collected by Walter\n    total_collected = 500 + 1500\n\n    # Calculate the amount donated by Walter's lawyer\n    lawyer_donation = 3 * (total_collected - 200)\n\n    result = lawyer_donation\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and cookies per guest\n    num_guests = 100\n    cookies_per_guest = 15\n\n    # Calculate the total number of cookies\n    total_cookies = num_guests * cookies_per_guest\n\n    # Calculate the number of cookies the bride gave to the church next door\n    cookies_to_church_next_door = total_cookies / 2\n\n    # Calculate the number of people in the church next door\n    num_people_next_door = cookies_to_church_next_door / 15\n\n    # Display the number of people in the church next door\n    result = num_people_next_door\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and kids\n    num_adults = 6\n    num_kids = 4\n\n    # Calculate the total number of slices\n    total_slices = num_adults * 2 + num_kids * 4\n\n    # Calculate the percentage of watermelon each adult gets\n    watermelon_percentage = (num_adults * watermelon_slices / total_slices) * 100\n\n    # Display the percentage of watermelon each adult gets\n    result = watermelon_percentage\n    return result"}
{"output": "def solution():\n    \n    total_time = 9 * 60  # convert 9 inpatients to minutes\n    time_per_inpatient = 20\n    num_appointments = 10\n    time_per_appointment = 30\n    total_time_spent = time_per_inpatient * num_appointments\n    time_left = total_time - total_time_spent\n    result = time_left\n    return result"}
{"output": "def solution():\n    \n    batter_time = 20\n    bake_time = 30\n    cool_time = 2 * 60 + 10\n    total_time = batter_time + bake_time + cool_time + frost_time\n    daily_time = 5 * 60\n    latest_time = daily_time - total_time\n    result = latest_time\n    return result"}
{"output": "def solution():\n    \n    lisa_boxes = 3.5\n    peter_boxes = 4.5\n    total_boxes = 64\n    lisa_bars = lisa_boxes * 3\n    peter_bars = peter_boxes * 4\n    total_bars = lisa_bars + peter_bars\n    bars_per_box = total_bars / total_boxes\n    result = bars_per_box\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per session and the number of students rented per week\n    SESSION_COST = 25\n    REnt_PER_WEEK = 1.5\n\n    # Define the number of students per session and the number of days per week\n    STUDENTS_PER_WEEK = 10\n    DAYS_PER_WEEK = 3\n\n    # Calculate the total number of sessions in a month\n    sessions_per_month = STUDENTS_PER_WEEK * DAYS_PER_WEEK * 4\n\n    # Calculate the expected earnings per month\n    expected_earnings_per_month = sessions_per_month * REENT_COST\n\n    # Display the expected earnings per month\n    result = expected_earnings_per_month\n    return result"}
{"output": "def solution():\n    \n    peter_boxes = 4\n    martha_boxes = 7\n    total_boxes = 64\n    peter_bars = (peter_boxes * peter_bars) / total_boxes\n    martha_bars = 56\n    difference = peter_bars - martha_bars\n    result = difference\n    return result"}
{"output": "def solution():\n    population = 50  # The population of porcupines in the park is 50\n    female_population = (3/5) * population  # The number of female porcupines is 3/5 of the total population\n    babies_per_month = 4  # Each female porcupine gives birth to 4 babies every month\n    months_per_year = 12  # There are 12 months in a year\n\n    # Calculate the total number of porcupines in the park after a year\n    total_porcupines = population + female_population * babies_per_month * months_per_year\n    result = total_porcupines\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the pool\n    width = 14\n    length = 25\n    depth = 4\n\n    # Calculate the volume of the pool\n    volume = width * length * depth\n\n    # Calculate the amount of water needed to fill the pool\n    water_needed = volume / 5.9\n\n    # Calculate the cost to fill the pool\n    cost = water_needed * 0.10\n\n    # Display the cost to fill the pool\n    result = cost\n    return result"}
{"output": "def solution():\n    \n    red_sticks = 9\n    blue_sticks = red_sticks + 5\n    yellow_sticks = blue_sticks - 3\n    total_sticks = red_sticks + blue_sticks + yellow_sticks\n    result = total_sticks\n    return result"}
{"output": "def solution():\n    \n    matteo_speed = 55\n    matteo_hours = 4\n    shandy_speed = 45\n    shandy_hours = 10\n    matteo_distance = matteo_speed * matteo_hours\n    shandy_distance = shandy_speed * shandy_hours\n    difference = shandy_distance - matteo_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_students = 3000\n    over_16_students = total_students / 2\n    male_over_16_students = over_16_students / 4\n    male_under_16_students = total_students / 2\n    male_under_16_students = under_16_students / 2\n    total_female_students = total_students - (over_16_students + male_over_16_students + male_under_16_students)\n    result = total_female_students\n    return result"}
{"output": "def solution():\n    \n    bethany_laps = 10\n    trey_laps = bethany_laps + 4\n    shaelyn_laps = trey_laps / 2\n    quinn_laps = shaelyn_laps - 2\n    difference = bethany_laps - trey_laps - quinn_laps\n    result = difference\n    return result"}
{"output": "def solution():\n    tank_capacity = 18000  # The tank has a capacity of 18000 gallons\n    wanda_filled = tank_capacity * (1/4)  # Wanda filled 1/4 of the tank's capacity with water on the first day\n    wanda_pumped_first_day = wanda_filled * (3/4)  # Wanda pumped 3/4 as much water she pumped on the first day\n    wanda_pumped_second_day = wanda_pumped_first_day * (2/3)  # Wanda pumped 2/3 of the amount of water she pumped on the second day\n\n    # Calculate the total amount of water Wanda pumped in two days\n    total_wanda_pumped = wanda_pumped_first_day + wanda_pumped_first_day + wanda_pumped_second_day\n\n    result = total_wanda_pumped\n    return result"}
{"output": "def solution():\n    # Calculate the total capacity charged by Maria's friends\n    charged_friends_capacity = 0.9 * 0.9 * 2  # 9% of the total capacity each hour\n\n    # Calculate the total capacity charged by Maria's battery for 5 hours later\n    charged_friends_capacity = 0.7 * (0.7 * 3)  # 7% of the total capacity each hour for 3 hours\n\n    # Calculate the final capacity charged by Maria\n    final_capacity = charged_friends_capacity + charged_friends_capacity\n\n    # Calculate the charge charged by Maria\n    charged_charge = 0.28 * final_capacity\n    result = charged_charge\n    return result"}
{"output": "def solution():\n    \n    wages_per_week = 10\n    tips_per_week = 15\n    total_wages = wages_per_week * 40\n    total_tips = tips_per_week * 40\n    total_cost = 10000\n    savings_percentage = 0.2\n    weeks_to_save = (total_cost - total_wages - total_tips) / savings_percentage\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    peach_price = 0.5\n    pear_price = 0.75\n    apple_price = 1\n    kiwis_price = 1\n    plum_price = 0.25\n\n    # Define the number of each item purchased\n    num_peaches = 3\n    num_pears = 4\n    num_kiwis = 2\n    num_apples = 5\n\n    # Calculate the total cost of the peaches\n    peach_cost = num_peaches * peach_price\n\n    # Calculate the total cost of the pears\n    pear_cost = num_peaches * pear_price\n\n    # Calculate the total cost of the kiwis\n    kiwis_cost = num_kiwis * kiwis_price\n\n    # Calculate the total cost of the apples\n    apple_cost = num_apples * apple_price\n\n    # Calculate the total cost of the plums\n    plum_cost = num_plums *"}
{"output": "def solution():\n    \n    # Define the number of packs and pieces of sweets per pack\n    PACKS = 15\n    SWEETS_PER_PACK = 60\n\n    # Calculate the total number of sweets\n    total_sweets = PACKS * SWEETS_PER_PACK\n\n    # Calculate the number of sweets kept\n    sweets_kept = 2 * SWEETS_PER_PACK\n\n    # Calculate the number of sweets given to her friends\n    sweets_given = total_sweets - sweets_kept\n\n    # Calculate the number of sweets each friend received\n    sweets_per_friend = sweets_given // 10\n\n    # Display the number of sweets each friend received\n    result = sweets_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the grocery store\n    initial_price = 120\n\n    # Calculate the new price of the grocery store after 3 years\n    new_price = initial_price + (initial_price * 0.05)\n\n    # Round the price to the nearest integer\n    rounded_price = round(new_price)\n\n    # Display the rounded price\n    result = rounded_price\n    return result"}
{"output": "def solution():\n    total_pictures = 72\n    num_albums = 8\n    num_selfies = 3\n    num_portraits = 2\n\n    # Calculate the number of pics in each album\n    pics_per_album = total_pictures / num_albums\n\n    # Calculate the number of portraits in each album\n    portraits_per_album = pics_per_album - num_selfies - num_portraits\n\n    result = portraits_per_album\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes James to read 3 pages of his book\n    time_3_pages = 10\n\n    # Define the number of pages James reads\n    pages_read = 18\n\n    # Calculate the time it takes James to read the book\n    time_read = pages_read / time_3_pages\n\n    # Calculate the time it takes James to sleep\n    time_sleep = pages_read / time_sleep\n\n    # Calculate the total time James spends reading\n    total_time = time_read + time_sleep\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    hotel_guests = 100\n    early_checkout_guests = 24\n    late_checkout_guests = 15\n    afternoon_guests = 2 * early_checkout_guests\n    after_dinner_guests = early_checkout_guests + late_checkout_guests + afternoon_guests\n    total_guests = hotel_guests + after_dinner_guests\n    result = total_guests\n    return result"}
{"output": "def solution():\n    \n    wednesday_bananas = 4\n    thursday_bananas = 6\n    friday_bananas = 3 * wednesday_bananas\n    total_bananas = wednesday_bananas + thursday_bananas + friday_bananas\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    \n    total_items = 60\n    easy_questions = total_items * 0.4\n    difficult_questions = total_items - easy_questions\n    easy_points = easy_questions * 0.75\n    average_points = average_questions * 0.5\n    difficult_points = difficult_questions * 0.5\n    total_points = easy_points + average_points + difficult_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    large_animal_price = 4\n    num_large_animals = 2\n    total_earned = 120\n\n    # Calculate the total number of small stuffed animals sold today\n    total_small_animals = (total_earned / (large_animal_price * num_large_animals)) / small_animal_price\n\n    # Calculate the total number of small stuffed animals sold\n    total_small_animals = total_small_animals / (large_animal_price * num_small_animals)\n    result = total_small_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sandwiches eaten by each family member per day\n    MAN_SANDWICHES = 5\n    WIFE_SANDWICHES = 4\n    SON_SANDWICHES = 2\n\n    # Define the number of days in a week\n    DAYS_IN_WEEK = 7\n\n    # Calculate the total number of sandwiches eaten by the family in a week\n    total_sandwiches = (MAN_SANDWICHES + WIFE_SANDWICHES + SON_SANDWICHES) * DAYS_IN_WEEK\n\n    # Display the total number of sandwiches eaten\n    result = total_sandwiches\n    return result"}
{"output": "def solution():\n    \n    cookies_sold = 80\n    cookies_price = 1\n    cupcakes_sold = 60\n    cupcakes_price = 4\n    sisters_given = 2 * 10\n    total_earnings = (cookies_sold * cookies_price) + (cupcakes_sold * cupcakes_price)\n    money_left = total_earnings - sisters_given\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_eggs = 100\n    eggs_found_by_smith = 30 * 2\n    eggs_found_by_friends = total_eggs - eggs_found_by_smith - 10\n    result = eggs_found_by_friends\n    return result"}
{"output": "def solution():\n    ore_per_dwarf = 12  # One dwarf can mine 12 pounds of ore per day with his bare hands\n    iron_pickaxe_mine = ore_per_dwarf * 2  # One dwarf can mine twice as much with an iron pickaxe\n    steel_pickaxe_mine = iron_pickaxe_mine * 1.5  # One dwarf can mine 50% more with a steel pickaxe than with an iron pickaxe\n    days_in_month = 30  # There are 30 days in a month\n\n    # Calculate the total amount of ore mine with iron pickaxes in a month\n    total_iron_pickaxe_mine = iron_pickaxe_mine * days_in_month\n\n    # Calculate the total amount of ore mine with steel pickaxes in a month\n    total_ste_pickaxe_mine = steel_pickaxe_mine * days_in_month\n\n    # Calculate the total"}
{"output": "def solution():\n    \n    package1_price = 3\n    package2_price = 6\n    package3_price = 6\n    package1_num_sandwiches = 2\n    package2_num_sandwiches = 4\n    package3_num_sandwiches = 8\n    total_price = (package1_price * package1_num_sandwiches) + (package2_price * package2_num_sandwiches) + (package3_price * package3_num_sandwiches)\n    price_of_8_sandwiches = total_price - (package1_price * package2_num_sandwiches)\n    result = price_of_8_sandwiches\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the bedroom set and the selling price of the old bedroom set\n    bedroom_set_cost = 3000\n    old_bedroom_price = 1000\n\n    # Calculate the total cost of the bedroom set\n    total_cost = bedroom_set_cost - old_bedroom_price\n\n    # Calculate the amount to be paid per month\n    monthly_payment = total_cost * 0.1\n\n    # Display the monthly payment\n    result = monthly_payment\n    return result"}
{"output": "def solution():\n    \n    red_balloons = 25\n    green_balloons = 7\n    yellow_balloons = 12\n    red_burst = red_balloons * 0.4\n    yellow_burst = yellow_balloons * 0.5\n    red_balloons -= red_burst\n    green_balloons -= green_balloons\n    yellow_balloons -= yellow_balloons\n    blue_balloons += 8\n    clutch_balloons = blue_balloons * 0.75\n    total_balloons = red_balloons + green_balloons + yellow_balloons + blue_balloons + clutch_balloons\n    result = total_balloons\n    return result"}
{"output": "def solution():\n    \n    normal_teacher_chance = 0.5\n    personal_teacher_chance = 0.2\n    normal_teacher_total_chance = normal_teacher_chance * 1.4\n    tomorrow_total_chance = tomorrow_total_chance * 1.2\n    total_chance = normal_teacher_total_chance + tomorrow_total_chance\n    percentage_chance = (total_chance / total_chance) * 100\n    result = percentage_chance\n    return result"}
{"output": "def solution():\n    \n    total_people = 6000\n    graduates = 950\n    faculty_attendees = 300\n    total_attendees = graduates + faculty_attendees\n    tickets_per_graduate = total_attendees / total_people\n    result = tickets_per_graduate\n    return result"}
{"output": "def solution():\n    \n    large_beans = 75\n    medium_beans = large_beans * 2\n    small_beans = medium_beans - 3\n    result = small_beans\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 6\n    days_listening = 3\n    court_case_pay = 15\n    parking_pay = 3\n    total_expenses = (hours_per_day * court_case_pay * days_listening) + parking_pay\n    jury_pay_per_hour = total_expenses / total_expenses\n    result = jury_pay_per_hour\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    BOOK_COST = 16\n    PENCIL_COST = 6\n\n    # Define the number of each item purchased\n    num_books = 3\n    num_pencils = 3\n\n    # Calculate the total cost of the books\n    book_cost = num_books * BOOK_COST\n\n    # Calculate the total cost of the pencils\n    pencil_cost = num_pencils * PENCIL_COST\n\n    # Calculate the total cost\n    total_cost = book_cost + pencil_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    driveway_width = 24  # Richard's driveway is 24 feet wide\n    soda_per_bottle = 1/3  # Richard wants to put a bottle of soda every 3 feet of the driveway\n    seconds_per_bottle = 5  # It will take Richard 5 seconds to go from one soda bottle to the next\n\n    # Calculate the total time it will take Richard to set off all the soda bottles\n    total_time = (driveway_width * seconds_per_bottle) + seconds_per_bottle\n    result = total_time\n    return result"}
{"output": "def solution():\n    apples_per_box = 40  # There are 40 apples in one box\n    boxes = 2  # Uncle Franky ordered two boxes of apples\n    apples_per_pack = 8  # Uncle Franky is planning to pack the apples with 8 apples in one pack\n\n    # Calculate the total number of apples Uncle Franky can make\n    total_apples = apples_per_box * boxes\n\n    # Calculate the number of packs of apples Uncle Franky can make\n    packs_of_apples = total_apples // apples_per_pack\n    result = packs_of_apples\n    return result"}
{"output": "def solution():\n    \n    parmesan_price = 11\n    mozzarella_price = 6\n    parmesan_pounds = 2\n    mozzarella_pounds = 3\n    amor_pounds = parmesan_pounds + mozzarella_pounds\n    total_cost = (parmesan_price * parmesan_pounds) + (mozzarella_price * mozzarella_pounds)\n    money_left = 50 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    years_to_finish = 4\n    loans_per_year = 50000\n    years_before_college = 25\n    income_per_year = loans_per_year * years_before_college\n    total_income = income_per_year * years_to_finish\n    years_to_earn = total_income / income_per_year\n    result = years_to_earn\n    return result"}
{"output": "def solution():\n    \n    bed_length = 6\n    bed_width = 8\n    bed_fabric_length = bed_length + 2\n    bed_fabric_width = bed_width + 2\n    total_fabric_length = bed_fabric_length * bed_fabric_width\n    result = total_fabric_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters delivered on Monday\n    monday_letters = 425\n\n    # Calculate the number of letters delivered on Tuesday\n    tuesday_letters = monday_letters * 1/5\n\n    # Calculate the number of letters delivered on Wednesday\n    wednesday_letters = 2 * tuesday_letters + 5\n\n    # Display the number of letters delivered on Wednesday\n    result = wednesday_letters\n    return result"}
{"output": "def solution():\n    num_people = 16\n    chicken_salad_price = 6.5\n    pasta_salad_price = 6.0\n    num_chicken_salad = 10\n    num_pasta_salad = 6\n\n    # Calculate the total cost of all chicken salad\n    total_chicken_cost = num_people * chicken_salad_price\n\n    # Calculate the total cost of all pasta salad\n    total_pasta_cost = num_people * pasta_salad_price\n\n    # Calculate the total cost of all catering salad\n    total_cost = total_chicken_cost + total_pasta_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    first_race_loss = 5\n    second_race_loss = 2 * first_race_loss + 1\n    third_race_loss = 1.5 * second_race_loss\n    total_loss = first_race_loss + second_race_loss + third_race_loss\n    average_loss = total_loss / 3\n    result = average_loss\n    return result"}
{"output": "def solution():\n    num_countries = 26\n    num_cities = 5\n    population_per_city = 1000\n\n    # Calculate the total population of all cities\n    total_population = num_countries * num_cities * population_per_city\n\n    # Calculate the number of people in South America\n    num_south_america = total_population / 2\n    result = num_south_america\n    return result"}
{"output": "def solution():\n    \n    xavier_height = 4 * 12 + 3\n    cole_height = 50\n    cole_growth = 2\n    summer_height = xavier_height + cole_growth\n    difference = summer_height - summer_height\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_amount = 1920\n    second_share = total_amount + 80\n    third_share = second_share * 2\n    first_share = total_amount / 3\n    result = first_share\n    return result"}
{"output": "def solution():\n    \n    painters_per_day = 4\n    days_per_week = 7\n    weeks = 3\n    total_painters = painters_per_day * days_per_week * weeks\n    hours_per_painter = total_painters / total_painters\n    result = hours_per_painter\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tennis balls Rory retrieved in the first set\n    set1_balls = 19\n\n    # Calculate the number of tennis balls Rory retrieved in the second set\n    set2_balls = set1_balls + 4\n\n    # Calculate the number of tennis balls Rory retrieved in the third set\n    set3_balls = set2_balls / 2\n\n    # Calculate the total number of tennis balls Rory retrieved\n    total_balls = set2_balls + set3_balls\n\n    # Calculate the number of tennis balls Rory retrieved in the first set\n    first_set_balls = total_balls - total_balls\n\n    # Display the number of tennis balls Rory retrieved in the first set\n    result = first_set_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the car and the depreciation rate\n    initial_cost = 20000\n    depreciation_rate = 0.21\n\n    # Calculate the price of the car after the depreciation rate\n    price_after_depreciation = initial_cost * depreciation_rate\n\n    # Calculate the price of the car in the year 2010\n    price_in_year_2010 = price_after_depreciation * 365\n\n    # Display the price of the car in the year 2010\n    result = price_in_year_2010\n    return result"}
{"output": "def solution():\n    \n    total_books = 50\n    english_books = total_books / 2\n    german_books = total_books * 0.1\n    Spanish_books = total_books - english_books - german_books\n    result = Spanish_books\n    return result"}
{"output": "def solution():\n    \n    total_distance = 1955\n    daily_distance = 325\n    num_days = 4\n    remaining_distance = total_distance - (daily_distance * num_days)\n    result = remaining_distance\n    return result"}
{"output": "def solution():\n    \n    cups_per_day = 8\n    cups_per_gallon = 16\n    days = 30\n    total_cups = cups_per_day * days\n    total_gallons = total_cups / cups_per_gallon\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 120\n\n    # Calculate the number of people on the train at the first stop\n    first_stop_people = initial_people + 20\n\n    # Calculate the number of people on the train at the second stop\n    second_stop_people = 50 + 2 * 50\n\n    # Calculate the number of people on the train at the third station\n    third_stop_people = 80\n\n    # Calculate the total number of people on the train at the final stop\n    final_people = initial_people + second_stop_people + third_stop_people\n\n    # Display the total number of people on the train at the final stop\n    result = final_people\n    return result"}
{"output": "def solution():\n    \n    top_price = 10\n    running_shorts_price = top_price + 5\n    tennis_shoes_price = 48 / 2\n    socks_price = 8\n    total_price = top_price + running_shorts_price + tennis_shoes_price + socks_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    area = 200  # The area of the kitchen floor is 200 SqFt\n    tile_cost = 12  # Each tile costs $12\n    tile_side_length = 1  # Each tile side is 1ft in length\n\n    # Calculate the total length of the new square floor tiles\n    total_tile_length = area * tile_side_length\n\n    # Calculate the total cost of the new square floor tiles\n    total_tile_cost = total_tile_length * tile_cost\n\n    # Calculate the total cost of renovating the kitchen floor\n    total_cost = area * total_tile_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    normal_cost = 120\n    increase_percent = 60\n    increase_amount = normal_cost * (increase_percent / 100)\n    total_cost_per_month = normal_cost + increase_amount\n    total_cost_per_year = total_cost_per_month * 12\n    result = total_cost_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of beds and king size bed used per week\n    beds_per_week = 4\n    king_size_beds_per_week = 1\n\n    # Define the number of sets of sheets Greg can wash per week\n    twin_sets_per_week = 2\n    king_sets_per_week = 1\n\n    # Define the number of weeks in a year\n    weeks_per_year = 52\n\n    # Calculate the total number of sheets Greg can clean in a year\n    total_sheets = (beds_per_week * beds_per_week * weeks_per_year) * sheets_per_beds_per_week * weeks_per_year\n\n    # Calculate the number of loads of laundry Greg can do in a year\n    loads_per_year = total_sheets / twin_sets_per_week * weeks_per_year\n\n    # Return the result\n    result = loads_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies watched on Saturday\n    saturday_movies = 4\n\n    # Calculate the number of movies watched on Sunday\n    sunday_movies = saturday_movies / 2\n\n    # Calculate the total number of movies watched in 4 weeks\n    total_movies = (saturday_movies + sunday_movies) * 4 * 4\n\n    # return the result\n    result = total_movies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 100\n\n    # Calculate the number of stickers collected last year\n    last_year_stickers = 50\n\n    # Calculate the number of stickers collected this year\n    this_year_stickers = 2 * last_year_stickers\n\n    # Calculate the total number of stickers collected\n    total_stickers = initial_stickers + last_year_stickers + this_year_stickers\n\n    # return the result\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    num_cats = 3\n    cat_food_per_day = 60\n    num_days = 0\n    total_cat_food = 720\n\n    # Calculate the total amount of cat food used per day\n    total_cat_food_per_day = cat_food_per_day * num_cats\n\n    # Calculate the total amount of cat food used per day\n    total_cat_food_per_day = total_cat_food / cat_food_per_day\n\n    # Calculate the number of days the cat food will last\n    num_days = total_cat_food_per_day / total_cat_food_per_day\n    result = num_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per pizza\n    SLICES_PER_PIZZA = 8\n\n    # Define the number of pizzas shared\n    num_pizzas = 4\n\n    # Calculate the total number of slices\n    total_slices = num_pizzas * SLICES_PER_PIZZA\n\n    # Calculate the number of slices Becky ate\n    becky_slices = becky_slices + 3\n\n    # Calculate the number of slices Jake ate\n    jake_slices = becky_slices - 3\n\n    # Calculate the number of slices Silvia ate\n    silvia_slices = jake_slices * 2\n\n    # Calculate the total number of slices eaten\n    total_slices_eaten = becky_slices + jake_slices + silvia_slices\n\n    # Display the total number of slices eaten\n    result = total_slices_eaten\n    return result"}
{"output": "def solution():\n    meal_length = 98  # The meal was made in 98 minutes\n    donovan_length = meal_length - 18  # Betsy's part took 18 minutes longer than Donovan's part\n    betsy_length = donovan_length + 18  # Betsy's part took 18 minutes longer than Donovan's part\n\n    result = betsy_length\n    return result"}
{"output": "def solution():\n    cast_cost = 200  # The doctor charges her $200 for the cast\n    visit_cost = 300 * 60  # The doctor charges her $300 per hour for a 30-minute visit\n    pill_cost = 4 * 30  # The doctor charges $4/pill for 30 painkillers\n    parking_cost = 6 * 2  # The doctor charges the doctor for a mandatory minimum of 2 hours of parking\n\n    # Calculate the total cost of the doctor's visit\n    total_cost = cast_cost + visit_cost + painkiller_cost + parking_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of emails James gets per day and the percentage of them don't require any response\n    emails_per_day = 80\n    no_response_percentage = 0.2\n\n    # Calculate the number of emails James responds to in a day\n    emails_per_day = emails_per_day - (emails_per_day * no_response_percentage)\n\n    # Calculate the number of emails James responds to in a week\n    emails_per_week = emails_per_day * 5\n\n    # Display the number of emails James responds to in a week\n    result = emails_per_week\n    return result"}
{"output": "def solution():\n    \n    monday_visited = 32\n    tuesday_visited = monday_visited * 2\n    wednesday_visited = tuesday_visited * 3\n    thursday_visited = 30\n    friday_visited = 25\n    total_visited = monday_visited + tuesday_visited + wednesday_visited + thursday_visited + friday_visited\n    result = total_visited\n    return result"}
{"output": "def solution():\n    \n    first_three_score = 100\n    fourth_score = 80\n    total_score = first_three_score + fourth_score\n    num_tests = 4\n    average_score = total_score / num_tests\n    result = average_score\n    return result"}
{"output": "def solution():\n    \n    glee_club_pizzas = 20\n    glee_club_eaten = glee_club_pizzas * 0.7\n    football_team_pizzas = glee_club_pizzas * 2\n    football_team_eaten = football_team_pizzas * 0.8\n    total_pizzas = glee_club_eaten + football_team_eaten\n    pizzas_left = total_pizzas - total_pizzas\n    result = pizzas_left\n    return result"}
{"output": "def solution():\n    small_coupons = 700  # Anthony wants to send out 700 small coupons\n    big_coupons = 2 * small_coupons  # Anthony wants to send out twice as many big coupons as small coupons\n    small_coupon_cost = 5  # Each small coupon costs 5 cents\n    big_coupon_cost = 15  # Each big coupon costs 15 cents\n\n    # Calculate the total cost of postage\n    total_cost = (small_coupons * small_coupon_cost) + (big_coupons * big_coupon_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of meatballs in one sub sandwich\n    MEATBALLS_PER_SUB_SANDWICH = 4\n\n    # Calculate the number of meatballs Sidney ordered\n    sidney_ordered = 10 - 3\n\n    # Calculate the number of meatballs Mark ate\n    mark_ate = 4\n\n    # Calculate the total number of meatballs\n    total_meatballs = sidney_ordered + mark_ate + 3\n\n    # Calculate the number of meatballs remaining\n    remaining_meatballs = MEATBALLS_PER_SUB_SANDWICH - total_meatballs\n\n    # Display the number of meatballs remaining\n    result = remaining_meatballs\n    return result"}
{"output": "def solution():\n    trucks = 20  # Mr Hezekiah had 20 trucks\n    tons_per_truck = 20  # Each truck is carrying 20 tons of fertiliser packed in bags\n    departed_trucks = 2  # Two hours after departing trucks\n    mechanical_failures = departed_trucks / 4  # A quarter of the number of lorries dispatched for delivery had mechanical failures on the road\n\n    # Calculate the total number of tons of fertilisers\n    total_fertilisers = trucks * tons_per_truck\n\n    # Calculate the total number of tons of fertilisers\n    total_tons = total_trucks * tons_per_truck\n    result = total_tons\n    return result"}
{"output": "def solution():\n    croissants_per_dozen = 12  # Dennis needs 6 dozen croissants\n    butter_per_dozen = 1  # Dennis uses 1 pound of butter for every dozen croissants he makes\n    total_croissants = 6  # Dennis needs to make 6 dozen croissants\n\n    # Calculate the total amount of butter needed\n    total_butter = croissants_per_dozen * butter_per_dozen\n\n    # Calculate the amount of butter the promotion will get\n    discounted_butter = total_butter / 2\n\n    # Calculate the total cost of 6 pounds of butter\n    total_cost = discounted_butter * 4.00\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of renting the party\n    rental_cost = 125 + 6  # $125 for the party, plus $6 for each additional guest\n\n    # Calculate the total cost of the party\n    total_cost = rental_cost + 25 + 7 + 13  # 25 classmates, 7 girls, and 13 family members\n\n    # Calculate the total cost of the party\n    total_cost = total_cost + 125  # $125 for the party, plus $6 for each additional guest\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money each person had\n    each_money = 60\n\n    # Calculate the amount of money Maggie spent\n    maggie_spent = each_money / 4\n\n    # Calculate the amount of money Riza spent\n    riza_spent = each_money / 3\n\n    # Calculate the total amount of money the two of them have\n    total_money = maggie_spent + riza_spent\n\n    # Calculate the amount of money the two of them have left\n    money_left = total_money - total_money\n\n    # Display the amount of money the two of them have left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_bananas = 315\n    first_monkey_bananas = 10\n    second_monkey_bananas = first_monkey_bananas + 4\n    third_monkey_bananas = total_bananas - first_monkey_bananas - second_monkey_bananas\n    result = third_monkey_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of puzzle pieces\n    initial_pieces = 500\n\n    # Calculate the number of puzzle pieces after the first half\n    pieces_after_half = initial_pieces / 2\n\n    # Calculate the number of puzzle pieces after the second half\n    pieces_after_second_half = pieces_after_half + 500\n\n    # Display the number of puzzle pieces after the second half\n    result = pieces_after_second_half\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the flowers\n    total_cost = (15 * 2) + (15 * 12)  # 15 roses cost $2 each and $15 for a dozen\n\n    # Calculate the amount of change Jenny received\n    change = 5 * 5  # 5 dollar bills and 5 dollar bills\n\n    # Calculate the number of quarters Jenny leave with\n    quarters_left = total_cost - change\n    result = quarters_left\n    return result"}
{"output": "def solution():\n    # Calculate the total revenue from milkshakes\n    milkshakes_revenue = 6 * 5.5\n\n    # Calculate the total revenue from burger platters\n    burger_platters_revenue = 9 * 11\n\n    # Calculate the total revenue from sodas\n    sodas_revenue = 20 * 1.5\n\n    # Calculate the total revenue\n    total_revenue = milkshakes_revenue + burger_platters_revenue + sodas_revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    first_train_arrival_time = 10\n    first_train_stay_in_station = 20\n    second_train_arrival_time = 0.5 * first_train_arrival_time\n    second_train_stay_in_station = (1/4) * second_train_arrival_time\n    third_train_arrival_time = (1/4) * first_train_arrival_time\n    total_time = first_train_stay_in_station + second_train_stay_in_station + third_train_arrival_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toothpicks needed and the number of weeks it will take to save them\n    toothpicks_needed = 200\n    weeks_to_save = 12\n\n    # Calculate the total number of toothpicks saved\n    total_saved = 10 * weeks_to_save\n\n    # Calculate the number of remaining toothpicks to collect\n    remaining_toothpicks = toothpicks_needed - total_saved\n\n    # Calculate the number of weeks it will take to collect the remaining toothpicks\n    weeks_to_collect = remaining_toothpicks / total_saved\n\n    # Display the number of weeks it will take to collect the remaining toothpicks\n    result = weeks_to_collect\n    return result"}
{"output": "def solution():\n    original_price = 2000  # The original price of the watch is $2000\n    bought_price = 0.75 * original_price  # Mr. Rogers bought the watch at 75% of its original price\n    sold_price = 0.120 * original_price  # Mr. Roger sold the watch to 120% of the original price\n\n    # Calculate the percentage discount obtained by Mr. Roger's friend\n    discount = (sold_price - bought_price) * 100\n    result = discount\n    return result"}
{"output": "def solution():\n    \n    springs_per_hour = 5\n    hours = 4\n    jellyfish_per_second = 1\n    total_jellyfish = springs_per_hour * jellyfish_per_second * hours\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    binkie_score = 90  # Binkie bowled a score of 90\n    frankie_score = 2 * binkie_score + 15  # Frankie's score was 15 more than twice as high as Binkie's\n    result = frankie_score\n    return result"}
{"output": "def solution():\n    # Calculate the time it took James to walk to the store\n    time_to_store = 4 / 4  # James walks 4 miles per hour at home\n\n    # Calculate the time it took James to walk back\n    time_back = time_to_store / 2  # James walks halfway at home\n\n    # Calculate the total time it took James to reach the store\n    total_time = time_to_store + time_back\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of bananas per bunch and the number of bunches purchased\n    BANANAS_PRICE = 0.80\n    BUNE_NUM_BUNDS = 10\n\n    # Define the number of bananas per bunch and the number of bunches purchased\n    BANANAS_PER_BUNDS = 4\n    BUNE_NUM_BUNDS = BANANAS_PER_BUNDS * BUNE_NUM_BUNDS\n\n    # Calculate the cost of buying bananas individually\n    banana_cost_individual = BANANAS_PER_BUNDS * BANANA_PRICE\n\n    # Calculate the amount saved by buying bananas instead of individually\n    amount_saved = banana_cost_individual - 3.00\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    total_fence = 100\n    harry_fence = (total_fence - 60) / 2\n    sam_fence = total_fence - harry_fence\n    result = sam_fence\n    return result"}
{"output": "def solution():\n    \n    # Define the growth rate of the crocodile\n    GROWTH_RATE = 8 / 4\n\n    # Calculate the growth of the crocodile in 13 years\n    growth_in_13_years = GROWTH_RATE * 13\n\n    # Display the growth in 13 years\n    result = growth_in_13_years\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of bike\n    MTB_PRICE = 500\n    BMX_PRICE = MTB_PRICE / 2\n    TREKKING_PRICE = 450\n\n    # Calculate the number of Trekking bikes sold\n    trekking_bikes = 300 / 2\n\n    # Calculate the number of BMX bikes sold\n    bMX_bikes = trekking_bikes * 0.15\n\n    # Calculate the number of Trekking bikes sold\n    trekking_bikes = 300 - trekking_bikes\n\n    # Calculate the number of BMX bikes sold\n    bMX_bikes = bMX_bikes * BMX_PRICE\n\n    # Calculate the number of Trekking bikes sold\n    trekking_bikes = trekking_bikes * TREKKING_PRICE\n\n    # Calculate the total revenue\n    total_rekking_re"}
{"output": "def solution():\n    \n    farmer_bales = 5 * 6\n    truck_bales = 3 * 6\n    remaining_bales = farmer_bales - truck_bales\n    result = remaining_bales\n    return result"}
{"output": "def solution():\n    \n    # Define the number of periods and extra classes per week\n    periods_per_day = 6\n    extra_classes_per_week = 2\n\n    # Define the length of each class in minutes\n    class_length = 40\n\n    # Define the number of days per week\n    days_per_week = 5\n\n    # Calculate the total number of extra classes per week\n    extra_classes_per_week = classes_per_week * extra_classes_per_week\n\n    # Calculate the total time spent learning per week\n    total_learning_time = (extra_classes_per_week * class_length) / 16\n\n    # Calculate the total hours spent learning per week\n    total_learning_hours = total_learning_time / 60\n\n    # Display the total hours spent learning per week\n    result = total_learning_hours\n    return result"}
{"output": "def solution():\n    \n    starting_height = (2/3) * 24\n    second_bounce_height = starting_height - starting_height\n    result = second_bounce_height\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the first child\n    child1_height = 6\n\n    # Define the height of the second child\n    child2_height = child1_height + 2\n\n    # Define the height of the third child\n    child3_height = child2_height - 5\n\n    # Define the height of the fourth child\n    child4_height = child3_height + 3\n\n    # Display the height of the fourth child\n    result = child4_height\n    return result"}
{"output": "def solution():\n    # Calculate the total number of apples sold in one day\n    total_apples_per_day = 2000\n\n    # Calculate the total number of bags sold in one day\n    bags_sold = total_apples_per_day / 10\n\n    # Calculate the total earnings from selling the apples in one bag\n    earnings_per_bag = 5 * bags_sold\n    result = earnings_per_bag\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of meat on the triceratops\n    initial_meat = 270\n\n    # Calculate the amount of meat the triceratops had hunted before the T-Rex ate\n    rex_ate = initial_meat / 2\n\n    # Calculate the amount of meat the pack of velociraptors had left after the T-Rex ate\n    remaining_meat = initial_meat - rex_ate\n\n    # Calculate the amount of meat the pack of velociraptors had scavenged\n    scavened_meat = remaining_meat / 2\n\n    # Calculate the final amount of meat on the triceratops\n    final_meat = remaining_meat - scavened_meat\n\n    # Display the final amount of meat\n    result = final_meat\n    return result"}
{"output": "def solution():\n    \n    north_wall_area = 10 * 8\n    east_wall_area = 5 * 8\n    total_area = north_wall_area + east_wall_area\n    gallons_of_paint = total_area / 20\n    cost_per_gallon = 12\n    total_cost = gallons_of_paint * cost_per_gallon\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sodas\n    initial_sodas = 12\n\n    # Calculate the number of sodas shaked up\n    shaked_sodas = initial_sodas - 3\n\n    # Calculate the number of sodas taken by Ellen's brother\n    brother_sodas = 1 + 2\n\n    # Calculate the total number of sodas taken\n    total_sodas_taken = shaked_sodas + brother_sodas\n\n    # Calculate the probability of spraying with soda\n    probability = total_sodas_taken / total_sodas_taken * 100\n\n    # Display the probability\n    result = probability\n    return result"}
{"output": "def solution():\n    # Calculate the distance traveled by the first train in 3 hours\n    distance_train1 = 60 * 3\n\n    # Calculate the distance traveled by the second train in 3 hours\n    distance_train2 = 0.5 * 60 * 3\n\n    # Calculate the total distance traveled by both trains in 3 hours\n    total_distance = distance_train1 + distance_train2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the number of people Billy can help in a day\n    people_per_day = 2 * 3  # Billy can help 2 people per hour for 3 hours a day\n\n    # Calculate the total number of people Billy can help in a day\n    people_per_day = people_per_day * 31  # 31 days in March\n\n    # Calculate the number of people Billy takes for March 1st and April 19th off\n    people_between_1st_and_april = people_per_day * 0.8  # 20% of the days between March 1st and April 19th off\n\n    # Calculate the total number of people Billy can help in all the days\n    total_people = people_per_day + people_between_1st_and_april\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars and buses\n    num_cars = 20\n    num_buses = 12\n\n    # Define the number of people carried by each bus\n    num_people_per_bus = 35\n\n    # Define the number of people carried by each bus\n    num_people_per_bus = 3\n\n    # Calculate the total number of people before the ceremony\n    total_people_before = num_cars * num_people_per_bus\n\n    # Calculate the total number of people after the ceremony\n    total_people_after = num_buses * num_people_per_bus\n\n    # Calculate the total number of people inside the church\n    total_people = total_people_before + total_people_after\n\n    # return the result\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    mike_age = 24\n    martha_age = mike_age - 4\n    jeff_age = martha_age + 10\n    result = jeff_age\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes to ride the biggest slide\n    time_biggest_waterslide = (240 - 60) / 60  # time taken to ride the biggest slide\n\n    # Calculate the time it takes to ride the second biggest slide\n    time_biggest_waterslide = (240 - 80) / 80  # time taken to ride the second biggest slide\n\n    # Calculate the difference in time between the two biggest waterslide and the second biggest slide\n    time_difference = time_biggest_waterslide - time_biggest_waterslide\n    result = time_difference\n    return result"}
{"output": "def solution():\n    lunch_time = 30  # Bobby takes a 30 min lunch\n    break_time = 2  # Bobby takes 2 15 minutes break per day\n    num_days = 5  # Bobby wants to know how many hours his lunches and breaks add up to\n\n    # Calculate the total time Bobby spends lunches in 5 days\n    total_lunch_time = lunch_time * num_days\n\n    # Calculate the total time Bobby spends breakes in 5 days\n    total_break_time = break_time * num_days\n\n    # Calculate the total time Bobby spends lunches and breaks in 5 days\n    total_time = total_lunch_time + total_break_time\n\n    # Convert the total time to hours\n    hours = total_time / 60\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    amber_miles = 8\n    micah_miles = 3.5 * amber_miles\n    ahito_miles = 52 - amber_miles - micah_miles\n    result = ahito_miles\n    return result"}
{"output": "def solution():\n    \n    initial_balance = 85\n    item_cost = 15\n    sale_price = 20\n    towels_price = 30\n    sale_discount = 0.2\n    towels_discount = 0.1\n    new_balance = initial_balance - (item_cost * sale_discount) - (item_cost * towels_discount) - (item_cost * towels_discount)\n    result = new_balance\n    return result"}
{"output": "def solution():\n    \n    large_jellyfish = 6\n    blue_jellyfish = large_jellyfish / 3\n    green_blue_jellyfish = blue_jellyfish / 3\n    total_jellyfish = large_jellyfish + green_blue_jellyfish + blue_jellyfish\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    # Define Chris's age\n    chris_age = 4\n\n    # Calculate Ben's age\n    ben_age = chris_age * 2\n\n    # Calculate Caroline's age\n    caroline_age = ben_age * 3\n\n    # Display Caroline's age\n    result = caroline_age\n    return result"}
{"output": "def solution():\n    \n    current_salary = 100000\n    annual_salary = current_salary * 0.4\n    years_to_save = (current_salary - annual_salary) / 0.2\n    result = years_to_save\n    return result"}
{"output": "def solution():\n    total_length = 100  # Marty has 100 centimeters of ribbon\n    num_parts = 4  # Marty needs to cut into 4 equal parts\n    num_parts_per_part = 5  # Each part must be divided into 5 equal parts\n\n    # Calculate the length of each part\n    part_length = total_length / num_parts_per_part\n\n    # Calculate the length of each final cut\n    final_cut_length = part_length / num_parts_per_part\n    result = final_cut_length\n    return result"}
{"output": "def solution():\n    # Calculate the number of girls in the school\n    num_girls = 0.4 * 240  # 40% of a school population is made up of 240 boys\n    result = num_girls\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the pots and garden soil\n    POTS_PRICE = 19\n    SOIL_PRICE = 26\n\n    # Define the coupon amount\n    COUPON_AMOUNT = 7\n\n    # Calculate the total cost before the coupon\n    total_cost_before_coupon = POTS_PRICE + SOIL_PRICE\n\n    # Calculate the total cost after the coupon\n    total_cost_after_coupon = total_cost_before_coupon - COUPON_AMOUNT\n\n    # Display the total cost after the coupon\n    result = total_cost_after_coupon\n    return result"}
{"output": "def solution():\n    # Calculate the total height of heels at the party\n    total_height = 3 * 4 + 3 * 2  # three wearing 4 inch heels and three wearing 2 inch heels\n\n    # Calculate the average height of heels\n    average_height = total_height / 3\n    result = average_height\n    return result"}
{"output": "def solution():\n    \n    total_distance = 9300\n    walking_distance = 125 * 2\n    remaining_distance = total_distance - walking_distance\n    additional_distance_per_day = remaining_distance / 30\n    result = additional_distance_per_day\n    return result"}
{"output": "def solution():\n    num_red_balls = 3\n    red_ball_price = 9\n\n    num_blue_balls = 11\n    blue_ball_price = 5\n\n    num_green_balls = 25\n    green_ball_price = 3\n\n    # Calculate the total revenue from all red balls\n    total_red_revenue = num_red_balls * red_ball_price\n\n    # Calculate the total revenue from all blue balls\n    total_blue_revenue = num_blue_balls * blue_ball_price\n\n    # Calculate the total revenue from all green balls\n    total_green_revenue = num_green_balls * green_ball_price\n\n    # Calculate the total revenue from all balls\n    total_revenue = total_red_revenue + total_blue_revenue + total_green_revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    total_apples = 12\n    peter_apples = total_apples / 4\n    paul_apples = total_apples / 3\n    james_apples = total_apples - peter_apples - paul_apples\n    result = james_apples\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 2\n    decreased_temp = 8\n    increased_temp = 3\n    final_temp = initial_temp - decreased_temp + increased_temp\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    starting_money = 21\n    saved_money = 11\n    comic_book_cost = 5\n    puzzle_cost = 19\n    total_spent = comic_book_cost + puzzle_cost\n    money_left = starting_money - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    budget = 16  # Anna had a budget of $16\n    spent_money = 4  # Anna has already spent $4\n    num_books = 2  # Anna bought 2 books today\n    remaining_budget = 2  # Anna has $2 left in her budget\n\n    # Calculate the total amount spent on books\n    total_spent = spent_money + remaining_money\n\n    # Calculate the total cost of the books\n    total_cost = total_spent + remaining_money\n\n    # Calculate the cost of each of the books\n    cost_per_book = total_cost / num_books\n    result = cost_per_book\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students enrolled last year\n    last_year_students = 50\n\n    # Calculate the number of students enrolled this year\n    this_year_students = last_year_students * 1.2\n\n    # Display the number of students enrolled this year\n    result = this_year_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the light blinks and the time it takes to blink them\n    num_blinks = 255\n    time_per_blink = 5\n\n    # Calculate the total time it will take to blink 459 times\n    total_time = num_blinks * time_per_blink\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of male guppies, female guppies, and female goldfishes\n    male_guppies = 4\n    female_guppies = 7\n    female_guppies = 3\n    female_guppies = 5\n\n    # Define the number of male guppies, female goldfishes, and female goldfishes purchased\n    male_guppies = 2\n    female_guppies = 1\n    male_goldfishes = 2\n    female_goldfishes = 3\n\n    # Calculate the total number of male fishes\n    total_male_fishes = male_guppies + female_guppies + female_guppies\n\n    # Calculate the total number of female fishes\n    total_female_fishes = male_guppies + female_guppies + female"}
{"output": "def solution():\n    \n    amalia_time = 4\n    megan_time = amalia_time + 2\n    dior_time = amalia_time + 4\n    total_time = amalia_time + megan_time + dior_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    visits_per_month = 2  # John visits his parents twice a month\n    speed = 70  # John's speed in miles per hour\n    time_per_trip = 2  # It takes John 2 hours to drive at a speed of 70 mph\n\n    # Calculate the distance John travels in a round trip\n    distance_round_trip = speed * time_per_trip\n\n    # Calculate the total distance John travels in a month\n    total_distance = distance_round_trip * visits_per_month\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    sofie_days = 7\n    sofie_distance = 10 * sofie_days\n    brian_days = 7 - sofie_days\n    brian_distance = brian_days * brian_distance\n    result = brian_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of toys and the number of workers available\n    total_toys = 400\n    workers_available = 5\n\n    # Calculate the number of toys produced by the first 2 workers\n    toys_first_two_workers = 6 * 2\n\n    # Calculate the number of toys produced by the second 2 workers\n    toys_second_two_workers = 4 * 2\n\n    # Calculate the total number of toys produced by the fifth worker\n    toys_fifth_worker = total_toys - toys_first_two_workers - toys_second_two_workers - 20\n\n    # Calculate the number of toys per hour produced by the fifth worker\n    toys_per_hour = toys_fifth_worker / 5\n\n    # Display the number of toys per hour produced by the fifth worker\n    result = toys_per_hour\n    return result"}
{"output": "def solution():\n    \n    kory_dog_weight = 60\n    elijah_dog_weight = kory_dog_weight / 4\n    total_weight = elijah_dog_weight + kory_dog_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 0\n\n    # Calculate the number of stickers given to Luis\n    luis_stickers = initial_stickers / 2\n\n    # Calculate the number of stickers given to Kris\n    kris_stickers = 9\n\n    # Calculate the number of stickers given to Rob\n    rob_stickers = 7\n\n    # Calculate the number of stickers given to Seth\n    seth_stickers = luis_stickers / 2\n\n    # Calculate the number of stickers Seth had in the beginning\n    seth_stickers = seth_stickers + kris_stickers - rob_stickers\n\n    # Display the number of stickers Seth had in the beginning\n    result = seth_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each large bag in ounces\n    LARGE_BAG_WEIGHT = 10\n\n    # Define the number of large bags purchased\n    large_bags = 3\n\n    # Define the size of each M&M in ounces\n    MMs_PER_OUNCE = 30\n\n    # Calculate the total weight of the large bags\n    total_large_weight = large_bags * LARGE_BAG_WEIGHT\n\n    # Calculate the maximum number of small bags that can be made\n    max_small_bags = total_large_weight // MMs_PER_OUNCE\n\n    # Display the maximum number of small bags\n    result = max_small_bags\n    return result"}
{"output": "def solution():\n    distance_per_day = 400  # Alfie flies 400 kilometers every day\n    total_distance = 40000  # The circumference of the earth is 40,000 kilometers\n    half_distance = total_distance / 2  # Alfie wants to fly a distance equal to half of the way around the earth\n\n    # Calculate the number of days it will take Alfie to fly a distance equal to half the way around the earth\n    days_to_fly_distance = half_distance / distance_per_day\n    result = days_to_fly_distance\n    return result"}
{"output": "def solution():\n    \n    average_car_speed = 120\n    fastest_car_speed = average_car_speed * 5\n    faster_car_speed = 2.25 * fastest_car_speed\n    result = faster_car_speed\n    return result"}
{"output": "def solution():\n    \n    liam_age_now = 16\n    vince_age_two_years_ago = (liam_age_now - 2) / 2\n    vince_age_now = vince_age_two_years_ago + 2\n    result = vince_age_now\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs painted by Arnold\n    arnold_eggs = 56\n\n    # Calculate the number of eggs painted by Madeline\n    madeline_eggs = 56 - arnold_eggs\n\n    # Calculate the number of eggs painted by Sarah\n    sarah_eggs = 30\n\n    # Calculate the number of eggs painted by Camden\n    camden_eggs = sarah_eggs + 12\n\n    # Calculate the difference between Camden and Arnold\n    difference = camden_eggs - arnold_eggs\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of crayons and the weight of each box\n    num_crayons = 200\n    box_weight = 8\n\n    # Calculate the total weight of all the crayons\n    total_weight = num_crayons * box_weight\n\n    # Calculate the weight of all the boxes\n    num_boxes = num_crayons // 8\n    if num_crayons % 8!= 0:\n        num_boxes += 1\n\n    # Calculate the total weight in pounds\n    total_weight_pounds = num_boxes * 16\n\n    # Display the total weight in pounds\n    result = total_weight_pounds\n    return result"}
{"output": "def solution():\n    tree_length = 80  # John cuts down an 80-foot tree\n    logs_per_foot = 4  # John cuts the tree into 4-foot logs\n    total_logs = tree_length * logs_per_foot  # John can make logs out of 80% of the tree\n    planks_cut = 5  # John cuts the logs into 5 planks\n    price_per_plank = 1.2  # John sells each plank for $1.2\n\n    # Calculate the total number of planks John can make\n    total_planks = total_logs / planks_cut\n\n    # Calculate the total revenue from selling the logs\n    total_revenue = total_planks * price_per_plank\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    # Define Valerie's monthly earnings\n    valerie_earnings = 5000\n\n    # Calculate the brother's monthly earnings\n    brother_earnings = valerie_earnings / 2\n\n    # Calculate the combined salary of Valerie and her brother\n    combined_salary = valerie_earnings + brother_earnings\n\n    # Calculate the mother's monthly earnings\n    mother_earnings = combined_salary * 2\n\n    # Calculate the total amount of money they all have together\n    total_money = valerie_earnings + brother_earnings + mother_earnings\n\n    # Display the total amount of money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    beach_distance = 3\n    sidewalk_distance = 1\n    beach_speed = 2\n    sidewalk_speed = 2 * beach_speed\n    total_distance = beach_distance + sidewalk_distance\n    time_spent_on_beach = 40\n    time_spent_on_sidewalk = total_distance * time_spent_on_beach / beach_speed\n    time_spent_on_sidewalk = time_spent_on_sidewalk / sidewalk_speed\n    total_time = time_spent_on_beach + time_spent_on_sidewalk\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    weekly_allowance = 4\n    total_allowance = 60\n    weeks = 0\n    while total_allowance < total_allowance:\n        weeks += 8\n        total_allowance += weekly_allowance\n    result = weeks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue birds in each tree\n    TREE_1_BLUE_BIRDS = 7\n    TREE_2_BLUE_BIRDS = 4\n    TREE_3_BLUE_BIRDS = 3\n\n    # Calculate the total number of blue birds in the first tree\n    tree_1_total_blue_birds = TREE_1_BLUE_BIRDS * 2\n\n    # Calculate the total number of blue birds in the final tree\n    tree_2_total_blue_birds = TREE_2_BLUE_BIRDS * 2\n\n    # Calculate the total number of blue birds in the final tree\n    tree_3_total_blue_birds = TREE_3_BLUE_BIRds * 3\n\n    # Calculate the total number of blue birds in the trees\n    total_blue_birds = tree_1_total_blue_birds + tree_2_total_blue_birds + tree_3_total_blue_"}
{"output": "def solution():\n    # Calculate the total number of marbles Bob will have after receiving 2 dozen more\n    total_marbles = 60 + (2 * 12)  # Bob receives 2 dozen more marbles than he will have 60 marbles\n\n    # Calculate the number of marbles Bob will have after losing 10\n    remaining_marbles = total_marbles - 10\n\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define Donny's initial temperature\n    initial_temp = 40\n\n    # Define the size of the two mugs of water\n    mug1 = 33\n    mug2 = 33\n\n    # Define the size of the other bottle\n    bottle2 = (mug1 + mug2) / 4\n\n    # Calculate the minimum temperature for the second bottle\n    min_temp = initial_temp - bottle2\n\n    # Display the minimum temperature for the second bottle\n    result = min_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cows and chickens\n    initial_cows = 50\n    initial_chickens = 20\n\n    # Calculate the number of cows and chickens after three weeks\n    cows_after_three_weeks = initial_cows - (20 * 7)\n    chickens_after_three_weeks = initial_chickens - (10 * 7)\n\n    # Calculate the total number of animals after three weeks\n    total_animals = cows_after_three_weeks + chickens_after_three_weeks\n\n    # return the result\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pack of bagels\n    PACK_COST = 10.00\n\n    # Define the number of bagels in each pack\n    BAGELS_PER_PACK = 9\n\n    # Calculate the total cost before discount\n    total_cost_before_discount = PACK_COST * BAGELS_PER_PACK\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost_before_discount * 0.9\n\n    # Calculate the cost per bagel after discount\n    cost_per_bagel = total_cost_after_discount / 4\n\n    # Display the cost per bagel\n    result = cost_per_bagel\n    return result"}
{"output": "def solution():\n    mashed_scoops = 23  # Gomer ate 5 less than 23 scoops of mashed potatoes\n    less_than_6 = 6 - 3  # It takes 3 less than 6 potatoes to make 1 less than 3 scoops\n    mashed_scoops_eaten = mashed_scoops - 5  # Gomer ate 5 less than 23 scoops of mashed potatoes\n\n    # Calculate the number of potatoes Gomer ate\n    potatoes_eaten = (3 * mashed_scoops_eaten) - less_than_6\n    result = potatoes_eaten\n    return result"}
{"output": "def solution():\n    eggs_per_day_1 = 3  # Chester eats 3 eggs per day for 30 days\n    eggs_per_day_2 = 5  # Chester increases his eggs to 5 eggs per day for 30 days\n    days_1 = 30  # Chester wants to know how many dozens of eggs Chester will need for 60 days\n\n    # Calculate the total number of eggs Chester will eat in 60 days\n    total_eggs_1 = eggs_per_day_1 * days_1\n\n    # Calculate the total number of eggs Chester will eat in 60 days\n    total_eggs_2 = eggs_per_day_2 * days_2\n\n    # Calculate the total number of dozens of eggs Chester will need for 60 days\n    total_dozens = total_eggs_1 + total_eggs_2\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    \n    green_jellybeans = 17\n    red_jellybeans = 2 * green_jellybeans\n    total_jellybeans = 60\n    blue_jellybeans = total_jellybeans - green_jellybeans - red_jellybeans\n    result = blue_jellybeans\n    return result"}
{"output": "def solution():\n    \n    trees_growth = 5\n    lemons_per_tree = 6\n    years_per_decade = 52\n    total_lemons = trees_growth * lemons_per_tree * years_per_decade\n    result = total_lemons\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of men to women on the bus\n    men_to_women_ratio = 5/9\n\n    # Calculate the total number of passengers on the bus\n    total_passengers = 84\n\n    # Calculate the number of men and women on the bus\n    men = total_passengers * men_to_women_ratio\n    women = total_passengers - 20\n\n    # Calculate the number of women remaining on the bus\n    women_remaining = women - men\n\n    # Display the number of women remaining on the bus\n    result = women_remaining\n    return result"}
{"output": "def solution():\n    sunflower_price = 2\n    bouquet_price = 8\n    daily_earnings = 26\n    daily_sales = 56\n    num_days = 3\n\n    # Calculate the total earnings from selling sunflowers\n    total_sunflower_earnings = daily_sales * num_days\n\n    # Calculate the total earnings from selling sunflowers\n    total_sunflower_earnings = daily_sales * num_days\n\n    # Calculate the total earnings from selling sunflowers\n    total_sunflower_earnings = total_sunflower_earnings + total_bouquet_earnings\n    result = total_sunflower_earnings\n    return result"}
{"output": "def solution():\n    \n    initial_money = 100\n    rock_price = 5\n    rock_sell_price = 7\n    rock_inventory = initial_money - rock_price\n    rock_sell_amount = rock_inventory * 0.6\n    rock_loss = rock_sell_amount - rock_sell_amount\n    result = rock_loss\n    return result"}
{"output": "def solution():\n    \n    large_scenes_per_day = 5\n    medium_scenes_per_day = 6\n    small_scenes_per_day = 7\n    num_large_scenes = 45\n    num_medium_scenes = 36\n    num_small_scenes = 49\n    total_scenes = (num_large_scenes * large_scenes_per_day) + (num_medium_scenes * medium_scenes_per_day) + (num_small_scenes * small_scenes_per_day)\n    days_to_draw_all_scenes = total_scenes / total_scenes\n    result = days_to_draw_all_scenes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dozens of eggs prepared\n    dozens_prepared = 3\n\n    # Define the number of eggs prepared\n    eggs_prepared = dozens_prepared * 12\n\n    # Calculate the number of eggs each child receives\n    eggs_per_child = eggs_prepared // 4\n\n    # Display the number of eggs each child receives\n    result = eggs_per_child\n    return result"}
{"output": "def solution():\n    num_fish = 3\n    food_per_fish_per_day = 1\n    days_per_month = 31\n\n    # Calculate the total amount of food needed for one day\n    total_food_per_day = num_fish * food_per_fish_per_day\n\n    # Calculate the total amount of food needed for one month\n    total_food_per_month = total_food_per_day * days_per_month\n\n    result = total_food_per_month\n    return result"}
{"output": "def solution():\n    \n    initial_roses = 30\n    given_roses = 24\n    bought_roses = 15\n    total_roses = initial_roses - given_roses + bought_roses\n    result = total_roses\n    return result"}
{"output": "def solution():\n    \n    # Calculate Sid's speed\n    sid_speed = 110 / 2\n\n    # Calculate Sid's speed\n    sid_speed = 140 / 3\n\n    # Calculate the average speed\n    average_speed = sid_speed / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the probability of winning for the first and second tickets\n    probability_winning_1 = 0.2\n    probability_winning_2 = 3 * probability_winning_1\n\n    # Calculate the probability of winners for both tickets\n    probability_winners_both = (probability_winning_1 + probability_winning_2) / 2\n\n    # Convert the probability to a percentage\n    probability_winners_percentage = probability_winners_both * 100\n\n    # Display the probability winners percentage\n    result = probability_winners_percentage\n    return result"}
{"output": "def solution():\n    \n    jim_seashells = 27\n    carlos_seashells = jim_seashells - 5\n    carrey_seashells = carlos_seashells * 2\n    total_seashells = jim_seashells + carlos_seashells + carrey_seashells\n    each_person_gets = total_seashells / 2\n    result = each_person_gets\n    return result"}
{"output": "def solution():\n    # Calculate the total number of carrots Mason eats in a week\n    total_carrots = 4*5 + 5*2  # Mason eats 4 carrots each on weekdays and 5 carrots each on Saturday and Sunday\n    result = total_carrots\n    return result"}
{"output": "def solution():\n    \n    first_song_time = 5\n    second_song_time = first_song_time * 1.6\n    total_time = first_song_time + second_song_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the mobile device and the selling price of the mobile device\n    COST_PER_DEVICE = 20\n    SELLING_PRICE_MULTIPLIER = 2\n\n    # Define the number of devices bought last Monday and Tuesday\n    num_devices_last_monday = 2\n    num_devices_last_tuesday = 4\n\n    # Calculate the total cost of the mobile devices\n    total_cost = num_devices_last_monday * COST_PER_DEVICE\n\n    # Calculate the total revenue from selling all the mobile devices\n    total_revenue = num_devices_last_tuesday * SELLING_PRICE_MULTIPLIER\n\n    # Calculate the profit from selling all the mobile devices\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    isabel_height = 7\n    ned_height = isabel_height + 2\n    carl_height = ned_height + 1\n    result = carl_height\n    return result"}
{"output": "def solution():\n    bottles_per_day = 4200\n    daily_energy_coverage = 0.2\n    num_people = 2300\n\n    # Calculate the total number of bottles produced by all people in a day\n    total_bottles_per_day = bottles_per_day * num_people\n\n    # Calculate the total number of bottles produced by all juices in 2300 people\n    total_bottles_for_2300 = total_bottles_per_day * num_people\n\n    # Calculate the total number of bottles that can be produced with 100% of the daily energy demand\n    total_bottles_for_100_energy = total_bottles_for_2300 * (1 - daily_energy_coverage)\n\n    # Calculate the number of bottles needed to reach 100% of the daily energy requirement\n    bottles_needed = total_bottles_for_100_energy - total_bottles_for_2300\n    result = bottles_needed\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of blue wearers\n    blue_wearers = (1/4) * (1/4) * (1/3)\n\n    # Calculate the number of purple wearers\n    purple_wearers = (1/3) * blue_wearers\n\n    # Calculate the percentage chance a baby wearing a bow is wearing purple\n    percentage_chance = (purple_wearers / purple_wearers) * 100\n\n    # Display the percentage chance\n    result = percentage_chance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of reports received on Monday and Tuesday\n    monday_tues = 1907\n\n    # Define the number of reports received on Thursday and Friday\n    thursday_friday = 2136\n\n    # Calculate the total number of reports received on Monday and Tuesday\n    total_monday_tues = monday_tues + 1907\n\n    # Calculate the total number of reports received on Wednesday\n    total_wednesday = 5168 + total_monday_tues + thursday_friday\n\n    # Display the total number of reports received on Wednesday\n    result = total_wednesday\n    return result"}
{"output": "def solution():\n    \n    unused_land = 80\n    land1_sales = unused_land / 2\n    land2_sales = unused_land / 4\n    land3_sales = unused_land - land1_sales - land2_sales\n    land4_sales = land3_sales * 3\n    total_sales = land1_sales + land2_sales + land3_sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    haley_age = 26\n    geb_age = (haley_age / 2) - 10\n    result = geb_age\n    return result"}
{"output": "def solution():\n    \n    masks_per_day = 2 * 3\n    masks_per_two_days = masks_per_day * 2\n    result = masks_per_two_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in a dozen\n    EGGS_PER_DOZEN = 12\n\n    # Define the number of eggs found by Lamar\n    lamar_eggs = 5\n\n    # Define the number of eggs found by Stacy\n    stacy_eggs = lamar_eggs * 2\n\n    # Define the number of eggs found by Charlie\n    charlie_eggs = stacy_eggs - 2\n\n    # Define the number of eggs found by Mei\n    mei_eggs = charlie_eggs / 2\n\n    # Calculate the total number of eggs found\n    total_eggs = lamar_eggs + stacy_eggs + charlie_eggs + mei_eggs\n\n    # Calculate the number of eggs still hidden\n    eggs_hidden = EGGS_PER_DOZEN - total_eggs\n\n    # Display the number of eggs still hidden\n    result = eggs_hidden\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apartments in the first two complexes\n    apartments_first_two = 200\n\n    # Calculate the number of apartments in the last two complexes\n    apartments_last_two = apartments_first_two * 1.6\n\n    # Calculate the total number of apartments collected in a week\n    total_apartments = apartments_first_two + apartments_last_two\n\n    # Calculate the total amount of money collected in a week\n    total_money = total_apartments * 0.40\n\n    # Display the total amount of money collected in a week\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the number of fruits produced by the 5-year-old tree during the ninth year\n    fruits_5_year_old = 50\n    fruits_6_year_old = fruits_5_year_old * 3\n    fruits_7_year_old = fruits_6_year_old * 7\n    fruits_8_year_old = fruits_10_year_old - 200\n    total_fruits = fruits_5_year_old + fruits_6_year_old + fruits_7_year_old + fruits_8_year_old + fruits_10_year_old\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define Jack's initial amount of money\n    jack_money = 100\n\n    # Calculate the amount of money Sophia gave Jack\n    sophia_money = jack_money * (1/5)\n\n    # Calculate Jack's remaining amount of money\n    remaining_money = jack_money - sophia_money\n\n    # Display Jack's remaining amount of money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    total_length = 37\n    blue_rope = (total_length - 7) / 3\n    red_rope = blue_rope * 4\n    result = red_rope\n    return result"}
{"output": "def solution():\n    \n    # Define Ronnie's initial amount of money\n    ronnie_money = 5\n\n    # Define Rissa's initial amount of money\n    rissa_money = ronnie_money * 3\n\n    # Calculate how much money Rissa has left after each of them given an equal amount to their little sister\n    left_after_each = (4/5) * rissa_money\n\n    # Calculate how much money is left in Ronnie's money\n    left_after_each = left_after_each - rissa_money\n\n    # Display how much is left in Ronnie's money\n    result = left_after_each\n    return result"}
{"output": "def solution():\n    \n    total_pints = 12\n    yellow_pints = total_pints / 2\n    red_pints = total_pints - yellow_pints\n    result = red_pints\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the bedrooms\n    bedroom_length = 20\n    bedroom_width = 12\n\n    # Calculate the area of the bedrooms\n    bedroom_area = bedroom_length * bedroom_width\n\n    # Calculate the area of the living room\n    living_room_area = bedroom_area * 5\n\n    # Calculate the area of the remaining house\n    remaining_house_area = 1000 - bedroom_area - living_room_area\n\n    # Calculate the total area of the house\n    total_area = bedroom_area + living_room_area + remaining_house_area\n\n    # return the result\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    monday_clouds = 3\n    friday_clouds = monday_clouds * 2\n    total_clouds = monday_clouds + friday_clouds\n    result = total_clouds\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a regular box of dishwasher pods and the increase percentage\n    REGULAR_BOX_PRICE = 12\n    INCREASE_PERCENTAGE = 20\n\n    # Calculate the number of dishwasher pods in the size box\n    size_boxes_pods = REGULAR_BOX_PRICE * (1 + INCREASE_PERCENTAGE / 100)\n\n    # Calculate the number of dishwasher cycles the new box can run for $1\n    dishwashing_cycles = size_boxes_pods // 1\n\n    # Display the number of dishwashing cycles the new box can run for $1\n    result = dishwashing_cycles\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Thomas withdraws and the number of bills he loses\n    initial_money = 1000\n    lost_bills = 10\n\n    # Calculate the remaining amount of money after losing 10 bills\n    remaining_money = initial_money - lost_bills\n\n    # Calculate the number of bills Thomas uses to pay for a bill\n    used_bills = remaining_money / 2\n\n    # Calculate the number of 5 dollar bills Thomas uses to pay for a bill\n    to_pay_bills = used_bills * 3\n\n    # Calculate the number of 5 dollar bills Thomas has\n    num_5_dollar_bills = to_pay_bills / 5\n\n    # Display the number of 5 dollar bills Thomas has\n    result = num_5_dollar_bills\n    return result"}
{"output": "def solution():\n    # Calculate the number of goals scored by team A in the first half\n    goals_A_first_half = 4\n\n    # Calculate the number of goals scored by team B in the first half\n    goals_B_first_half = goals_A_first_half - 2\n\n    # Calculate the number of goals scored by team A in the second half\n    goals_A_second_half = goals_B_first_half / 4\n\n    # Calculate the total number of goals scored in the match\n    total_goals = goals_A_first_half + goals_B_first_half + goals_A_second_half\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of chalk\n    initial_chalk = 5\n\n    # Calculate the amount of chalk used on Monday\n    monday_chalk = initial_chalk * 0.2\n\n    # Calculate the amount of chalk used on Monday after the end of the day\n    monday_chalk += monday_chalk * 0.45\n\n    # Calculate the total amount of chalk used\n    total_chalk = initial_chalk + monday_chalk\n\n    # Display the total amount of chalk used\n    result = total_chalk\n    return result"}
{"output": "def solution():\n    num_boys = 12\n    num_girls = 12\n\n    # Calculate the number of girls who are on varsity\n    num_varsity_boys = num_boys / 3\n\n    # Calculate the number of boys who are not on varsity\n    num_non_varsity_boys = num_boys - num_varsity_boys\n\n    # Calculate the number of students who are not on varsity\n    num_non_varsity_students = num_non_varsity_boys + num_non_varsity_girls\n    result = num_non_varsity_students\n    return result"}
{"output": "def solution():\n    \n    mike_masks = 5\n    johnny_masks = 3 * mike_masks + 2\n    result = johnny_masks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of teeth James has\n    james_teeth = 30\n\n    # Calculate the number of teeth James's dentist drills\n    dentist_drills = 4\n\n    # Calculate the number of teeth James's dentist caps\n    dentist_caps = james_drills + 7\n\n    # Calculate the total number of teeth James has\n    total_teeth = james_teeth - dentist_drills + dentist_caps\n\n    # Calculate the percentage of teeth James' dentist fix\n    dentist_percentage = (dentist_teeth / total_teeth) * 100\n\n    # Display the percentage of teeth James' dentist fix\n    result = dentist_percentage\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of milk sold\n    total_milk = 4000 * 3.5\n\n    # Calculate the amount of milk purchased\n    purchased_milk = total_milk * (2/5)\n\n    # Calculate the refund amount\n    refund = total_milk - purchased_milk\n\n    result = refund\n    return result"}
{"output": "def solution():\n    \n    # Define Wendy's age in 25 years\n    wendy_age_in_25_years = 7\n\n    # Calculate Colin's age in 25 years\n    colin_age_in_25_years = (wendy_age_in_25_years - 25) / 3\n\n    # Calculate Colin's current age\n    colin_current_age = colin_age_in_25_years - 25\n\n    # Display Colin's current age\n    result = colin_current_age\n    return result"}
{"output": "def solution():\n    \n    total_spent = 27000\n    num_schools = 3\n    book_price = 500\n    num_books_per_school = (total_spent - (num_books_per_school * book_price)) / num_schools\n    result = num_books_per_school\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of apples\n    initial_apples = 0\n\n    # Newton picked up the first two apples\n    first_two_apples = initial_apples - 1\n\n    # Newton picked up the remaining two apples\n    remaining_two_apples = remaining_two_apples - 5\n\n    # Newton picked up the remaining two apples\n    remaining_two_apples = remaining_two_apples - 6\n\n    # The number of apples that went home to make a pie\n    pie_apples = 1\n\n    # Calculate the total number of apples\n    total_apples = first_two_apples + remaining_two_apples + pie_apples\n\n    # Display the total number of apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of coal ordered and the cost per unit\n    coal_ordered = 850\n    cost_per_bag = 18\n\n    # Calculate the number of bags of coal ordered\n    bags_ordered = coal_ordered / 50\n\n    # Calculate the total cost of the order\n    total_cost = bags_ordered * cost_per_bag\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    cheese_pizza_slices = 12\n    pepperoni_pizza_slices = 8\n    num_friends = 6\n    num_cheese_slices_per_friend = 6\n    num_pepperoni_slices_per_friend = 4\n\n    # Calculate the total number of cheese pizza slices needed\n    total_cheese_slices = num_friends * num_cheese_slices_per_friend\n\n    # Calculate the total number of pepperoni pizza slices needed\n    total_pepperoni_slices = num_pepperoni_pizza_slices / pepperoni_slices_per_friend\n\n    # Calculate the total number of pies needed\n    total_pies = total_cheese_slices + total_pepperoni_slices\n    result = total_pies\n    return result"}
{"output": "def solution():\n    \n    monday_miles = 3\n    wednesday_friday_miles = 3\n    tuesday_thursday_miles = 5\n    total_miles = monday_miles + wednesday_friday_miles + tuesday_thursday_miles\n    result = total_miles\n    return result"}
{"output": "def solution():\n    snowballs_per_hour = 20  # Jay can build 20 snowballs in an hour\n    snowballs_per_melt = 2  # Jay can build 2 melt every 15 minutes\n    minutes_per_hour = 60 / 60  # Jay wants to know how long it will take to build 60 snowballs\n\n    # Calculate the total time it will take Jay to build 60 snowballs\n    total_time = minutes_per_hour * snowballs_per_melt\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    john_age = 28\n    jim_age = john_age / 2\n    result = jim_age\n    return result"}
{"output": "def solution():\n    \n    total_slices = 8\n    doxa_slices = 1\n    sister_slices = doxa_slices + 1\n    brother_slices = sister_slices + 1\n    total_slices_eaten = doxa_slices + sister_slices + brother_slices\n    result = total_slices_eaten\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bandages used on the first day\n    bandages_day1 = 38\n\n    # Define the number of bandages used on the second day\n    bandages_day2 = bandages_day1 - 10\n\n    # Define the number of bandages used on the third day\n    bandages_day3 = bandages_day2 / 2\n\n    # Define the number of bandages left at the end of the third day\n    bandages_day3 = 78\n\n    # Calculate the total number of bandages used\n    total_bandages_used = bandages_day1 + bandages_day2 + bandages_day3\n\n    # Calculate the number of bandages left on the first day\n    bandages_day1 = total_bandages_used - bandages_day3\n\n    # Display the number of bandages on the first day\n    result = bandages_day1\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per inch of haircut\n    COST_PER_INCH = 40\n\n    # Define the cost per inch of haircut\n    COST_PER_INCH = 30\n\n    # Define the starting and ending hair inches\n    starting_hair_inches = 10\n    ending_hair_inches = 8\n\n    # Calculate the cost of the haircut\n    haircut_cost = starting_hair_inches - ending_hair_inches\n\n    # Calculate the cost of the cut and color\n    cut_cost = haircut_cost * COST_PER_INCH\n\n    # Display the cost of the cut and color\n    result = cut_cost\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 7.5\n    days_per_week = 6\n    hourly_rate = 1.5\n    extra_money = 10\n    weeks_in_april = 4\n    total_hours = hours_per_day * days_per_week * weeks_in_april\n    total_money = total_hours * hourly_rate + extra_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    laundry_cost = 3.00\n    room_cost = 1.50\n    trash_cost = 0.75\n    dishwasher_cost = 0.50\n    dishwasher_emptied = 6 * 2\n    laundry_earnings = laundry_cost * 2\n    room_earnings = room_cost * 2\n    trash_earnings = trash_cost * 2\n    dishwasher_earnings = dishwasher_emptied * 0.50\n    total_earnings = laundry_earnings + room_earnings + trash_earnings + dishwasher_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    whale_blood = 40\n    shark_blood = 3 * whale_blood\n    total_blood = whale_blood * 10\n    result = total_blood\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people who entered the restaurant in the morning\n    morning_eaten = 50\n\n    # Calculate the number of people who ordered food\n    food_eaten = morning_eaten + 40\n\n    # Calculate the number of people who ordered lunch\n    lunch_eaten = 2 * food_eaten\n\n    # Calculate the total number of people who entered the restaurant\n    total_entered = morning_eaten + food_eaten + lunch_eaten\n\n    # Calculate the additional number of people who entered the restaurant\n    additional_people = 3 * total_entered\n\n    # Calculate the total number of people who entered the restaurant\n    total_entered = total_entered + additional_people\n\n    # Display the total number of people who entered the restaurant\n    result = total_entered\n    return result"}
{"output": "def solution():\n    \n    red_packs = 5\n    black_packs = red_packs * 2\n    red_pens = red_packs * 5\n    black_pens = black_packs * 5\n    total_pens = red_pens + black_pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    scotch_cost = 600\n    cognac_cost = scotch_cost * 1.5\n    total_bottles = 10\n    total_cost = (scotch_cost * total_bottles) + (cognac_cost * total_bottles)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of White Oak trees planted on the first day\n    white_oak_1 = 20\n\n    # Calculate the number of Lodgepole Pine trees planted on the first day\n    lodgepole_pine_1 = 2 * white_oak_1\n\n    # Calculate the number of White Oak trees planted on the second day\n    white_oak_2 = white_oak_1 + 10\n\n    # Calculate the number of Lodgepole Pine trees planted on the second day\n    lodgepole_pine_2 = white_oak_2 * (1 + 1/4)\n\n    # Calculate the total number of trees planted\n    total_trees = white_oak_1 + lodgepole_pine_1 + lodgepole_pine_2\n\n    # Display the total number of trees planted\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of root beer\n    initial_gallons = 24\n\n    # Calculate the amount of root beer consumed on the first day\n    first_day_gallons = initial_gallons\n\n    # Calculate the amount of root beer consumed on the second day\n    second_day_gallons = 4\n\n    # Calculate the amount of root beer consumed on the third day\n    third_day_gallons = 7\n\n    # Calculate the total amount of root beer consumed\n    total_gallons = first_day_gallons + second_day_gallons + third_day_gallons\n\n    # Display the total amount of root beer consumed\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Let x be the number of coffee mugs in the teacher's lounge\n    # We know that 4x + 8 = 40\n    # Solving for x, we get x = 16\n\n    # Therefore, there are 16 coffee mugs in the teacher's lounge\n    result = 16\n    return result"}
{"output": "def solution():\n    total_fish = 66  # There are 66 fish in the tank\n    red_stripes = total_fish / 3  # One-third of the fish have red stripes\n    remaining_fish = total_fish - red_stripes  # Calculate the number of fish remaining with red stripes\n    blue_stripes = (5/11) * remaining_fish  # 5/11 of the remaining fish have blue stripes\n    total_red_blue_stripes = red_stripes + blue_stripes  # Calculate the total number of fish with red stripes and blue stripes\n    result = total_red_blue_stripes\n    return result"}
{"output": "def solution():\n    # Calculate the total number of eyeshadow colors Amy had\n    total_colors = 2*4 + 3*6  # two eyeshadow palettes with 4 colors each and three makeup sets with 6 colors each\n\n    # Calculate the number of eyeshadow colors Amy uses up from one makeup set\n    used_colors = 1/2 * total_colors  # Amy uses up half of the colors from one makeup set\n\n    # Calculate the number of eyeshadow colors Amy has left\n    remaining_colors = total_colors - used_colors\n    result = remaining_colors\n    return result"}
{"output": "def solution():\n    \n    # Define Mattison's height\n    mattison_height = 60\n\n    # Calculate the height of the two-story house\n    house_height = mattison_height * 7\n\n    # Calculate the height of the floor on the first floor\n    floor_1 = floor_1 * 3\n\n    # Calculate the height of the floor on the second floor\n    floor_2 = floor_2 * 3\n\n    # Calculate the height of the roof from the second floor's floor\n    roof_2 = floor_2 - floor_1\n\n    # Display the height of the roof from the second floor's floor\n    result = roof_2\n    return result"}
{"output": "def solution():\n    \n    total_shells = 700\n    alphas_shells = total_shells * 0.4\n    remaining_shells = total_shells - alphas_shells\n    finders_shells = remaining_shells * 0.6\n    gogetters_shells = remaining_shells - finders_shells\n    result = gogetters_shells\n    return result"}
{"output": "def solution():\n    num_dogs = 4\n    miles_per_dog_1 = 1\n    miles_per_dog_2 = 4\n    miles_per_dog_3 = 3\n    miles_per_day_1 = miles_per_dog_1 + miles_per_dog_2\n    miles_per_day_2 = miles_per_dog_3\n    miles_per_day_3 = miles_per_dog_3\n\n    # Calculate the total miles walked by all dogs\n    total_miles_walked = miles_per_day_1 + miles_per_dog_2 + miles_per_day_3\n\n    # Calculate the miles needed for the last dog\n    miles_last_dog = total_miles_walked - total_miles_walked\n    result = miles_last_dog\n    return result"}
{"output": "def solution():\n    # Calculate the loan amount\n    loan_amount = 250000 * 0.4\n\n    # Calculate the amount used to pay off his debt\n    debt_amount = loan_amount * 0.6\n\n    # Calculate the amount leftover after paying debt\n    leftover_amount = loan_amount - debt_amount\n    result = leftover_amount\n    return result"}
{"output": "def solution():\n    \n    tunas_last_monday = 3\n    tunas_first_tuna = 56\n    tunas_second_tuna = 46\n    tunas_last_tuna = 26\n    cost_per_kilogram = 0.5\n    total_weight = tunas_last_monday + tunas_first_tuna + tunas_second_tuna + tunas_last_tuna\n    total_earnings = total_weight * cost_per_kilogram\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the magazines\n    cost = 72\n\n    # Calculate the selling price of the magazines\n    selling_price = cost * (11/8)\n\n    # Calculate Trinity's profit\n    profit = selling_price - cost\n\n    # Display Trinity's profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    low_setting_water_per_day = 1\n    medium_setting_water_per_day = low_setting_water_per_day * 2\n    high_setting_water_per_day = medium_setting_water_per_day * 2\n    total_water_removed_per_day = low_setting_water_per_day + medium_setting_water_per_day + high_setting_water_per_day\n    total_water_removed = total_water_removed_per_day * 3\n    result = total_water_removed\n    return result"}
{"output": "def solution():\n    \n    packs_of_balloons = 10\n    balloons_per_pack = 30\n    total_balloons = packs_of_balloons * balloons_per_pack\n    balloons_left = 12\n    balloons_thrown = total_balloons - balloons_left\n    result = balloons_thrown\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of the first medicine\n    first_medicine = 14\n\n    # Calculate the amount of the second medicine\n    second_medicine = 3 * first_medicine\n\n    # Calculate the total amount of medicine in 8 doses\n    total_medicine = first_medicine + second_medicine\n\n    # Display the total amount of medicine\n    result = total_medicine\n    return result"}
{"output": "def solution():\n    \n    ali_capacity = 120\n    john_capacity = ali_capacity * (1/8)\n    total_capacity = john_capacity + ali_capacity\n    result = total_capacity\n    return result"}
{"output": "def solution():\n    \n    borrowed_amount = 300\n    additional_amount = borrowed_amount * 0.02\n    total_amount = borrowed_amount + additional_amount\n    monthly_payment = 25\n    remaining_amount = total_amount - monthly_payment\n    twelfth_month_payment = remaining_amount / 2\n    result = twelfth_month_payment\n    return result"}
{"output": "def solution():\n    num_children = 2\n    diaper_changes_per_child_per_day = 5\n    wife_changes_per_day = diaper_changes_per_child_per_day / 2\n\n    # Calculate the total number of diapers Jordan has\n    total_diapers = num_children * diaper_changes_per_child_per_day\n\n    # Calculate the number of diapers Jordan's wife changes per day\n    num_wife_changes_per_day = total_diapers / 2\n\n    # Calculate the total number of diapers Jordan changes per day\n    total_changes_per_day = num_wife_changes_per_day + num_wife_changes_per_day\n    result = total_changes_per_day\n    return result"}
{"output": "def solution():\n    \n    jar_base = 6 * 6\n    jar_height = 15\n    jar_width = 6\n    jar_height = 15\n    jar_cubic_inches = jar_base * jar_height\n    jar_cubic_inches_packing = jar_cubic_inches * 0.8\n    jar_red_jelly_beans = jar_cubic_inches * 0.3\n    jar_distance = jar_cubic_inches - jar_cubic_inches - jar_red_jelly_beans\n    guess_red_jelly_beans = jar_distance / red_jelly_beans\n    result = guess_red_jelly_beans\n    return result"}
{"output": "def solution():\n    capacity = 200  # The bus has a capacity of 200 people\n    first_stop = 40  # 40 people entered the bus on the first stop\n    second_station = (3/4) * (capacity * first_stop)  # 3/4 of the total number of people who entered the bus at the first station\n    remaining_people = capacity - first_stop - second_station  # Calculate the remaining number of people\n\n    # Calculate the number of people required to fill the remaining spaces\n    required_people = remaining_people * 2\n    result = required_people\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of one visit and the increase percentage\n    INITIAL_COST = 2\n    INCREASE_PERCENTAGE = 150\n\n    # Calculate the cost of one visit after 5 years\n    cost_after_5_years = INITIAL_COST * (1 + INCREASE_PERCENTAGE / 100)\n\n    # Calculate the cost of one visit after 3 years\n    cost_after_3_years = cost_after_5_years * 3\n\n    # Display the cost of all visits to the museum\n    result = cost_after_3_years\n    return result"}
{"output": "def solution():\n    grades = 4  # Cedar Falls Middle School has 4 grades\n    grades_per_year = 7  # There are 7 grades in each grade\n    students_per_grade = 10  # There are 10 students in each grade\n    points_per_grade = points_per_grade / students_per_grade  # Each grade has the most points get to try an escape room\n    students_per_group = 8  # There are 8 students in each grade\n    time_per_group = 45  # Each group uses 45 minutes to try the escape room\n\n    # Calculate the total time it will take for everyone to try the escape room\n    total_time = (students_per_group * time_per_group) + (points_per_grade * 45)\n    result = total_time\n    return result"}
{"output": "def solution():\n    num_wooden_tables = 4\n    wooden_table_price = 20\n\n    num_roof_frames = 2\n    roof_frame_price = 10\n\n    # Calculate the total cost of all wooden tables\n    total_wooden_cost = num_wooden_tables * wooden_table_price\n\n    # Calculate the total cost of all roof frames\n    total_roof_frames_cost = num_roof_frames * roof_frame_price\n\n    # Calculate the total cost of all items\n    total_cost = total_wooden_cost + total_roof_frames_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Define the length of the shorter piece\n    shorter_piece = 40 / 2\n\n    # Calculate the length of the longer piece\n    longer_piece = 4 * shorter_piece\n\n    result = longer_piece\n    return result"}
{"output": "def solution():\n    \n    meatballs_per_pound = 16\n    total_meatballs = 80\n    total_pounds = total_meatballs / meatballs_per_pound\n    secret_seasoning_needed = total_pounds * 2\n    result = secret_seasoning_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the width of each window and the number of windows\n    WINDOWS_WIDTH = 35\n    WINDOWS_COUNT = 5\n\n    # Calculate the total width of the windows\n    total_width = WINDOWS_WIDTH * WINDOWS_COUNT\n\n    # Calculate the number of fabric Luke needs to buy\n    fabric_needed = 2 * total_width\n\n    # Display the number of fabric Luke needs to buy\n    result = fabric_needed\n    return result"}
{"output": "def solution():\n    \n    cost_per_minute = 0.25\n    drops_per_minute = 0.2\n    minutes = 36\n    total_cost = cost_per_minute * minutes\n    if minutes >= 16:\n        total_cost -= drops_per_minute * minutes\n    else:\n        total_cost -= drops_per_minute * minutes\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of rain on Monday\n    monday_rain = 2\n\n    # Calculate the amount of rain on Tuesday\n    tuesday_rain = 2 * monday_rain + 1\n\n    # Display the amount of rain on Tuesday\n    result = tuesday_rain\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and treats per person\n    num_people = 5\n    treats_per_person = 2\n\n    # Calculate the number of brownies\n    num_brownies = (num_people * treats_per_person) - 2\n\n    # Calculate the number of cupcakes\n    num_cupcakes = 3 * num_cupcakes - 2\n\n    # Display the number of cupcakes\n    result = num_cupcakes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the manicure and pedicure\n    manicure_cost = 35\n    pedicure_cost = 40\n\n    # Calculate the discounted cost of the manicure and pedicure\n    manicure_discounted_cost = manicure_cost - (manicure_cost * 0.8)\n    pedicure_discounted_cost = pedicure_cost - (pedicure_cost * 0.8)\n\n    # Calculate the total cost of both fingers\n    total_cost = manicure_discounted_cost + pedicure_discounted_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    susan_magazines = 3\n    susan_issues_per_year = 12\n    susan_magazines += susan_magazines\n    last_magazines = 4 * susan_issues_per_year\n    total_magazines = susan_magazines + last_magazines\n    result = total_magazines\n    return result"}
{"output": "def solution():\n    \n    samantha_paintings = 27\n    shelley_paintings = samantha_paintings - 12\n    kim_paintings = shelley_paintings - 8\n    result = kim_paintings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the toy\n    price = 40\n\n    # In December, the price increased by 80%\n    price *= 1.8\n\n    # In January, the price decreased by 50%\n    price *= 0.5\n\n    # Display the final price of the toy\n    result = price\n    return result"}
{"output": "def solution():\n    \n    standard_rate = 80\n    veteran_rate = standard_rate * 0.25\n    num_standard_lessons = 4\n    num_veteran_lessons = 2\n    standard_fee = standard_rate * num_standard_lessons\n    veteran_fee = veteran_rate * num_veteran_lessons\n    total_fee = (standard_fee * num_standard_lessons) + (veteran_fee * num_veteran_lessons)\n    result = total_fee\n    return result"}
{"output": "def solution():\n    \n    scores = [50, 80, 80, 60, 40, 90, 100, 70]\n    mean_score = sum(scores) / len(scores)\n    result = mean_score\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pomelos\n    initial_pomelos = 20\n\n    # Calculate the number of pomelos Eve has left\n    left_pomelos = initial_pomelos * (1/4)\n\n    # Calculate the number of pomelos Eve gave away\n    given_pomelos = initial_pomelos - left_pomelos\n\n    # Display the number of pomelos Eve gave away\n    result = given_pomelos\n    return result"}
{"output": "def solution():\n    \n    total_apples = 60\n    eaten_apples = total_apples * (2/5)\n    remaining_apples = total_apples - eaten_apples\n    sister_apples = remaining_apples * 0.25\n    remaining_apples -= sister_apples\n    uncle_price = 3\n    money_received = remaining_apples * uncle_price\n    result = money_received\n    return result"}
{"output": "def solution():\n    \n    # Define the number of novels Regina wrote last year\n    last_year_novels = 9\n\n    # Calculate the number of novels Regina has written this year\n    this_year_novels = last_year_novels * 0.75\n\n    # Display the number of novels Regina has written this year\n    result = this_year_novels\n    return result"}
{"output": "def solution():\n    \n    # Define the average speed of Michael\n    AVG_SPEED = 50\n\n    # Define the distance between Alaska and Texas\n    ALASKA_DISTANCE = 6000\n\n    # Calculate the total distance covered\n    total_distance = ALASKA_DISTANCE * 3\n\n    # Calculate the percentage of distance covered\n    percentage_covered = (total_distance / total_distance) * 100\n\n    # Display the percentage covered\n    result = percentage_covered\n    return result"}
{"output": "def solution():\n    \n    madeline_grapes = 6\n    brother_grapes = madeline_grapes * 5\n    remaining_grapes = madeline_grapes - brother_grapes\n    pies = 4\n    grapes_per_pie = 12\n    total_grapes = remaining_grapes + (pies * grapes_per_pie)\n    result = total_grapes\n    return result"}
{"output": "def solution():\n    total_teachers = 82\n    sick_teachers = 13\n    substitute_teachers = 9\n\n    # Calculate the number of teachers at school that day\n    school_teachers = total_teachers - sick_teachers - substitute_teachers\n    result = school_teachers\n    return result"}
{"output": "def solution():\n    \n    pasta_cost = 1\n    cheddar_cost = 3\n    gruyere_cost = 2 * cheddar_cost\n    total_cost = (pasta_cost + cheddar_cost + gruyere_cost) * 52\n    result = total_cost\n    return result"}
{"output": "def solution():\n    total_classrooms = 80  # The custodian has to clean a school with 80 classrooms\n    num_days = 5  # The custodian has to clean the school for 5 days\n    time_per_classroom = 15  # It takes the custodian 15 minutes per classroom\n    hours_worked = 8  # The custodian works an 8 hour day\n\n    # Calculate the total time spent cleaning classrooms\n    total_time = num_days * time_per_classroom * hours_worked\n\n    # Calculate the average time spent cleaning classrooms per day\n    avg_classrooms_per_day = (total_time / total_classrooms) / total_time\n    result = avg_classrooms_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of the middle shelf\n    middle_shelf_capacity = 10\n\n    # Define the capacity of the bottom shelf\n    bottom_shelf_capacity = middle_shelf_capacity * 2\n\n    # Define the capacity of the top shelf\n    top_shelf_capacity = bottom_shelf_capacity - 5\n\n    # Define the total number of books\n    total_books = 110\n\n    # Calculate the number of bookcases needed\n    bookcases_needed = total_books - (middle_shelf_capacity * 2) - (bottom_shelf_capacity * 2) - (top_shelf_capacity * 2)\n\n    # Display the number of bookcases needed\n    result = bookcases_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of one dozen eggs\n    COST_PER_DOZEN = 2.40\n    SELLING_PRICE_PER_EGGS = 1\n\n    # Define the number of dozens of eggs Rose bought\n    dozens_bought = 5\n\n    # Calculate the total cost of the eggs\n    total_cost = dozens_bought * DOZENS_bought * COST_PER_DOZEN\n\n    # Calculate the total revenue from selling the eggs\n    total_revenue = 3 * SELLING_PRICE_PER_EGGS\n\n    # Calculate Rose's profit\n    profit = total_revenue - total_cost\n\n    # Display Rose's profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hats\n    total_hats = 100\n\n    # Calculate the number of red hats\n    red_hats = total_hats / 2\n\n    # Calculate the number of remaining hats\n    remaining_hats = total_hats - red_hats\n\n    # Calculate the number of blue hats\n    blue_hats = remaining_hats * 3/5\n\n    # Calculate the number of white hats\n    white_hats = total_hats - red_hats - blue_hats\n\n    # return the result\n    result = white_hats\n    return result"}
{"output": "def solution():\n    \n    sticks_per_bag = 30\n    cost_per_bag = 18.00\n    discount = 3.00\n    total_cost = sticks_per_bag * cost_per_bag - discount\n    cost_per_stick = total_cost / sticks_per_bag\n    result = cost_per_stick\n    return result"}
{"output": "def solution():\n    # Calculate the number of questions Audrey needs to correct on the first test\n    first_test_correct = 0.7 * 70\n\n    # Calculate the number of questions Audrey needs to get right on the second test\n    second_test_correct = 0.6 * 40\n\n    # Calculate the number of questions Audrey needs to get right on the second test\n    second_test_correct = 40 - first_test_correct\n\n    result = second_test_correct\n    return result"}
{"output": "def solution():\n    \n    total_cubes = 116\n    strawberry_cubes = (total_cubes - 4) / 5\n    blueberry_cubes = total_cubes - strawberry_cubes - 4\n    result = blueberry_cubes\n    return result"}
{"output": "def solution():\n    \n    years_played = 4\n    games_played_per_year = 40\n    points_per_game = 21\n    total_points = years_played * games_played_per_year * points_per_game\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 10\n\n    # Calculate the number of marbles Brendan dropped\n    dropped_marbles = initial_marbles // 2\n\n    # Calculate the number of marbles Brendan picked up with\n    picked_up_marbles = 3\n\n    # Calculate the number of marbles Brendan ended up with\n    end_up_marbles = initial_marbles - dropped_marbles - picked_up_marbles\n\n    # Display the number of marbles Brendan ended up with\n    result = end_up_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Jason needs to sell\n    cars_to_sell = 15\n\n    # Define the average number of telephone calls Jason can make per car\n    calls_per_car = 25 / 2\n\n    # Calculate the total number of telephone calls Jason needs to make\n    total_calls = cars_to_sell * calls_per_car\n\n    # Display the total number of telephone calls Jason needs to make\n    result = total_calls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and rooms in the house\n    num_people = 4\n    num_rooms = 8\n\n    # Calculate the total number of candles\n    total_candles = (num_people * 2) + (num_rooms * 2)\n\n    # Calculate the number of small candles\n    small_candles = (num_rooms // 2) * 4\n\n    # Calculate the number of medium candles\n    medium_candles = (num_rooms // 2) * 5\n\n    # Calculate the total number of candles\n    total_candles = small_candles + medium_candles\n\n    # Display the total number of candles\n    result = total_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bags of chips and the number of chips per bag\n    bags_of_chips = 2\n    chips_per_bag = 55\n\n    # Calculate the total number of chips\n    total_chips = bags_of_chips * chips_per_bag\n\n    # Calculate the number of chips each person gets if they all get the same number\n    chips_per_person = total_chips / 5\n\n    # Display the number of chips each person gets\n    result = chips_per_person\n    return result"}
{"output": "def solution():\n    \n    first_side = 6\n    second_side = 2 * first_side\n    third_side = 2 * first_side\n    last_side = 0.5 * first_side\n    total_time = first_side + second_side + third_side + last_side\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    helmets = 20\n    footballs = helmets / 2\n    total_items = helmets + footballs\n    result = total_items\n    return result"}
{"output": "def solution():\n    hours_per_day = 6  # Tim spends 6 hours each day at work\n    minutes_per_call = 15  # It takes Tim 15 minutes to deal with a call\n    days_per_week = 5  # Tim works 5 days in a week\n\n    # Calculate the total number of calls Tim deals in a week\n    total_calls = hours_per_day * minutes_per_call * days_per_week\n    result = total_calls\n    return result"}
{"output": "def solution():\n    \n    old_time_per_painting = 7\n    new_time_per_painting = 12\n    old_paintings = 6\n    new_paintings = 6\n    old_total_time = old_paintings * old_time_per_painting\n    new_total_time = new_paintings * new_time_per_painting\n    extra_time = new_total_time - old_total_time\n    result = extra_time\n    return result"}
{"output": "def solution():\n    num_plants = 20\n    half_plants = 4\n    one_plant = 8\n    quarter_plants = num_plants - half_plants - one_plant\n\n    # Calculate the total amount of water needed for all plants\n    total_water = (half_plants * 0.5) + (one_plant * 0.25)\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    land_distance = 200\n    water_speed = 10\n    land_speed = 20\n    water_distance = land_distance / 2\n    land_time = land_distance / land_speed\n    water_time = water_distance / water_speed\n    total_time = land_time + water_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    sticks_needed = 56\n    popsicles_per_box = 8\n    boxes_needed = sticks_needed / popsicles_per_box\n    cost_per_box = 2\n    total_cost = boxes_needed * cost_per_box\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the main phone plan\n    MAIN_PHONE_COST = 20\n\n    # Calculate the cost of the additional phone\n    additional_phone_cost = MAIN_PHONE_COST * 2\n\n    # Calculate the total cost of the phone plan\n    total_cost = MAIN_PHONE_COST + additional_phone_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    doughnuts_per_dozen = 12  # There are 12 doughnuts in a dozen\n    doughnuts_per_day = 10  # Derrick makes 10 dozen doughnuts every day\n    price_per_doughnut = 2  # Derrick sells each doughnut for $2\n    days_in_june = 30  # There are 30 days in June\n\n    # Calculate the total number of doughnuts Derrick makes in June\n    total_doughnuts = doughnuts_per_day * days_in_june\n\n    # Calculate the total amount of money Derrick makes in June\n    total_money = total_doughnuts * price_per_doughnut\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    total_photos = 210\n    photos_per_batch = 7\n    batches_per_day = 6\n    days_to_finish = total_photos / (photos_per_batch * batches_per_day)\n    result = days_to_finish\n    return result"}
{"output": "def solution():\n    num_blouses = 5\n    blouse_price = 5.0\n\n    num_pants = 2\n    pants_price = 8.0\n\n    num_weeks = 5\n\n    # Calculate the total cost of all blouses\n    total_blouse_cost = num_blouses * blouse_price\n\n    # Calculate the total cost of all skirts\n    total_skirt_cost = num_skirts * skirt_price\n\n    # Calculate the total cost of all pants\n    total_pants_cost = num_pants * pants_price\n\n    # Calculate the total cost of all clothes for 5 weeks\n    total_cost = total_blouse_cost + total_skirt_cost + total_pants_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define John's normal speaking speed and training speed\n    NORMAL_SPEING = 150\n    TRAINING_SPEED = NORMAL_SPEING * 2.5\n\n    # Define the number of words per page\n    WORDS_PER_PAGE = 450\n\n    # Calculate the total number of words John needs to speak\n    total_words = 10 * WORDS_PER_PAGE\n\n    # Calculate the time it would take John to speak all the words\n    time_to_speak = total_words / WORDS_PER_PAGE\n\n    # Display the time it would take John to speak all the words\n    result = time_to_speak\n    return result"}
{"output": "def solution():\n    \n    day_one = 50\n    day_two = day_one + 20\n    day_three = day_two * 2\n    total_people = day_one + day_two + day_three\n    result = total_people\n    return result"}
{"output": "def solution():\n    # Calculate the number of kernels that popped in the first 30 seconds\n    pop_first_30_seconds = 20\n\n    # Calculate the number of kernels that popped in the next 30 seconds\n    pop_next_30_seconds = 3 * pop_first_30_seconds\n\n    # Calculate the number of kernels that popped in the next 30 seconds\n    pop_next_30_seconds = 4 * pop_next_30_seconds\n\n    # Calculate the number of kernels that popped in the final 30 seconds\n    pop_final_30_seconds = 0.5 * pop_next_30_seconds\n\n    # Calculate the total number of kernels that popped\n    total_kernels = pop_first_30_seconds + pop_next_30_seconds + pop_next_30_seconds + pop_next_30_seconds + pop_final_30_seconds\n\n    # Calculate the number of kernels that popped in the final 30 seconds\n    pops_final_30_seconds = 0.25 * total_kernels\n\n    result = pops_final_30_seconds\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of lemons needed for each gallon of lemonade\n    FREE_LEMONS_PER_GALLON = 1\n\n    # Define the amount of lemons needed for each gallon of lemonade\n    FREE_LEMONS_PER_GALLON = 6\n\n    # Define the number of gallons of lemonade needed for the party\n    gallons_of_lemonade = 4\n\n    # Calculate the total amount of lemons needed\n    total_lemons = (gallons_of_lemonade - gallons_of_lemonade) / FREE_LEMONS_PER_GALLON\n\n    # Add the extra gallons to the total amount of lemons needed\n    total_lemons += extra_gallons * FREE_LEMONS_PER_GALLON\n\n    # Display the total number of lemons needed\n    result = total_lemons\n    return result"}
{"output": "def solution():\n    \n    german_shepherds_per_day = 3\n    bulldogs_per_day = 2\n    german_shepherd_food_per_day = 5\n    bulldog_food_per_day = 3\n    days_per_week = 7\n    total_german_shepherds = german_shepherds_per_day * days_per_week\n    total_bulldogs = bulldogs_per_day * days_per_week\n    total_bulldog_food = bulldogs_per_day * days_per_week\n    total_food = total_german_shepherds + total_bulldog_food\n    result = total_food\n    return result"}
{"output": "def solution():\n    num_2legged_animals = 10\n    num_4legged_animals = 15\n\n    # Calculate the total number of legs on all 2-legged animals\n    total_2legged_legs = num_2legged_animals * 2\n\n    # Calculate the total number of legs on all 4-legged animals\n    total_4legged_legs = num_4legged_animals * 4\n\n    # Calculate the total number of legs on all animals\n    total_legs = total_2legged_legs + total_4legged_legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    blue_blocks = 4\n    yellow_blocks = blue_blocks * 2\n    total_blocks = 32\n    red_blocks = total_blocks - blue_blocks - yellow_blocks\n    result = red_blocks\n    return result"}
{"output": "def solution():\n    \n    west_time = 5\n    east_time = 8\n    speed = 18\n    distance_west = west_time * speed\n    distance_east = east_time * speed\n    total_distance = distance_west + distance_east\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the boat\n    initial_cost = 9000\n\n    # Calculate the value of the boat after the first year\n    year1_value = initial_cost * 0.3\n\n    # Calculate the value of the boat after the second year\n    year2_value = year1_value * 0.3\n\n    # Calculate the value of the boat after the third year\n    year3_value = year2_value * 0.2\n\n    # Calculate the total value of the boat after three years\n    total_value = initial_cost + year1_value + year2_value + year3_value\n\n    # return the result\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red candies\n    red_candies = 54\n\n    # Calculate the number of orange candies\n    orange_candies = red_candies * 2\n\n    # Calculate the number of yellow candies\n    yellow_candies = red_candies / 2\n\n    # Calculate the total number of candies\n    total_candies = red_candies + orange_candies + yellow_candies\n\n    # Calculate the number of pink candies\n    pink_candies = 232 - total_candies\n\n    # Display the number of pink candies\n    result = pink_candies\n    return result"}
{"output": "def solution():\n    num_nights = 3\n    hotel_price = 80\n\n    num_buss = 7\n    bus_price = hotel_price * 0.1\n\n    # Calculate the total cost of the hotel and bus\n    total_cost = (num_nights * hotel_price) + (num_buss * bus_price)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles Mazie has\n    mazie_marbles = 52\n\n    # Define the number of marbles Dallas has after dropping 4\n    dallas_marbles = 21\n\n    # Calculate the number of marbles Darla has after dropping 4\n    darla_marbles = dallas_marbles - 4\n\n    # Display the number of marbles Darla has\n    result = darla_marbles\n    return result"}
{"output": "def solution():\n    adult_ticket_price = 12\n    child_ticket_price = 8\n    num_popcorns = 2\n    popcorn_price = 3\n\n    # Calculate the total cost of adult tickets\n    adult_ticket_cost = adult_ticket_price * num_popcorns\n\n    # Calculate the total cost of child tickets\n    child_ticket_cost = child_ticket_price * num_popcorns\n\n    # Calculate the total cost of all tickets\n    total_cost = adult_ticket_cost + child_ticket_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    car_weight = 1200\n    luggage_weight = 250\n    young_weight = 75 * 2\n    total_weight = car_weight + luggage_weight + young_weight\n    force_to_move = total_weight * 0.01\n    result = force_to_move\n    return result"}
{"output": "def solution():\n    \n    long_side_length = 20\n    short_side_length = 15\n    rectangle_length = long_side_length + short_side_length\n    crepe_paper_length = rectangle_length * 2\n    result = crepe_paper_length\n    return result"}
{"output": "def solution():\n    mia_age = 16  # Mia is currently 16 years apart in age\n    emma_age = 40  # Emma is 40 years old\n\n    # Calculate Mia's age\n    mia_age = mia_age - mia_age\n\n    # Calculate Emma's age\n    emma_age = emma_age - mia_age\n\n    # Calculate the average of their ages\n    average_age = (mia_age + emma_age) / 2\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    tom_seashells = 214\n    nancy_seashells = 432\n    benny_seashells = 86\n    cracked_seashells = 67\n    total_seashells = tom_seashells + nancy_seashells + benny_seashells - cracked_seashells\n    result = total_seashells\n    return result"}
{"output": "def solution():\n    num_people = 12\n    dinner_plate_price = 6.0\n    bowl_price = 5.0\n    salad_plate_price = 4.0\n\n    # Calculate the total cost of all dinner plates\n    total_dinner_plate_cost = num_people * dinner_plate_price\n\n    # Calculate the total cost of all bowls\n    total_bowl_cost = num_people * bowl_price\n\n    # Calculate the total cost of all plates\n    total_plate_cost = total_dinner_plate_cost + total_bowl_cost\n\n    # Calculate the total cost of the place settings\n    total_cost = total_plate_cost + total_plate_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    steve_time = 10\n    anna_time = (steve_time / 2) + 2\n    result = anna_time\n    return result"}
{"output": "def solution():\n    num_pigs = 5\n    feed_per_pig_per_day = 4\n    num_days = 7\n    total_feed_per_day = feed_per_pig_per_day * num_pigs * feed_per_pig_per_day\n    total_feed_per_week = total_feed_per_day * num_days\n    feed_left = 300 - total_feed_per_week\n    result = feed_left\n    return result"}
{"output": "def solution():\n    num_guests = 20\n    hot_dogs_per_guest = 2\n    num_left_over = 4\n    num_hot_dogs_per_pack = 6\n    cost_per_pack = 2.0\n\n    # Calculate the total number of hot dogs needed\n    total_hot_dogs = num_guests * hot_dogs_per_guest\n\n    # Calculate the total number of hot dogs needed\n    total_hot_dogs_needed = total_hot_dogs - num_left_over + num_hot_dogs_needed\n\n    # Calculate the total cost of all hot dogs needed\n    total_cost = total_hot_dogs_needed * cost_per_pack\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    cupcakes_sold = 20\n    cupcake_price = 2\n    cookies_sold = 40\n    cookie_price = 1\n    trays_sold = 5\n    tray_price = 4\n    total_sales = (cupcakes_sold * cupcake_price) + (cookies_sold * cookie_price)\n    total_cost = (trays_sold * tray_price)\n    money_left = total_sales - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of children\n    initial_children = 5\n\n    # Calculate the number of children after the first street\n    children_after_first_street = initial_children + 5\n\n    # Calculate the number of children after the second street\n    children_after_second_street = children_after_first_street + 2\n\n    # Calculate the number of children after the third street\n    children_after_third_street = children_after_second_street + 2\n\n    # Calculate the total number of children after the last street\n    total_children = children_after_second_street + children_after_third_street\n\n    # Display the total number of children\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    total_meals = 1360\n    friday_meals = 64\n    saturday_meals = 30\n    sunday_meals = 48\n    remaining_meals = total_meals - (friday_meals + saturday_meals + sunday_meals)\n    result = remaining_meals\n    return result"}
{"output": "def solution():\n    \n    quarter_value = 0.25\n    nickel_value = 0.05\n    dime_value = 0.10\n    num_quarter = 1\n    num_nickels = 2\n    num_dimes = 7\n    total_value = (quarter_value * num_quarter) + (nickel_value * num_nickels) + (dime_value * num_dimes)\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    # Define the age of the brothers and sisters\n    brothers_age = 12\n    sisters_age = 3 * brothers_age\n\n    # Calculate the age of the older brother\n    older_brother_age = brothers_age / 2\n\n    # Calculate the total age of all the siblings\n    total_age = brothers_age + sisters_age + older_brother_age\n\n    # Display the total age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    minutes_per_day = 15\n    days_per_week = 5\n    weeks = 4\n    total_minutes = minutes_per_day * days_per_week * weeks\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    small_shirt_size = 3\n    medium_shirt_size = 4\n    large_shirt_size = 6\n\n    num_small_shirts = 11\n    num_medium_shirts = 8\n    num_large_shirts = 6\n\n    # Calculate the total area of all small shirts\n    total_small_shirt_area = num_small_shirts * small_shirt_size\n\n    # Calculate the total area of all medium shirts\n    total_medium_shirt_area = num_medium_shirts * medium_shirt_size\n\n    # Calculate the total area of all large shirts\n    total_large_shirt_area = num_large_shirts * large_shirt_size\n\n    # Calculate the total area of the quilt\n    total_area = total_small_shirt_area + total_medium_shirt_area + total_large_shirt_area\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    small_sunflower_seeds = 3 * 12\n    large_sunflower_seeds = small_sunflower_seeds * 1.5\n    total_seeds = small_sunflower_seeds + large_sunflower_seeds\n    result = total_seeds\n    return result"}
{"output": "def solution():\n    \n    george_pens = 18\n    timothy_pens = george_pens * 3\n    sarah_pens = timothy_pens / 2\n    result = sarah_pens\n    return result"}
{"output": "def solution():\n    \n    # Define Albert's height\n    albert_height = 36\n\n    # Calculate Anne's height\n    anne_height = albert_height * 2\n\n    # Calculate Jackie's height\n    jackie_height = anne_height - 3\n\n    # Display Jackie's height\n    result = jackie_height\n    return result"}
{"output": "def solution():\n    \n    bars_per_day = 5000\n    days_per_week = 7\n    weeks = 2\n    total_bars = bars_per_day * days_per_week * weeks\n    price_per_bar = 2\n    total_money = total_bars * price_per_bar\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of each T-shirt and the discount percentage\n    original_price = 8\n    discount_percentage = 0.5\n\n    # Calculate the discounted price of each T-shirt\n    discounted_price = original_price * (1 - discount_percentage)\n\n    # Calculate the discounted price of the shoes\n    discounted_price = discounted_price * (1 - discount_percentage)\n\n    # Calculate the discounted price of the shoes\n    discounted_price = discounted_price * (1 - discount_percentage)\n\n    # Calculate the total amount spent at the store\n    total_spent = discounted_price + discounted_price\n\n    # Display the total amount spent\n    result = total_spent\n    return result"}
{"output": "def solution():\n    allowance_per_week = 6  # Ryan's allowance is $6 each week\n    chores_per_week = 3  # Ryan completes his chores for 3 weeks\n    ice_cream_cones_cost = 1.25  # Ryan bought ice cream cones for himself and 3 friends\n    total_allowance = allowance_per_week * chores_per_week * 3  # Ryan completes his chores for 3 weeks\n    total_ice_cream_cones_cost = ice_cream_cones_cost * 3  # Ryan bought ice cream cones for himself and 3 friends\n    total_friends_cost = ice_cream_cones_cost * 3  # Ryan bought 3 friends for himself and 3 friends\n    total_cost = total_allowance + total_ice_cream_cones_cost + total_friends_cost  # Ryan wants to go to the movies and tickets cost $6.50 each"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    leggings_price = 100\n    frame_price = 5\n    sunglasses_price = 30\n    bathrobes_price = 100\n\n    # Calculate the total cost of the presents\n    total_cost = leggings_price + frame_price + (2 * bathrobes_price)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the cost of passion fruit and jackfruit\n    cost_passion_fruit = 2 * 6  # 2 pounds of passion fruit at $6 per pound\n    cost_jackfruit = 1.5 * 8  # 1.5 pounds of jackfruit at $8 per pound\n    cost_honey = 2 * 10  # 2 pounds of special honey at $10 per pound\n    total_cost = cost_passion_fruit + cost_jackfruit + cost_honey\n\n    # Calculate the profit made from selling 10 jars\n    profit = total_cost - 50  # Tim sells each jar for $50\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    quarters = 32\n    dimes = 95\n    nickels = 120\n    pennies = 750\n    total_quarters = quarters * 0.25\n    total_dimes = dimes * 0.1\n    total_nickels = nickels * 0.05\n    total_pennies = pennies * 0.01\n    total_dollar = total_quarters + total_dimes + total_nickels + total_pennies\n    result = total_dollar\n    return result"}
{"output": "def solution():\n    \n    ice_cream_cost = 3.5\n    movie_tickets_cost = 7.5\n    bracelet_cost = 8.5\n    total_spent = ice_cream_cost + (2 * movie_tickets_cost) + bracelet_cost\n    money_left = 40 - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    cars_per_day = 3  # Josh services 3 cars per day\n    days_per_week = 7  # There are 7 days in a week\n    weeks = 2  # Josh wants to know how much he makes in 2 weeks\n\n    # Calculate the total number of cars Josh makes in 2 weeks\n    total_cars = cars_per_day * days_per_week * weeks\n\n    # Calculate the total amount of money Josh makes in 2 weeks\n    total_money = total_cars * 4\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies\n    oatmeal_cookies = 9\n    chocolate_chip_cookies = 4\n    sugar_cookies = 5\n\n    # Subtract the cookies eaten for early day snack\n    oatmeal_cookies -= 3\n\n    # Subtract the cookies eaten for lunch\n    lunch_cookies -= 2\n\n    # Subtract the cookies given to friends\n    sugar_cookies -= 2\n\n    # Subtract the cookies baked for dinner\n    dinner_cookies -= 4 * 4\n\n    # Calculate the total number of cookies Randy has now\n    total_cookies = oatmeal_cookies + chocolate_chip_cookies + sugar_cookies + dinner_cookies\n\n    # Display the total number of cookies Randy has now\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    num_collection = 12\n    price_per_toy_1 = 5\n    price_per_toy_2 = 7\n\n    # Calculate the total amount of money Matthew would earn\n    total_money_earned = num_collection * (price_per_toy_1 * num_collection) + (price_per_toy_2 * num_toy_2)\n    result = total_money_earned\n    return result"}
{"output": "def solution():\n    holes_per_day = 6  # Nate's dog can dig 6 holes a day\n    days_digging = 14  # Nate digs for 14 days\n    holes_filled_per_day = 9  # Nate fills in 9 holes a day when Nate gets home\n    new_holes_per_night = 6  # Nate keeps 6 new holes every night\n\n    # Calculate the total number of holes Nate needs to dig\n    total_holes = holes_per_day * days_digging\n\n    # Calculate the total number of weeks it will take Nate to fill all the holes\n    total_weeks = total_holes / holes_per_week\n    result = total_weeks\n    return result"}
{"output": "def solution():\n    \n    # Define the average number of students enrolled by Norman High School\n    Norman_students = 4000\n\n    # Define the average number of students enrolled by Butler High School\n    Butler_students = 3/4 * Norman_students\n\n    # Calculate the average number of students enrolled by Butler High School\n    Butler_students = Butler_students * 2\n\n    # Calculate the difference in the average number of students enrolled\n    difference = Butler_students - Norman_students\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 7995\n    rainbow_cookies = 2595\n    oatmeal_cookies = 3075\n    chocolate_chip_cookies = total_cookies - rainbow_cookies - oatmeal_cookies\n    result = chocolate_chip_cookies\n    return result"}
{"output": "def solution():\n    num_test_tubes = 16\n    num_beakers = 7\n    num_dishes = 14\n\n    # Igor gathered half as many test tubes as requested\n    num_test_tubes = num_test_tubes / 2\n\n    # Igor gathered two more Petri dishes as requested\n    num_petri_dishes = num_petri_dishes + 2\n\n    # Calculate the total number of test tubes gathered\n    total_test_tubes = num_test_tubes + num_petri_dishes\n\n    # Calculate the total number of beakers gathered\n    total_beakers = num_beakers - total_test_tubes\n\n    # Calculate the total number of dishes gathered\n    total_dishes = num_dishes + num_petri_dishes\n\n    # Calculate the difference between the total number of test tubes and beakers\n    difference = total_beakers - total_dishes\n    result = difference\n    return result"}
{"output": "def solution():\n    num_tables = 4\n    legs_per_table = 4\n    screws_per_leg = 2\n    total_legs = num_tables * legs_per_table\n    total_screws = 40\n\n    # Calculate the total number of screws needed\n    total_screws_needed = total_legs * screws_per_leg\n\n    # Calculate the number of screws left over\n    screws_left_over = total_screws - total_screws_needed\n    result = screws_left_over\n    return result"}
{"output": "def solution():\n    \n    eggs_in_basket1 = 10\n    eggs_in_basket2 = eggs_in_basket1 * 2\n    total_eggs = eggs_in_basket1 + eggs_in_basket2\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    alexandra_raised = 430\n    sarah_raised = 300\n    kim_raised = alexandra_raised + 320\n    maryam_raised = sarah_raised + 400\n    total_raised = alexandra_raised + kim_raised + sarah_raised + maryam_raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    aaron_distance = 4\n    aaron_speed = aaron_distance / 2\n    aaron_time = aaron_distance / aaron_speed\n    total_time = aaron_time + 16\n    result = total_time\n    return result"}
{"output": "def solution():\n    # Calculate the total length of line needed for the docks\n    total_line_needed = 200 - 6  # 200 feet of dock, and there is 6 feet of new line\n    # Calculate the total length of line needed\n    total_line_needed = total_line_needed * 3  # 3 feet of line needed for every foot of dock\n    result = total_line_needed\n    return result"}
{"output": "def solution():\n    num_reservations = 6\n    meal_cost = 5\n    wine_cost = 5\n    num_meals_per_week = 2\n    num_days_per_week = 2\n\n    # Calculate the total cost of meals per week\n    total_meal_cost = num_meals_per_week * meal_cost\n\n    # Calculate the total cost of wine per week\n    total_wine_cost = wine_cost * num_days_per_week\n\n    # Calculate the total revenue per week\n    total_revenue = total_meal_cost + total_wine_cost\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    num_watermelons = 50\n    cost = 80\n    profit_percentage = 0.25\n\n    # Calculate the profit per watermelon\n    profit_per_watermelon = cost * profit_percentage\n\n    # Calculate the total revenue from selling all watermelons\n    total_revenue = num_watermelons * profit_per_watermelon\n\n    # Calculate the price per watermelon\n    price_per_watermelon = total_revenue / num_watermelons\n    result = price_per_watermelon\n    return result"}
{"output": "def solution():\n    \n    john_age_when_john_was_19 = 19\n    james_age_now = john_age_when_john_was_19 + (2 * john_age_when_john_was_19)\n    james_age_in_3_years = james_age_now + 3\n    youngest_son_age_at_32 = 32 - james_age_in_3_years\n    result = youngest_son_age_at_32\n    return result"}
{"output": "def solution():\n    \n    # Define the time Ana spends peeling an orange and the time Jane spends doing the same\n    ana_time = 3\n    jane_time = 4\n\n    # Calculate the number of oranges Ana will have peeled after an hour\n    ana_oranges = ana_time / ana_time\n\n    # Calculate the number of oranges Jane will have peeled after an hour\n    jane_oranges = jane_time / jane_time\n\n    # Calculate the difference in the number of oranges Ana and Jane will have peeled\n    difference = ana_oranges - jane_oranges\n\n    # Display the difference in the number of oranges\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the radiator and the discount percentage\n    radiator_cost = 400\n    discount_percentage = 80\n\n    # Calculate the discounted cost of the radiator\n    discounted_cost = radiator_cost * (1 - (discount_percentage / 100))\n\n    # Calculate the cost of the mechanic\n    mechanic_cost = 3 * 50\n\n    # Calculate the total cost\n    total_cost = discounted_cost + mechanic_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_animals = 20\n    total_legs = 70\n    chicken_legs = total_legs / 4\n    chicken_animals = chicken_legs / 4\n    result = chicken_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pizzas and slices per pizza\n    num_pizzas = 7\n    slices_per_pizza = 8\n\n    # Calculate the total number of slices\n    total_slices = num_pizzas * slices_per_pizza\n\n    # Divide the total slices equally among the three people\n    slices_per_person = total_slices / 3\n\n    # Return the result\n    result = slices_per_person\n    return result"}