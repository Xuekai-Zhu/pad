{"output": "def solution():\n    # Calculate the total amount of feed needed for the day\n    total_feed = 3 * 3  # Wendi feeds three cups of chicken feed each of her three separate meals\n    morning_feed = 15  # Wendi gives her chickens 15 cups of feed in the morning\n    afternoon_feed = 25  # Wendi gives her chickens 25 cups of feed in the afternoon\n    remaining_feed = total_feed - morning_feed - afternoon_feed  # Wendi needs to give the remaining feed to get the remaining feed\n    result = remaining_feed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of one glass and the percentage of the price of one glass\n    GLASS_PRICE = 5\n    SECOND_GLASS_PERCENTAGE = 0.6\n\n    # Define the number of glasses Kylar wants to buy\n    num_glasses = 16\n\n    # Calculate the total cost of the glasses\n    total_cost = num_glasses * GLASS_PRICE\n\n    # Calculate the number of second glasses Kylar wants to buy\n    num_second_glasses = num_glasses // 2\n\n    # Calculate the total cost of the second glasses\n    second_glass_cost = num_second_glasses * SECOND_GLASS_PERCENTAGE\n\n    # Calculate the total cost of the glasses\n    total_cost = total_cost + second_glass_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    seattle_sheep = 20\n    charleston_sheep = seattle_sheep * 4\n    toulouse_sheep = charleston_sheep * 2\n    total_sheep = seattle_sheep + charleston_sheep + toulouse_sheep\n    result = total_sheep\n    return result"}
{"output": "def solution():\n    \n    # Define the total size of the file and the download rate\n    total_size = 200\n    download_rate = 2\n\n    # Calculate the time it takes to download the first way\n    time_first_way = total_size * (1 - 0.4)\n\n    # Calculate the time it takes to download the next way\n    time_next_way = time_first_way * (1 - 20)\n\n    # Calculate the total download time\n    total_download_time = time_first_way + time_next_way\n\n    # Display the total download time\n    result = total_download_time\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance John travels at the start of the first 3 hours\n    distance_1 = 3 * 60\n\n    # Calculate the distance John travels at the end of the 4 hours\n    distance_2 = 2 * 30\n\n    # Calculate the distance John travels at the end of the 4 hours\n    distance_3 = 4 * 80\n\n    # Calculate the total distance John travels\n    total_distance = distance_1 + distance_2 + distance_3\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    regular_rate = 10\n    regular_hours = 40\n    overtime_rate = regular_rate * 1.2\n    regular_pay = regular_hours * regular_rate\n    overtime_pay = overtime_rate * overtime_hours\n    total_pay = regular_pay + overtime_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    first_month_downloads = 60\n    second_month_downloads = 3 * first_month_downloads\n    third_month_reduction = 0.3\n    total_downloads = first_month_downloads + second_month_downloads + third_month_reduction\n    result = total_downloads\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the donuts\n    donut_cost = 3 * 68\n\n    # Calculate the cost of the mini cupcakes\n    cupcake_cost = 2 * 80\n\n    # Calculate the cost of the mini cheesecakes\n    cheesecakes_cost = 6 * 55\n\n    # Calculate the total cost\n    total_cost = donut_cost + cupcake_cost + cheesecakes_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of planting the lemon tree and the number of lemons grown per year\n    INITIAL_COST = 90\n    LEMONS_GROWWNED = 7\n\n    # Define the selling price per year to water and feed the tree\n    SELLING_PRICE_PER_YEAR = 1.5\n    WATER_PRICE_PER_YEAR = 3\n\n    # Calculate the total revenue from selling the lemons\n    revenue = LEMONS_GROWWNED * SELLING_PRICE_PER_YEAR\n\n    # Calculate the number of years it will take to reach the initial cost\n    years = INITIAL_COST / revenue\n\n    # Display the number of years\n    result = years\n    return result"}
{"output": "def solution():\n    # Calculate the number of vacuum cleaners sold at the green house\n    green_cleaners = 5 / 3\n\n    # Calculate the number of vacuum cleaners left after selling at the green house\n    remaining_cleaners = 5 - green_cleaners\n\n    # Calculate the number of vacuum cleaners sold at the red house\n    red_cleaners = remaining_cleaners / 2\n\n    # Calculate the number of vacuum cleaners left after selling at the orange house\n    orange_cleaners = remaining_cleaners - red_cleaners\n\n    # Calculate the number of vacuum cleaners Melanie started with\n    starting_cleaners = green_cleaners + red_cleaners + orange_cleaners\n    result = starting_cleaners\n    return result"}
{"output": "def solution():\n    \n    total_students = 20\n    contemporary_percent = 20\n    remaining_percent = 100 - contemporary_percent\n    jazz_percent = 25\n    hip_hop_percent = 100 - (remaining_percent * jazz_percent)\n    hip_hop_percent = hip_hop_percent / total_students * 100\n    result = hip_hop_percent\n    return result"}
{"output": "def solution():\n    jewelry_price = 5000\n    electronic_gadgets_price = 8000\n    financial_advisor_percent = 2.5\n    electronic_gadgets_percent = 1.2\n\n    # Calculate the profit from the jewelry market\n    jewelry_profit = jewelry_price * (1 + financial_advisor_percent)\n\n    # Calculate the profit from the electronic gadgets market\n    electronic_gadgets_profit = electronic_gadgets_price * (1 + electronic_gadgets_percent)\n\n    # Calculate the total profit\n    total_profit = jewelry_profit + electronic_gadgets_profit\n    result = total_profit\n    return result"}
{"output": "def solution():\n    # Calculate the total distance covered by both trains in two days\n    total_distance = 80 + 150  # distance traveled on westward and northwards\n    distance_per_train = total_distance / 2  # distance covered by each train in two days\n    result = distance_per_train\n    return result"}
{"output": "def solution():\n    \n    teacher_rate = 20\n    coach_rate = 30\n    teacher_hours_per_week = 35\n    coach_hours_per_week = 15\n    weeks_per_year = 50\n    teacher_salary = teacher_rate * teacher_hours_per_week * weeks_per_year\n    coach_salary = coach_rate * coach_hours_per_week * weeks_per_year\n    annual_salary = teacher_salary + coach_salary\n    result = annual_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs per omelet and the number of weeks\n    EGGS_PER_OMLET = 3\n    WEEKS = 4\n\n    # Calculate the total number of eggs\n    total_eggs = EGGS_PER_OMLET * WEEKS\n\n    # Convert the total number of eggs to dozens\n    total_dozens = total_eggs / 12\n\n    # Display the total number of dozens\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    \n    total_distance = 12\n    first_distance = 4\n    second_distance = 2\n    average_speed = 4\n    remaining_distance = total_distance - first_distance - second_distance\n    remaining_speed = remaining_distance / average_speed\n    result = remaining_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water in the orange drink\n    orange_drink = 10\n\n    # Define the amount of water in the pineapple drink\n    pineapple_drink = 15\n\n    # Calculate the amount of water in the orange drink\n    orange_drink_water = orange_drink * (2/3)\n\n    # Calculate the amount of water in the pineapple drink\n    pineapple_drink_water = pineapple_drink * (3/5)\n\n    # Calculate the amount of water in the remaining 24 liters\n    remaining_drink = 24 - orange_drink_water - pineapple_drink_water\n\n    # Display the amount of water in the remaining 24 liters\n    result = remaining_drink\n    return result"}
{"output": "def solution():\n    \n    # Define Raymond's age before Samantha\n    raymond_age_before = 6\n\n    # Define Raymond's son's age before Samantha\n    son_age_before = 23\n\n    # Define Samantha's current age\n    samantha_age = 31\n\n    # Calculate Raymond's son's age before Samantha\n    son_age_before = samantha_age - raymond_age_before\n\n    # Calculate the number of years ago Raymond's son was born\n    years_ago = son_age_before - raymond_age_after\n\n    # Display the number of years ago Raymond's son was born\n    result = years_ago\n    return result"}
{"output": "def solution():\n    # Calculate the total number of DVDs sold by Billy\n    total_DVDs_sold = 3*1 + 2*2 + 3*2  # first 3 customers buy one DVD each, next 2 customers buy 2 DVDs each, last 3 customers don't buy any DVDs\n    result = total_DVDs_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the initial burning speed and the time burned\n    initial_burning_speed = 2  # centimeters per hour\n    burning_time = 1.5  # hours\n\n    # Calculate the initial burning distance\n    initial_burning_distance = initial_burning_speed * burning_time\n\n    # Calculate the final burning distance\n    final_burning_distance = initial_burning_distance - 5 * burning_time\n\n    # Calculate the difference in the final burning distance\n    difference = final_burning_distance - initial_burning_distance\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the book\n    original_price = 19.50\n\n    # Calculate the discount amount\n    discount = original_price * 0.25\n\n    # Calculate the original price of the book\n    original_price = original_price - discount\n\n    # Display the original price of the book\n    result = original_price\n    return result"}
{"output": "def solution():\n    \n    chicken_meal_cost = 12\n    milk_packs_cost = 5\n    apple_cost = 1.5\n    total_cost = 50\n    chicken_meal_total = chicken_meal_cost\n    milk_total = milk_packs_cost * milk_packs_cost\n    apple_total = apple_cost * 4\n    pizza_total = total_cost - chicken_meal_total - milk_total - apple_total\n    pizza_boxes = pizza_total / 8.5\n    result = pizza_boxes\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    SHORTS_PRICE = 16.5\n    PANTS_PRICE = 22.5\n    SHOES_PRICE = 42\n\n    # Define the number of each item purchased\n    shorts_count = 3\n    pants_count = 3\n    shoes_count = 3\n\n    # Calculate the total cost of the clothing items\n    total_cost = (shorts_count * SHORTS_PRICE) + (pants_count * PANTS_PRICE) + (shoes_count * SHOES_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    servings_per_carton = 15  # Cynthia buys 15 servings of ice cream per carton\n    cost_per_carton = 4.00  # Cynthia eats one serving of ice cream per carton at a cost of $4.00 per carton\n    servings_per_day = servings_per_carton  # Cynthia eats one serving of ice cream per day\n    days = 60  # Cynthia wants to know how much she will spend on ice cream in 60 days\n\n    # Calculate the total number of cartons of ice cream Cynthia will buy\n    total_cartons = servings_per_day / servings_per_carton\n\n    # Calculate the total cost of all cartons of ice cream Cynthia will buy\n    total_cost = total_cartons * cost_per_carton\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_distance = 60\n    first_stop_distance = 20\n    second_stop_distance = 15\n    first_stop_distance = first_stop_distance + second_stop_distance\n    distance_between_stops = total_distance - first_stop_distance\n    result = distance_between_stops\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of one pair of heels\n    heel_cost = 33\n\n    # Calculate the cost of two pairs of high heels\n    high_heel_cost = heel_cost * 2\n\n    # Calculate the total cost of the boots\n    total_cost = (2 * heel_cost) + (2 * heel_cost)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_age = 162\n    ratio = 7 + 11\n    allen_age = (11 / total_age) * ratio\n    allen_age_10_years = allen_age + 10\n    result = allen_age_10_years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jelly beans in the jar\n    jelly_beans = 80\n\n    # Calculate the number of jelly beans in the jar\n    jelly_beans_2 = (jelly_beans / 2) + 20\n    jelly_beans_3 = jelly_beans_1 * 1.25\n\n    # Calculate the average guess\n    average_guess = jelly_beans / 3\n\n    # Display the average guess\n    result = average_guess\n    return result"}
{"output": "def solution():\n    \n    dogs_per_day = 10\n    hours_per_dog = 0.5\n    days_per_week = 7\n    total_hours = dogs_per_day * hours_per_dog * days_per_week\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    total_coins = 110\n    silver_coins = (total_coins - 30) / 2\n    gold_coins = silver_coins + 30\n    result = gold_coins\n    return result"}
{"output": "def solution():\n    \n    raymond_jewels = 40\n    aaron_jewels = (raymond_jewels / 2) + 5\n    siobhan_jewels = aaron_jewels - 2\n    result = siobhan_jewels\n    return result"}
{"output": "def solution():\n    # Calculate the total points scored in the first 20 minutes\n    first_20_points = 4 * 20\n\n    # Calculate the total points scored in the second 20 minutes\n    second_20_points = 1.25 * 4\n\n    # Calculate the total points scored in the entire 20 minutes\n    total_points = first_20_points + second_20_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    yogurts_per_day = 2\n    sale_price = 5\n    days = 30\n    total_yogurts = yogurts_per_day * days\n    total_sale_price = sale_price * days\n    total_cost = total_yogurts * sale_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    lego_sets_sold = 13\n    price_per_lego_set = 15\n    games_bought = 8\n    price_per_game = 20\n    money_left = 5\n    total_money_earned = (games_bought * price_per_game) + money_left\n    money_left = money_left - total_money_earned\n    lego_sets_remaining = money_left // lego_price_per_lego_set\n    result = lego_sets_remaining\n    return result"}
{"output": "def solution():\n    \n    # Define the total distance John runs in a week\n    total_distance = 60\n\n    # Define the number of days John runs in a week\n    days_per_week = 3\n\n    # Define the number of hours John runs in the first day\n    hours_day1 = 3\n\n    # Define the number of hours John runs in the second day\n    days_day2 = days_day1 / 2\n\n    # Calculate the total number of hours John runs in the second and third days\n    days_day3 = days_day1 + days_day2\n    days_day4 = days_day3 / 2\n    days_day5 = days_day4 / 2\n\n    # Calculate John's total speed\n    speed = total_distance / days_day1 + days_day2 + days_day3\n\n    # Display John's speed\n    result = speed\n    return result"}
{"output": "def solution():\n    \n    # Define Dana's running and walking speeds\n    running_speed = 3\n    walking_speed = running_speed / 2\n\n    # Calculate Dana's running and walking speeds\n    running_speed = running_speed * 1/3\n    walking_speed = walking_speed * 2/3\n\n    # Calculate Dana's total travel time in 6 hours\n    total_travel_time = 6 * running_speed + walking_speed * walking_time\n\n    # Display Dana's total travel time\n    result = total_travel_time\n    return result"}
{"output": "def solution():\n    suzy_iPhone_age = 1  # Suzy's iPhone is 1 year old\n    ben_iPhone_age = suzy_iPhone_age * 2  # Ben's iPhone is two times older than Suzy's iPhone\n    brandon_iPhone_age = ben_iPhone_age * 4  # Brandon's iPhone is four times as old as Ben's iPhone\n\n    result = brandon_iPhone_age\n    return result"}
{"output": "def solution():\n    \n    # Define the distance between the dragon and the distance between the gemstone and the distance between the gemstone\n    dragon_distance = 1000\n    gemstone_distance = 400\n\n    # Calculate the distance between the gemstone and the distance between the dragon's flames\n    gemstone_distance_between = gemstone_distance / 3\n\n    # Calculate the distance outside of the dragon's flames\n    distance_outside_reach = dragon_distance - gemstone_distance_between\n\n    # Display the distance outside of the dragon's flames\n    result = distance_outside_reach\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pies and pieces per pie\n    num_pies = 5\n    pieces_per_pie = 8\n\n    # Calculate the total number of pieces\n    total_pieces = num_pies * pieces_per_pie\n\n    # Subtract the number of pies given out on the buffet table\n    total_pieces -= 5\n\n    # Subtract the number of pie remaining\n    total_pieces -= 14\n\n    # Display the number of pieces taken by the guests\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the number of servings in a 300g bag and the daily calorie target\n    servings_per_300g = 5\n    daily_calorie_target = 2000\n\n    # Calculate the total number of calories in the bag\n    total_calories = servings_per_300g * 250\n\n    # Calculate the number of calories consumed in the bag\n    calories_consumed = daily_calorie_target * 1800\n\n    # Calculate the maximum number of grams that can be eaten\n    max_grams = total_calories // calories_consumed\n\n    # Display the maximum number of grams that can be eaten\n    result = max_grams\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tapered candles Charlie can make and the cost of supplies\n    tapered_candles = 10\n    supplies_cost = 10\n\n    # Define the selling price of each candle\n    selling_price = 2.0\n\n    # Calculate the total cost of making the tapered candles\n    total_cost = tapered_candles * supplies_cost\n\n    # Calculate the total revenue from selling the candles\n    total_revenue = 20 * selling_price\n\n    # Calculate the net profit\n    net_profit = total_revenue - total_cost\n\n    # return the result\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    articles_monday = 5\n    articles_tuesday = articles_monday * (2/5)\n    articles_wednesday = articles_tuesday * 2\n    total_articles = articles_monday + articles_tuesday + articles_wednesday\n    total_time = total_articles * 4\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of post-it notes\n    initial_postit_notes = 80\n\n    # Define the number of cups of coffee\n    cups_of_coffee = 220\n\n    # Define the number of remaining post-it notes\n    remaining_postit_notes = 23\n\n    # Calculate the number of post-it notes in the package\n    package_postit_notes = initial_postit_notes + (cups_of_coffee * remaining_postit_notes)\n\n    # return the result\n    result = package_postit_notes\n    return result"}
{"output": "def solution():\n    \n    blue_tie_cost = 40\n    red_tie_cost = blue_tie_cost * 1.5\n    total_cost = 200 * blue_tie_cost + red_tie_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Convert the length of the wire to inches\n    wire_length_inches = 6 * 12\n\n    # Calculate the number of tomato plants\n    num_plants = wire_length_inches // 4\n\n    # Display the number of tomato plants\n    result = num_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the number of floors and units per floor\n    floors = 15\n    units_per_floor = 8\n\n    # Calculate the total number of units in the building\n    total_units = floors * units_per_floor\n\n    # Calculate the number of occupied units\n    occupied_units = total_units * (3/4)\n\n    # Calculate the number of unoccupied units\n    unoccupied_units = total_units - occupied_units\n\n    # return the result\n    result = unoccupied_units\n    return result"}
{"output": "def solution():\n    \n    eggs_per_day = 252\n    dozens_per_day = eggs_per_day / 12\n    price_per_dozen = 2\n    days_per_week = 7\n    total_eggs = eggs_per_day * days_per_week\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes Tom to get back\n    time_to_get_back = (10 - 4) / 6  # Tom's ship can travel at 10 mph per hour and is sailing from 1 to 4 PM, then travels back at a rate of 6 mph\n    result = time_to_get_back\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each type of book\n    COMIC_BOOK_WEIGHT = 1/4\n    TOY_WEIGHT = 1/2\n\n    # Define the number of comic books to remove\n    num_comic_books = 30\n\n    # Calculate the total weight of the comic books to remove\n    total_comic_weight = num_comic_books * COMIC_BOOK_WEIGHT\n\n    # Calculate the remaining weight of the toys\n    remaining_weight = 15 - total_comic_weight\n\n    # Calculate the number of toys to remove\n    num_toys = remaining_weight / TOY_WEIGHT\n\n    # Display the number of toys to remove\n    result = num_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the prices for each type of tire\n    TRUCK_PRICE = 60\n    CAR_PRICE = 40\n\n    # Define the number of truck and car tires repaired on Thursday\n    truck_tires_repaired = 6\n    car_tires_repaired = 4\n\n    # Calculate the revenue earned on Thursday\n    thursday_revenue = (truck_tires_repaired * TRUCK_PRICE) + (car_tires_repaired * CAR_PRICE)\n\n    # Calculate the revenue earned on Friday\n    friday_revenue = (truck_tires_repaired * CAR_PRICE) + (car_tires_repaired * CAR_PRICE)\n\n    # Calculate the difference in revenue between the two scenarios\n    revenue_difference = thursday_revenue - friday_revenue\n\n    # Display the revenue difference\n    result = revenue_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of kittens\n    initial_kittens = 7\n\n    # Define the number of kittens adopted by the first cat\n    patchy_kittens = 3 * initial_kittens\n\n    # Define the number of kittens adopted by the second cat\n    trixie_kittens = 12\n\n    # Calculate the total number of kittens\n    total_kittens = initial_kittens + patchy_kittens + trixie_kittens\n\n    # Display the total number of kittens\n    result = total_kittens\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 30\n\n    # Subtract the number of lollipops Jean ate\n    remaining_lollipops = initial_lollipops - 2\n\n    # Subtract the number of lollipops Jean wants to package\n    remaining_lollipops -= 2\n\n    # Calculate the number of bags Jean can fill\n    bags = remaining_lollipops // 2\n\n    # Display the number of bags Jean can fill\n    result = bags\n    return result"}
{"output": "def solution():\n    ticket_price = 7\n    popcorn_price = 7\n    total_money = 42\n\n    # Calculate the maximum number of times Peter can go to the movies\n    max_go_to_movies = (total_money - ticket_price - popcorn_price) / ticket_price\n    result = max_go_to_movies\n    return result"}
{"output": "def solution():\n    max_weight = 5000  # The wooden bridge can carry no more than 5000 pounds\n    weight_per_box = 15  # Each box weighs 15 pounds\n    combined_weight = 3755  # The combined weight of the truck and the empty truck is 3755 pounds\n\n    # Calculate the maximum number of boxes that can be loaded onto the truck\n    max_boxes = (combined_weight - weight_per_box) // weight_per_box\n    result = max_boxes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial bill and the delivery fee\n    initial_bill = 40.00\n    delivery_fee = 0.25\n\n    # Calculate the final bill after the delivery fee\n    final_bill = initial_bill + delivery_fee + 4.00\n\n    # Calculate the fee tacked\n    fee = final_bill * delivery_fee\n\n    # Calculate the final price after the tip\n    final_price = final_bill + fee\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of clusters and fruit per cluster\n    clusters = 6\n    fruit_per_cluster = 20\n\n    # Calculate the total number of fruit\n    total_fruit = clusters * fruit_per_cluster\n\n    # Calculate the number of raspberries\n    raspberries = total_fruit\n\n    # return the result\n    result = raspberries\n    return result"}
{"output": "def solution():\n    \n    total_oranges = 25\n    bad_oranges = total_oranges * 0.2\n    unripe_oranges = total_oranges * 0.2\n    sour_oranges = 2\n    good_oranges = total_oranges - bad_oranges - unripe_oranges - sour_oranges\n    result = good_oranges\n    return result"}
{"output": "def solution():\n    \n    material_cost = 500\n    jeweler_cost = 800\n    insured_cost = material_cost * 0.1\n    total_cost = material_cost + jeweler_cost + insured_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    annual_pension_value = 50000\n    years_worked = 40\n\n    # Calculate the value of Marcy's annual pension after 20 years\n    annual_pension_value_20_years = annual_pension_value * (1 + years_worked)\n\n    # Calculate the value of Marcy's annual pension after 20 years\n    annual_pension_value_20_years = annual_pension_value_20_years * 0.05\n\n    # Calculate the value of Marcy's annual pension after 30 years\n    annual_pension_30_years = annual_pension_value_20_years + annual_pension_30_years\n    result = annual_pension_30_years\n    return result"}
{"output": "def solution():\n    # Calculate the total amount charged for the first half of the year\n    first_half_cost = 140 * 12  # $140 per month for 12 months\n\n    # Calculate the total amount charged for the second half of the year\n    second_half_cost = 0.9 * 140 * 12  # 10% less than the initial amount for the first half of the year\n\n    # Calculate the total amount charged for the entire year\n    total_cost = first_half_cost + second_half_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total distance traveled and the amount of gas needed to fill it up\n    total_distance = 100\n    fill_amount = 4\n\n    # Define the amount of gas in the tank\n    gas_in_tank = 12\n\n    # Calculate the distance Sophia can drive on a single tank of gas\n    distance_on_tank = (total_distance - fill_amount) / gas_in_tank\n\n    # Display the distance Sophia can drive on a single tank of gas\n    result = distance_on_tank\n    return result"}
{"output": "def solution():\n    \n    # Define the time spent watching TV and reading\n    tv_time = 2\n    read_time = tv_time / 2\n\n    # Calculate the total time spent on TV and reading in 4 weeks\n    total_time = (tv_time * 3) + (read_time * 4)\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of schools and players per school\n    NUM_SCHOOLS = 4\n    GIRLS_PLAYERS_PER_SCHOOL = 5\n    BOYS_PLAYERS_PER_SCHOOL = 5\n\n    # Calculate the total number of players\n    total_players = NUM_SCHOOLS * GIRLS_PLAYERS_PER_SCHOOL + BOYS_PLAYERS_PER_SCHOOL\n\n    # Calculate the total number of coach players\n    total_coach_players = NUM_SCHOOLS * COACH_PLAYERS_PER_SCHOOL\n\n    # Calculate the total number of people\n    total_people = total_players + total_coach_players\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    diamonds = 175\n    rubies = diamonds - 35\n    emeralds = rubies * 2\n    total_gems = diamonds + rubies + emeralds\n    result = total_gems\n    return result"}
{"output": "def solution():\n    \n    girls = 60\n    boys = girls * 2\n    students_per_teacher = 5\n    total_students = girls + boys\n    teachers = total_students // students_per_teacher\n    result = teachers\n    return result"}
{"output": "def solution():\n    \n    total_allowance = 5 * 8\n    remaining_money = 100 - total_allowance\n    initial_money = remaining_money\n    result = initial_money\n    return result"}
{"output": "def solution():\n    # Calculate the total number of dance classes Judy teaches in a week\n    total_classes = 5 * 5 + 8 * 8  # Judy teaches 5 dance classes every day, and 8 classes on Saturday\n\n    # Calculate the total amount of money Judy makes in a week\n    total_money = total_classes * 15 * 15  # Judy charges $15.00 per student\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    first_one_ins = 20\n    second_one_ins = 2 * first_one_ins\n    total_ins = first_one_ins + second_one_ins\n    result = total_ins\n    return result"}
{"output": "def solution():\n    \n    # Define the price of brownies and slices of cheesecakes\n    BROWNIE_PRICE = 3\n    CHEESECAKE_PRICE = 4\n\n    # Define the number of brownies and slices of cheesecakes sold\n    brownies_sold = 43\n    cheesecakes_sold = 23\n\n    # Calculate the total amount raised\n    total_raised = (brownies_sold * BROWNIE_PRICE) + (cheesecakes_sold * CHEESECAKE_PRICE)\n\n    # Display the total amount raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each cell phone and the number of phones purchased\n    PHONE_COST = 150\n    NUM_PHONES = 5\n\n    # Calculate the total cost of the phones for 3 months\n    total_cost = PHONE_COST * NUM_PHONES * 3\n\n    # Calculate the interest charged for each unit\n    interest_charged = total_cost * 0.02\n\n    # Calculate the total cost for 3 months\n    total_cost_3_months = total_cost + interest_charged\n\n    # Display the total cost for 3 months\n    result = total_cost_3_months\n    return result"}
{"output": "def solution():\n    \n    marigold_price = 2.74\n    petunias_price = 1.87\n    begonias_price = 2.12\n    marigold_pots = 12\n    petunias_pots = 9\n    begonias_pots = 17\n    total_marigold_price = marigold_price * marigold_pots\n    total_petunias_price = petunias_price * petunias_pots\n    total_begonias_price = begonias_price * begonias_pots\n    total_pots = marigold_pots + petunias_pots + begonias_pots\n    total_price = total_marigold_price + total_petunias_price + total_begonias_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    top_level_area = 16\n    level_1_area = top_level_area\n    level_2_area = top_level_area / 2\n    level_3_area = level_2_area / 2\n    total_area = level_1_area + level_2_area + level_3_area\n    average_area = total_area / 4\n    result = average_area\n    return result"}
{"output": "def solution():\n    # Calculate the total cups of dog food used in the first year\n    first_year_cups = (180 * 1) + (180 * 2)  # 1 cup every day for 180 days, 2 cups every day for the rest of its life\n\n    # Calculate the number of bags of dog food needed\n    bags_needed = first_year_cups / 110  # 1 bag contains 110 cups\n\n    result = bags_needed\n    return result"}
{"output": "def solution():\n    \n    sarah_laundry = 400\n    raymond_laundry = sarah_laundry / 2\n    david_laundry = sarah_laundry / 4\n    difference = raymond_laundry - david_laundry\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the cost of buying 18 flowers in packages of 3\n    cost_3 = 2.5 * 18  # Vincent can buy flowers in packages of 3 for $2.50\n\n    # Calculate the cost of buying 18 flowers in packages of 2\n    cost_2 = 1 * 18  # Vincent can buy flowers in packages of 2 for $1\n\n    # Calculate the amount Vincent saves by buying 18 flowers at the better price\n    savings = cost_3 - cost_2\n    result = savings\n    return result"}
{"output": "def solution():\n    dog_cost = 100  # The dog costs $100\n    discount = 0.3  # The groomer offers him a 30% discount for being a new customer\n\n    # Calculate the discounted price of the grooming\n    discounted_price = dog_cost - (dog_cost * discount)\n\n    result = discounted_price\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water each girl got\n    girls_water = 24 / 6\n\n    # Define the amount of water the boy got\n    boy_water = 6\n\n    # Calculate the total amount of water received\n    total_water = girls_water * 2 + boy_water\n\n    # Calculate the amount of water left\n    water_left = total_water - total_water\n\n    # Display the amount of water left\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 10\n\n    # Define the number of stickers Charlie bought from the store, got 23 for his birthday\n    bought_stickers = 21\n\n    # Define the number of stickers Charlie gave away\n    given_away_stickers = 9\n\n    # Define the number of stickers Charlie used to decorate a greeting card\n    decorate_card_stickers = 28\n\n    # Calculate the total number of stickers Charlie has\n    total_stickers = initial_stickers + bought_stickers + birthday_stickers - given_away_stickers - decorate_card_stickers\n\n    # Display the total number of stickers Charlie has left\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    grace_weight = 125\n    alex_weight = 4 * grace_weight - 2\n    combined_weight = grace_weight + alex_weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rose bushes and roses per bush\n    num_bushes = 3\n    roses_per_bush = 25\n\n    # Define the number of thorns per rose\n    thorns_per_rose = 8\n\n    # Calculate the total number of roses\n    total_roses = num_bushes * roses_per_bush\n\n    # Calculate the total number of thorns\n    total_thorns = total_roses * thorns_per_rose\n\n    # return the result\n    result = total_thorns\n    return result"}
{"output": "def solution():\n    # Calculate the number of games won by the football team\n    games_won = 22 - 8  # the football team won 8 more than they lost\n    result = games_won\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blocks per shirt\n    BLOCKS_PER_SHIRT = 4\n\n    # Define the age of Gene's vacations\n    VACATION_AGE = 23\n\n    # Define the age of Gene's vacations\n    VACATION_AGE = 4\n\n    # Define the current age of Gene's quilt\n    CURRENT_AGE = 34\n\n    # Calculate the number of blocks Gene has\n    blocks = (CURRENT_AGE - VACATION_AGE) * VACATION_AGE\n\n    # Calculate the number of blocks Gene has\n    blocks += blocks\n\n    # Display the number of blocks Gene has\n    result = blocks\n    return result"}
{"output": "def solution():\n    \n    first_time_rang = 4\n    second_time_rang = 3 * first_time_rang\n    third_time_rang = second_time_rang / 2\n    total_rang = first_time_rang + second_time_rang + third_time_rang\n    result = total_rang\n    return result"}
{"output": "def solution():\n    \n    # Define the initial salary and the percentage increase in salaries\n    initial_salary = 600\n    increase_percentage = 0.1\n\n    # Calculate the increased salary for each employee\n    increased_salary = initial_salary * (1 + increase_percentage)\n\n    # Calculate the annual salary after 5 years of service\n    annual_salary_5_years = increased_salary * 5 * 3\n\n    # Calculate the annual salary after 3 years of service\n    annual_salary_3_years = annual_salary_5_years - 3 * 5\n\n    # Display the annual salary after 3 years of service\n    result = annual_salary_3_years\n    return result"}
{"output": "def solution():\n    \n    # Let x be the number of copies Harald sold\n    # Then Marilyn sold 10x copies\n    # The total number of copies sold is 88,000\n    # So we have the equation x + 10x = 88000\n    # Simplifying, we get 2x = 88000\n    # Solving for x, we get x = 16\n\n    # Therefore, Harald sold 16 copies\n    result = 16\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and the number of gift bags needed per guest\n    guests = 16\n    gift_bags_per_guest = 0.75\n\n    # Calculate the number of attendees and gift bags needed\n    attendees = guests * (1/4)\n    gift_bags_needed = attendees * gift_bags_per_guest\n\n    # Calculate the total cost of the gift bags\n    gift_bags_cost = gift_bags_needed * 2\n\n    # return the result\n    result = gift_bags_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of potato salad needed for the picnic\n    adult_salad = 10 * 20  # 10 lbs of potato salad eaten by an adult dinosaur\n    child_salad = adult_salad / 2  # half as much as an adult\n    total_potato_salad = adult_salad + child_salad  # total potato salad needed for the picnic\n    result = total_potato_salad\n    return result"}
{"output": "def solution():\n    \n    cindy_pets = 4\n    marcia_pets = cindy_pets + 2\n    jan_pets = marcia_pets * 3\n    total_pets = cindy_pets + marcia_pets + jan_pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    amy_age = 10 + 2\n    corey_age = 10 - 1\n    jackson_age = (amy_age - 5) / 4\n    result = jackson_age\n    return result"}
{"output": "def solution():\n    lee_speed = 38  # Lee runs the 400-m hurdles in 38 seconds\n    gerald_speed = lee_speed - 2  # Gerald runs the 400-m hurdles two seconds faster than Lee\n    gerald_time = gerald_speed * 1.1  # Gerald changed his diet speed by 10%\n\n    result = gerald_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and cats\n    dogs = 60\n    cats = 2 * dogs\n\n    # Calculate the combined number of pet dogs and cats\n    pet_dogs_and_cats = dogs + cats\n\n    # Calculate the number of rabbits pets\n    rabbits_pets = pet_dogs_and_cats - 12\n\n    # Calculate the total number of pets\n    total_pets = pet_dogs_and_cats + rabbits_pets\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    total_students = 200\n    boys_ratio = 2/5\n    girls_ratio = 2/3\n    boys = total_students * boys_ratio\n    girls = total_students - boys\n    girls_in_girl_scout = girls * girls_ratio\n    girls_not_in_girl_scout = girls - girls_in_girl_scout\n    result = girls_not_in_girl_scout\n    return result"}
{"output": "def solution():\n    \n    harry_hours = 9\n    james_hours = harry_hours * (2/3)\n    difference = harry_hours - james_hours\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the volume of sauce in ounces\n    sauce_volume = 32\n\n    # Calculate the volume of sauce used in ounces\n    sauce_used = sauce_volume / 2\n\n    # Calculate the number of tomatoes used\n    tomatoes_used = sauce_used / 3\n\n    # Display the number of tomatoes used\n    result = tomatoes_used\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cars on the motorway\n    total_cars = 30\n\n    # Calculate the number of cars drive through the traffic jam in the first 15 minutes\n    first_15_min_cars = total_cars - 15\n\n    # Calculate the number of cars drive through the traffic jam in the remaining 15 minutes\n    remaining_15_min_cars = 20\n\n    # Calculate the number of cars drive through the traffic jam in the remaining 15 minutes\n    remaining_15_min_cars = total_cars - first_15_min_cars - remaining_15_min_cars\n\n    # Calculate the number of cars drive through the traffic jam in the first 15 minutes\n    first_15_min_cars = first_15_min_cars\n\n    # Display the number of cars drive through the traffic jam in the first 15 minutes\n    result = first_15_min_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of potted plants\n    initial_plants = 18\n\n    # Define the number of windowledges of the large country home\n    windowledges = 40\n\n    # Define the number of potted plants given to friends and family tomorrow\n    plants_given = 1 * 2\n\n    # Calculate the total number of potted plants\n    total_plants = initial_plants + windowledges - plants_given\n\n    # Display the total number of potted plants\n    result = total_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the number of doorbell rings for each friend\n    friend1 = 20\n    friend2 = friend1 * 1.25\n    friend3 = friend4 + 10\n\n    # Calculate the total number of doorbell rings for all four friends\n    total_rings = friend1 + friend2 + friend3\n\n    # Display the total number of doorbell rings\n    result = total_rings\n    return result"}
{"output": "def solution():\n    # Calculate the total number of pages Solo has to read\n    total_pages = 4 + 20 + 7 + 8\n\n    # Calculate the total number of days Solo has to read\n    total_days = 4 + 5\n\n    # Calculate the average number of pages Solo needs to read per day\n    avg_pages_per_day = total_pages / total_days\n    result = avg_pages_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the number of glasses of water John drinks in a week\n    glasses_weekday = 5\n    glasses_weekend = 2\n\n    # Calculate the total number of glasses of water John drinks in a week\n    total_glasses = glasses_weekday + glasses_weekend\n\n    # Display the total number of glasses of water John drinks in a week\n    result = total_glasses\n    return result"}
{"output": "def solution():\n    \n    distance_to_inland_edge = 42\n    time_per_3_mph = 10\n    distance_to_cover = distance_to_inland_edge / 3\n    total_time = distance_to_cover * time_per_3_mph\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 1000\n    pieces_placed_on_board = total_pieces / 4\n    pieces_remaining = total_pieces - pieces_placed_on_board\n    pieces_placed_on_mom = pieces_remaining / 3\n    pieces_left = pieces_remaining - pieces_placed_on_mom\n    result = pieces_left\n    return result"}
{"output": "def solution():\n    \n    amir_cookies = 5\n    cody_cookies = 3 * amir_cookies\n    total_cookies = amir_cookies + cody_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each box\n    LENGTH = 5\n    WIDTH = 6\n    HEIGHT = 4\n\n    # Calculate the volume of each box\n    box_volume = LENGTH * WIDTH * HEIGHT\n\n    # Calculate the total volume of all 3 boxes\n    total_volume = box_volume * 3\n\n    # Display the total volume\n    result = total_volume\n    return result"}
{"output": "def solution():\n    # Calculate the total length of TV Frankie watched in minutes\n    total_length = 7 * 60 + 2 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 2 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60 + 7 * 60)  # 7 hours of TV watched on Monday, Tuesday, Tuesday, Wednesday, Thursday, Thursday, and 7 hours of TV watched on Friday, and 7 hours of TV watched on Friday\n\n    # Calculate the remaining length of TV Frankie watched on Friday\n    remaining_length = total_length - 30  # Frankie watched 30-minute show on Monday, Tuesday, Wednesday, Thursday, Thursday, Friday, 7 hours of TV watched on Friday, and 7 hours of TV watched on Friday\n\n    result = remaining_length"}
{"output": "def solution():\n    \n    # Let x be the number of cookies Henry baked last year\n    # Then he wants to make 2x cookies\n    # And he actually baked 15 more cookies than he meant to\n    # And he drops 5 of his cookies as he is putting out to cool, so he has x+15 cookies\n    # And he drops 5 cookies out to cool, so he has (x+15) = (x+15) - 5 = 110\n    # Solving for x, we get x = 15\n    # Therefore, Henry can make twice as many cookies as he did last year\n    result = 2 * 15\n    return result"}
{"output": "def solution():\n    \n    # Define the price per gallon and the cashback per gallon\n    PRICE_PER_GALLON = 3.00\n    CASHBACK_PER_GALLON = 0.20\n\n    # Define the number of gallons purchased\n    gallons_purchased = 10\n\n    # Calculate the total revenue from selling the gas station\n    total_revenue = gallons_purchased * PRICE_PER_GALLON\n\n    # Calculate the total cost of buying the gas station\n    total_cost = total_revenue * PRICE_PER_GALLON\n\n    # Calculate the amount of gas after the cashback rewards\n    amount_after_rewards = total_cost - CASHBACK_PER_GALLON\n\n    # Display the amount of gas after the cashback rewards\n    result = amount_after_rewards\n    return result"}
{"output": "def solution():\n    # Calculate the total number of roll-ups that Beatrice ate\n    beatrice_rollups = 2 * 24  # 2 roll-ups wide and 24 rolls up long\n\n    # Calculate the total number of roll-ups that Marcell ate\n    marcell_rollups = 3 * 14  # 3 roll-ups wide and 14 roll-ups long\n\n    # Calculate the total number of roll-ups they ate\n    total_rollups = beatrice_rollups + marcell_rollups\n\n    # Calculate the average number of roll-ups they ate\n    average_rollups = total_rollups / 2\n    result = average_rollups\n    return result"}
{"output": "def solution():\n    # Calculate the amount of water taken on by the boat to row back the shore\n    time_to_row_back = (16/10) * 64  # the boat rowed back for every 10 feet, and 64 seconds away\n    time_to_row_back = (20/10) * 64  # the boat rowed back for every 10 feet, and 64 seconds away\n    water_taken_on = time_to_row_back - time_to_row_back  # the water taken on by the time to reach shore\n    result = water_taken_on\n    return result"}
{"output": "def solution():\n    \n    # Define the number of teachers and lessons per teacher\n    num_teachers = 4\n    lessons_per_teacher = 2\n\n    # Define the number of times the whiteboard is cleaned per lesson\n    cleaned_per_lesson = 3\n\n    # Calculate the total number of lessons in a day\n    total_lessons = num_teachers * lessons_per_teacher\n\n    # Calculate the total number of times the whiteboard is cleaned in a day\n    total_cleaned_times = total_lessons * cleaned_per_lesson\n\n    # Display the total number of times the whiteboard is cleaned in a day\n    result = total_cleaned_times\n    return result"}
{"output": "def solution():\n    flowers_per_day = 2  # Ryan plants 2 flowers a day\n    num_days = 15  # Ryan plants for 15 days\n    total_flowers = flowers_per_day * num_days  # Calculate the total number of flowers after 15 days\n\n    # Calculate the number of flowers after 5 did not grow\n    num_flowers_after_growth = total_flowers - 5\n\n    result = num_flowers_after_growth\n    return result"}
{"output": "def solution():\n    jamal_phone = 1800  # Jamal's phone can hold 1800 photographs at the zoo\n    brittany_phone = jamal_phone / 6  # Brittany's phone can hold 6 times more photographs than Jamal's phone\n    max_birds = brittany_phone * 50  # maximum number of birds in Jamal's phone\n    total_birds = jamal_phone + brittany_phone + max_birds  # total number of photographs in Jamal's photographs at the zoo\n    ducks_seen = total_birds  # number of ducks seen in Jamal's photographs at the zoo\n    result = ducks_seen\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the two x 4 x 10 boards and five 4 x 10 boards\n    PRICE_1 = 10\n    PRICE_2 = 10\n    PRICE_3 = 16\n\n    # Calculate the total cost of the two x 4 x 10 boards\n    total_cost = (10 * PRICE_1) + (5 * PRICE_2)\n\n    # Calculate the total revenue from selling the five 4 x 4 x 10 boards\n    total_revenue = (10 * PRICE_1) + (5 * PRICE_2)\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of sugar to cups of water\n    SUGAR_TO_WATER_RATIO = 7/13\n\n    # Calculate the total amount of water used\n    total_water_used = 120 / (SUGAR_TO_WATER_RATIO + 13)\n\n    # Calculate the number of teaspoonfuls of sugar used\n    sugar_used = total_water_used / SUGAR_TO_WATER_RATIO\n\n    # Display the number of teaspoonfuls of sugar used\n    result = sugar_used\n    return result"}
{"output": "def solution():\n    \n    # Define the number of children and the cost per shoe\n    num_children = 3\n    shoe_cost = 60\n\n    # Calculate the total cost of the shoes\n    total_shoe_cost = num_children * shoe_cost\n\n    # Calculate the total cost of the shoes\n    total_cost = total_shoe_cost * 2\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vehicles in each container and the number of vehicles in the first day\n    VEHICLES_PER_DAY = 5\n    STARTING_VEHICLES = 2\n\n    # Define the total number of vehicles at the port\n    TOTAL_VEHICLES = 30\n\n    # Calculate the number of vehicles in the first day\n    first_day_vehicles = VEHICLES_PER_DAY * 5\n\n    # Calculate the number of vehicles in the second day\n    second_day_vehicles = TOTAL_VEHICLES - first_day_vehicles\n\n    # Calculate the number of containers that were imported on the second day\n    second_day_containers = second_day_vehicles / VEHICLES_PER_DAY\n\n    # Display the number of containers that were imported on the second day\n    result = second_day_containers\n    return result"}
{"output": "def solution():\n    \n    adrien_salary = 40000\n    lylah_salary = adrien_salary * 1.3\n    adrien_four_years_ago = adrien_salary + 40000\n    lylah_increase = lylah_salary * 1.4\n    total_salary = adrien_four_years_ago + lylah_increase\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pads used per week and the number of sheets of paper on a pad\n    pads_per_week = 2\n    sheets_per_pad = 30\n\n    # Calculate the total number of sheets of paper used per month\n    total_sheets_per_month = pads_per_week * sheets_per_pad * 4\n\n    # Display the total number of sheets of paper used per month\n    result = total_sheets_per_month\n    return result"}
{"output": "def solution():\n    \n    morisette_apples = 5\n    morisette_oranges = 8\n    kael_apples = morisette_apples * 2\n    kael_oranges = morisette_oranges / 2\n    total_fruits = morisette_apples + morisette_oranges + kael_apples + kael_oranges\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Sadie slept on Monday\n    monday_hours = 8\n\n    # Calculate the number of hours Sadie slept on the next two days\n    next_two_days_hours = monday_hours - 2\n\n    # Calculate the number of hours Sadie slept on the rest of the week\n    rest_of_week_hours = (2 * monday_hours) + 1\n\n    # Calculate the total number of hours Sadie slept in the week\n    total_hours = monday_hours + next_two_days_hours + rest_of_week_hours\n\n    # Display the total number of hours Sadie slept in the week\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define Rosie's speeds in miles per hour\n    speed1 = 10\n    time1 = 3\n    speed2 = 5\n\n    # Calculate Rosie's speed in miles per hour\n    speed2 = speed1 + speed2\n\n    # Calculate Rosie's speed in miles per hour\n    speed3 = 5\n    time2 = 7 - time1\n\n    # Calculate Rosie's speed in miles per hour\n    speed3 = speed3 * time2\n\n    # Calculate Rosie's speed in miles per hour\n    speed4 = speed4 * time3\n\n    # Calculate Rosie's total speed in miles\n    total_speed = speed4 + speed5\n\n    # Calculate Rosie's total distance in 7 hours\n    total_distance = total_speed * 7\n\n    # Display Rosie's total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the number of stamps on one-third of the letters needing stamps\n    stamps_on_third = 30 / 3\n\n    # Calculate the total number of stamps in the pile\n    total_stamps = 60 + stamps_on_third\n\n    result = total_stamps\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spoons Julia bought and her husband\n    julia_spoons = 1\n    husband_spoons = 5\n\n    # Define the number of spoons used to sample the stew\n    stew_spoons = 3\n\n    # Calculate the total number of spoons\n    total_spoons = julia_spoons + husband_spoons - stew_spoons\n\n    # Return the result\n    result = total_spoons\n    return result"}
{"output": "def solution():\n    \n    chicken_sausages = 38\n    fish_sausages = chicken_sausages + 6\n    total_sausages = chicken_sausages + fish_sausages\n    result = total_sausages\n    return result"}
{"output": "def solution():\n    \n    lily_friends = 50\n    amy_friends = lily_friends + 20\n    total_friends = lily_friends + amy_friends\n    result = total_friends\n    return result"}
{"output": "def solution():\n    \n    watermelon_cost = 3 * 4\n    pepper_cost = 15\n    orange_cost = watermelon_cost - 5\n    total_cost = (watermelon_cost * 4) + (pepper_cost * 20) + (orange_cost * 10)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people seen per day and the time it took for each patient\n    people_per_day = 500\n    time_per_patient = 24\n\n    # Calculate the total time it took for all the patients\n    total_patient_time = people_per_day * time_per_patient\n\n    # Calculate the total revenue from doctors\n    doctors_revenue = total_patient_time * 150\n\n    # Calculate the total revenue from patients\n    patients_revenue = total_patient_time * 200\n\n    # Calculate the profit from the hospital\n    profit = doctors_revenue - patients_revenue\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    total_workers = 60  # Nissa hires 60 seasonal workers to play elves\n    elves_quit_after_vomit = total_workers / 3  # A third of the elves quit after children vomit\n    elves_remaining = total_workers - elves_quit_after_vomit  # Calculate the number of remaining elves\n    elves_quit_after_kids = 10  # 10 of the remaining elves quit after kids kick their shins\n    elves_left = elves_remaining - elves_quit_after_kids  # Calculate the number of elves left\n    result = elves_left\n    return result"}
{"output": "def solution():\n    \n    # Define the expenditure of Joseph in May\n    may_expenditure = 500\n\n    # Calculate the expenditure of Joseph in June\n    june_expenditure = may_expenditure - 60\n\n    # Calculate the total expenditure for both months\n    total_expenditure = may_expenditure + june_expenditure\n\n    # Display the total expenditure\n    result = total_expenditure\n    return result"}
{"output": "def solution():\n    \n    pam_rides = 2\n    fred_rides = 4\n    luge_rides = 2\n    tickets_per_rider = 6\n    total_tickets = (pam_rides + fred_rides) * tickets_per_rider\n    result = total_tickets\n    return result"}
{"output": "def solution():\n    \n    monday_miles = 4\n    tuesday_miles = 6 * monday_miles\n    total_miles = 41\n    wednesday_miles = total_miles - monday_miles - tuesday_miles\n    result = wednesday_miles\n    return result"}
{"output": "def solution():\n    \n    washes_per_month = 4\n    cost_per_wash = 15\n    months_per_year = 12\n    total_cost = washes_per_month * cost_per_wash * months_per_year\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    brian_games = 20\n    bobby_games = (3 * brian_games) - 5\n    result = bobby_games\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of unicorns\n    total_unicorns = 27\n\n    # Calculate the number of unicorns in the Highlands\n    highlands_unicorns = total_unicorns // 3\n\n    # Calculate the number of female Scottish unicorns\n    female_unicorns = total_unicorns - highlands_unicorns\n\n    # Display the number of female Scottish unicorns\n    result = female_unicorns\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of Rory's delivery order\n    sub_cost = 2 * 7.5\n    chips_cost = 2 * 1.5\n    cookie_cost = 2 * 1.0\n    total_cost = sub_cost + chips_cost + cookie_cost\n\n    # Calculate the delivery fee\n    delivery_fee = 0.2 * total_cost\n\n    # Add the delivery fee to the tip\n    total_cost += 5.0\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of questions Mark completed on the first test\n    first_test_questions = 75 * 5\n\n    # Calculate the number of questions Mark completed on the second test\n    second_test_questions = 100 * 5\n\n    # Calculate the total number of questions Mark completed\n    total_questions = first_test_questions + second_test_questions\n\n    # Calculate the number of questions Mark leave incomplete\n    incomplete_questions = total_questions - 75\n    result = incomplete_questions\n    return result"}
{"output": "def solution():\n    \n    blue_gumballs = 12\n    pink_gumballs = (blue_gumballs * 4) + 22\n    result = pink_gumballs\n    return result"}
{"output": "def solution():\n    total_cars = 20\n    automatic_cars = 12\n    manual_cars = 4\n\n    # Calculate the number of semi-automatic cars\n    semi_automatic_cars = total_cars - automatic_cars - manual_cars\n\n    # Calculate the percentage of semi-automatic cars\n    semi_automatic_percentage = (semi_automatic_cars / total_cars) * 100\n    result = semi_automatic_percentage\n    return result"}
{"output": "def solution():\n    total_hive_bees = 700\n    baby_bees = total_hive_bees / 3  # There are twice as many babies as queens\n    worker_bees = 2 * baby_bees  # There are twice as many worker bees as babies\n    result = worker_bees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Jordan plays video games per day and the part-time job\n    hours_per_day = 2\n    part_time_job = 10\n\n    # Calculate Jordan's earnings per day\n    earnings_per_day = hours_per_day * part_time_job\n\n    # Calculate Jordan's weekly earnings\n    weekly_earnings = earnings_per_day * 7\n\n    # Display Jordan's weekly earnings\n    result = weekly_earnings\n    return result"}
{"output": "def solution():\n    \n    milk_cost = 2\n    egg_cost = 3\n    light_bulb_cost = 3\n    cup_cost = 3\n    roach_train_cost = 4\n    subtotal = milk_cost + egg_cost + light_bulb_cost + cup_cost + roach_train_cost\n    tax_rate = 0.1\n    tax_amount = subtotal * tax_rate\n    total_cost = subtotal + tax_amount\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    BLEACH_PRICE = 2\n    CLOTHS_PRICE = 5\n\n    # Define the number of clients and the number of bottles of bleach and packs of cloths needed\n    clients = 3 + 5\n    bleach_bottles = 2\n    cloths_packs = 1\n\n    # Calculate the total cost of the bleach and cloths for one client\n    bleach_cost = clients * BLEACH_PRICE\n    cloths_cost = clients * CLOTHS_PRICE\n\n    # Calculate the total income for one week\n    total_income = bleach_cost + cloths_cost\n\n    # Calculate the profit for one week\n    profit = total_income - total_expenses\n\n    # Display the profit for one week\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hectares and pineapples per hectare\n    hectares = 10\n    pineapples_per_hectare = 100\n\n    # Calculate the total number of pineapples harvested in a year\n    total_pineapples = hectares * pineapples_per_hectare * 12\n\n    # Calculate the number of pineapples harvested in a year\n    pineapples_per_year = total_pineapples * 3\n\n    # return the result\n    result = pineapples_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pieces on the floor\n    floor_pieces = 500\n\n    # Calculate the number of pieces on the second box\n    second_box_pieces = floor_pieces * 3\n\n    # Calculate the number of pieces on the third box\n    third_box_pieces = second_box_pieces / 4\n\n    # Calculate the total number of blocks Johnny picks up\n    total_blocks = floor_pieces + second_box_pieces + third_box_pieces\n\n    # Display the total number of blocks\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bees leave in the first 6 hours\n    leave_first_6_hours = 30\n\n    # Calculate the number of bees leave in the next 6 hours\n    leave_next_6_hours = leave_first_6_hours / 2\n\n    # Calculate the number of bees leave in the next 6 hours\n    leave_next_6_hours = leave_first_6_hours * 2\n\n    # Calculate the total number of bees leave in the day\n    total_leave = leave_first_6_hours + leave_next_6_hours\n\n    # Calculate the number of bees returned to the hive in the last 6 hours\n    return_last_6_hours = total_leave - (leave_first_6_hours + leave_next_6_hours)\n\n    # Display the number of bees returned to the hive in the last 6 hours\n    result = return_last_6_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of adults and children\n    ADULT_PRICE = 12\n    CHILD_PRICE = 10\n\n    # Define the number of adults and children\n    num_adults = 1\n    num_children = 1\n\n    # Calculate the total cost of admission\n    total_adult_cost = num_adults * ADULT_PRICE\n\n    # Calculate the total cost of children\n    total_child_cost = num_children * CHILD_PRICE\n\n    # Calculate the total cost of all tickets\n    total_cost = total_adult_cost + total_child_cost + 8\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    charlie_friends = 12\n    dorothy_friends = charlie_friends / 3\n    james_friends = dorothy_friends * 4\n    result = james_friends\n    return result"}
{"output": "def solution():\n    \n    steve_distance = 3\n    steve_speed = 440\n    tim_distance = 2\n    tim_speed = 264\n    steve_time = steve_distance / steve_speed\n    tim_time = tim_distance / tim_speed\n    winner_time = steve_time + (tim_time - steve_time)\n    result = winner_time\n    return result"}
{"output": "def solution():\n    \n    tire_cost = 0.25\n    bikes_on_first_day = 5\n    tricycle_tires_per_person = 3\n    unicycle_tires_per_person = 1\n    total_tires = (bikes_on_first_day + tricycle_tires_per_person) * tire_cost\n    total_unicycle_tires = unicycle_tires_per_person * tire_cost\n    total_inflation = total_tires * tire_cost\n    result = total_inflation\n    return result"}
{"output": "def solution():\n    \n    packs_of_cookies = 10\n    cookies_per_pack = 6\n    cost_per_cookie = 0.10\n    total_cookies = packs_of_cookies * cookies_per_pack\n    total_cost = total_cookies * cost_per_cookie\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of french fries Dave ate\n    initial_fries = 14\n\n    # Calculate the number of french fries Dave ate after the seagull landed\n    dave_fries = initial_fries / 2\n\n    # Calculate the number of french fries remaining after the pigeons bulled down\n    remaining_fries = dave_fries - 3 * 3\n\n    # Calculate the number of raccoons stole\n    raccoons_stole = remaining_fries * (2/3)\n\n    # Calculate the final number of french fries\n    final_fries = remaining_fries - raccoons_stole\n\n    # Display the final number of french fries\n    result = final_fries\n    return result"}
{"output": "def solution():\n    # Calculate the total number of hours Kimo spends attending classes in one semester\n    hours_per_semester = (3 * 1) + (2 * 2)  # Kimo has 3 1-hour classes on Monday, Wednesday, and Thursday\n    hours_per_semester += (3 * 1)  # Kimo spends 3 1-hour classes on Monday, Wednesday, and Thursday\n    hours_per_semester += (2 * 2)  # Kimo spends 2 2-hour classes on Tuesday and Thursday\n    result = hours_per_semester\n    return result"}
{"output": "def solution():\n    \n    rolls = 300\n    croissants = 120\n    baguettes = 60\n    roll_length = 4\n    croissant_length = 6\n    baguette_length = 2\n    total_length = (rolls * roll_length) + (croissants * croissant_length) + (baguettes * baguette_length)\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    monkeys_bananas = 200\n    gorillas_bananas = 400\n    baboons_bananas = 100\n    total_bananas = monkeys_bananas + gorillas_bananas + baboons_bananas\n    total_months = 2\n    bananas_needed = total_bananas * total_months\n    result = bananas_needed\n    return result"}
{"output": "def solution():\n    football_field_length = 100  # The football field is 100 yards long\n    blake_runs = 15  # Blake runs back and forth 15 times\n    kelly_runs = 1  # Kelly runs back and forth once\n    total_runs = 34  # Blake runs to the 40-yard line and back 34 times\n\n    # Calculate the total time Blake spends running\n    blake_time = blake_runs * (blake_runs / 15)\n\n    # Calculate the total time Kelly spends running\n    kelly_time = kelly_runs * (kelly_runs / 15)\n\n    # Calculate the total time the winner spends running\n    winner_time = total_time - blake_time - kelly_time\n\n    # Calculate the difference in time between the winner and loser\n    difference = winner_time - loser_time\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the pens\n    pens_cost = 4 * 1.5\n\n    # Calculate the total cost of the notebooks\n    notebooks_cost = 2 * 4\n\n    # Calculate the total cost of the bond paper\n    bond_paper_cost = 20\n\n    # Calculate the total cost of everything\n    total_cost = pens_cost + notebooks_cost + bond_paper_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    initial_tadpoles = 11\n    lily_pad_tadpoles = 6\n    rock_tadpoles = 2\n    total_tadpoles = initial_tadpoles - lily_pad_tadpoles - rock_tadpoles\n    result = total_tadpoles\n    return result"}
{"output": "def solution():\n    \n    monday_depth = 17\n    tuesday_depth = monday_depth + 7\n    wednesday_depth = tuesday_depth * (2/3)\n    result = wednesday_depth\n    return result"}
{"output": "def solution():\n    \n    anakin_starfish = 10\n    anakin_sea_horses = 6\n    anakin_clownfish = 3\n    Locsin_starfish = anakin_starfish - 5\n    Locsin_sea_horses = anakin_sea_horses - 3\n    Locsin_clownfish = anakin_clownfish + 2\n    total_fish = anakin_starfish + anakin_sea_horses + anakin_clownfish + Locsin_starfish + Locsin_sea_horses + Locsin_clownfish\n    result = total_fish\n    return result"}
{"output": "def solution():\n    \n    original_price = 20\n    increase_percentage = 20\n    final_price = original_price * (1 + (increase_percentage / 100))\n    num_months = 36\n    new_price = final_price * (1 + (increase_percentage / 100))\n    result = new_price\n    return result"}
{"output": "def solution():\n    \n    red_car_cost = 4\n    action_figures_cost = 3 * red_car_cost\n    doll_cost = 3 * action_figures_cost\n    total_cost = 5 * action_figures_cost + doll_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Jackie will spend on freelance work\n    freelance_work_money = 90 * 3\n\n    # Calculate the total amount of money Jackie will spend on missed income\n    missed_income = 35 * 3\n\n    # Calculate the total amount of money Jackie will have after hiring the accountant\n    total_money = freelance_work_money + missed_income\n\n    # Calculate the difference between the total amount of money and the accountant's charges\n    difference = 90 - total_money\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Elvira has\n    total_money = 1500 + 1090 +157 + 74 + 102\n\n    # Calculate the amount of money Elvira can afford with the computer store, keyboard, mouse, and printer\n    amount_of_garment = total_money - 1500\n    result = amount_of_garment\n    return result"}
{"output": "def solution():\n    eggs_per_babysitting = 9  # Sandra's neighbor gives her a basket of 9 eggs every time she babysits their daughter\n    eggs_per_flan = 3  # Sandra needs 3 eggs to make a Spanish flan\n    flans_to_make = 15  # Sandra has been tasked to make 15 Spanish flans\n\n    # Calculate the total number of eggs Sandra needs to babysit\n    total_eggs_needed = eggs_per_flan * flans_to_make\n\n    # Calculate the number of times Sandra needs to babysit\n    babysit_count = total_eggs_needed // eggs_per_babysitting\n    result = babysit_count\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Brooke's age is x\n    # Seth is twice as old as Brooke, so Seth's age is 2x\n    # In 2 years, their ages will be 28, so:\n    # x + 2x = 28\n    # Solving for x, we get:\n    x = (28 - 2) / 2\n    # Seth is twice as old as Brooke\n    result = x\n    return result"}
{"output": "def solution():\n    \n    # Define Ethal's money\n    ethal_money = 8\n\n    # Calculate Jimmy's money\n    jimmy_money = 2 + 2 * ethel_money\n\n    # Display Jimmy's money\n    result = jimmy_money\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Pancho walks in a week\n    weekly_distance = 20 * 7 + 10  # pancho walks 20 miles a day for 7 days and walks 10 miles on weekends\n    result = weekly_distance\n    return result"}
{"output": "def solution():\n    \n    hat_cost = 25\n    jacket_cost = hat_cost * 3\n    pants_cost = (hat_cost + jacket_cost) / 2\n    total_cost = hat_cost + jacket_cost + pants_cost\n    cost_per_uniform = total_cost / 3\n    result = cost_per_uniform\n    return result"}
{"output": "def solution():\n    # Calculate the total number of legs seen by Jake\n    total_legs = 80*8 + 90*6 + 3*10  # 80 spiders with 8 legs each, 90 insects with 6 legs each, 3 rare mutant invertebrates with 10 legs each\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define Sally Thirtytwo's age\n    sally_thirtytwo_age = 8\n\n    # Calculate Granny Red's age\n    granny_red_age = sally_thirtytwo_age * 2\n\n    # Calculate Sally Four's age\n    sally_four_age = sally_thirtytwo_age * 2\n\n    # Calculate Granny Red's age\n    granny_red_age = granny_red_age * 2\n\n    # Calculate the total age of the four birds\n    total_age = sally_thirtytwo_age + granny_red_age + sally_four_age + granny_red_age + 4\n\n    # Display the total age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum payment and mortgage's minimum\n    MINIMUM_PAYMENT = 300\n    CARD_CARD_MINUTES = 200\n    MORGAGE_MINUTES = 500\n\n    # Define the number of months in a year\n    MONTHS_IN_YEAR = 12\n\n    # Calculate the total amount Jessica will pay in a year\n    total_payment = (MINIMUM_PAYMENT + CARD_CARD_MINUTES + MORGAGE_MINUTES) * MONTHS_IN_YEAR\n\n    # Calculate the amount Jessica will pay in a year with 50% more than the minimum\n    if total_payment > MINIMUM_PAYMENT:\n        jessica_payment = MINIMUM_PAYMENT * 0.5\n        else:\n        jessica_payment = MINIMUM_PAYMENT * MONTHS_IN_YEAR\n        jessica_payment = MINIMUM_PAYMENT * MONTHS_IN_YEAR\n\n    # Display Jessica's payment\n    result = jessica_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the number of potatoes and the time it takes to peel one potato\n    num_potatoes = 60\n    peel_time = 0.5\n\n    # Calculate the time it takes to cut up one potato\n    cut_time = 5\n\n    # Calculate the total time it takes to peel all the potatoes\n    total_peel_time = num_potatoes * peel_time\n\n    # Calculate the total time it takes to cut up all the potatoes\n    total_cut_time = num_potatoes * cut_time\n\n    # Calculate the total time it takes to prep the potatoes\n    total_time = total_peel_time + total_cut_time\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of lemons and sugar\n    LEMON_PRICE = 3\n    SUGAR_PRICE = 2\n\n    # Define the profit per gallon\n    PROFIT_PER_GALLON = 0.5\n\n    # Define the number of glasses per gallon\n    GLASSES_PER_GALLON = 20\n\n    # Calculate the profit per gallon\n    profit_per_gallon = PROFIT_PER_GALLON - (PRICE_PER_GALLON * GLASSES_PER_GALLON)\n\n    # Calculate the cost of lemons and sugar\n    cost_lemons = (PROFIT_PER_GALLON * GALLONS_PER_GALLON) + SUGAR_PRICE\n\n    # Calculate the total cost of lemons\n    total_cost = cost_lemons + cost_sugar\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of Asians and Japanese\n    asians = 240\n    japanese = 80\n\n    # Calculate the number of girls on the Chinese team\n    chinese = 24 - asians - japanese\n\n    # Calculate the number of girls on the Chinese team\n    girls = chinese - 60\n\n    # Display the number of girls on the Chinese team\n    result = girls\n    return result"}
{"output": "def solution():\n    salary = 6000\n    rent = salary / 4\n    car_fuel = salary / 3\n    remaining_salary = salary - rent - car_fuel\n    daughter_money = 200\n    daughter_money += 700\n    total_money = daughter_money + daughter_money\n    remaining_money = remaining_salary - total_money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    bo_crabs = 40\n    monic_crabs = bo_crabs - 4\n    rani_crabs = monic_crabs + 10\n    total_crabs = bo_crabs + monic_crabs + rani_crabs\n    result = total_crabs\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 10\n    first_week_hours = 5\n    second_week_hours = 8\n    total_hours = first_week_hours + second_week_hours\n    earnings_week1 = hourly_rate * total_hours\n    earnings_week2 = hourly_rate * total_hours\n    total_earnings = earnings_week1 + earnings_week2\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    total_students = 80\n    winner_votes = total_students * 3/4\n    loser_votes = total_students - winner_votes\n    result = loser_votes\n    return result"}
{"output": "def solution():\n    # Calculate the number of white carnations Sandra ordered\n    white_carnations = 200 * 5\n\n    # Calculate the number of red roses Sandra had ordered\n    red_roses = 4 * white_carnations\n\n    # Calculate the number of red roses Sandra needs to deliver\n    red_roses_to_deliver = red_roses - 5\n\n    result = red_roses_to_deliver\n    return result"}
{"output": "def solution():\n    jan_age = 30  # Jan is 30 years old\n    mark_age = (jan_age / 2) + 5  # Mark was 5 years older than half Jan's age\n    jean_age = mark_age + 2  # Jean is two years older than Mark\n\n    result = jean_age\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of each runner\n    runner1_distance = 400\n    runner2_distance = 60\n    runner3_distance = runner1_distance + 3\n\n    # Calculate the total distance of the first runner\n    first_runner_distance = runner1_distance * 4\n\n    # Calculate the total distance of the second runner\n    second_runner_distance = runner2_distance * 4\n\n    # Calculate the difference in time between the two teams\n    time_difference = first_runner_distance - second_runner_distance\n\n    # Return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the probability of Jerry's die\n    die_probability = 6\n\n    # Calculate the probability of Jerry's die\n    die_probability = (die_probability / 6) * 100\n\n    # Calculate the probability of Jerry's die\n    die_probability = (die_probability / 6) * 100\n\n    # Calculate the difference in probability\n    probability_difference = die_probability - die_probability\n\n    # Display the probability difference\n    result = probability_difference\n    return result"}
{"output": "def solution():\n    \n    mom_apples = 20\n    jenna_apples = mom_apples / 2\n    total_apples = mom_apples + jenna_apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    # Calculate the total number of straw pieces distributed among the small rodents\n    total_straw = 160 * 5  # 160 pieces of straw are distributed among the rabbits, each with 5 pieces of straw\n\n    # Calculate the number of rats in equal groups\n    equal_groups = total_straw // 3  # each rat is given 6 pieces of straw\n\n    # Calculate the total number of rats\n    rats = equal_groups * 6  # each rat is given 6 pieces of straw\n\n    result = rats\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount owed to Benedict\n    initial_amount = 100\n\n    # Calculate the monthly interest amount\n    monthly_interest = initial_amount * 0.02\n\n    # Calculate the total amount owed after 3 months\n    total_amount = initial_amount + (monthly_interest * 3)\n\n    # Display the total amount owed to Benedict\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of transport each bag\n    transport_cost = 2\n\n    # Define the total profit\n    total_profit = 400\n\n    # Define the selling rate of wheat\n    selling_rate = 30\n\n    # Calculate the cost of buying bags of wheat\n    cost_of_wheat = 20 * bags_bought\n\n    # Calculate the cost of transport bags of wheat\n    transport_cost = cost_of_wheat * transport_cost\n\n    # Calculate the revenue from selling bags of wheat\n    revenue = total_profit - cost_of_wheat\n\n    # Calculate the number of bags sold\n    num_bags_sold = revenue / selling_rate\n\n    # Display the number of bags sold\n    result = num_bags_sold\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of tickets\n    ticket_cost = 20.25 * 3\n\n    # Calculate the total cost of food\n    food_cost = ticket_cost - 4.5\n\n    # Calculate the total cost of 2 different rides\n    ride_cost = 33 * 2\n\n    # Calculate the total cost of all the costs\n    total_cost = ticket_cost + food_cost + ride_cost\n\n    # Calculate the cost per person\n    cost_per_person = total_cost / 3\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    # Calculate the total number of peaches John collects in 3 hours\n    total_peaches = 3 * 60 * 2  # John collects peaches for 3 hours, and he can collect 2 peaches a minute\n    result = total_peaches\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of insects needed per day\n    total_insects_per_day = 3.5 * 10 * 7  # Ducks eat 3.5 pounds of insects each week, and there are 10 ducks in a flock\n    result = total_insects_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of trees\n    initial_trees = 50\n\n    # Define the number of trees planted and chops down each year\n    planted_trees = 10\n    down_trees = 2\n\n    # Calculate the number of trees remaining after 10 years\n    remaining_trees = initial_trees - (planted_trees * 10) + (down_trees * 10)\n\n    # Calculate the number of trees after 10 years\n    final_trees = remaining_trees * 0.7\n\n    # Display the final number of trees\n    result = final_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pink plastic flamingos added on each day\n    friday_flamingos = 18\n    saturday_flamingos = friday_flamingos / 3\n    sunday_flamingos = 18\n\n    # Calculate the total number of pink plastic flamingos\n    total_flamingos = friday_flamingos + saturday_flamingos + sunday_flamingos\n\n    # Display the total number of pink plastic flamingos\n    result = total_flamingos\n    return result"}
{"output": "def solution():\n    num_colors = 5\n    total_price = 20\n    cost_per_crayon = 2\n\n    # Calculate the total cost of all crayons\n    total_crayon_cost = num_colors * cost_per_crayon\n\n    # Calculate the amount of change\n    change = total_price - total_crayon_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a pencil and eraser\n    PENCIL_PRICE = 1.20\n    ERASER_PRICE = 0.30\n\n    # Define the number of pens\n    num_pens = 8\n\n    # Calculate the combined cost of the pens\n    pencil_cost = num_pens * PENCIL_PRICE\n\n    # Calculate the cost of the eraser\n    eraser_cost = eraser_cost * ERASER_PRICE\n\n    # Calculate the cost of the pen\n    pen_cost = pencil_cost + eraser_cost\n\n    # Calculate the total cost of 8 pens\n    total_cost = pencil_cost + eraser_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of carrots and the number of restaurants\n    total_carrots = 200\n    num_restaurants = 40\n\n    # Define the amount of carrots each restaurant will receive\n    carrots_per_restaurant = 2\n\n    # Calculate the total amount of carrots used\n    total_carrots_used = num_restaurants * carrots_per_restaurant\n\n    # Calculate the amount of carrots not used\n    carrots_not_used = total_carrots - total_carrots_used\n\n    # return the result\n    result = carrots_not_used\n    return result"}
{"output": "def solution():\n    \n    total_population = 23786\n    men = 8417\n    women = 9092\n    kids = total_population - men - women\n    result = kids\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pokemon cards\n    initial_cards = 20\n\n    # Calculate the number of pokemon cards collected in the first month\n    first_month_cards = initial_cards * 3\n\n    # Calculate the number of pokemon cards collected in the second month\n    second_month_cards = first_month_cards - 20\n\n    # Calculate the combined number of pokemon cards collected in the first and second months\n    first_and_second_month_cards = first_month_cards + second_month_cards\n\n    # Calculate the number of pokemon cards collected in the third month\n    third_month_cards = 2 * first_and_second_month_cards\n\n    # Calculate the total number of pokemon cards collected\n    total_cards = first_month_cards + second_month_cards + third_month_cards\n\n    # Display the total number of pokemon cards collected\n    result = total_cards\n    return result"}
{"output": "def solution():\n    # Calculate the total number of sentences Mark pays in a week\n    total_sentences = 1000 * 2  # Mark edits an equal number of sentences each week for two different publishers\n\n    # Calculate the total amount of money Mark makes in a week\n    total_money = (total_sentences + 1000) * 5  # Mark edits a total number of 1000 sentences each week, 5 cents per sentence\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pails of water Baldur gets each day\n    morning_pails = 5\n    afternoon_pails = 6\n\n    # Define the amount of water in each pail\n    water_per_pail = 5\n\n    # Calculate the total amount of water Baldur gets every day\n    total_water = (morning_pails + afternoon_pails) * water_per_pail\n\n    # return the result\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the initial time monetary reward and the percentage raise in salary\n    initial_reward = 5000\n    raise_percentage = 0.05\n\n    # Define the number of weeks in a year\n    weeks_in_year = 52\n\n    # Calculate the total amount of money John made in a year\n    total_money = initial_reward * (1 + raise_percentage) * total_money\n\n    # Display the total amount of money John made in a year\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    acre_grapes = 10\n    grapes_per_year = acre_grapes * 5\n    barrels_per_grapes = grapes_per_year / 2\n    barrels_per_year = barrels_per_grapes * barrels_per_grapes\n    result = barrels_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices of cheese used per sandwich\n    SANDWICH_SLICES = 2\n\n    # Define the number of slices of cheese used per sandwich\n    CHEESE_SLICES_PER_SANDWICH = SANDWICH_SLICES * 2\n\n    # Define the number of slices of cheese used per omelet\n    EGG_SLICES_PER_OMLET = 1\n\n    # Define the number of days in the week\n    DAYS_IN_WEEK = 3\n\n    # Calculate the total number of slices of cheese used\n    total_slices_used = (SANDWICH_SLICES * SANDWICH_SLICES_PER_SANDWICH) + (EGG_SLICES_PER_OMLET * DAYS_IN_WEEK) + 8\n\n    # Display the total number of slices of cheese used\n    result = total_slices_used\n    return result"}
{"output": "def solution():\n    \n    green_pens = 22\n    yellow_pens = 10\n    blue_pens = 6 * 9\n    red_pens = 2 * 6\n    total_pens = green_pens + yellow_pens + blue_pens + red_pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    # Calculate the total score needed on the sixth test to get an average of 93\n    total_score = 89 + 71 + 92 + 100 + 86\n\n    # Calculate the score needed on the sixth test to achieve an average of 93\n    needed_score = 93 * 6 - total_score\n    result = needed_score\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Micheal rode the bike each week and the number of weeks he rode the bike\n    TIMES_1 = 5\n    TIMES_2 = 2\n\n    # Define the number of times Micheal rode the bike each time\n    TIMES_3 = 3\n\n    # Calculate the total distance Micheal made in the first 4 weeks\n    distance_1 = TIMES_1 * 25\n\n    # Calculate the total distance Micheal made in the next 4 weeks\n    distance_2 = TIMES_2 * 25\n\n    # Calculate the total distance Micheal made in the next 3 weeks\n    distance_3 = TIMES_3 * 60\n\n    # Calculate the total distance Micheal made\n    total_distance = distance_1 + distance_2 + distance_3\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    num_chocolate_bars = 25\n    num_apples = 80\n    weight_per_chocolate_bar = 40\n\n    # Calculate the total weight of all chocolate bars\n    total_chocolate_bar_weight = num_chocolate_bars * weight_per_chocolate_bar\n\n    # Calculate the total weight of all candied apples\n    total_apple_weight = num_apples * weight_per_candied_apple\n\n    # Calculate the total weight of all candy bars\n    total_candied_bar_weight = total_apple_weight + total_chocolate_bar_weight\n\n    # Convert the total weight to grams\n    total_weight_grams = total_candied_bar_weight / 1000\n    result = total_weight_grams\n    return result"}
{"output": "def solution():\n    \n    monday_cakes = 4\n    tuesday_cakes = monday_cakes * 3\n    wednesday_cakes = tuesday_cakes * 5\n    total_cakes = monday_cakes + tuesday_cakes + wednesday_cakes\n    result = total_cakes\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of one dozen plates\n    CUP_COST = 6000\n\n    # Calculate the cost of half a dozen plates\n    half_dozen_plates_cost = (20/2) * CUP_COST - 1200\n\n    # Calculate the total cost of buying half a dozen plates\n    total_half_dozen_plates_cost = half_dozen_plates_cost * 2\n\n    # Calculate the total cost of buying each cup\n    total_cost_per_cup = total_half_dozen_plates_cost / 12\n\n    # Display the total cost of buying each cup\n    result = total_cost_per_cup\n    return result"}
{"output": "def solution():\n    \n    jacket_cost = 30\n    shoes_cost = 20\n    total_cost = jacket_cost + (2 * shoes_cost)\n    babysitting_earnings = 4 * 5\n    parents_payment = 4\n    mowing_earnings = 4 * parents_payment\n    times_to_mow_lawn = total_cost - babysitting_earnings - mowing_earnings\n    result = times_to_mow_lawn\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced by each type of chicken per day\n    RED_EGGS_PER_DAY = 3\n    WHITE_EGGS_PER_DAY = 5\n\n    # Define the number of days Jerry collects eggs\n    DAYS = 42\n\n    # Calculate the total number of red chickens\n    red_chickens = RED_EGGS_PER_DAY * DAYS\n\n    # Calculate the total number of white chickens\n    white_chickens = WHITE_EGGS_PER_DAY * DAYS\n\n    # Calculate the total number of eggs collected\n    total_eggs = red_chickens + white_chickens\n\n    # Calculate the number of red chickens\n    red_chickens = red_chickens - 2\n\n    # Display the number of red chickens\n    result = red_chickens\n    return result"}
{"output": "def solution():\n    \n    # Calculate the area of the rectangle\n    area = 1.5 * 6\n\n    # Calculate the time it takes to walk the rectangle\n    walk_time = area / 3\n\n    # Display the time it takes to walk the rectangle\n    result = walk_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers counted on the first day\n    day1_customers = 100\n\n    # Calculate the number of customers counted on the second day\n    day2_customers = day1_customers + 50\n\n    # Calculate the total number of customers counted on the third day\n    total_customers = 500\n\n    # Calculate the number of customers counted on the third day\n    day3_customers = total_customers - day1_customers - day2_customers\n\n    # Display the number of customers counted on the third day\n    result = day3_customers\n    return result"}
{"output": "def solution():\n    # Calculate the amount of water in the small pool 4 minutes ago\n    small_pool_time_4_minutes_ago = 4 * 2  # 4 minutes ago, twice as much water as the small pool\n\n    # Calculate the amount of water in the big pool 4 minutes ago\n    big_pool_time_4_minutes_ago = 4 * small_pool_time_4_minutes_ago\n\n    # Calculate the amount of water in the small pool now\n    small_pool_now = big_pool_time_4_minutes_ago + 4 * small_pool_time_4_minutes_ago\n\n    result = small_pool_now\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the shoes and belt\n    SHOES_COST = 320\n    BELT_COST = 32\n\n    # Define Lori's part-time job\n    PART_TIME_JOB_COST = 8\n\n    # Define the total cost of Lori's purchase\n    TOTAL_COST = SHOES_COST + BELT_COST\n\n    # Calculate the number of hours Lori will need to work to make her purchase\n    hours_needed = TOTAL_COST / PART_TIME_JOB_COST\n\n    # Display the number of hours Lori will need to work\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    borrowed_balance = 2000\n    promised_balance = borrowed_balance * 0.1\n    monthly_payment = 165\n    remaining_balance = borrowed_balance + promised_balance - monthly_payment\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    roses = 4\n    dahlias = roses + 7\n    total_flowers = roses + dahlias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define Harriet's age\n    harriet_age = 21\n\n    # Calculate Zack's age\n    zack_age = harriet_age / 2\n\n    # Calculate Adrian's age\n    adrian_age = 3 * harriet_age\n\n    # Calculate the total age of the three\n    total_age = harriet_age + zack_age + adrian_age + 3\n\n    # Calculate the average age of the three\n    average_age = total_age / 3\n\n    # Display the average age\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    # Define Naomi's score\n    naomi_score = 68\n\n    # Calculate Yuri's score\n    yuri_score = (naomi_score / 2) + 10\n\n    # Calculate Brianna's score\n    brianna_score = naomi_score + 17\n\n    # Calculate Jojo's score\n    jojo_score = 251 - naomi_score - yuri_score - brianna_score\n\n    # Display Jojo's score\n    result = jojo_score\n    return result"}
{"output": "def solution():\n    \n    crossword_time = 10\n    sudoku_time = 5\n    num_crossword_puzzles = 3\n    num_sudoku_puzzles = 8\n    total_time = (crossword_time * num_crossword_puzzles) + (sudoku_time * num_sudoku_puzzles)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    initial_water = 120\n    used_water = 90\n    remaining_water = initial_water - used_water\n    rainwater = remaining_water * 2\n    total_water = remaining_water + rainwater\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    geraniums = 90\n    petunias = geraniums - 40\n    total_flowers = geraniums + petunias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    # Calculate the total amount spent on advertising for the first year\n    year1_cost = 15000\n\n    # Calculate the amount spent on advertising for the second year\n    year2_cost = year1_cost / 3\n\n    # Calculate the total amount spent on advertising for the two years\n    total_cost = year1_cost + year2_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    carlos_rental_rate = 30\n    benji_rental_rate = 18\n    boat_hours = 3\n    benji_hours = 5\n    carlos_rental = carlos_rental_rate * boat_hours\n    benji_rental = benji_rental_rate * benji_hours\n    total_rental = carlos_rental + benji_rental\n    result = total_rental\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days to travel by bus and return from Rochester by bus\n    bus_days = 6\n    car_days = bus_days / 2\n\n    # Calculate the total number of days to travel by bus and return from Rochester by car\n    total_days = bus_days + car_days\n\n    # Display the total number of days\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of fire, grass, and water types\n    fire_type = 30\n    grass_type = 20\n    water_type = 40\n\n    # Lose 8 of the water type\n    water_type -= 8\n\n    # Buy 14 grass type\n    grass_type -= 14\n\n    # Calculate the percentage chance of a randomly picked card that a water type is a water type\n    probability = (grass_type / water_type) * 100\n\n    # Display the percentage chance\n    result = probability\n    return result"}
{"output": "def solution():\n    \n    base_burrito = 6.50\n    extra_meat = 2\n    extra_cheese = 1\n    avocado = 1\n    sauces = 2\n    extra_sauces = 2 * 0.25\n    extra_meal = 3\n    extra_chips = 3\n    gift_card = 5\n    total_spent = base_burrito + extra_meat + extra_cheese + extra_avocado + extra_sauces + extra_meal + extra_chips + gift_card\n    remaining_amount = base_burrito - total_spent\n    result = remaining_amount\n    return result"}
{"output": "def solution():\n    \n    kalinda_pieces = 360\n    kalinda_speed = 4\n    mom_speed = kalinda_pieces / 2\n    total_speed = kalinda_speed + mom_speed\n    hours_to_complete = total_speed / 60\n    result = hours_to_complete\n    return result"}
{"output": "def solution():\n    total_watermelons = 120  # Ashlyn produced 120 baby watermelons\n    ready_percentage = 0.3  # 30% of the watermelons were ready for harvest\n    remaining_watermelons = total_watermelons - (total_watermelons * ready_percentage)  # Calculate the number of watermelons remaining after two weeks\n    ready_melons = remaining_watermelons * (3/4)  # 3/4 of the remaining melons were ready\n    not_ready_melons = remaining_watermelons - ready_melons  # Calculate the number of melons not ready to be harvested\n    result = not_ready_melons\n    return result"}
{"output": "def solution():\n    num_cars = 12\n    car_price = 20000\n    tax_rate = 0.1\n    registration_rate = 1000\n\n    # Calculate the total cost of all cars before tax\n    total_cost_before_tax = num_cars * car_price\n\n    # Calculate the number of taxes paid\n    num_taxes = total_cost_before_tax * tax_rate\n\n    # Calculate the total cost of all registration\n    total_registration_cost = num_registration * registration_rate\n\n    # Calculate the total cost of everything\n    total_cost = total_cost_before_tax + total_registration_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shells collected on Monday\n    monday_shells = 20\n\n    # Calculate the number of shells collected on Monday\n    monday_shells = monday_shells + 5\n\n    # Calculate the number of shells collected on Tuesday\n    tuesday_shells = monday_shells * 2\n\n    # Display the number of shells collected on Tuesday\n    result = tuesday_shells\n    return result"}
{"output": "def solution():\n    \n    ants = 50\n    bugs = ants / 2\n    total_insects = ants + bugs\n    result = total_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of penguins\n    initial_penguins = 36\n\n    # Calculate the number of penguins that jump in and swim in the ocean\n    jump_in_ocean = initial_penguins // 3\n\n    # Calculate the number of penguins that go inside the cave\n    dinner_in_cave = initial_penguins // 3\n\n    # Calculate the number of penguins that still left sunbathing\n    sunbathing_left = initial_penguins - jump_in_ocean - dinner_in_cave\n\n    # Display the number of penguins still sunbathing\n    result = sunbathing_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tomatoes Steve eats per day\n    tomatoes_per_day = 6\n\n    # Calculate the number of tomatoes Steve grows his own cherry tomatoes\n    girlfriend_tomatoes = tomatoes_per_day * 2\n\n    # Calculate the total number of tomatoes Steve eats in a week\n    total_tomatoes_per_week = (tomatoes_per_day * 7) + (girlfriend_tomatoes * 7)\n\n    # Calculate the number of vines Steve needs to produce\n    vines_needed = total_tomatoes_per_week / 3\n\n    # Display the number of vines Steve needs to produce\n    result = vines_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of slices needed\n    total_slices = 20 * 4  # each friend can have 4 slices\n\n    # Calculate the number of pizzas needed\n    pizzas_needed = total_slices // 8  # each pizza has 8 portions\n\n    result = pizzas_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of empty pens and the amount saved by mixing the ink\n    empty_pens = 5\n    saved_money = 5\n\n    # Define the number of pens Ram buys\n    pens_bought = 25\n\n    # Calculate the number of pens Ram can make when the ink runs low\n    new_pens = 25\n\n    # Calculate the total number of pens Ram gets to make the new pens\n    total_pens = pens_bought + new_pens\n\n    # Display the total number of pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define Johnny's initial allowance and additional money\n    initial_allowance = 20\n    additional_money = 10\n\n    # Calculate Johnny's total amount of money after a year\n    total_money = initial_allowance + additional_money\n\n    # Calculate Johnny's total amount of money after a year\n    total_money_after_year = total_money + total_money\n\n    # Display Johnny's total amount of money after a year\n    result = total_money_after_year\n    return result"}
{"output": "def solution():\n    \n    jessa_age = 20\n    joan_age = jessa_age + 5\n    mary_age = joan_age - 2\n    sum_of_ages = jessa_age + joan_age + mary_age\n    result = sum_of_ages\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of entrances\n    total_students = 1000\n    num_entrances = 3\n\n    # Calculate the number of students who went out through exit A\n    num_students_A = int(total_students * 0.3)\n\n    # Calculate the number of students who went out through exit B\n    num_students_B = int(total_students - num_students_A)\n\n    # Calculate the number of students who went out through exit C\n    num_students_C = total_students - num_students_A - num_students_B\n\n    # Display the number of students who went out through exit C\n    result = num_students_C\n    return result"}
{"output": "def solution():\n    \n    john_candies = 54\n    robert_candies = john_candies / 2\n    james_candies = robert_candies + 6\n    difference = john_candies - james_candies\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    dolly_books = 2\n    pandora_books = 1\n    total_books = dolly_books + pandora_books\n    result = total_books\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and letters per week\n    num_people = 5\n    num_letters_per_week = 2\n\n    # Define the number of pages per letter\n    num_pages_per_letter = 5\n\n    # Calculate the total number of pages per week\n    total_pages_per_week = num_people * num_letters_per_week\n\n    # Calculate the total number of pages per week\n    total_pages_per_week = total_pages_per_week * num_pages_per_letter\n\n    # Calculate the total time spent writing per week\n    time_per_week = total_pages_per_week / 6\n\n    # Convert the time to hours\n    hours_per_week = time_per_week / 60\n\n    # Return the result\n    result = hours_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the phone plan time and the number of days in a month\n    PHONE_TIME = 1000\n    DAYS_IN_MONTH = 30\n\n    # Calculate the total call time for the month\n    total_call_time = PHONE_TIME * DAYS_IN_MONTH\n\n    # Add the extra minutes Jason's boss call\n    total_call_time += 15\n\n    # Add the extra minutes Jason's call to his boss call\n    total_call_time += 300\n\n    # Calculate the remaining call time\n    remaining_call_time = total_call_time - total_call_time\n\n    # Display the remaining call time\n    result = remaining_call_time\n    return result"}
{"output": "def solution():\n    # Calculate the number of fries Billy took\n    billy_fries = 2 * 5\n\n    # Calculate the total number of fries taken by Griffin\n    total_fries_taken = 24 + billy_fries + 27\n\n    # Subtract the number of fries taken by Kyle and Colby from Griffin\n    total_fries_given = total_fries_taken - 3\n\n    result = total_fries_given\n    return result"}
{"output": "def solution():\n    \n    # Define the number of snails in the first aquarium and the number of snails in the second aquarium\n    first_aquarium_snails = 4\n    second_aquarium_snails = 32\n\n    # Calculate the number of snails in the two aquariums\n    two_aquarium_snails = 2 * first_aquarium_snails\n\n    # Calculate the total number of snails in both aquariums\n    both_aquariums_fish = first_aquarium_snails + second_aquarium_snails\n\n    # Calculate the number of fish in each aquarium\n    each_aquarium_fish = both_aquariums_fish / 2\n\n    # Display the number of fish in each aquarium\n    result = each_aquarium_fish\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 250\n    daily_hours = 6\n    weekly_hours = 4 * weekly_hours\n    total_hours = daily_hours * 5 + weekly_hours\n    discounted_hours = total_hours * 0.9\n    total_price = discounted_hours * hourly_rate\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    total_cost = 12 + 43 + 15 + 4 + 22\n    num_people = 3\n    cost_per_person = total_cost / num_people\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    bags_of_onions = 4\n    weight_per_bag = 50\n    cost_per_pound = 1.5\n    total_weight = bags_of_onions * weight_per_bag\n    total_cost = total_weight * cost_per_pound\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of cookies Sue ate on Monday\n    sue_cookies_monday = 4 * 5\n\n    # Calculate the number of cookies Sue ate on Tuesday\n    sue_cookies_tuesday = 2 * sister_cookies_monday\n\n    # Calculate the total number of cookies Sue ate\n    sue_cookies_total = sue_cookies_monday + sue_cookies_tuesday\n\n    # Calculate the total number of calories consumed by Sue and her sister\n    sister_calories = 200\n    sister_calories = sister_calories * sister_calories\n\n    # Calculate the difference in calories consumed between Sue and her sister\n    calories_difference = sue_calories - sister_calories\n    result = calories_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the percentage of boys in each class\n    NUM_STUDENTS = 20\n    BOYS_PER_CLASS = 0.5\n    BOYS_PER_CLASS_PERCENTAGE = 0.5\n\n    # Calculate the number of boys in the school\n    num_boys = NUM_STUDENTS * BOYS_PER_CLASS_PERCENTAGE\n\n    # Calculate the number of girls in the first class\n    num_girls_class1 = 15\n\n    # Calculate the number of girls in the second class\n    num_girls_class2 = 12\n\n    # Calculate the number of boys in the first class\n    num_boys_class1 = num_girls_class1 * BOYS_PER_CLASS_PERCENTAGE\n\n    # Calculate the number of boys in the second class\n    num_boys_class2 = num_girls_class2 * BOYS_PER_CLASS_PERCENTAGE\n\n    # Calculate the number of boys"}
{"output": "def solution():\n    initial_apps = 61  # Travis had 61 apps on his tablet\n    deleted_apps = 9  # Travis deleted 9 apps\n    downloaded_apps = 18  # Travis downloaded 18 more apps\n\n    # Calculate the current number of apps on Travis's tablet\n    current_apps = initial_apps - deleted_apps + downloaded_apps\n    result = current_apps\n    return result"}
{"output": "def solution():\n    \n    # Define the number of wolves and cougars killed last night\n    wolves_last_night = 10\n    cougars_last_night = 15\n\n    # Calculate the number of wolves and cougars killed today\n    wolves_today = wolves_last_night * 3\n    cougars_today = cougars_last_night - 3\n\n    # Calculate the total number of animals killed\n    total_wolves = wolves_last_night + cougars_last_night\n    total_cougars = cougars_last_night + cougars_today\n    total_animals = total_wolves + total_cougars\n\n    # return the result\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    starting_floor = 3\n    elevator_floor = 4 * starting_floor + 6\n    current_floor = starting_floor + elevator_floor\n    result = current_floor\n    return result"}
{"output": "def solution():\n    # Calculate the number of times each person went down the water slide\n    mitchel_slide = 30\n    anne_slide = mitchel_slide * 0.7\n    robert_slide = anne_slide * 4\n\n    result = robert_slide\n    return result"}
{"output": "def solution():\n    # Calculate the total number of cows in the stalls\n    total_cows = 10 * 20\n\n    # Divide the cows equally among the 20 stalls\n    cows_each = total_cows // 20\n\n    # Calculate the number of new cows in the stalls\n    new_cows = 20 * cows_each\n\n    # Calculate the total number of cows in 8 stalls\n    total_cows_8_stalls = total_cows_8_stalls + new_cows\n\n    result = total_cows_8_stalls\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin\n    PENNY_VALUE = 0.01\n    NICKEL_VALUE = 0.05\n    DIME_VALUE = 0.1\n    DIME_VALUE = 0.1\n\n    # Define the number of each coin\n    num_pennies = 100\n    num_nickels = 40\n    num_dimes = 20\n    num_bills = 40\n\n    # Calculate the total value of the pennies\n    total_pennies_value = num_pennies * PENNY_VALUE\n\n    # Calculate the total value of the nickels\n    total_nickels_value = num_nickels * NICKEL_VALUE\n\n    # Calculate the total value of the dimes\n    total_dimes_value = num_dimes * DIME_VALUE\n\n    # Calculate the total value of all the bills\n    total_bills_value = total_pennies_value + total_nickels_value + total_dimes_value + total_bills_value\n\n    # Display the total value"}
{"output": "def solution():\n    \n    redwood_height = 200 * 12  # convert feet to pounds\n    weight_per_section = 400\n    termites_ate = redwood_height * 0.3\n    total_weight = redwood_height * weight_per_section + termites_ate\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per book and the flat fee\n    COST_PER_BOOK = 0.5\n    FLAT_FEE = 2.0\n\n    # Define the number of books Nancy owes each week overdue\n    books_owed = 8\n\n    # Calculate the total cost of the overdue books\n    overdue_cost = (books_owed * COST_PER_BOOK) + FLAT_FEE\n\n    # Calculate the total cost of the overdue books\n    total_cost = overdue_cost + 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples Andrea has\n    andrea_apples = 52\n\n    # Calculate the number of apples Jamal has\n    jamal_apples = andrea_apples + 8\n\n    # Calculate the number of bananas Jamal has\n    jamal_bananas = jamal_apples / 2\n\n    # Calculate the number of apples Jamal has\n    jamal_apples = jamal_apples + 4\n\n    # Calculate the total number of fruits\n    total_fruits = andrea_apples + jamal_bananas + jamal_apples\n\n    # Display the total number of fruits\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of flour needed to make a dozen cookies\n    flour_per_dozen = 2\n\n    # Define the number of cookies Carla is making today and tomorrow\n    cookies_today = 36\n    cookies_tomorrow = 30\n\n    # Calculate the total amount of flour needed\n    total_flour = (flour_per_dozen * cookies_today + cookies_tomorrow) * flour_per_dozen\n\n    # return the result\n    result = total_flour\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pennies in the cup and the fraction of pennies in the stack\n    num_pennies = 9300\n    fraction_stack = 2/3\n\n    # Calculate the amount of pennies in the stack\n    pennies_in_stack = num_pennies * fraction_stack\n\n    # Calculate the total amount of pennies in the stack\n    total_pennies_in_stack = num_pennies_in_stack * pennies_in_stack\n\n    # Display the total amount of pennies in the stack\n    result = total_pennies_in_stack\n    return result"}
{"output": "def solution():\n    # Calculate the total number of marbles Maddison has now\n    total_marbles = 5 * 50  # 5 boxes with 50 marbles in each box\n    total_marbles -= 20  # Maddison gets 20 marbles from her friend\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    \n    chris_trees = 6\n    ferdinand_trees = chris_trees / 2\n    harry_trees = 5 + 2 * ferdinand_trees\n    difference = harry_trees - ferdinand_trees\n    result = difference\n    return result"}
{"output": "def solution():\n    carmen_money = 100\n    samantha_money = carmen_money + 25\n    daisy_money = samantha_money + 50\n\n    # Calculate the total amount of money all three girls have combined\n    total_money = carmen_money + samantha_money + daisy_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    budget = 400000\n    property_price = 350000\n    brokerage_fee = 0.05 * property_price\n    transfer_fee = 0.12 * property_price\n\n    total_price = property_price + brokerage_fee + transfer_fee\n    difference = budget - total_price\n    result = difference\n    return result"}
{"output": "def solution():\n    house_price = 400000  # Mr. Tan sold his house for $400000\n    transfer_fee = 0.75 * house_price  # Mr. Tan paid the transfer fees that amount to 3% of the selling price\n    brokerage_fee = 0.05 * house_price  # Mr. Tan paid a brokerage fee that is 5% of the selling price\n    remaining_price = house_price - transfer_fee - brokerage_fee  # Mr. Tan's remaining loan amount\n\n    # Calculate the net profit from selling the house\n    net_proceeds = house_price - transfer_fee - remaining_price\n    result = net_proceeds\n    return result"}
{"output": "def solution():\n    \n    heat_up_time = 300 * 1.4\n    warming_time = 400 - 5\n    total_time = heat_up_time + warming_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    # Calculate the total amount spent on newspaper ads\n    newspaper_cost = 50 * 5\n\n    # Calculate the total amount spent on television ads\n    television_cost = 15 * 75\n\n    # Calculate the total amount spent on all ads\n    total_cost = newspaper_cost + television_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_balls = 16\n    golf_balls = total_balls / 2\n    blue_golf_balls = golf_balls / 2\n    result = blue_golf_balls\n    return result"}
{"output": "def solution():\n    \n    first_bag = 300\n    second_bag = first_bag + 12\n    third_bag = first_bag / 2\n    total_mms = first_bag + second_bag + third_bag\n    result = total_mms\n    return result"}
{"output": "def solution():\n    num_houses = 2\n    num_bedrooms_per_house = 3\n    num_windows_per_bedroom = 2\n    num_windows_not_connected_per_house = 4\n\n    # Calculate the total number of bedrooms\n    total_bedrooms = num_houses * num_bedrooms_per_house\n\n    # Calculate the total number of windows in all bedrooms\n    total_bedrooms_windows = num_bedrooms * num_windows_per_bedroom\n\n    # Calculate the total number of windows in all non-connected houses\n    total_non_connected_windows = num_houses * num_windows_not_connected_per_house\n\n    # Calculate the total number of windows between all houses\n    total_windows = total_bedrooms_windows + total_non_connected_windows\n    result = total_windows\n    return result"}
{"output": "def solution():\n    \n    cocoa_cost = 4.20\n    laundry_cost = 9.45\n    pasta_cost = 1.35\n    total_cost = cocoa_cost + laundry_cost + pasta_cost\n    paid_amount = 20\n    change = paid_amount - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    sweater_stitches = 900\n    collar_stitches = sweater_stitches / 10\n    rosette_stitches = collar_stitches * 2\n    total_stitches = sweater_stitches + collar_stitches + rosette_stitches\n    num_sleeves = 1800 // 2\n    stitches_per_sleeve = total_stitches // num_sleeves\n    result = stitches_per_sleeve\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of tomato seeds\n    tomato_cost = 20 * 40  # 20 packets of tomato seeds cost $40 each\n\n    # Calculate the total cost of celery seeds\n    celery_cost = 80 * 30  # 80 packets of celery seeds cost $30 each\n\n    # Calculate the total cost of all vegetables\n    total_cost = tomato_cost + celery_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of lines in the lyrics\n    lyrics_lines = 54\n\n    # Calculate the number of lines in the first scene\n    first_scene_lines = 2 * lyrics_lines\n\n    # Calculate the number of lines in the second scene\n    second_scene_lines = song_lines + 6\n\n    # Calculate the number of lines in the four-fifths of the lyrics\n    four_fifths_lines = 4/5 * lyrics_lines\n\n    # Calculate the total number of lines Sean has to memorize\n    total_lines = lyrics_lines + first_scene_lines + second_scene_lines + four_fifths_lines\n\n    # Display the total number of lines Sean has to memorize\n    result = total_lines\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cards\n    total_cards = 80\n\n    # Calculate the number of cards who had the letter A\n    cards_A = total_cards * (2/5)\n\n    # Calculate the number of cards who had the letter B\n    cards_B = (1/2) * cards_A\n\n    # Calculate the number of cards who had the letter C\n    cards_C = (1 - cards_A) * (5/8)\n\n    # Calculate the number of cards who had the letter D\n    cards_D = total_cards - cards_A - cards_B - cards_C\n\n    # Display the number of cards who had the letter D\n    result = cards_D\n    return result"}
{"output": "def solution():\n    \n    small_holes = 30\n    large_holes = 15\n    small_time = 3\n    large_time = 10\n    total_time = (small_holes * small_time) + (large_holes * large_time)\n    hours = total_time / 60\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the sum of their ages in 10 years\n    sum_of_ages_10_years = 20 * 10\n\n    # Calculate the sum of their ages in 10 years\n    sum_of_ages_10_years = sum_of_ages_10_years / 2\n\n    # Display the sum of their ages in 10 years\n    result = sum_of_ages_10_years\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Sam's age is x\n    # Ruby's age is 6 times older than Sam, so Ruby's age is 6x\n    # In 9 years, Ruby will be 3 times as old as Sam, so Sam's age will be 3x\n    # In 9 years, Ruby will be x + 9\n    # In 9 years, Ruby will be x + 9\n    # So, x + 9 = 3(x + 9)\n    # Solving for x, we get x = 9\n    # Therefore, Sam is currently 9 years old\n\n    result = 9\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the popsicles and ice cream bars\n    PACKET_PRICE = 0.25\n    ICE_CREAM_PRICE = 0.50\n\n    # Define the number of popsicles and ice cream bars purchased\n    num_popsicles = 20\n    num_ice_cream_bars = 4\n\n    # Calculate the total cost of the popsicles\n    popsicles_cost = num_popsicles * PACKET_PRICE\n\n    # Calculate the total cost of the ice cream bars\n    ice_cream_cost = num_ice_cream_bars * ICE_CREAM_PRICE\n\n    # Calculate the total cost of the purchase\n    total_cost = popsicles_cost + ice_cream_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cobras and mambas in the snake park\n    cobras = 40\n    mambas = 60\n\n    # Calculate the number of spots in the cobra\n    cobra_spots = 70\n\n    # Calculate the number of spots in the mambas\n    mamba_spots = 2 * mambas\n\n    # Calculate the total number of spots\n    total_spots = cobra_spots + mamba_spots\n\n    # Calculate half the number of spots they all have combined\n    half_spots = total_spots / 2\n\n    # Display half the number of spots\n    result = half_spots\n    return result"}
{"output": "def solution():\n    \n    # Define the number of team members and coaches\n    num_team_members = 12\n    num_coaches = 3\n\n    # Calculate the total number of guests\n    total_guests = num_team_members * 2\n\n    # Calculate the total number of pizzas\n    total_pizzas = total_guests * 3\n\n    # Calculate the total cost of the pizzas\n    total_cost = total_pizzas * 15\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    topaz_gemstones_per_necklace = 8  # Katerina uses 8 topaz gemstones per necklace\n    sterling_beads_per_inch = 0.25  # Each sterling silver bead is one-quarter of an inch long\n    total_length = 25  # Katerina's specialty is made to a total length of 25 inches\n\n    # Calculate the total length of the topaz gemstones used per necklace\n    topaz_gemstones_per_necklace = topaz_gemstones_per_necklace * total_length\n\n    # Calculate the total length of the sterling silver beads used per necklace\n    sterling_beads_per_necklace = sterling_beads_per_necklace * total_length / sterling_beads_per_necklace\n    result = sterling_beads_per_necklace\n    return result"}
{"output": "def solution():\n    \n    alani_stories = 20\n    braylen_stories = 40\n    margot_stories = 60\n    stories_per_week = alani_stories + braylen_stories + margot_stories\n    total_stories = alani_stories + braylen_stories + margot_stories\n    result = total_stories\n    return result"}
{"output": "def solution():\n    \n    ann_age = 9\n    brother_age = ann_age * 2\n    brother_age_in_3_years = brother_age + 3\n    result = brother_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    quarters = 5\n    dimes = 2\n    total_cents = (quarters * 25) + (dimes * 10)\n    pop_cost = 55\n    remaining_cents = total_cents - pop_cost\n    result = remaining_cents\n    return result"}
{"output": "def solution():\n    # Calculate the total number of stars on the flag\n    total_stars = 3 * 8 + 2 * 6  # three rows of 8 stars, two rows of 6 stars, and the rest are 5-star rows\n    # Calculate the number of rows of 5 stars on the flag\n    num_rows = 76 - total_stars\n    # Calculate the number of rows of 5 stars on the flag\n    num_rows_5_stars = num_rows * 5\n    result = num_rows_5_stars\n    return result"}
{"output": "def solution():\n    flagstone_weight = 75  # Each flagstone weighs 75 pounds\n    total_weight = 2000  # The delivery trucks can carry a total weight of 2000 pounds\n    num_flagstones = 80  # The landscaping company is delivering 80 flagstones in one trip\n\n    # Calculate the total weight of the flagstones\n    total_weight = flagstone_weight * num_flagstones\n\n    # Calculate the number of trucks needed to transport 80 flagstones in one trip\n    num_trucks = total_weight / total_weight\n    result = num_trucks\n    return result"}
{"output": "def solution():\n    fast_lane_speed = 60  # miles/hour\n    slow_lane_speed = fast_lane_speed / 2  # miles/hour\n    total_distance = 480  # miles\n\n    # Calculate the time it takes for the car to cover the same distance\n    time_taken = total_distance / fast_lane_speed\n    result = time_taken\n    return result"}
{"output": "def solution():\n    \n    ali_medals = 22\n    izzy_medals = ali_medals - 5\n    total_medals = ali_medals + izzy_medals\n    given_out_medals = total_medals / 10\n    result = given_out_medals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and children\n    num_adults = 4\n    num_children = 8\n\n    # Define the number of chocolate bars per packet\n    num_chocolate_bars_per_packet = 5\n\n    # Calculate the total number of chocolate bars\n    total_chocolate_bars = num_adults * num_chocolate_bars_per_packet\n\n    # Calculate the number of chocolate bars each child will get\n    chocolate_bars_per_child = total_chocolate_bars // num_children\n\n    # Display the number of chocolate bars each child will get\n    result = chocolate_bars_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define Susan's earnings rate per minute\n    earnings_per_minute = 5 / 10\n\n    # Calculate Susan's total earnings for the online task\n    total_earnings = (8 * earnings_per_minute) + (11 * earnings_per_minute)\n\n    # Display Susan's total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    mike_points = 21\n    jim_points = mike_points - 3\n    tony_points = mike_points * 2\n    total_points = mike_points + jim_points + tony_points\n    extra_points = 20 * 3\n    total_extra_points = total_points - extra_points\n    result = total_extra_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of oranges Will buys and the age of the oldest son\n    oranges_bought = 15\n    oldest_son_age = 8\n\n    # Calculate the age of the youngest son\n    youngest_son_age = oldest_son_age / 2\n\n    # Calculate the total age of the two sons\n    total_age = oldest_son_age + youngest_son_age\n\n    # Calculate the number of oranges left unwashed\n    oranges_left = oranges_bought - total_age\n\n    # Display the number of oranges left unwashed\n    result = oranges_left\n    return result"}
{"output": "def solution():\n    \n    day1_pushups = 100\n    day1_squats = 50\n    day1_dumbbell_presses = 20\n    day2_pushups = day1_pushups + 20\n    day2_squats = day1_squats - 10\n    day2_dumbbell_presses = day1_dumbbell_presses * 2\n    total_activities = day1_pushups + day1_squats + day2_dumbbell_presses + day2_pushups + day2_squats + day2_dumbbell_presses\n    result = total_activities\n    return result"}
{"output": "def solution():\n    rice_per_person = 0.2  # Each person consumes 0.2 kg of rice every meal\n    num_people = 5  # There are 5 members in the household\n    total_rice_per_person = rice_per_person * num_people  # Calculate the total amount of rice eaten per person\n    total_rice_per_week = total_rice_per_person * 7  # Calculate the total amount of rice eaten per week\n    weeks_of_rice = 42 / total_rice_per_week  # Calculate the number of weeks the bag of rice will last\n    result = weeks_of_rice\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of crates sold\n    total_crates = 120\n\n    # Define the number of crates sold on each day\n    monday_friday_sales = 20\n    tuesday_sales = 15\n    wednesday_sales = 12\n    thursday_sales = 18\n\n    # Calculate the total number of crates sold\n    total_sales = monday_friday_sales + tuesday_sales + wednesday_sales + thursday_sales\n\n    # Calculate the number of crates Sam was off from his target\n    crates_off = total_sales - total_sales\n\n    # Display the number of crates Sam was off\n    result = crates_off\n    return result"}
{"output": "def solution():\n    \n    opening_bid = 200\n    bid_1 = 50\n    bid_2 = 50\n    bid_3 = 3\n    total_bids = opening_bid + (bid_1 * bid_2) + (bid_3 * bid_3)\n    total_cost = total_bids * cost_1\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total distance John travels in a year\n    distance_per_week = 30 * 5 * 52  # John goes to work 5 days a week for 50 weeks a year\n    total_distance = distance_per_week * 30 * 5  # John goes to work 30 miles away each day and goes back each week for 50 weeks a year\n\n    # Calculate the total cost of the driving service\n    total_cost = total_distance * 2 + 150  # John gives his driver a $150 bonus per month\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes Peter exercised on Sunday\n    sunday_minutes = 23\n\n    # Define the number of minutes Peter exercised on Monday\n    monday_minutes = 16\n\n    # Calculate the combined number of minutes Peter exercised\n    combined_minutes = sunday_minutes + monday_minutes\n\n    # Calculate the number of minutes Peter needs to exercise on Tuesday to reach his goal\n    tuesday_minutes = 2 * combined_minutes\n\n    # Display the number of minutes Peter needs to exercise on Tuesday\n    result = tuesday_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pages in a tabloid\n    tabloid_pages = 32\n\n    # Calculate the number of pieces of paper used in a single page\n    printed_pages_1 = 1 + 2 + 32\n    printed_pages_2 = 2 + 31\n    printed_pieces_3 = 3 + 31\n\n    # Calculate the total number of pieces of paper used in a 32-page tabloid\n    total_pieces = printed_pages_1 + printed_pages_2 + printed_pieces_3\n\n    # Display the total number of pieces of paper used\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Annika brought to the town fair\n    initial_amount = 50\n\n    # Calculate the amount Annika spent on food and snacks\n    food_and_snacks = initial_amount / 2\n\n    # Calculate the amount Annika spent on rides\n    rides = 10\n\n    # Calculate the total amount spent\n    total_spent = food_and_snacks + rides\n\n    # Calculate the amount left\n    amount_left = initial_amount - total_spent\n\n    # return the result\n    result = amount_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books sold in the current year and the number of unsold books in the current year\n    current_books = 50\n    unsold_books_in_current_year = 50\n\n    # Calculate the number of books sold in the first year and the number of unsold books in the second year\n    books_sold_first_year = 2 * current_books\n    books_in_second_year = 250 - (current_books * unsold_books_in_current_year)\n\n    # Calculate the total amount of money Elise earned in the second year\n    earnings_in_second_year = books_sold_first_year * 20\n\n    # return the result\n    result = earnings_in_second_year\n    return result"}
{"output": "def solution():\n    # Calculate Watson's total earnings in April\n    total_earnings = 10 * 5 * 4 * 300  # Watson works a 10-hour shift each day, five days a week, and earns $300 bonus each week\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of arm wrestles\n    initial_wrestles = 20\n\n    # Calculate the number of people John beat\n    beat_percent = 80\n    beat_amount = initial_wrestles * (beat_percent / 100)\n\n    # Calculate the number of people John lost\n    lost_people = initial_wrestles - beat_amount\n\n    # Display the number of people John lost\n    result = lost_people\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of loaves of bread produced each day\n    total_loaves = 60\n\n    # Calculate the number of loaves sold in the morning\n    morning_loaves = total_loaves * (2/3)\n\n    # Calculate the number of loaves remaining after morning sales\n    remaining_loaves = total_loaves - morning_loaves\n\n    # Calculate the number of loaves sold in the afternoon\n    afternoon_loaves = remaining_loaves / 2\n\n    # Display the number of loaves sold in the afternoon\n    result = afternoon_loaves\n    return result"}
{"output": "def solution():\n    joey_weight_loss = 8  # Joey loses 8 pounds in 4 weeks\n    sandy_weight_loss_per_week = joey_weight_loss / 4  # Sandy wants to lose the same amount of weight as Joey\n    weeks_to_lose_same_weight = sandy_weight_loss_per_week / joey_weight_loss  # Calculate the number of weeks it will take Sandy to lose the same amount of weight\n    result = weeks_to_lose_same_weight\n    return result"}
{"output": "def solution():\n    ice_cream_price = 13\n    milk_price = 0.5\n    num_ice_cream_tubs = 2\n    num_milk_packets = 4\n\n    # Calculate the total cost of ice cream\n    ice_cream_cost = ice_cream_price * num_ice_cream_tubs\n\n    # Calculate the total cost of milk\n    milk_cost = milk_price * num_milk_packets\n\n    # Calculate the total cost of all items\n    total_cost = ice_cream_cost + milk_cost\n\n    # Calculate the amount saved\n    amount_saved = total_cost - total_cost\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    extra_arms_per_day = 3\n    extra_leg_per_day = 5\n    num_days = 15\n\n    # Calculate the total number of extra arms that need to grow\n    total_extra_arms = extra_arms_per_day * num_days\n\n    # Calculate the total number of extra legs that need to grow\n    total_extra_leg_days = extra_leg_per_day * num_days\n\n    # Calculate the total number of new limbs that need to grow\n    total_extra_limbs = total_extra_arms + total_extra_leg_days\n    result = total_extra_limbs\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a business suit and a flight ticket\n    SUITCASE_PRICE = 100\n    PLAYET_PRICE = 5 * SUITCASE_PRICE + 700\n\n    # Define the amount Theo wants to save\n    SAVINGS = 2000\n\n    # Calculate the total cost of the business suits\n    business_suit_cost = 6 * SUITCASE_PRICE\n\n    # Calculate the total cost of the business ticket\n    business_ticket_cost = 3 * SUITCASE_PRICE + PLAYET_PRICE\n\n    # Calculate the amount Theo needs to spend on gifts for his business partners\n    gift_cost = 6000 - business_suit_cost - business_ticket_cost\n\n    # Display the amount Theo needs to spend on gifts for his business partners\n    result = gift_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of eggs consumed by the family in a week\n    eggs_per_day = (3 * 3) + (2 * 2)  # three people eat three eggs each day and the rest eat two eggs each day\n    total_eggs = eggs_per_day * 5  # the family will consume eggs every day for 5 days\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define Quinn's age\n    quinn_age = 30\n\n    # Calculate Jane's age\n    jane_age = quinn_age - 3\n\n    # Calculate Trent's age\n    trent_age = jane_age + 5\n\n    # Display Trent's age\n    result = trent_age\n    return result"}
{"output": "def solution():\n    \n    # Define Cera's current age\n    cera_age = 46\n\n    # Calculate Noah's current age\n    noah_age = cera_age / 2\n\n    # Calculate Chile's current age\n    chile_age = noah_age - 6\n\n    # Calculate Chile's age 6 years ago\n    chile_age_6_years_ago = chile_age + 6\n\n    # Calculate Chile's current age\n    chile_age_now = chile_age_6_years_ago + 6\n\n    # Display Chile's current age\n    result = chile_age_now\n    return result"}
{"output": "def solution():\n    \n    total_players = 105\n    defense_players = total_players / 3\n    offense_players = defense_players * 2\n    special_teams_players = defense_players / 2\n    defense_players = defense_players - offense_players - special_teams_players\n    result = defense_players\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people invited with each family\n    family1 = 6\n    family2 = 4\n    family3 = 4\n\n    # Calculate the total number of people invited\n    total_people = (2 * family1) + (3 * family2) + (8 * family3)\n\n    # Calculate the number of people who had previous commitments\n    previous_commitments = total_people * (1/4)\n\n    # Calculate the total number of people who show up for Martha's party\n    total_people = total_people + previous_commitments\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of marbles Solomon bought from Johanna\n    johanna_marbles = 20\n\n    # Define the number of marbles Solomon added to the store\n    added_marbles = 50\n\n    # Define the number of marbles Solomon's father gave him\n    father_marbles = (2/5) * johanna_marbles\n\n    # Calculate the total weight of the marbles Solomon has\n    total_weight = johanna_marbles + added_marbles + father_marbles\n\n    # Display the total weight of the marbles\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    pool_length = 6\n    pool_width = 4\n    pool_depth = pool_length * pool_width\n    cost_per_cubic_foot = 0.1\n    total_cost = pool_depth * cost_per_cubic_foot\n    result = total_cost\n    return result"}
{"output": "def solution():\n    boys = 30  # The classroom has 30 boys\n    girls = 3 * boys  # The classroom has 3 times as many girls as they do boys\n    nongendered_children = boys / 10  # The classroom has 1/10 as many nongendered children as they do boys\n\n    # Calculate the total number of children\n    total_children = boys + girls + nongendered_children\n    result = total_children\n    return result"}
{"output": "def solution():\n    # Calculate the ratio of electric poles to electricity\n    electric_poles_ratio = 1/3\n\n    # Calculate the total number of electric wires needed\n    electric_wires_needed = 45\n\n    # Calculate the total number of electric poles needed\n    electric_poles_needed = electric_wires_needed * electric_poles_ratio\n\n    result = electric_poles_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of men and women\n    initial_men = 25\n    initial_women = 15\n\n    # Define the number of men who stayed at the party\n    men_stayed = 22\n\n    # Calculate the number of men who left\n    men_left = initial_men - men_stayed\n\n    # Calculate the number of women left after an hour\n    women_left = men_left * (1/4)\n\n    # Calculate the number of women left after an hour\n    women_left -= women_left\n\n    # Display the number of women left\n    result = women_left\n    return result"}
{"output": "def solution():\n    \n    book_cost = 4\n    magazine_cost = book_cost / 2\n    pen_cost = magazine_cost - 1\n    result = pen_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pencils Jam and Meg have\n    jam_pencils = 3\n    meg_pencils = 46\n\n    # Define the number of loose pencils Jam and Meg have\n    loose_pencils = 2\n\n    # Calculate the total number of pencils Jam and Meg have\n    total_pencils = jam_pencils + loose_pencils\n\n    # Calculate the number of boxes Jam and Meg need to store all the pencils\n    boxes_needed = total_pencils // 4 + (total_pencils % 4 > 0)\n\n    # Display the number of boxes needed\n    result = boxes_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial length of Shannon's iced coffee\n    initial_length = 65\n\n    # Define the length of each ice cube in milliliters\n    cube_length = 13\n\n    # Define the length of the additional liquid in milliliters\n    additional_liquid = 15\n\n    # Calculate the length of the iced coffee\n    iced_coffee_length = initial_length * cube_length\n\n    # Calculate the length of the additional liquid in milliliters\n    additional_liquid = additional_liquid * additional_liquid\n\n    # Calculate the final length of Shannon's iced coffee\n    final_length = initial_length + additional_liquid\n\n    # Display the final length of Shannon's iced coffee\n    result = final_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of new records each person can trade for\n    NEW_RECORD_RATE = 2\n\n    # Define the number of new records each person can trade for\n    NEW_RECORD_RATE = 1\n\n    # Define the number of people who come in with old records and leave with 7 new records\n    num_people = 5\n    num_new_records = 7\n\n    # Calculate the total number of new records\n    total_new_records = num_people * NEW_RECORD_RATE + NEW_RECORD_RATE\n\n    # Calculate the total number of old records\n    total_old_records = total_new_records + total_old_records\n\n    # Display the total number of old records\n    result = total_old_records\n    return result"}
{"output": "def solution():\n    \n    # Define the number of employees in Jaime's company\n    employees = 100\n\n    # Calculate the number of Junior programmers\n    junior_employees = (2/5) * employees\n\n    # Calculate the number of Senior programmers\n    senior_employees = junior_employees + 400\n\n    # Calculate the total number of employees\n    total_employees = junior_employees + senior_employees\n\n    # Calculate the total amount paid to all the programmers per month\n    total_paid = total_employees * 2000\n\n    # return the result\n    result = total_paid\n    return result"}
{"output": "def solution():\n    # Calculate the total number of people who got on the bus at the first stop\n    first_bus_got = 5 + 5\n\n    # Calculate the total number of people who got on the bus at the second stop\n    second_bus_got = 7 + 8\n\n    # Calculate the total number of people who got on the bus at the terminal\n    total_got = first_bus_got + second_bus_got + 20\n\n    result = total_got\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 24\n\n    # Subtract the number of lollipops Oscar eats on his way to school\n    lollipops -= 2\n\n    # Calculate the number of lollipops Oscar buys on his way home\n    lollipops *= 2\n\n    # Subtract the number of lollipops Oscar eats on his way home\n    lollipops -= 2\n\n    # Add the number of lollipops Oscar buys on his way home\n    lollipops += 2\n\n    # Subtract the number of lollipops Oscar eats on his way home\n    lollipops -= 2\n\n    # Add the number of lollipops Oscar eats on his way home\n    lollipops += 2\n\n    # Display the total number of lollipops Oscar has\n    result = lollipops\n    return result"}
{"output": "def solution():\n    charge_rate = 1/3  # The charge rate is 1% of charge per 3 minutes\n    current_charge = 0.6 * current_charge  # The phone is at 60% charged\n    total_charge = current_charge + current_charge  # The total charge to fully charge in hours\n\n    # Calculate the time it will take to fully charge in hours\n    time_in_hours = total_charge / 60\n    result = time_in_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 7\n\n    # Define the number of lollipops Erin's mother gives Erin\n    mother_lollipops = 10\n\n    # Define the number of lollipops Erin gives to Ella\n    ella_lollipops = 3\n\n    # Calculate the number of lollipops Erin has left\n    remaining_lollipops = initial_lollipops - mother_lollipops - ella_lollipops\n\n    # Display the number of lollipops Erin has left\n    result = remaining_lollipops\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the loyalty card and the discount rate\n    COST_1 = 1\n    DISCOUNT_RATE = 20\n\n    # Define the total cost of the shopping trip\n    total_cost = 80\n\n    # Calculate the amount of rewards used for the coupon\n    coupon_rewards = total_cost * 2\n\n    # Calculate the final cost after the coupon is applied\n    final_cost = total_cost - (discount_rewards * COST_1) - (coupon_rewards * COST_2)\n\n    # Display the final cost\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly rates and net income for each job\n    hourly_rate_A = 15\n    hourly_rate_A = 2000\n    net_income_A = 6000\n    net_income_B = 6000\n    net_tax_rate_B = 0.1\n\n    # Calculate the total tax for each job\n    tax_A = hourly_rate_A * total_tax_A\n    tax_A = tax_A * net_income_A\n    tax_B = tax_B * net_income_B\n\n    # Calculate the net pay rate for each job\n    net_pay_A = net_income_A - tax_A\n    net_tax_B = net_income_B * net_tax_rate_B\n\n    # Calculate the difference in pay between the two jobs\n    net_pay_difference = net_pay_A - net_pay_B\n\n    # Return the result\n    result = net_pay_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of castles\n    total_castles = 220\n\n    # Calculate the number of ruins\n    ruins = total_castles * 0.4\n\n    # Calculate the number of unmanned castles\n    unmanned_castles = ruins * 0.5\n\n    # Display the number of unmanned castles\n    result = unmanned_castles\n    return result"}
{"output": "def solution():\n    \n    # Calculate the cost of Furniture's offer\n    furniture_cost = 350 + 6 * 350\n\n    # Calculate the cost of Cozy Homes' offer\n    cozy_cost = 100 + 9 * 250\n\n    # Calculate the cost difference between the two offers\n    cost_difference = cozy_cost - furniture_cost\n\n    # Display the cost difference\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guns each person has\n    dj_gns = 8\n    nick_gns = 10\n    richard_gns = 5\n\n    # Calculate the total number of guns\n    total_gns = dj_gns + nick_gns + richard_gns\n\n    # Calculate the number of guns each person would have if they share equally\n    each_person_gns = total_gns // 3\n\n    # Display the number of guns each person would have\n    result = each_person_gns\n    return result"}
{"output": "def solution():\n    sugar_for_suit_per_batch = 30  # Mason needs 30 ounces of sugar to make a batch of suckers\n    sugar_for_fudge_per_batch = 70  # Mason needs 70 ounces of sugar to make a batch of fudge\n    batches = 8  # Mason wants to make 8 batches of suckers\n\n    # Calculate the total amount of sugar needed for 8 batches of suckers\n    total_sugar_for_suit_batches = sugar_for_suit_per_batch * batches\n\n    # Calculate the total amount of sugar needed for 1 batch of fudge\n    total_sugar_for_fudge_batches = sugar_for_fudge_per_batch * batches\n\n    # Calculate the total amount of sugar needed for 8 batches of fudge\n    total_sugar_for_8_batches = sugar_for_suit_batches + total_sugar_for_fudge_batches\n    result = total_sugar_for_8_batches\n    return result"}
{"output": "def solution():\n    \n    # Define the initial stock price and the percentage increase in the first year\n    initial_price = 8\n    first_year_increase = 0.5\n\n    # Calculate the new stock price after the first year\n    new_stock_price = initial_price * (1 + first_year_increase)\n\n    # Calculate the new stock price after the second year\n    new_stock_price = new_stock_price * (1 - second_year_increase)\n\n    # Calculate the final value of all 8 shares\n    final_value = new_stock_price * 8\n\n    # Display the final value of all 8 shares\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    luke_hotdogs = 2\n    thomas_hotdogs = luke_hotdogs * 3\n    john_hotdogs = thomas_hotdogs / 2\n    difference = john_hotdogs - luke_hotdogs\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of students in each group\n    total_students = 200\n    group1_students = 2\n    group2_students = total_students - group1_students\n    group3_students = group2_students - 10\n\n    # Calculate the number of students in this (smallest group)\n    smallest_group_students = group3_students\n\n    # Display the number of students in this (smallest group)\n    result = smallest_group_students\n    return result"}
{"output": "def solution():\n    \n    total_animals = 60\n    cow_animals = total_animals / 3\n    chicken_animals = 2 * cow_animals\n    legs_per_animal = 4\n    total_legs = (chicken_animals * legs_per_animal) + (cow_animals * legs_per_animal)\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of juggling balls\n    initial_balls = 3\n\n    # Calculate the number of balls added each week\n    added_balls = initial_balls - 1\n\n    # Calculate the total number of balls after 4 weeks\n    total_balls = initial_balls + added_balls\n\n    # Calculate the number of balls after 2 were lost completely\n    final_balls = total_balls - 2\n\n    # Display the final number of balls\n    result = final_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the pink frog\n    frog_weight = 50\n\n    # Calculate the weight of the yellow snake\n    snake_weight = frog_weight - 10\n\n    # Calculate the weight of the red bird\n    red_bird_weight = frog_weight + 20\n\n    # Calculate the weight of each animal\n    animal_weight = frog_weight - snake_weight - red_bird_weight\n\n    # Display the weight of each animal\n    result = animal_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of baby outfits\n    initial_baby_outfits = 24\n\n    # Calculate the number of baby outfits received by Laurel\n    laurel_baby_outfits = initial_baby_outfits * 2\n\n    # Add the baby outfits received by Laurel's mom\n    laurel_baby_outfits += 15\n\n    # Calculate the total number of baby outfits for Laurel's baby\n    total_baby_outfits = initial_baby_outfits + laurel_baby_outfits\n\n    # Display the total number of baby outfits\n    result = total_baby_outfits\n    return result"}
{"output": "def solution():\n    # Calculate the total distance covered by Tyson in June\n    distance_covered_by_coach = 5000 * (1 + 1/5)  # Tyson runs 5000 meters every day, so he runs 1/5 times more meters in a day\n    total_distance_covered_in_June = distance_covered_by_coach * 4  # June runs 4 days in a month\n    result = total_distance_covered_in_June\n    return result"}
{"output": "def solution():\n    \n    # Define the price of Juice Box A\n    juice_a_price = 4\n\n    # Calculate the price of Juice Box B\n    juice_b_price = juice_a_price + 5\n\n    # Calculate the price of Juice Box C\n    juice_c_price = juice_b_price + 7\n\n    # Calculate the difference in price between Juice Box C and Juice Box B\n    difference = juice_c_price - juice_b_price\n\n    # Display the difference in price\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tables with 4 legs and 3 legs\n    tables_4_legs = 40\n    tables_3_legs = 50\n\n    # Calculate the total number of legs in the tables with 4 legs\n    total_legs_4_legs = tables_4_legs * 4\n\n    # Calculate the total number of legs in the tables with 3 legs\n    total_legs_3_legs = tables_3_legs * 3\n\n    # Calculate the total number of legs in the restaurant's tables\n    total_legs = total_legs_4_legs + total_legs_3_legs\n\n    # return the result\n    result = total_legs\n    return result"}
{"output": "def solution():\n    # Calculate the total number of cookies Jenny puts in her son's lunch box\n    lunch_boxes_cookies = 5 * 36\n\n    # Calculate the total number of cookies Jenny has\n    total_cookies = 36 - lunch_boxes_cookies\n\n    # Calculate the number of cookies Jenny's husband eats\n    husband_cookies = 1 * 7\n\n    # Calculate the number of cookies Jenny eats\n    jenny_cookies = total_cookies - husband_cookies\n    result = jenny_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of one shirt\n    ORIGINAL_PRICE = 30\n\n    # Calculate the discounted price of one shirt\n    discounted_price = ORIGINAL_PRICE * 0.6\n\n    # Calculate the total cost of two shirts\n    total_cost = discounted_price * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tractors_sold_per_day = 10\n    tractor_salary = 100\n    silos_sold_per_day_now = 5\n    silo_salary = 220\n    total_income = (tractors_sold_per_day * tractor_salary) + (silos_sold_per_day_now * silo_salary)\n    percentage_income = (total_income / total_income) * 100\n    result = percentage_income\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of food, treats, and medicine per month\n    FOOD_COST = 25\n    TREATS_COST = 20\n    MedICINE_COST = 100\n\n    # Define the number of weeks in a month\n    WEEKS_IN_MONTH = 4\n\n    # Calculate the total cost of food for a year\n    food_cost_per_year = FOOD_COST * WEEKS_IN_MONTH * 12\n\n    # Calculate the total cost of treats for a year\n    treats_cost_per_year = TREATS_COST * 12\n\n    # Calculate the total cost of Medicine for a year\n    medicine_cost_per_year = MedICINE_COST * 12\n\n    # Calculate the total cost of Madeline's dog per year\n    total_cost_per_year = food_cost_per_year + treats_cost_per_year + medicine_cost_per_year\n\n    # Display the total cost per year\n    result = total_cost_per_year\n    return"}
{"output": "def solution():\n    \n    monday_time = 1\n    tuesday_time = monday_time * 3\n    wednesday_time = tuesday_time / 2\n    thursday_time = tuesday_time / 2\n    friday_time = 2\n    total_time = monday_time + tuesday_time + wednesday_time + thursday_time + friday_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of plant pots asked for for the daisies\n    daisies_pots = 30\n\n    # Define the number of plant pots ask for for the roses\n    roses_pots = daisies_pots * 2\n\n    # Define the total number of plant pots asked\n    total_pots_asked = daisies_pots + roses_pots\n\n    # Define the number of plant pots April had already bought\n    total_pots_bought = 100\n\n    # Calculate the number of plant pots April has left over\n    pots_left_over = total_pots_asked - total_pots_bought\n\n    # Display the number of plant pots April has left over\n    result = pots_left_over\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Andrea had in the beginning\n    beginning_money = 36\n\n    # Define the amount of money Andrea spent on the sweater\n    sweater_cost = 11\n\n    # Define the amount of money Andrea gave her brother\n    brother_money = 4\n\n    # Calculate the amount of money Andrea saved\n    saved_money = starting_money - sweater_cost - brother_money\n\n    # Display the amount of money Andrea saved\n    result = saved_money\n    return result"}
{"output": "def solution():\n    \n    boating_time = 6\n    swimming_time = boating_time / 2\n    shows_time = 3 * 2\n    total_time = boating_time + swimming_time + shows_time\n    sightseeing_time = total_time * 0.4\n    result = sightseeing_time\n    return result"}
{"output": "def solution():\n    \n    phone_cost = 400\n    savings = 80\n    first_job_pay = 10 * 20\n    second_job_pay = 5 * 15\n    total_pay = first_job_pay + second_job_pay\n    remaining_savings = phone_cost - total_pay\n    result = remaining_savings\n    return result"}
{"output": "def solution():\n    \n    shortest_tree = 6\n    second_tree = shortest_tree + 5\n    combined_height = shortest_tree + second_tree\n    tallest_tree = 2 * combined_height\n    result = tallest_tree\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the toy cars\n    toy_car_cost = 6 * 2\n\n    # Calculate the total cost of the teddy bears\n    teddy_bear_cost = 5 * 1\n\n    # Calculate the total cost of the toy cars and teddy bears\n    total_cost = toy_car_cost + teddy_bear_cost\n\n    # Calculate the amount of money Dean has left\n    money_left = 28 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    budget = 90\n    arcade_tokens = 5\n    mini_golf_price = 5\n    go_kart_price = 10\n    ride_round_1 = 2\n    ride_round_2 = 2\n    total_go_kart_cost = go_kart_price * ride_round_1\n    total_mini_golf_cost = mini_golf_price * ride_round_2\n    total_friends_can_ invite = budget - total_go_kart_cost - total_mini_golf_cost\n    result = total_friends_can_ invite\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Marisa spends on lollipops for 5 days\n    lollipop_cost = 0.25 * 4 * 5  # 4 lollipops worth 25 cents each, and saves for 5 days\n\n    # Calculate the total amount of money Marisa put in her piggy bank\n    total_money = lollipop_cost + 5  # Marisa gets $5 as pocket money every day\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Billy has\n    initial_money = 10\n\n    # Define the cost of one pound of candy\n    candy_cost_per_pound = 1.5\n\n    # Define the amount of money Billy spent on gumballs\n    gumball_cost = 0.05\n\n    # Calculate the total amount of money Billy spent on gumballs\n    total_gumballs_cost = 40 * gumball_cost\n\n    # Calculate the amount of money Billy spent on candy\n    candy_cost_spent = total_gumballs_cost / 2\n\n    # Calculate the amount of candy Billy bought\n    candy_amount = candy_cost_spent / candy_cost_per_pound\n\n    # Display the amount of candy Billy bought\n    result = candy_amount\n    return result"}
{"output": "def solution():\n    \n    carver_age = 45\n    son_age = (carver_age + 5) / 2\n    result = son_age\n    return result"}
{"output": "def solution():\n    \n    # Define the distances for each city\n    city1_distance = 75\n    city2_distance = 100\n    city3_distance = (city1_distance + city2_distance) - 50\n\n    # Calculate the total distance for all three cities\n    total_distance = city1_distance + city2_distance + city3_distance + city4_distance\n\n    # Calculate the number of days it will go between services\n    days = total_distance / 18000\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the stuffing required for each type of bed\n    ROTTWEiler_STUDENTING = 8\n    CHIHUAHUA_STUDENTING = 2\n    COLLIE_STUDENTING = (4 * CHIHUAHUA_STUDENTING) + (3 * COLLIE_STUDENTING)\n\n    # Calculate the total stuffing needed for all beds\n    total_stuffing = ROTTWEiler_STUDENTING + CHIHUAHUA_STUDENTING + COLLIE_STUDENTING\n\n    # Display the total stuffing needed\n    result = total_stuffing\n    return result"}
{"output": "def solution():\n    distance_to_friend = 200\n    speed_to_drive = 70\n    distance_to_detour = 10\n    distance_to_route_home = 240\n    speed_to_drive = 80\n\n    # Calculate the time it takes to drive to John's friend's house\n    time_to_drive = distance_to_friend / speed_to_drive\n\n    # Add the distance to the detour\n    time_to_detour += distance_to_detour\n\n    # Add the distance to the route home\n    time_to_drive += distance_to_drive\n\n    # Add the distance to the trip\n    time_to_drive += distance_to_drive\n\n    result = time_to_drive\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of fourth-graders and the number of girls on Friday\n    total_fourth_graders = 96\n    friday_girls = 43\n\n    # Calculate the number of fourth-grade girls on Friday\n    friday_girls = friday_girls - 5\n\n    # Calculate the number of fourth-grade boys on Friday\n    friday_boys = friday_girls - 4\n\n    # Display the number of fourth-grade boys on Friday\n    result = friday_boys\n    return result"}
{"output": "def solution():\n    \n    # Define the number of girls in the park\n    girls = 6\n\n    # Calculate the number of boys in the park\n    boys = girls * 2\n\n    # Calculate the total number of kids in the park\n    total_kids = girls + boys\n\n    # return the result\n    result = total_kids\n    return result"}
{"output": "def solution():\n    \n    total_points = 42\n    first_test_points = 15\n    second_test_points = 18\n    third_test_points = total_points - first_test_points - second_test_points\n    result = third_test_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers kicked out for refusing\n    refusing_customers = 3\n\n    # Calculate the number of customers kicked out for shoplifting\n    shoplifting_customers = 4 * refusing_customers - 5\n\n    # Calculate the number of shoplifters kicked out for physical violence\n    violence_shoplifters = 3 * shoplifting_customers\n\n    # Calculate the number of customers kicked out for other reasons\n    other_customers = 50 - (shoplifting_customers + violence_shoplifters)\n\n    # Display the number of customers kicked out for other reasons\n    result = other_customers\n    return result"}
{"output": "def solution():\n    \n    # Define Sara's score\n    sara_score = 8\n\n    # Calculate Erin's score\n    erin_score = sara_score * 3\n\n    # Calculate Erin's before scoring\n    erin_before = erin_score - 14\n\n    # Display Erin's before scoring\n    result = erin_before\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each picture frame and the percentage of the seniors that need to be etched with the logo\n    PAPER_COST = 20\n    PAPER_PERCENTAGE = 0.2\n\n    # Define the number of seniors and the cost of each senior\n    num_seniors = 44\n    frame_cost = 20\n\n    # Calculate the cost of each senior with the logo\n    logo_cost = frame_cost * PAPER_PERCENTAGE\n\n    # Calculate the total cost of the seniors\n    total_cost = (num_seniors * frame_cost) + (2 * PAPER_COST) + (1/4 * PAPER_PERCENTAGE) + (12 * COR_PERCENTAGE)\n\n    # Calculate the total cost of the seniors gifts\n    total_gifts_cost = total_cost * num_seniors\n\n    # Display the total cost\n    result = total_gifts_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a hand-painted wallpaper\n    COST = 400\n\n    # Calculate the amount saved by Ethan\n    DIY_SAVINGS = COST * 0.2\n\n    # Calculate the total cost\n    total_cost = COST + DIY_SAVINGS\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shoes sold on Friday\n    friday_sales = 14\n\n    # Calculate the number of shoes sold on the second day\n    day2_sales = friday_sales * 2\n\n    # Calculate the number of shoes sold on the third day\n    day3_sales = day2_sales / 2\n\n    # Calculate the total number of shoes sold by the end of the sale\n    total_sales = friday_sales + day2_sales + day3_sales\n\n    # Display the total number of shoes sold\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Hallie had dance practice on Tuesdays and Thursdays\n    tuesdays_hours = 1\n    thursdays_hours = 2\n\n    # Define the number of hours Hallie had dance practice on Saturdays\n    saturdays_hours = tuesdays_hours * 2\n\n    # Calculate the total number of hours Hallie had dance practice in a week\n    total_hours = (tuesdays_hours + thursdays_hours + saturdays_hours) * 7\n\n    # Display the total number of hours Hallie had dance practice\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of equipment bought\n    total_equipment = 400000\n\n    # Calculate the number of faulty pieces of equipment\n    faulty_equipment = total_equipment * 0.4\n\n    # Calculate the total amount spent on functioning pieces of equipment\n    functioning_equipment = total_equipment - faulty_equipment\n\n    # Display the total amount spent on functioning pieces of equipment\n    result = functioning_equipment\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of sheep and the amount of milk collected each day\n    total_sheep = 30\n    milk_1 = 0.5 * total_sheep\n    milk_2 = 0.5 * total_sheep\n\n    # Calculate the total amount of milk collected every day\n    total_milk = milk_1 + milk_2\n\n    # Display the total amount of milk collected every day\n    result = total_milk\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rolls in a dozen\n    rolls_per_dozen = 12\n\n    # Define the number of children\n    children = 6\n\n    # Calculate the total number of rolls\n    total_rolls = rolls_per_dozen * children\n\n    # Subtract the number of rolls broke\n    remaining_rolls = total_rolls - children\n\n    # Calculate the number of pieces of rolls fed to the chickens\n    chicken_rolls = remaining_rolls * 8\n\n    # return the result\n    result = chicken_rolls\n    return result"}
{"output": "def solution():\n    \n    total_pupils = 40\n    blue_pupils = total_pupils / 2\n    remaining_pupils = total_pupils - blue_pupils\n    green_pupils = remaining_pupils / 4\n    yellow_pupils = remaining_pupils - green_pupils\n    result = yellow_pupils\n    return result"}
{"output": "def solution():\n    \n    # Define the price per piece of apples\n    APPLE_PRICE = 4\n\n    # Define the number of apples picked on Monday\n    monday_apples = 56\n\n    # Calculate the number of apples picked on Tuesday\n    tuesday_apples = 12\n\n    # Calculate the number of apples picked on Come Wednesday\n    wednesday_apples = monday_apples * 2\n\n    # Calculate the total number of apples picked over the three days\n    total_apples = monday_apples + tuesday_apples + wednesday_apples\n\n    # Display the total number of apples picked\n    result = total_apples\n    return result"}
{"output": "def solution():\n    total_socks = 50  # There are 50 socks that need washing\n    pairs_of_socks = 10  # Lindsay washes 10 pairs of socks\n    loose_socks = 15  # Lindsay has 15 loose socks\n\n    # Calculate the total number of socks Lindsay has missed\n    missed_socks = total_socks - (pairs_of_socks * pairs_of_socks) - loose_socks\n    result = missed_socks\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies\n    initial_cookies = 23\n\n    # Define the number of cookies Janet gave her\n    janet_cookies = 42\n\n    # Define the number of cookies eaten by the brother\n    brother_cookies = 44\n\n    # Calculate the number of cookies left for Rachel\n    remaining_cookies = initial_cookies - janet_cookies - brother_cookies\n\n    # Display the number of cookies left for Rachel\n    result = remaining_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount borrowed and interest rate\n    initial_amount = 3650\n    interest_rate = 0.1\n\n    # Calculate the interest amount\n    interest_amount = initial_amount * interest_rate\n\n    # Calculate the total amount to be paid\n    total_amount = initial_amount + interest_amount\n\n    # Calculate the monthly payment\n    monthly_payment = total_amount / 5\n\n    # Display the monthly payment\n    result = monthly_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the distances hiked by Cho and Chloe\n    CHOURSE_DISTANCE = 14 * 8 + 9 * 5\n\n    # Calculate the difference in distance hiked by Cho and Chloe\n    difference = CHOURSE_DISTANCE - CHOURSE_DISTANCE\n\n    # Display the difference in distance hiked\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the number of silver pesos Anna has\n    anna_silver_pesos = 2 * 50\n\n    # Calculate the number of gold pesos Anna has\n    anna_gold_pesos = 80 + 40\n\n    # Calculate the total number of pesos they have together\n    total_pesos = 50 + 80 + anna_silver_pesos + anna_gold_pesos\n    result = total_pesos\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of lemonade needed\n    total_lemonade = 3 * 12\n\n    # Calculate the total revenue from selling all the lemonade\n    total_revenue = total_lemonade * 4\n\n    # Calculate the profit per hour\n    profit_per_hour = 18 - total_revenue\n    result = profit_per_hour\n    return result"}
{"output": "def solution():\n    # Calculate the amount of land Mr. Ruther sold\n    sold_land = 3/5 * 12.8\n\n    # Calculate the amount of land Mr. Ruther had at first\n    initial_land = sold_land + 12.8\n    result = initial_land\n    return result"}
{"output": "def solution():\n    # Calculate the number of boys and girls in the choir\n    num_boys = 52 * 0.5\n    num_girls = 52 * 0.5\n\n    # Calculate the number of people who can make it to the show\n    num_people_showing = num_boys + num_girls\n\n    # Calculate the number of people who sang in the performance\n    num_people_sang = num_people_showing / 2\n\n    result = num_people_sang\n    return result"}
{"output": "def solution():\n    # Calculate Wilson's current math grade\n    current_math_grade = (65 + 94 + 81 + 86 + 74) / 5\n    result = current_math_grade\n    return result"}
{"output": "def solution():\n    \n    eraser_cost = 2\n    pencil_cost = 3\n    num_erasers = 6\n    num_pencils = 8\n    total_cost = (eraser_cost * num_erasers) + (pencil_cost * num_pencils)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of messages delivered to Ms. Thompson\n    thompson_messages = 66\n\n    # Calculate the number of messages delivered to Mr. Yu\n    yu_messages = thompson_messages / 3\n\n    # Calculate the total number of messages delivered\n    total_messages = thompson_messages + yu_messages\n\n    # Display the total number of messages delivered\n    result = total_messages\n    return result"}
{"output": "def solution():\n    num_rides = 9\n    ticket_price = 2\n    num_tickets_per_ride = 2\n    bracelet_cost = 30\n\n    # Calculate the total cost of tickets for all 9 rides\n    total_ticket_cost = num_rides * ticket_price\n\n    # Calculate the total cost of all 9 rides\n    total_cost = total_ticket_cost + bracelet_cost\n\n    # Calculate the amount of money David saves\n    savings = total_cost - total_cost\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gifts for each person\n    family_gifts = 6\n    friends_gifts = 4\n    teachers_gifts = 2\n\n    # Define the total number of gifts\n    total_gifts = family_gifts + friends_gifts + teachers_gifts\n\n    # Define the amount of ribbon needed for each bow\n    ribbon_per_gift = 144\n\n    # Display the amount of ribbon per gift\n    result = ribbon_per_gift\n    return result"}
{"output": "def solution():\n    \n    betty_popsicles = 5\n    sam_popsicles = 6\n    total_popsicles = 165\n    betty_popsicles_ratio = betty_popsicles / total_popsicles_ratio\n    sam_popsicles_ratio = sam_popsicles / total_popsicles_ratio\n    difference = sam_popsicles_ratio - betty_popsicles_ratio\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the regular prices of Netflix and Disney Plus\n    NetFLIX_PRICE = 10\n    DINY_PLUS_PRICE = 10\n\n    # Define the monthly savings rate for each service\n    NetFLIX_SAVINGS = 0.2\n    DINY_SAVINGS = 0.2\n\n    # Define the cable package\n    CABLE_PACKAGE_COST = 60\n\n    # Calculate the total savings\n    total_savings = (NETFLIX_PRICE * NetFLIX_SAVINGS) + (DINY_PLUS_PRICE * DINY_PLUS_SAVINGS)\n\n    # Display the total savings\n    result = total_savings\n    return result"}
{"output": "def solution():\n    \n    # Define the time spent writing the song\n    writing_time = 4\n\n    # Define the time spent recording the song\n    recording_time = writing_time / 2\n\n    # Define the time spent editing the song\n    editing_time = 90\n\n    # Calculate the total work time\n    total_time = writing_time + recording_time + editing_time\n\n    # Calculate the percentage of the total work time spent editing\n    percentage_editing = (editing_time / total_time) * 100\n\n    # Display the percentage of the total work time spent editing\n    result = percentage_editing\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and columns\n    rows = 6\n    columns = 6\n\n    # Calculate the total number of books\n    total_books = rows * columns + columns\n\n    # Calculate the number of books needed to complete the task\n    books_needed = (total_books * 2) + 20\n\n    # Display the number of books needed\n    result = books_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of Valentine's cards Erica has\n    total_cards = 20 * 15  # 2 boxes of pre-made Valentine's cards each\n\n    # Calculate the total number of cards Erica passed out\n    cards_passed_out = 24 + 5 + 17  # 24 to classmates, 5 to family, and 17 from family and friends\n\n    # Calculate the total number of Valentine's Day cards Erica now has\n    total_cards_now = total_cards - cards_passed_out\n    result = total_cards_now\n    return result"}
{"output": "def solution():\n    total_slices = 12  # Jenny is dividing the pizza with 12 slices\n    bill_slices = total_slices * (1/3)  # Jenny gives 1/3 to Bill\n    mark_slices = total_slices * (1/4)  # Jenny gives 1/4 to Mark\n    jenny_slices -= 2  # Jenny eats 2 slices\n    result = jenny_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount in Mark's bank account and the daily earnings\n    initial_amount = 50\n    daily_earnings = 10\n\n    # Define the cost of the bike\n    bike_cost = 300\n\n    # Calculate the amount Mark needs to save\n    amount_to_save = bike_cost - initial_amount\n\n    # Calculate the number of days Mark needs to save\n    days_to_save = amount_to_save / daily_earnings\n\n    # Display the number of days Mark needs to save\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spiders\n    spiders = 90\n\n    # Calculate the number of millipedes\n    millipedes = spiders / 3\n\n    # Calculate the number of stink bugs\n    stink_bugs = 2 * millipedes - 12\n\n    # Calculate the total number of bugs\n    total_bugs = spiders + millipedes + stink_bugs\n\n    # Display the total number of bugs\n    result = total_bugs\n    return result"}
{"output": "def solution():\n    erica_age = 30  # Erica is 30 years old\n    alice_age = erica_age + 7  # Alice is 7 years older than Beth\n    beth_age = erta_age + 5  # Beth is 5 years older than Erica\n\n    # Calculate the difference between Alice and Erica\n    age_difference = alice_age - beth_age\n    result = age_difference\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of milk consumed by John\n    total_milk = 8 * 2  # 2 glasses of milk, each glass has 8 ounces of milk\n\n    # Calculate the number of calories consumed by John\n    calories_consumed = total_milk * 3  # 3 calories per ounce\n\n    result = calories_consumed\n    return result"}
{"output": "def solution():\n    \n    weeks_per_month = 4\n    days_per_week = 6\n    pay_per_day = 50\n    weeks_per_year = 12\n    total_weeks = weeks_per_month * months_per_year\n    total_days = days_per_week * weeks_per_year\n    total_pay = total_weeks * pay_per_day * weeks_per_year\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of flour and milk needed for the normal recipe\n    flour_needed = 3\n    milk_needed = 1\n\n    # Define the amount of flour and milk sold in 2-cup bottles\n    flour_bottles = 2\n    milk_bottles = 2\n\n    # Calculate the amount of flour and milk sold\n    flour_sold = flour_needed - flour_bottles\n    milk_sold = milk_needed - milk_bottles\n\n    # Calculate the difference between the number of bags of flour and milk sold\n    difference = flour_sold - milk_sold\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the energy used by the air conditioner in one day\n    energy_per_day = 900 * 8  # 900 watts used per hour for 8 hours a day\n\n    # Calculate the energy used by the air conditioner in one day\n    energy_per_day_increase = energy_per_day * 5  # 900 watts used by each hour for 5 hours a day\n\n    # Calculate the energy saved in 30 days\n    energy_saved = energy_per_day_increase * 30\n\n    result = energy_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stripes on each zebra\n    zebra1_stripes = 17\n    zebra2_stripes = 36\n    zebra3_stripes = zebra1_stripes / 2\n\n    # Calculate the total number of stripes\n    total_stripes = zebra1_stripes + zebra2_stripes + zebra3_stripes\n\n    # Calculate the average number of stripes\n    average_stripes = total_stripes / 2\n\n    # Display the average number of stripes\n    result = average_stripes\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of meat and cheese needed to serve 20 people\n    total_meat_cheese = 20 * 4\n\n    # Calculate the total cost of meat and cheese\n    meat_cost = total_meat_cheese * 7.00\n    cheese_cost = total_cheese * 3.00\n\n    # Calculate the total cost of the meat and cheese\n    total_cost = meat_cost + cheese_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of corns at Allan's house\n    cannolis_corns = 40 / 2  # there is twice as much corn as cannolis\n\n    # Calculate the number of cannolis Allan bought at the store\n    cannolis_bought = 60\n\n    # Calculate the number of corns Allan bought at the store\n    corns_bought = cannolis_bought - 40  # 40 fewer corns than the number of cannolis\n\n    # Calculate the combined total of cannolis and corns\n    total_cannolis_corns = cannolis_corns + corns_bought\n    result = total_cannolis_corns\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of steps Elliott walks in a day\n    total_steps = 10000 * 7\n\n    # Calculate the number of steps Elliott finished on his walks to and from school\n    walks_to_school = total_steps / 2\n\n    # Calculate the number of steps Elliott finished on his short walk\n    short_walks = 1000\n\n    # Calculate the number of steps Elliott finished on his jog\n    jog_steps = total_steps - walks_to_school - short_walks\n\n    # Calculate the number of steps Elliott took during his jog\n    jog_steps = jog_steps\n\n    # Display the number of steps Elliott took during his jog\n    result = jog_steps\n    return result"}
{"output": "def solution():\n    # Calculate the total number of words in the book\n    total_words = 45 * 200\n\n    # Calculate the time it takes to read the book\n    time_to_read = total_words / 300\n\n    # Calculate the time it takes to get to the airport\n    time_to_airport = 60\n\n    # Calculate the time early to read the book\n    time_early = time_to_read - (time_to_read * 10)\n\n    result = time_early\n    return result"}
{"output": "def solution():\n    \n    # Define the number of employees hired and the hourly rate\n    num_employees = 40\n    hourly_rate = 15\n\n    # Calculate the total pay for May\n    may_pay = num_employees * hourly_rate * 40\n\n    # Calculate the number of employees' contracts expired in June\n    june_expired = num_employees * (1/4)\n\n    # Calculate the total pay for June\n    june_pay = june_expired * hourly_rate * 40\n\n    # Calculate the total pay for both employees\n    total_pay = may_pay + june_pay\n\n    # return the result\n    result = total_pay\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the taffy's sale\n    taffy_cost = 3 * 0.5  # Buy 1 pound at $3, get 1 pound 1/2 off\n\n    # Calculate the total cost of the taffy's sale\n    taffy_cost = taffy_cost + (2 * 0.5) + (4 * 0.25)  # Buy 1 pound at $3, get 2 pounds, and 4 magnets at $0.25 each\n\n    # Calculate the total cost of the seashells and magnets\n    seashell_cost = 1.5  # Buy 1 pound at $1.50\n    magnets_cost = 4 * 0.25  # Missnets at $0.25 each\n\n    # Calculate the total amount of money Sally has\n    total_money = taffy_cost + seashell_cost + magnets_cost\n\n    # Calculate how much money Sally has left\n    money_left = 10 - total_money\n    result = money_left\n    return"}
{"output": "def solution():\n    \n    package_price = 400\n    pack_price = package_price * 2\n    discount = 0.2\n    finale_price = 150\n    discounted_price = (package_price - discount) * (1 - discount)\n    total_price = discounted_price + finale_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of madeleine cookies Shannon wants to make\n    total_cookies = 30 * 12\n\n    # Define the number of madeleine cookies Shannon eats in the treat\n    treat_cookies = 2 * 12\n\n    # Define the number of cookies Shannon's recipe makes in 30 days\n    total_recipe_cookies = 1 * 12\n\n    # Calculate the number of dozens of cookies Shannon needs to make\n    dozens_needed = total_recipe_cookies / total_recipe_cookies\n\n    # Display the number of dozens of cookies Shannon needs to make\n    result = dozens_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of candles Marcy makes\n    total_candles = 50000\n\n    # Calculate the number of uncovered candles\n    uncovered_candles = total_candles * 0.99\n\n    # Calculate the number of non-expensive candles Marcy can make\n    non_expensive_candles = total_candles - uncovered_candles\n\n    # Calculate the number of non-expensive candles Marcy can make\n    non_expensive_candles = non_expensive_candles * 0.05\n\n    # Calculate the number of smell candles Marcy can make\n    smell_candles = non_expensive_candles * 0.05\n\n    # Calculate the number of smell candles\n    smell_candles = non_expensive_candles - smell_candles\n\n    # Display the number of smell candles\n    result = smell_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the regular price of each blouse\n    REGULAR_PRICE = 20\n\n    # Calculate the discounted price of each blouse\n    discounted_price = REGULAR_PRICE * 0.7\n\n    # Calculate the total cost of the discounted blouses\n    total_cost = discounted_price * 4\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tallest_trees = 30\n    shortest_trees = tallest_trees / 2\n    average_trees = tallest_trees + shortest_trees\n    joanne_apples = tallest_trees * 2\n    sister_apples = shortest_trees * 3\n    total_apples = 500\n    joanne_apples += joanne_apples\n    sister_apples += sister_apples\n    sister_apples -= sister_apples\n    average_trees = total_apples / 3\n    total_apples -= sister_apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the number of heads and bumps\n    heads = 180\n    bumps = 304\n\n    # Calculate the number of camels and dromedaries\n    camels = heads // 2\n    dromedaries = bumps // 1\n\n    # Display the number of dromedaries\n    result = dromedaries\n    return result"}
{"output": "def solution():\n    # Calculate the total distance traveled in the first 4 days\n    first_four_days_distance = 200 * 4\n\n    # Calculate the total distance traveled in the next two days\n    next_two_days_distance = 0.3 * 200 * 2\n\n    # Calculate the total distance made during the second week\n    second_week_days_distance = 300 * 2\n\n    # Calculate the total distance made during the two-week-long trip\n    total_distance = first_four_days_distance + next_two_days_distance + second_week_days_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    peter_locker = 5\n    zack_locker = peter_locker / 4\n    timothy_locker = zack_locker / 2\n    result = timothy_locker\n    return result"}
{"output": "def solution():\n    \n    stanley_elevation = 10000\n    gust_air_blew = 4000\n    oliver_elevation = 3000\n    total_elevation = stanley_elevation + oliver_elevation\n    climb_elevation = total_elevation - stanley_elevation\n    result = climb_elevation\n    return result"}
{"output": "def solution():\n    \n    first_bank_gift = 4000\n    second_bank_gift = first_bank_gift * 2\n    initial_amount = 5000\n    total_gift = first_bank_gift + second_bank_gift\n    final_amount = initial_amount + total_gift\n    result = final_amount\n    return result"}
{"output": "def solution():\n    \n    initial_cats = 50\n    cats_carried_away = 4 * 5\n    cats_remaining = initial_cats - cats_carried_away\n    cats_after_mouse = cats_remaining * (3/5)\n    cats_left = cats_remaining - cats_after_mouse\n    result = cats_left\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the first 6 months of the service\n    cost_first_6_months = 8 * 6\n\n    # Calculate the cost of the normal price after 8 months of the service\n    cost_normal_8_months = 12 * 8\n\n    # Calculate the cost of the service after 8 months of the service\n    cost_after_8_months = 14 * 8\n\n    # Calculate the total cost of the service\n    total_cost = cost_first_6_months + cost_normal_8_months + cost_after_8_months\n    result = total_cost\n    return result"}
{"output": "def solution():\n    tattered_jeans_cost = 28\n    jogger_jeans_cost = tattered_jeans_cost - 6\n    total_savings = 6\n\n    # Calculate the total cost of tattered jeans and jogger jeans\n    tattered_jeans_total = tattered_jeans_cost + jogger_jeans_cost\n    jogger_jeans_total = tattered_jeans_cost + jogger_jeans_total\n\n    # Calculate the amount saved from the jogger jeans\n    savings_from_jogger_jeans = total_savings / 3\n\n    # Calculate how much more jogger jeans Cole needs to buy\n    more_jogger_jeans = jogger_jeans_total - savings_from_jogger_jeans\n    result = more_jogger_jeans\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of each bus and the number of buses\n    BUS_CAPACITY = 60\n    NUM_BUSS = 4\n    NUM_BUSS = 4\n\n    # Define the capacity of each minibus and minivan\n    MINIBUSSE_CAPACITY = 30\n    MINIVAN_CAPACITY = 15\n\n    # Calculate the total capacity of the trip\n    total_capacity = NUM_BUSS * BUS_CAPACITY * NUM_BUSS\n\n    # Calculate the maximum number of employees that can be joined\n    max_employees = total_capacity - (6 * MINIBUSSE_CAPACITY) + (10 * MINIVAN_CAPACITY)\n\n    # Display the maximum number of employees that can be joined\n    result = max_employees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds Lillian builds and buys\n    birds_built = 3\n    birds_bought = 3\n\n    # Define the number of birds each bird feeder wants to attract\n    birds_attracted_per_feeder = 20\n\n    # Define the number of additional birds that Lillian prefer the feeders\n    additional_birds_per_feeder = 10\n\n    # Calculate the total number of birds that Lillian has\n    total_birds = (birds_attracted_per_feeder + additional_birds_per_feeder) * 2\n\n    # Calculate the number of additional birds that Lillian can expect to see in her garden\n    additional_birds_per_day = total_birds - additional_birds_per_feeder\n\n    # Return the result\n    result = additional_birds_per_day\n    return result"}
{"output": "def solution():\n    \n    bagel_price = 4\n    soup_price = bagel_price * 1.25\n    cake_price = bagel_price / 2\n    total_price = bagel_price + soup_price + cake_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    ticket_cost = 100\n    cards_sold = ticket_cost / 1.5\n    money_kept = ticket_cost / 3\n    money_left = money_kept - 50\n    starting_cards = money_left / cards_sold\n    result = starting_cards\n    return result"}
{"output": "def solution():\n    \n    total_guests = 36\n    hotdogs_needed = total_guests / 2\n    guests_with_second_hotdog = 40\n    guests_without_second_hotdog = total_guests - hotdogs_needed - guests_with_second_hotdog\n    result = guests_without_second_hotdog\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters in Indras' name\n    indras_name = 6\n\n    # Calculate the number of letters in Indras's sister's name\n    sister_name = (indras_name / 2) + 4\n\n    # Calculate the total number of letters in Indras and her sister's names\n    total_letters = indras_name + sister_name\n\n    # Display the total number of letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    pot_price = 120\n    mixing_bowl_price = 20\n    utensils_price = 5\n    discount = 0.2\n    total_price = pot_price + mixing_bowl_price + utensils_price\n    discounted_price = total_price * (1 - discount)\n    result = discounted_price\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    skipping_rope_price = 6\n    board_game_price = 11\n    playground_ball_price = 2\n\n    # Define the amount of money Dora has saved\n    savings = 2\n\n    # Define the amount of money Dora's mother gave her\n    mother_money = 16\n\n    # Calculate the total cost of the skipping rope, board game, and playground ball\n    total_cost = skipping_rope_price + board_game_price + playground_ball_price\n\n    # Calculate the remaining amount of money Dora needs to buy the skipping rope, board game, and playground ball\n    remaining_money = total_cost - savings - mother_money\n\n    # Display the remaining amount of money Dora needs to buy the skipping rope, board game, and playground ball\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dragons Prince Thaddeus slew\n    thaddeus_dragons = 100\n\n    # Calculate the number of dragons Prince Arthur slew\n    arthur_dragons = thaddeus_dragons * 0.75\n\n    # Calculate the number of dragons Prince Walter slew\n    walter_dragons = arthur_dragons * 2\n\n    # Calculate the number of dragons Prince Bruce slew\n    bruce_dragons = walter_dragons / 5\n\n    # Calculate the total number of dragons\n    total_dragons = thaddeus_dragons + arthur_dragons + walter_dragons + bruce_dragons\n\n    # Display the total number of dragons\n    result = total_dragons\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of gas and the number of containers\n    total_gas = 15 * 5\n    num_containers = 5\n\n    # Calculate the amount of gasoline needed for one container\n    gas_needed_per_container = total_gas / num_containers\n\n    # Calculate the amount of gasoline needed for Josey\n    josey_gas_needed = gas_needed_per_container * 4\n\n    # Convert the amount of gasoline needed to pints\n    josey_gas_needed_pints = josey_gas_needed / 8\n\n    # Display the amount of gasoline needed in pints\n    result = josey_gas_needed_pints\n    return result"}
{"output": "def solution():\n    \n    chips_price = 40\n    candy_price = 75\n    total_spent = 5\n    chips_bags = 3\n    remaining_money = total_spent - (chips_bags * chips_price)\n    candy_bars_price = candy_price / candy_price\n    result = candy_bars_price\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 25\n\n    # Define the number of lollipops Ray kept\n    lollipops_kept = 5\n\n    # Calculate the number of lollipops Ray has left\n    lollipops_left = initial_lollipops - lollipops_kept\n\n    # Calculate the number of lollipops each friend received\n    lollipops_per_friend = lollipops_left / 4\n\n    # Display the number of lollipops each friend received\n    result = lollipops_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the cake and the number of pieces per cake\n    cake_weight = 20\n    pieces_per_cake = 8\n\n    # Calculate the total number of pieces\n    total_pieces = pieces_per_cake * 2\n\n    # Calculate the weight of the remaining cake\n    remaining_cake_weight = cake_weight - total_pieces\n\n    # Display the weight of the remaining cake\n    result = remaining_cake_weight\n    return result"}
{"output": "def solution():\n    total_oranges = 34 + 22  # Sitti and Juris bought 34 oranges and 22 oranges\n    num_people = 6 + 1  # Sitti and Juris are sharing equally with 6 other friends\n\n    # Calculate the number of oranges each person will get\n    oranges_per_person = total_oranges // num_people\n    result = oranges_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of onions and the cost per pound of onions\n    ONIONS_PER_POUND = 2\n    ONION_COST = 2.00\n\n    # Define the number of people and the amount of onions\n    PEOPLE = 6\n    ONIONS_PER_POUND = 2\n\n    # Calculate the total cost of onions and the onions\n    onions_cost = ONIONS_PER_POUND * ONION_COST * PEOPLE\n    onions_cost += ONIONS_PER_POUND * ONION_COST\n\n    # Calculate the cost of the beef stock and the number of boxes of beef stock needed\n    beef_stock_cost = 2 * 2\n    beef_stock_boxes = 2\n\n    # Calculate the total cost per serving\n    total_cost = onions_cost + beef_stock_cost\n\n    # Round the result to the nearest integer\n    result = round(total_cost)\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to be driven to the theater\n    driving_time = 4\n\n    # Define the time it takes to be driven to the theater\n    travel_time = 5\n\n    # Calculate the time it takes to drive from Wayne's hotel\n    driving_time_to_hotel = driving_time * 4\n\n    # Calculate the time it takes to stay at Bernadette's hotel\n    bernadette_hotel_time = driving_time - driving_time\n\n    # Calculate the time it takes to stay at Bernadette at her high-rise apartment\n    bernadette_high_rise_time = driving_time * 4\n\n    # Calculate the total time\n    total_time = travel_time + bernadette_hotel_time + bernadette_high_rise_time\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the room in yards\n    room_length_yards = 3\n\n    # Convert the length of the room to feet\n    room_length_feet = room_length_yards * 3\n\n    # Calculate the perimeter of the room\n    room_perimeter = room_length_feet / 360\n\n    # Display the perimeter of the room\n    result = room_perimeter\n    return result"}
{"output": "def solution():\n    # Calculate the total number of beads bought by each sister\n    elizabeth_beads = 1 + 2  # Elizabeth bought 1 pack of red, 2 packs of clear beads\n    margareth_beads = 3 + 4  # Margareth bought 3 packs of blue, 4 packs of red beads\n    total_beads = elizabeth_beads + margareth_beads  # Total number of beads\n    beads_per_sister = 20  # Each pack of beads contains 20 pieces of beads\n    beads_difference = total_beads - beads_per_sister  # Calculate the difference in beads between the two sisters\n    result = beads_difference\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 40\n    baking_time = 3\n    oven_temp = initial_temp - (baking_time * 5)\n    window_open_time = 30\n    cool_down_time = 2 * 10\n    final_temp = window_open_time + cool_down_time\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes for Jon to run the swim\n    swim_time = 40\n\n    # Define the time it takes for Jon to run the bike ride\n    bike_time = 20\n\n    # Define the time it takes for Jon to run the run\n    run_time = 50\n\n    # Calculate the time it takes for Jon to run the swim\n    swim_time = swim_time * 1.1\n\n    # Calculate the time it takes for Jon to run the bike\n    bike_time = bike_time * 1.1\n\n    # Calculate the time it takes for James to run the run\n    run_time = run_time + bike_time + 5\n\n    # Calculate the total time it takes for Jon to run the run\n    total_time = swim_time + run_time + 10\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of Movie C in minutes\n    C_LENGTH = 1.25 * 60\n\n    # Calculate the length of Movie B in minutes\n    B_LENGTH = C_LENGTH + 5\n\n    # Calculate the length of Movie A in minutes\n    A_LENGTH = B_LENGTH / 4\n\n    # Display the length of Movie A in minutes\n    result = A_LENGTH\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to run the horse and the cost of a single bail of hay\n    time_per_mile = 30 / 60  # convert 30 minutes to hours\n    cost_per_bail = 3\n\n    # Calculate the number of bags of hay Michael eats\n    bags_of_hay = time_per_mile * 1/2\n\n    # Calculate the total cost of the hay\n    total_cost = bags_of_hay * cost_per_bail\n\n    # Calculate the amount of change Michael has after buying the hay\n    change = 6 * 5 - total_cost\n\n    # Display the change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs used in cases and loose in the cupboard\n    cases_eggs = 4 * 12\n    loose_eggs = 2\n\n    # Calculate the total number of eggs used\n    total_eggs = cases_eggs + loose_eggs\n\n    # Calculate the number of trays that can be put out\n    trays = total_eggs // 5\n\n    # Display the number of trays that can be put out\n    result = trays\n    return result"}
{"output": "def solution():\n    joey_points = 214\n    scrabble_points = 26\n    marcy_points = 225\n    marcy_points = 10\n\n    # Calculate the total points scored by Joey\n    total_points_scored = joey_points + scrabble_points + marcy_points\n\n    # Calculate how many points Joey is currently winning\n    joey_points_winning = total_points_scored - marcy_points\n    result = joey_points_winning\n    return result"}
{"output": "def solution():\n    # Calculate the total revenue from selling 17 sneakers on Monday\n    revenue_monday = 17 * 20\n\n    # Calculate the total revenue from selling 17 sneakers to the department store\n    revenue_department_store = 25 * (48 - 17)\n\n    # Calculate the total cost of the sneakers\n    total_cost = 576\n\n    # Calculate the total revenue from selling 17 sneakers to the department store\n    revenue_department_store = revenue_department_store * (48 - 17)\n\n    # Calculate the total profit\n    total_profit = revenue_monday + revenue_department_store\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of packets and the number of pieces of colors per packet\n    packets = 10\n    pieces_per_packet = 8\n\n    # Calculate the total number of pieces of colors\n    total_colors = (packets * pieces_per_packet) + (packets * pieces_per_packet)\n\n    # return the result\n    result = total_colors\n    return result"}
{"output": "def solution():\n    \n    super_ticket_price = 20\n    soda_price = 3\n    popcorn_price = soda_price - 1\n    regular_price = (super_ticket_price + soda_price + popcorn_price) / 2\n    result = regular_price\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost and the increased cost of filling each balloon\n    initial_cost = 900\n    increased_cost_per_balloon = 20\n\n    # Calculate the total cost of filling up 20 balloons\n    total_cost = initial_cost + (2 * increased_cost_per_balloon)\n\n    # Calculate the cost of filling 170 balloons after the price increase\n    cost_after_price_increase = total_cost - 170\n\n    # Return the result\n    result = cost_after_price_increase\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance traveled in the first 2 hours\n    distance_1 = 60 * 2\n\n    # Calculate the distance traveled in the second 1 hour\n    distance_2 = 30 * 1\n\n    # Calculate the total distance traveled\n    total_distance = distance_1 + distance_2\n\n    # Calculate the average speed\n    average_speed = total_distance / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sapphires and rubies\n    initial_sapphires = 8\n    initial_rubies = 2\n\n    # Define the value of each type of jenna's jewel\n    sapphire_value = 800\n    rubie_value = 1200\n\n    # Calculate the total value of the jenna's jewels\n    total_value = (initial_sapphires * sapphire_value) + (2 * rubie_value)\n\n    # Display the total value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    apples_per_day = 4\n    days = 30\n    total_apples = apples_per_day * days\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each raised bed\n    bed_width = 2\n    bed_length = 8\n    bed_height = 2\n\n    # Calculate the volume of each raised bed\n    bed_volume = bed_width * bed_length * bed_height\n\n    # Calculate the total volume of all raised beds\n    total_bed_volume = bed_volume * 10\n\n    # Calculate the total volume of potting soil needed\n    total_volume = total_bed_volume * 10\n\n    # Calculate the total cost of potting soil\n    potting_soil_cost = total_volume * 12\n\n    # return the result\n    result = potting_soil_cost\n    return result"}
{"output": "def solution():\n    \n    red_cards = 15\n    green_cards = red_cards * 1.6\n    yellow_cards = red_cards + green_cards\n    total_cards = red_cards + green_cards + yellow_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    katelyn_fairies = 50\n    friends_fairies = katelyn_fairies / 2\n    total_fairies = katelyn_fairies + friends_fairies\n    fairies_lew_away = 30\n    remaining_fairies = total_fairies - fairies_lew_away\n    result = remaining_fairies\n    return result"}
{"output": "def solution():\n    jennifer_puppies = 8\n    jennifer_spots = 3\n\n    brandon_puppies = 12\n    brandon_spots = 4\n\n    # Calculate the total number of puppies with spots\n    total_spots = jennifer_puppies + brandon_puppies\n\n    # Calculate the percentage of puppies with spots\n    percentage_spots = (total_spots / total_puppies) * 100\n    result = percentage_spots\n    return result"}
{"output": "def solution():\n    # Calculate the total weight of the sugar cubes\n    sugar_cubes_weight = 2 * 1\n\n    # Calculate the total weight of the carrots\n    carrots_weight = 4 * 12 * 75\n\n    # Calculate the total weight of the horses\n    total_weight = sugar_cubes_weight + carrots_weight\n\n    # Calculate the weight of the oats\n    oats_weight = total_weight - 2 * 75\n\n    result = oats_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the value of a aluminum can and a plastic bottle\n    ALUMUM_VALUE = 2\n    BRACETLE_VALUE = 3\n\n    # Define the number of aluminum cans and plastic bottles consumed per week\n    aluminum_cans_per_week = 3\n    plastic_bottles_per_week = 5\n\n    # Calculate Grayson's earnings per week\n    earnings_per_week = (aluminum_cans_per_week * ALUMUM_VALUE) + (plastic_bottles_per_week * BRACETLE_VALUE)\n\n    # Calculate Grayson's earnings per month\n    earnings_per_month = earnings_per_week * 4\n\n    # Display Grayson's earnings per month\n    result = earnings_per_month\n    return result"}
{"output": "def solution():\n    \n    frederick_plants = 10\n    toni_plants = frederick_plants * 1.6\n    shondra_plants = toni_plants - 7\n    result = shondra_plants\n    return result"}
{"output": "def solution():\n    \n    # Define Ali's initial amount of money\n    ali_money = 21\n\n    # Calculate Leila's amount of money\n    leila_money = 100 / 2\n\n    # Calculate Ali's current amount of money\n    ali_money = ali_money + leila_money\n\n    # Display Ali's current amount of money\n    result = ali_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the pizza delivery\n    delivery_cost = 15\n\n    # Calculate the amount of the tip\n    tip = delivery_cost * (1/5)\n\n    # Calculate the total amount to be paid\n    total_amount = delivery_cost + tip\n\n    # Display the total amount to be paid\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the initial distance and the number of spots fell back\n    initial_distance = 100\n    fell_back = 5\n\n    # Define the number of spots moved back before falling behind 3\n    moved_back = 2\n\n    # Define the number of spots jumped ahead\n    jumped_back = 1\n\n    # Calculate the total distance traveled\n    total_distance = initial_distance - fell_back + moved_back + jumped_back\n\n    # Display the total distance traveled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the total number of basketball cards\n    basketball_cards = 6 * 25\n\n    # Calculate the total number of baseball cards\n    baseball_cards = 5 * 40\n\n    # Calculate the total number of cards\n    total_cards = basketball_cards + baseball_cards\n\n    # Subtract the number of cards Miss Maria keeps\n    total_students = total_cards - 50\n\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    # Calculate the cost of Becky's apples before discount\n    becky_cost = 20 * 0.45\n\n    # Calculate the cost of Kelly's apples before discount\n    kelly_cost = 20 * 0.50\n\n    # Calculate the cost of Becky's apples after discount\n    becky_cost -= 1\n\n    # Calculate the cost of Kelly's apples after discount\n    kelly_cost -= 1\n\n    # Calculate the difference in cost between Kelly and Becky\n    cost_difference = kelly_cost - becky_cost\n\n    # Display the difference in cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rooms and the number of sheets per room\n    rooms = 80\n    sheets_per_room = 2\n\n    # Calculate the number of pillow cases per room\n    pillow_cases_per_room = 2 * sheets_per_room\n\n    # Calculate the number of towels per room\n    towels_per_room = 2 * pillow_cases_per_room\n\n    # Calculate the total number of pieces of laundry\n    total_laundry = rooms * sheets_per_room + pillow_cases_per_room + towels_per_room\n\n    # return the result\n    result = total_laundry\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of shoes\n    initial_shoes = 200\n\n    # Define the number of shoes received on Monday\n    monday_shoes = 5\n\n    # Define the number of shoes gained on Wednesday\n    wednesday_shoes = 15\n\n    # Define the number of shoes received on Friday\n    friday_shoes = 30\n\n    # Define the number of shoes received on Saturday\n    saturday_shoes = 180\n\n    # Calculate the number of shoes left on Sunday\n    sunday_shoes = initial_shoes - monday_shoes - wednesday_shoes - friday_shoes\n\n    # Display the number of shoes left on Sunday\n    result = sunday_shoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jars and cupcakes per jar\n    jars = 6\n    cupcakes_per_jar = 8\n\n    # Calculate the total number of cupcakes\n    total_cupcakes = jars * cupcakes_per_jar\n\n    # Calculate the number of pans needed\n    pans = total_cupcakes / 12\n\n    # Display the number of pans needed\n    result = pans\n    return result"}
{"output": "def solution():\n    \n    pen_price = 2\n    paper_price = 3 * pen_price - 1\n    total_cost = pen_price + paper_price\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    num_students = 30\n    pencils_per_student = 10\n    total_pencils = num_students * pencils_per_student\n    used_pencils = total_pencils * (1/5)\n    remaining_pencils = total_pencils - used_pencils\n    end_of_year_pencils = remaining_pencils * (1/3)\n    pencils_left = remaining_pencils - end_of_year_pencils\n    result = pencils_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Matt wants to eat\n    total_cookies = 5\n\n    # Calculate the number of carrot sticks he wants to eat\n    carrot_sticks = (total_cookies // 2) + 2\n\n    # Display the number of carrot sticks he wants to eat\n    result = carrot_sticks\n    return result"}
{"output": "def solution():\n    \n    shark_length = 10\n    remoras_length = 2 * 6\n    total_length = shark_length + remoras_length\n    percentage_of_body_length = (total_length / total_length) * 100\n    result = percentage_of_body_length\n    return result"}
{"output": "def solution():\n    # Calculate the number of students with desktop computers\n    desktop_computers = (3/4) * 20\n\n    # Calculate the total number of students at the grade level\n    total_students = desktop_computers + 20\n    result = total_students\n    return result"}
{"output": "def solution():\n    # Calculate the total time Jason spends walking in three weeks\n    total_walk_time = 240 * 3  # 240 minutes of walking for breaking in the new shoes, 3 weeks\n\n    # Calculate the time Jason spends walking each day\n    walking_time_per_day = total_walk_time / 4  # Jason walks 4 days a week to break in the new shoes\n    result = walking_time_per_day\n    return result"}
{"output": "def solution():\n    total_spent = 300\n    book_cost = 15\n    num_kids = 4\n\n    # Calculate the total number of books Sarah bought\n    total_books = total_spent - book_cost\n\n    # Calculate the number of books each child gets\n    num_books_per_child = total_books / num_kids\n    result = num_books_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of kids in Gina's class\n    total_kids = 32\n\n    # Define the number of allergic to dairy, peanuts, and both\n    dairy_allergic = 9\n    peanuts_allergic = 6\n    both_allergic = 3\n\n    # Calculate the number of allergic to any\n    any_allergic = total_kids - dairy_allergic - peanuts_allergic - both_allergic\n\n    # return the result\n    result = any_allergic\n    return result"}
{"output": "def solution():\n    num_groups = 3\n    num_employees_per_group = 200\n    num_tour_guides_per_group = 7\n\n    # Calculate the total number of employees\n    total_employees = num_groups * num_employees_per_group\n\n    # Calculate the total number of people going on the tour\n    total_people = total_employees * num_tour_guides_per_group\n    result = total_people\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the hotel\n    hotel_cost = 0.2 * 5000  # hotel is 20% more expensive than normal\n\n    # Calculate the total cost of the trip\n    total_cost = 5000 * 3 + hotel_cost  # plane tickets cost $5000 each and hotel costs $5000 per day for 3 days\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    ben_blue = 4\n    ben_yellow = 3\n    jasper_blue = ben_blue / 2\n    jasper_yellow = ben_yellow * 3\n    total_paint = jasper_blue + jasper_yellow\n    result = total_paint\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the 1959 penny\n    1959_weight = 48\n\n    # Calculate the weight of the 2010 penny\n    penny_2010_weight = 1959_weight * 0.75\n\n    # Calculate the combined weight of the two pennies\n    combined_weight = 1959_weight + penny_2010_weight + 1959_weight\n\n    # Display the combined weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    goal = 200\n    keegan_earnings = 83\n    tasha_earnings =91\n    total_earnings = keegan_earnings + tasha_earnings\n    remaining_goal = goal - total_earnings\n    result = remaining_goal\n    return result"}
{"output": "def solution():\n    \n    total_songs = 100\n    gabriel_songs = 20\n    luri_songs = gabriel_songs * 3\n    difference = luri_songs - gabriel_songs\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    oranges_picked = 60\n    bet_money = 10\n    fraction_eaten = 2/5\n    oranges_eaten = oranges_picked * bet_money\n    total_oranges_eaten = oranges_eaten * fraction_eaten\n    total_money = bet_money + total_oranges_eaten\n    result = total_money\n    return result"}
{"output": "def solution():\n    shoes_cost = 80  # Jillian's shoes cost $80\n    handbag_cost = 3 * shoes_cost - 20  # Jillian's handbag cost $20 less than 3 times as much as her shoes cost\n\n    # Calculate Jillian's bag cost\n    bag_cost = handbag_cost + shoes_cost\n    result = bag_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total distance James runs in a week\n    total_distance = 12 * 5  # James runs 12 miles a day for 5 days a week\n\n    # Calculate the total number of hours James runs in a week\n    total_hours = total_distance / 10  # James runs 10 miles an hour\n\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    horses = 4\n    oats_per_horse_per_meal = 5\n    meals_per_day = 2\n    total_meals_per_day = horses * meals_per_horse_per_meal * meals_per_day\n    total_days = 5\n    total_oats = total_meals_per_day * total_days\n    oats_per_bag = 50\n    bags_of_oats_needed = total_oats / oats_per_bag\n    result = bags_of_oats_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of puppies\n    total_puppies = 27\n\n    # Calculate the number of pomeranians\n    pomeranians = total_puppies * (2/3)\n\n    # Calculate the number of girl Pomeranians\n    girls = pomeranians / 3\n\n    # Display the number of girl Pomeranians\n    result = girls\n    return result"}
{"output": "def solution():\n    \n    southlandia_temp = 48\n    northlandia_temp = 21\n    idlandia_temp = -3\n    total_temp = southlandia_temp + northlandia_temp + idlandia_temp\n    average_temp = total_temp / 3\n    result = average_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the toy car and the initial savings\n    CAR_COST = 12\n    INITIAL_SAVINGS = 4\n\n    # Define the amount of money saved per day\n    SAVINGS_PER_DAY = 2\n\n    # Define the number of years it will take to save the toy car\n    years_to_save = 8\n\n    # Calculate the remaining amount of money\n    remaining_money = CAR_COST - INITIAL_SAVINGS\n\n    # Calculate the number of days it will take to save the remaining amount\n    days_to_save = remaining_money / SAVINGS_PER_DAY\n\n    # Display the number of days\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    eggs_per_tray = 24  # Each tray can hold 24 eggs\n    total_eggs = 64  # Jaime has 64 eggs\n    trays = 2  # Jaime has 2 trays\n\n    # Calculate the total number of eggs Jaime can place on the trays\n    total_trays = trays * eggs_per_tray\n\n    # Calculate the number of eggs Jaime won't place on the trays\n    eggs_left = total_eggs - total_trays\n    result = eggs_left\n    return result"}
{"output": "def solution():\n    \n    small_pizza_price = 8\n    family_size_pizza_price = 3 * small_pizza_price\n    total_cost = small_pizza_price + family_size_pizza_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of razors and the cost per pack\n    razors_per_pack = 4\n    cost_per_pack = 4.00\n\n    # Define the number of packs of razors Heather buys\n    packs_of_razors = 2\n\n    # Calculate the total cost of the razors before the discount\n    total_cost_before_discount = razors_per_pack * cost_per_pack\n\n    # Calculate the total cost of the razors after the discount\n    total_cost_after_discount = total_cost_before_discount - 2.00\n\n    # Calculate the cost per razor after the discount\n    cost_per_razor_after_discount = total_cost_after_discount / num_razors\n\n    # Return the result\n    result = cost_per_razor_after_discount\n    return result"}
{"output": "def solution():\n    # Calculate the total height of the human pyramid\n    human_pyramid_height = (9 * 64) + (10 * 60) + (4 * 3) + (2 * 2)  # 9 cheerleaders, 10 cheerleaders, 3 stand on top of 4, 2 stand on top of 3, and the shortest girls are at the top\n    result = human_pyramid_height\n    return result"}
{"output": "def solution():\n    \n    work_hours_per_day = 8\n    walk_time_per_hour = 5\n    days = 5\n    total_work_hours = work_hours_per_day * days\n    total_walk_time = total_work_hours * walk_time_per_hour\n    result = total_walk_time\n    return result"}
{"output": "def solution():\n    brett_age = 14\n    angela_age_in_four_years = 3 * brett_age\n    angela_current_age = angela_age_in_four_years - 4\n    result = angela_current_age\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of driving the car for 14 days\n    morning_cost = 6 * 14  # cost of driving for 14 days\n    afternoon_cost = 2 * 14  # cost of driving for 14 days\n    total_cost = morning_cost + afternoon_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of oranges Ashley brought\n    ashley_oranges = 5 * 10\n\n    # Calculate the total number of oranges Brianne brought\n    brianne_oranges = ashley_oranges + 20\n\n    # Calculate the total number of oranges they can make\n    total_oranges = ashley_oranges + brianne_oranges\n\n    # Calculate the number of greek orange pies they can make\n    greek_orange_pies = total_oranges // 3\n\n    result = greek_orange_pies\n    return result"}
{"output": "def solution():\n    \n    # Define the flat fee and the price of the first venue\n    flat_fee = 200\n    venue1_price = 25\n\n    # Calculate the total cost of the first venue\n    venue1_total_cost = flat_fee\n\n    # Calculate the total cost of the second venue\n    venue2_total_cost = venue1_price + (vest1_price - venue2_total_cost)\n\n    # Calculate the number of guests needed to cover the total cost\n    guests_needed = venue1_total_cost / 5\n\n    # Display the number of guests needed\n    result = guests_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of insects Bodhi found\n    bodhi_insects = 43\n\n    # Calculate the number of insects David found\n    david_insects = bodhi_insects / 2\n\n    # Calculate the number of insects Lily found\n    lily_insects = david_insects + 7\n\n    # Display the number of insects Lily found\n    result = lily_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of yards used by Mariah and her grandma\n    mariah_to_grandma_ratio = 1/4\n    grandma_to_yards_ratio = 1/2\n\n    # Define the number of yards in a skein of yarn\n    yards_in_skein = 364\n\n    # Calculate the number of yards used by Mariah's grandma\n    mariah_yards = yards_in_skein * mariah_to_grandma_ratio\n\n    # Calculate the total number of yards used\n    total_yards = mariah_yards + grandma_yards\n\n    # Display the total number of yards used\n    result = total_yards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gifts needed for each friend\n    friend1 = 5\n    friend2 = 5\n    friend3 = 2\n\n    # Calculate the total number of gifts needed\n    total_gifts = (friend1 + friend2 + friend3) * 2\n\n    # Add the 10 more random gifts\n    total_gifts += 10\n\n    # Display the total number of gifts\n    result = total_gifts\n    return result"}
{"output": "def solution():\n    \n    chair_width = 3\n    rug_width = chair_width + 5\n    couch_width = 2 * rug_width + 2\n    result = couch_width\n    return result"}
{"output": "def solution():\n    num_packs = 4\n    grape_pack_price = 2\n    new_pack_price = grape_pack_price / 2\n    total_paid = 7\n\n    # Calculate the total cost of all packs of gum\n    total_gum_cost = num_packs * grape_pack_price\n\n    # Calculate the cost of each pack of strawberry gum\n    cost_per_pack = total_gum_cost / strawberry_packs\n    result = cost_per_pack\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Frederick can spend on wood\n    total_money = (200 * 2 * 4) + (400 * 2 * 8)\n\n    # Calculate the amount of money Frederick has left for buying the cheapest lumber\n    cheapest_lumber_money = 24\n\n    # Calculate the maximum number of popsicle sticks Frederick can make with the cheapest lumber\n    max_popsicle_sticks = total_money - cheapest_lumber_money\n\n    result = max_popsicle_sticks\n    return result"}
{"output": "def solution():\n    num_dogs = 6\n    num_legs_per_dog = 4\n    cost_per_snowshoe = 12.0\n\n    # Calculate the total number of legs needed for all dogs\n    total_legs = num_dogs * num_legs_per_dog\n\n    # Calculate the total number of snowshoes needed for all dogs\n    total_snowshoes = total_legs * cost_per_snowshoe\n    result = total_snowshoes\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each bus trip and the number of bus trips taken per week\n    BUS_TRIP_COST = 2.20\n    BUS_TRIPS_PER_WEEK = 5\n\n    # Define the number of days in a week\n    DAYS_PER_WEEK = 5\n\n    # Calculate the total cost of buying a weekly bus pass\n    weekly_bus_pass_cost = BUS_TRIP_COST * BUS_TRIPS_PER_WEEK * DAYS_PER_WEEK\n\n    # Calculate the amount saved by buying a weekly bus pass\n    amount_saved = weekly_bus_pass_cost - 20\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cows and sheep\n    cows = 30\n    sheep = 20\n\n    # Calculate the number of cows and sheep for the zoo\n    cows_zoo = cows * 2\n    sheep_zoo = sheep * 2\n\n    # Calculate the total number of animals\n    total_animals = cows_zoo + sheep_zoo\n\n    # Display the total number of animals\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    rose_onions = 12\n    rose_potatoes = 4\n    sophia_onions = rose_onions / 4\n    sophia_potatoes = rose_potatoes / 4\n    total_onions_and_potatoes = sophia_onions + sophia_potatoes\n    result = total_onions_and_potatoes\n    return result"}
{"output": "def solution():\n    # Calculate the total calories needed to reach the goal\n    total_calories_needed = 30 * 31 + 3500  # 30 lbs for July 19th, 31st is December 31st, and Andy needs to burn 3500 calories to burn a pound\n\n    # Calculate the amount of calorie deficit needed to reach the goal\n    calorie_deficit_needed = total_calories_needed / 3500  # Andy needs to burn 3500 calories to burn a pound\n\n    result = calorie_deficit_needed\n    return result"}
{"output": "def solution():\n    daily_pay = 30  # Gerald pays him $30 every day\n    weekly_spending = 100  # Gerald spent a total of $100\n    days_in_week = 7  # There are 7 days in a week\n\n    # Calculate the total amount Gerald pays in a week\n    total_pay = daily_pay * days_in_week\n\n    # Calculate the amount Gerald has left\n    remaining_money = weekly_spending - total_pay\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    water_per_kilometer = 60  # Hannah needs to drink 60 ml of water for each kilometer she runs\n    laps_per_kilometer = 8  # Hannah needs to run 8 laps\n    lap_distance = 0.25  # Each lap is 0.25 km\n\n    # Calculate the total distance Hannah needs to run\n    total_distance = laps_per_kilometer * lap_distance\n\n    # Calculate the total amount of water Hannah needs to drink\n    total_water = total_distance * water_per_kilometer\n    result = total_water\n    return result"}
{"output": "def solution():\n    initial_money = 500\n    clothes_spending = initial_money * 0.2\n    remaining_money = initial_money - clothes_spending\n    cds_spending = remaining_money * 0.25\n    remaining_money -= cds_spending\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    lot_cost = 120000\n    house_cost = 3 * lot_cost\n    result = house_cost\n    return result"}
{"output": "def solution():\n    num_packs = 8\n    canvas_bag_price = 4\n    num_bags_per_pack = 5\n    craft_food_price = 8\n\n    # Calculate the total cost of all canvas bags\n    total_canvas_bags_cost = num_packs * canvas_bag_price\n\n    # Calculate the total revenue from selling all canvas bags\n    total_revenue = num_bags_per_pack * craft_food_price\n\n    # Calculate the profit from selling all canvas bags\n    total_profit = total_revenue - total_canvas_bags_cost\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    punches_per_minute = 25\n    rounds_per_day = 5\n    rounds_per_fight = 3\n    total_rounds = rounds_per_day * 5\n    total_punches = total_rounds * punches_per_minute\n    result = total_punches\n    return result"}
{"output": "def solution():\n    \n    suzanne_cookies = 36\n    josh_cookies = suzanne_cookies / 4\n    kelsie_cookies = josh_cookies * 2\n    result = kelsie_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Ali has\n    initial_money = (4 * 10) + (6 * 20)\n\n    # Calculate the amount of money Ali gives to her sister\n    sister_money = initial_money / 2\n\n    # Calculate the remaining amount of money after giving to her sister\n    remaining_money = initial_money - sister_money\n\n    # Calculate the amount of money Ali uses to buy dinner\n    dinner_money = remaining_money * (3/5)\n\n    # Calculate the amount of money Ali has after buying the dinner\n    final_money = remaining_money - dinner_money\n\n    # Display the amount of money Ali has after buying the dinner\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    rob_time = 2 * 60  # convert 2 hours to minutes\n    royce_time = (2 * rob_time) + 40\n    result = royce_time\n    return result"}
{"output": "def solution():\n    num_grandchildren = 3\n    hat_wool = 2\n    scarf_wool = 4\n    sweater_wool = 12\n    mittens_wool = 1\n    socks_wool = 2\n\n    # Calculate the total amount of wool needed for all three grandchildren\n    total_wool = (hat_wool + scarf_wool + sweater_wool + mittens_wool + socks_wool) * num_grandchildren\n\n    result = total_wool\n    return result"}
{"output": "def solution():\n    total_problems = 100\n    monday_problems = 12\n    tuesday_problems = 3 * monday_problems\n    remaining_problems = total_problems - monday_problems - tuesday_problems\n    wednesday_problems = remaining_problems / 4\n    remaining_problems -= wednesday_problems\n    result = remaining_problems\n    return result"}
{"output": "def solution():\n    tony_rate = 6\n    bobby_rate = tony_rate - 1\n    kathy_rate = bobby_rate * 2\n    ricky_rate = kathy_rate - 2\n\n    # Calculate the total number of quarts of strawberries that Tony can pick\n    total_rate = tony_rate + bobby_rate + kathy_rate + ricky_rate\n    result = total_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of loaves of bread\n    initial_loaves = 200\n\n    # Calculate the number of loaves sold in the morning\n    morning_sold = 93\n\n    # Calculate the number of loaves sold in the afternoon\n    afternoon_sold = 39\n\n    # Calculate the total number of loaves sold\n    total_sold = morning_sold + afternoon_sold\n\n    # Calculate the number of loaves returned by the grocery store\n    grocery_loaves = 6\n\n    # Calculate the number of loaves left\n    loaves_left = initial_loaves - total_sold - grocery_loaves\n\n    # Display the number of loaves left\n    result = loaves_left\n    return result"}
{"output": "def solution():\n    \n    red_tulips_per_row = 6\n    blue_tulips_per_row = 8\n    red_tulips_bought = 36\n    blue_tulips_bought = 24\n    total_red_tulips = red_tulips_bought * red_tulips_per_row\n    total_blue_tulips = blue_tulips_bought * blue_tulips_per_row\n    total_rows = total_red_tulips + total_blue_tulips\n    result = total_rows\n    return result"}
{"output": "def solution():\n    \n    total_cups = 27\n    cups_per_batch = 3/4\n    cups_per_batch = total_cups * cups_per_batch\n    batches_of_oatmeal_cookies = cups_per_batch / cups_per_batch\n    result = batches_of_oatmeal_cookies\n    return result"}
{"output": "def solution():\n    daily_consumption = 12  # Ada's daily electric consumption is 12 kilowatts per hour\n    device_consumption = 2  # Ada is planning to add a device for 2 kilowatts per hour a day\n    hourly_rate = 1.5  # Ada's hourly rate is $1.50\n    days_in_week = 7  # Ada is planning to add a weekly electric bill\n\n    # Calculate the total consumption of the weekly electric\n    total_consumption = daily_consumption * days_in_week\n\n    # Calculate the total consumption of the new device\n    total_consumption = device_consumption * total_consumption\n\n    # Calculate the difference between the weekly electric consumption and the new device\n    difference = total_consumption - total_consumption\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people to paint in a whole house\n    PEOPLE = 5\n\n    # Define the number of hours it takes to paint one person in 5 days\n    HOURS_PER_PERSON = 60 / 5\n\n    # Calculate the total number of hours it would take to paint 5 people in 5 days\n    total_hours = PEOPLE * HOURS_PER_PERSON * 5\n\n    # Display the total number of hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sofas Ophelia has\n    ophelia_sofas = 20\n\n    # Calculate the number of chairs Jenna has\n    jenna_chairs = 3 * ophelia_sofas\n\n    # Calculate the number of sofas each person has\n    ophelia_sofas_per_person = ophelia_sofas / 2\n    jenna_sofas_per_person = jenna_chairs / 2\n\n    # Calculate the total number of sofas and chairs\n    total_sofas = ophelia_sofas_per_person + jenna_sofas_per_person\n    result = total_sofas\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the headphone set and the total amount paid\n    HEADPHONE_SET_COST = 4\n    TOTAL_PAID = 48\n\n    # Calculate the amount of CDs Tom can buy with the headphone set\n    headphone_cds = TOTAL_PAID - HEADPHONE_SET_COST\n\n    # Calculate the number of CDs Tom can buy with the headphone set\n    cds_bought = headphone_cds // 4\n\n    # Display the number of CDs Tom can buy\n    result = cds_bought\n    return result"}
{"output": "def solution():\n    # Calculate the total number of hours Josh spent working out in 8 weeks\n    total_hours = 4 + (5*2) + 6  # Josh spent 4 hours working out every week, 5 hours each for 2 consecutive weeks, 6 hours in one week\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of passengers\n    passengers = 48\n\n    # Calculate the number of passengers who got off from the bus\n    passengers_from_first_stop = 8\n\n    # Calculate the number of passengers who got off from the bus after the first stop\n    passengers_from_second_stop = passengers - 21\n\n    # Calculate the number of passengers who got off from the bus after the second stop\n    passengers_from_second_stop = passengers_from_second_stop * 5\n\n    # Calculate the final number of passengers who got on the bus after the second stop\n    passengers_after_second_stop = passengers_from_second_stop - 3 * passengers_from_second_stop\n\n    # Display the final number of passengers\n    result = passengers_after_second_stop\n    return result"}
{"output": "def solution():\n    jame_age = 27\n    jame_age_in_5_years = jame_age - 5\n    cousin_age_in_8_years = (jame_age + 8) * 2\n    cousin_age_in_5_years = cousin_age_in_8_years - 5\n\n    # Calculate the total age of the two\n    total_age = jame_age + cousin_age_in_5_years + cousin_age_in_5_years\n\n    # Calculate the number of years separate the age of the two\n    years_separate_age = total_age / 2\n    result = years_separate_age\n    return result"}
{"output": "def solution():\n    \n    computer_cost = 1100\n    printer_cost = computer_cost - 400\n    total_cost = computer_cost + printer_cost\n    num_monitors = 2\n    monitor_cost = total_cost / num_monitors\n    result = monitor_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of shells brought by the boys\n    boys_shells = 60 * 2\n\n    # Calculate the number of shells brought by the girls\n    girls_shells = boys_shells * 4\n\n    # Calculate the number of seashells brought by each girl\n    seashells_per_girl = girls_shells / 2\n\n    result = seashells_per_girl\n    return result"}
{"output": "def solution():\n    \n    george_candies = 3\n    nick_candies = george_candies * 2\n    result = nick_candies\n    return result"}
{"output": "def solution():\n    \n    # Define Chenny's age\n    chenny_age = 10\n\n    # Calculate Alyana's age\n    alyana_age = chenny_age - 4\n\n    # Calculate Anne's age\n    anne_age = alyana_age - 2\n\n    # Display Anne's age\n    result = anne_age\n    return result"}
{"output": "def solution():\n    \n    # Define the thickness of each book\n    book1_thickness = 31\n    book2_thickness = 50\n    book3_thickness = book2_thickness - 5\n    book4_thickness = book1_thickness * 2\n\n    # Calculate the total thickness of the four books\n    total_thickness = book1_thickness + book2_thickness + book3_thickness + book4_thickness\n\n    # Display the total thickness\n    result = total_thickness\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vlogs Emma can upload per month\n    VLOGS_PER_MONTH = 72\n\n    # Define the number of vlogs Emma made each week\n    vlogs_week1 = 18\n    vlogs_week2 = 21\n    vlogs_week3 = 15\n\n    # Calculate the total number of vlogs Emma needs to complete\n    total_vlogs = VLOGS_PER_MONTH - (vlogs_week1 + vlogs_week2 + vlogs_week3)\n\n    # Display the total number of vlogs Emma needs to complete\n    result = total_vlogs\n    return result"}
{"output": "def solution():\n    # Calculate the amount of the tip\n    tip = 0.2 * 50\n\n    # Calculate the total amount paid\n    total_paid = 50 + tip\n\n    result = total_paid\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money\n    initial_money = 18\n\n    # Add $5 to the eldest's share\n    eldest_money += 5\n\n    # Add $10 to the second day\n    second_day_money += 10\n\n    # Add $8 to the third day\n    second_day_money += 8\n\n    # Triple the amount he had left after spending the $8\n    remaining_money = initial_money - second_day_money\n\n    # Display the remaining amount of money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    target_amount = 1125\n    first_half_savings = target_amount / 2\n    second_half_savings = first_half_savings * 2\n    days_in_second_half = 4\n\n    # Calculate the amount Elvis needs to save per day in the second half of the month\n    savings_per_day = second_half_savings / days_in_second_half\n    result = savings_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each fruit\n    APPLE_PRICE = 1.5\n    ORANGE_PRICE = 0.8\n    PEACH_PRICE = 0.75\n\n    # Define the number of each fruit purchased\n    num_apples = 3\n    num_oranges = 5\n    num_peaches = 6\n\n    # Calculate the total cost of the fruit purchased\n    total_cost = (num_apples * APPLE_PRICE) + (num_oranges * ORANGE_PRICE) + (num_peaches * PEACH_PRICE)\n\n    # Calculate the change Verna received\n    change = 20 - total_cost\n\n    # Display the change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of Jairus and Jenny\n    jairus_price = 0.8\n    jenny_price = 0.5\n\n    # Define the number of tasks and the number of tasks completed\n    num_tasks = 20\n    num_tasks = num_tasks\n\n    # Calculate the total amount earned by Jairus and Jenny\n    total_earned = jairus_price * num_tasks + jenny_price * num_tasks\n\n    # Calculate the difference in earnings\n    earnings_difference = total_earned - total_earned\n\n    # return the result\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    total_dollars = 100\n    jeff_ratio = 4\n    brad_dollars = total_dollars / (jeff_ratio + brad_ratio)\n    jeff_dollars = jeff_ratio * brad_dollars\n    result = jeff_dollars\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Jeff walks in a week\n    daily_distance = 3 * 5  # Jeff walks 3 miles away and back each day for 5 times a week\n    weekly_distance = daily_distance * 5  # Jeff has to work 5 times a week\n    result = weekly_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters Elise writes in full twice\n    full_letters = 2\n\n    # Define the number of letters Elise writes in half of it once\n    half_letters = full_letters / 2\n\n    # Calculate the total number of letters Elise has written\n    total_letters = full_letters + half_letters\n\n    # Display the total number of letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of families Ali calls\n    ali_families = 3\n\n    # Define the number of families each family calls\n    family_families = 3\n\n    # Calculate the total number of families\n    total_families = ali_families + (3 * family_families)\n\n    # Display the total number of families\n    result = total_families\n    return result"}
{"output": "def solution():\n    \n    # Define Mark's initial weight and the weight loss per month\n    initial_weight = 70\n    weight_loss_per_month = 10\n\n    # Calculate Mark's final weight after 3 months\n    final_weight = initial_weight - (weight_loss_per_month * 3)\n\n    # Display Mark's final weight\n    result = final_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of toys James's play set has\n    play_set_toys = 80\n\n    # Calculate the number of toys Jonathan needs to make a sorted play set\n    toys_for_play_set = play_set_toys * 5\n\n    # Calculate the number of toys Jonathan needs to have\n    toys_needed = toys_for_play_set + 2\n\n    # Display the number of toys Jonathan currently has\n    result = toys_needed\n    return result"}
{"output": "def solution():\n    \n    notebook_price = 1.5\n    pen_price = 0.25\n    calculator_price = 12\n    geometry_set_price = 10\n    num_notebooks = 5\n    num_pens = 2\n    num_calculators = 1\n    num_geometry_sets = 1\n    discount = 0.1\n    total_price = (notebook_price * num_notebooks) + (pen_price * num_pens) + (calculator_price * num_calculators) + (geometry_set_price * num_geometry_sets)\n    discounted_price = total_price * (1 - discount)\n    result = discounted_price\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the hamburgers\n    hamburgers_cost = 5 * 4\n\n    # Calculate the total cost of the potato fries\n    fries_cost = 10 * 0.30\n\n    # Calculate the total cost of the fruit drinks\n    fruit_drinks_cost = 5 * 2\n\n    # Calculate the total cost of all the items\n    total_cost = hamburgers_cost + fries_cost + fruit_drinks_cost\n\n    # Calculate the change Carly gets back\n    change = 50 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of goods and commission rate\n    good_price = 1000\n    commission_rate = 0.3\n\n    # Calculate the commission earned by selling goods\n    good_commission = good_price * commission_rate\n\n    # Calculate the total earnings from selling goods\n    good_earnings = good_commission + (2500 - 1000) * commission_rate\n\n    # Calculate the amount Antonella earned\n    antonella_earnings = good_earnings\n\n    # Display the amount Antonella earned\n    result = antonella_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cases of water and bottles per case\n    cases = 2\n    bottles_per_case = 24\n\n    # Define the number of guests\n    num_guests = 70\n\n    # Calculate the total number of bottles needed\n    total_bottles = cases * bottles_per_case\n\n    # Calculate the number of additional bottles needed\n    additional_bottles = total_bottles - total_bottles\n\n    # return the result\n    result = additional_bottles\n    return result"}
{"output": "def solution():\n    \n    cold_time = 16\n    warm_time = 2 + 2 * cold_time\n    hot_distance = 3\n    hot_time = hot_distance * hot_time\n    time_difference = hot_time - cold_time\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define John's hourly rate and work hours per day\n    HOURLY_RATE = 2\n    WORK_HOURS_PER_DAY = 5\n\n    # Define John's working days per week\n    WORK_DAYS_PER_WEEK = 4\n\n    # Define John's total savings\n    TOTAL_SAVINGS = 80\n\n    # Calculate the total number of hours John works per week\n    weekly_hours = WORK_HOURS_PER_DAY * WORK_DAYS_PER_WEEK\n\n    # Calculate the number of weeks it will take John to save $80\n    weeks = TOTAL_SAVINGS / weekly_hours\n\n    # Display the number of weeks\n    result = weeks\n    return result"}
{"output": "def solution():\n    \n    fish_cost = 40\n    combo_cost = fish_cost * 3\n    total_cost = fish_cost + combo_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    buttons_in_bag = 21\n    buttons_with_two_holes = 7\n    buttons_with_four_holes = buttons_in_bag - buttons_with_two_holes\n    total_holes = buttons_with_two_holes + buttons_with_four_holes\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    timothy_locker = 24\n    zack_locker = timothy_locker / 2\n    peter_locker = zack_locker / 4\n    result = peter_locker\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cups Octavia drinks in a daily recommendation\n    cups_per_recommendation = 4\n\n    # Calculate the total number of cups Octavia drinks in a daily recommendation\n    cups_per_daily = cups_per_recommendation / 2\n\n    # Calculate the total number of cups Juan drinks in a contract\n    cups_by_contract = cups_per_daily * 10\n\n    # Calculate the number of cups Juan needs to reduce his daily coffee intake\n    cups_to_reduce = cups_by_contract\n\n    # Display the number of cups Juan needs to reduce\n    result = cups_to_reduce\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cages with 10 hamsters and 5 guinea pigs\n    cages_with_10_hamsters = 3\n    cages_with_5_guinea_pigs = 3\n\n    # Calculate the total number of hamsters\n    total_hamsters = cages_with_10_hamsters * 10\n\n    # Calculate the total number of guinea pigs\n    total_guinea_pigs = cages_with_5_guinea_pigs * 5\n\n    # Calculate the total number of rodents\n    total_rodents = 6 + total_hamsters + total_guinea_pigs\n\n    # Display the total number of rodents\n    result = total_rodents\n    return result"}
{"output": "def solution():\n    \n    mark_weight = 150\n    susan_weight = mark_weight - 20\n    bob_weight = susan_weight * 2\n    total_weight = mark_weight + susan_weight + bob_weight\n    num_friends = 3\n    average_weight = total_weight / num_friends\n    result = average_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial angle of the pyramids\n    initial_angle = 32\n\n    # Define the speed of the sun and the time it takes to move the sun\n    sun_speed = 5\n    time_to_move = 10\n\n    # Calculate the distance between the sun and the pyramid\n    distance_between_sun = sun_speed * time_to_move\n\n    # Calculate the total distance between the pyramids and the sun\n    total_distance = initial_angle + distance_between_sun\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    sons = 2\n    candles_per_son = 12\n    years_younger = 4\n    candles_per_pack = 5\n    cost_per_pack = 3\n    total_candles = sons * candles_per_son + years_younger + candles_per_pack\n    total_cost = total_candles * cost_per_pack\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of pages Judy read in the first week\n    pages_week1 = 15 * 7  # Judy read for 15 minutes each night, 7 days in a week\n\n    # Calculate the total number of pages Judy read in the second week\n    pages_week2 = 100\n\n    # Calculate the total number of pages Judy read in two weeks\n    pages_two_weeks = pages_week1 + (pages_week2 * 2.5)  # Judy can read 2 pages per 1.5 minutes\n\n    result = pages_two_weeks\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sandwiches\n    sandwiches = 12\n\n    # Calculate the number of sandwiches Cody ate\n    cody_sandwiches = sandwiches // 3\n\n    # Calculate the number of sandwiches Trevor ate\n    trevor_sandwiches = sandwiches // 4\n\n    # Calculate the number of sandwiches left\n    sandwiches_left = sandwiches - cody_sandwiches - trevor_sandwiches\n\n    # Display the number of sandwiches left\n    result = sandwiches_left\n    return result"}
{"output": "def solution():\n    \n    # Define Shiloh's current age\n    shiloh_age = 44\n\n    # Calculate the nephew's age in 7 years\n    nephew_age_in_7_years = shiloh_age + 7\n\n    # Calculate the nephew's current age\n    nephew_age = nephew_age_in_7_years - 7\n\n    # Display the nephew's current age\n    result = nephew_age\n    return result"}
{"output": "def solution():\n    # Calculate the amount of money the tooth fairy gave to Sharon for the first three teeth Sharon\n    money_given_first_three_teeth = 5.00 - 1.00  # $5.00 for each of the first three teeth Sharon lost\n\n    # Calculate the amount of money the tooth fairy gave to Sharon for each of the last 2 teeth Sharon lost\n    money_given_last_two_teeth = (1/2) * money_given_first_three_teeth\n\n    # Calculate the total amount of money the tooth fairy gave Sharon\n    total_money_given = money_given_first_three_teeth + money_given_last_two_teeth\n    result = total_money_given\n    return result"}
{"output": "def solution():\n    \n    richie_goals = 80\n    mark_goals = richie_goals + 20\n    anna_goals = richie_goals - 45\n    total_goals = richie_goals + mark_goals + anna_goals\n    result = total_goals\n    return result"}
{"output": "def solution():\n    # Calculate Liam's earnings\n    liam_earnings = 63\n\n    # Calculate Mitchell's earnings\n    mitchell_earnings = (21 * 4)\n\n    # Calculate the difference in earnings between Mitchell and Liam\n    earnings_difference = mitchell_earnings - liam_earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of money Peter has\n    total_money = 70\n\n    # Calculate the amount of money spent on wooden action figures\n    wooden_cost = 5 * 5\n\n    # Calculate the amount of money spent on plastic action figures\n    plastic_cost = 2 * 2\n\n    # Calculate the total number of action figures\n    total_action_figures = wooden_cost + plastic_cost\n\n    # Display the total number of action figures\n    result = total_action_figures\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the vaccines\n    vaccine_cost = 3 * 20\n\n    # Calculate the total cost of the kitten\n    kitten_cost = 200 - vaccine_cost - 12\n\n    result = kitten_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roses Ford grows per week\n    ROSES_PER_WEEK = 40\n\n    # Define the number of roses ordered by each flower shop\n    flower1_roses = 20\n    flower2_roses = 15\n    flower3_roses = 30\n\n    # Calculate the total number of roses ordered in a month\n    total_roses_per_month = (flower1_roses + flower2_roses + flower3_roses) * 4\n\n    # Calculate the number of roses Ford lacks to supply all the flower shops\n    roses_lack = total_roses_per_month - total_roses_per_month\n\n    # Display the number of roses Ford lacks\n    result = roses_lack\n    return result"}
{"output": "def solution():\n    \n    starting_balance = 3000\n    monthly_removal = 100\n    years = 2\n    remaining_balance = starting_balance - (monthly_removal * months)\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each loaf\n    LOAF_COST = 3.00\n    CHEESE_PRICE = 7.00\n\n    # Define the number of sandwiches sold\n    sandwiches_sold = 10\n\n    # Calculate the total cost of the cheeses\n    cheeses_cost = LOAF_COST * sandwiches_sold\n\n    # Calculate the total cost of the cheeses\n    cheeses_cost = cheeses_cost + 30.00\n\n    # Calculate the total revenue from selling the sandwiches\n    sandwich_revenue = sandwiches_sold * SANDWICH_PRICE\n\n    # Calculate the net profit\n    net_profit = sandwich_revenue - cheeses_cost\n\n    # Display the net profit\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    boxes = 3\n    crayons_per_box = 64\n    small_pieces = 8\n    muffins_made = small_pieces * muffins_made\n    price_per_muffin = 1.5\n    total_money = boxes * crayons_per_box * price_per_muffin\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the total area of the carpet\n    total_area = 18 * 12\n\n    # Calculate the area of the old carpet\n    old_carpet_area = 18 * 12\n\n    # Calculate the area of the carpet before the contractor\n    old_carpet_cost = old_carpet_area * 12\n\n    # Calculate the total cost of the carpet after the contractor\n    new_carpet_cost = new_carpet_area + 2\n\n    # Calculate the total cost of the carpet after the contractor\n    total_cost = old_carpet_cost + 34\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_birds = 50\n    day1_birds = 50\n    day2_birds = 120\n    day3_birds = 0\n    day4_birds = 120\n    day5_birds = 120\n    day6_birds = 20\n    day7_birds = 90\n    total_day1_birds = day1_birds + day2_birds + day3_birds + day4_birds + day6_birds + day7_birds\n    average_birds = total_birds / 7\n    result = average_birds\n    return result"}
{"output": "def solution():\n    \n    starting_value = 20\n    divided_by_5 = starting_value / 2\n    final_value = divided_by_5 - 12\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    boy_cards = 5\n    brother_cards = boy_cards - 3\n    total_cards = boy_cards + brother_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the actual temperature and the original temperature\n    actual_temp = 468\n    original_temp = 450\n\n    # Calculate the percentage of the original temperature to be set\n    percentage_to_set = (original_temp / actual_temp) * 100\n\n    # Display the percentage of the desired temperature\n    result = percentage_to_set\n    return result"}
{"output": "def solution():\n    \n    first_movie_length = 1 * 60 + 30\n    second_movie_length = 2 * 60 + 5\n    total_time = first_movie_length + second_movie_length\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define Herb's house value\n    herb_value = 76000\n\n    # Calculate Juan's house value\n    juan_house_value = herb_value * 0.7\n\n    # Calculate the total value of both houses\n    total_value = herb_value + juan_house_value\n\n    # Display the total value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    cups = 12\n    dishes = cups * 2\n    total_cups = 40\n    total_dishes = dishes + 20\n    total_utensils = total_cups + total_dishes\n    result = total_utensils\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of 2 boxes of contact\n    total_cost = 90 * 2 * 100 * 0.9  # 90 single use contacts come in 1 box, $100.00 per box, and currently 10% off\n    cost_per_contact = total_cost / 45  # divide the total cost by the number of days\n    result = cost_per_contact\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly wage of Jill and the number of hours worked by Jill\n    jill_wage = 10\n    jill_hours = 2 + 1\n\n    # Calculate the number of hours worked by John\n    john_hours = jill_hours * 2\n    john_wage = john_hours * 3\n\n    # Calculate the difference in earnings between John and Jill\n    earnings_difference = john_wage - jill_wage\n\n    # Return the result\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    calories_per_hour_aerobics = 500\n    hours_aerobics = 2\n    calories_burned_aerobics = 500\n    hours_running = 1\n    calories_burned_running = 600\n    ml_per_200_calories = 100\n    total_calories_aerobics = hours_aerobics * calories_burned_aerobics\n    total_calories_running = hours_running * calories_burned_running\n    total_calories_drunk = total_calories_aerobics + total_calories_running\n    ml_needed = total_calories_drunk / 200_calories\n    result = ml_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jelly beans in the jar\n    total_jelly_beans = 4500\n\n    # Calculate the number of blue jelly beans in the jar\n    blue_jelly_beans = total_jelly_beans * 0.9\n\n    # Calculate the number of red jelly beans in the jar\n    red_jelly_beans = blue_jelly_beans * 0.9\n\n    # Calculate the number of green jelly beans in the jar\n    green_jelly_beans = total_jelly_beans * 0.1\n\n    # Calculate the difference between the number of green jelly beans and the number of red jelly beans\n    difference = green_jelly_beans - red_jelly_beans\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    initial_speed = 47\n    increased_speed = 52\n    increase_factor = 5\n    new_speed = initial_speed + (increase_factor ** 2)\n    average_speed = (new_speed - initial_speed) / 3\n    result = average_speed\n    return result"}
{"output": "def solution():\n    # Calculate Martin's weight at the end of 5 weeks between the two breakfast options\n    weight_1 = 1.25 * 5  # Martin eats Cheerios every day for breakfast, he'll lose 1.25 pounds/week\n    weight_2 = 1.75 * 5  # Martin eats donuts every day for breakfast, he'll gain 1.75 pounds/week\n    weight_difference = abs(weight_1 - weight_2)  # Calculate the difference in his weight between the two breakfast options\n    result = weight_difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of seats needed\n    total_seats = 100 * 2 + 10 + 8  # 100 people invited via email, each invited person will also invite 2 friends, 10 friends invited too, and 8 of them will be bringing spouses\n    seats_needed = total_seats // 1  # integer division to get the number of seats needed\n    result = seats_needed\n    return result"}
{"output": "def solution():\n    # Calculate the weight of the Dachshund\n    dachshund_weight = 2 * 10  # Dachshund weighed twice as much as the Affenpinscher\n\n    # Calculate the weight of the Papillon\n    papillon_weight = dachshund_weight / 4  # Papillon weighed one-fourth as much as Dachshund\n\n    # Calculate the weight of the Mastiff\n    mastiff_weight = 44 * pachshund_weight  # Mastiff weighed 44 times the weight of the Papillon\n\n    # Calculate the total weight of all four dogs\n    total_weight = 10 + dachshund_weight + papillon_weight + mastiff_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    amazon_boots_cost = 16\n    amazon_shipping_cost = 4\n    ebay_boots_cost = 13\n    ebay_shipping_cost = 2 * amazon_boots_cost\n\n    # Calculate the total cost of all boots on Amazon.com\n    total_amazon_boots_cost = amazon_boots_cost + amazon_shipping_cost\n\n    # Calculate the total cost of all boots on eBay\n    total_ebay_boots_cost = ebay_boots_cost + ebay_shipping_cost\n\n    # Calculate the difference in cost between eBay and Amazon.com\n    cost_difference = total_ebay_boots_cost - total_amazon_boots_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial height of the beanstalk\n    initial_height = 4\n\n    # Calculate the final height of the beanstalk after the first discount\n    final_height = initial_height * 2\n\n    # Calculate the number of days it will take to be taller than the window\n    days = final_height / initial_height\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the cup of mushrooms and the amount of protein in the cup\n    mushrooms_weight = 100\n    protein_in_cup = 3\n\n    # Define the amount of mushrooms John eats every day\n    mushrooms_eaten_per_day = 200\n\n    # Calculate the total amount of mushrooms John eats in a week\n    total_mushrooms_eaten_per_week = mushrooms_eaten_per_day * 7\n\n    # Calculate the total amount of protein John eats in a week\n    total_protein = total_mushrooms_eaten_per_week / protein_in_cup\n\n    # Display the total amount of protein John eats per week\n    result = total_protein\n    return result"}
{"output": "def solution():\n    # Calculate Jerry's current age\n    jerry_age_now = 5 + 2  # Jerry was 5 years ago and he was 5 years ago\n\n    # Calculate Jerry's age in 3 years\n    jerry_age_in_3_years = jerry_age_now + 3\n    result = jerry_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    # Define the base price and the number of implants\n    base_price = 2000\n    num_implants = 2\n\n    # Define the feature cost and the deposit\n    feature_cost = 500\n    deposit = 600\n\n    # Calculate the total cost of all the implants\n    total_cost = base_price * num_implants + feature_cost\n\n    # Calculate the remaining balance\n    remaining_balance = total_cost - deposit\n\n    # Calculate the number of hours needed to pay for the dental work\n    hours_needed = remaining_balance / 15\n\n    # Return the result\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    smallest_angle = 180 / 2\n    largest_angle = smallest_angle * 3\n    result = largest_angle\n    return result"}
{"output": "def solution():\n    \n    quarters = 8\n    dimes = 6\n    nickels = 14\n    pennies = 15\n    total_quarters = quarters * 25\n    total_dimes = dimes * 10\n    total_nickels = nickels * 5\n    total_pennies = pennies * 1\n    total_price = total_quarters + total_dimes + total_nickels + total_pennies\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    dogs = 5\n    cats = 2\n    birds = 10\n    legs_per_dog = 4\n    legs_per_cat = 4\n    legs_per_bird = 4\n    total_legs = (dogs * legs_per_dog) + (cats * legs_per_cat) + (birds * legs_per_bird)\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    initial_weight = 8\n    increase_percent = 50\n    increase_amount = initial_weight * (increase_percent / 100)\n    new_weight = initial_weight + increase_amount\n    final_weight = new_weight + 2\n    result = final_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of games Steve buys each year\n    games_per_year_1 = 1\n    games_per_year_2 = 2\n    games_per_year_3 = 4\n\n    # Define the number of games Steve gets for Christmas each year\n    games_for_christmas = 5\n\n    # Calculate the total number of games Steve has after 3 years\n    total_games = (games_per_year_1 * 12) + (games_per_year_2 * 12) + (games_per_year_3 * 12) + games_for_christmas\n\n    # Display the total number of games\n    result = total_games\n    return result"}
{"output": "def solution():\n    distance = 1200\n    time_in_hours = 3\n    speed = distance / time_in_hours\n    additional_distance = 2000\n    additional_time = additional_distance / speed\n    result = additional_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pounds of chocolates Ruiz makes in the first hour\n    luiz_pounds_1 = 120\n\n    # Define the number of pounds of chocolates Marissa makes in the first hour\n    marissa_pounds_1 = (3/4) * luiz_pounds_1\n\n    # Define the number of hours worked\n    hours_worked = 12\n\n    # Calculate the total number of pounds of chocolates made in 12 hours\n    total_pounds = (luiz_pounds_1 + marissa_pounds_1) * hours_worked\n\n    # return the result\n    result = total_pounds\n    return result"}
{"output": "def solution():\n    \n    monday_spending = 8\n    tuesday_spending = monday_spending * 2\n    wednesday_spending = tuesday_spending * 4\n    total_spending = monday_spending + tuesday_spending + wednesday_spending\n    money_left = 100 - total_spending\n    result = money_left\n    return result"}
{"output": "def solution():\n    # Calculate the total amount earned from selling lemonade for 4 hours\n    price_per_cup_15 = 0.50 * 4\n    price_per_cup_10 = 0.60 * 2\n    total_earned = price_per_cup_15 * price_per_cup_15 + price_per_cup_10 * 6\n    result = total_earned\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Jeremy drives the tires in a month\n    JEREMY_ROTATIONS_PER_MONTH = 400\n\n    # Define the distance Jeremy drives each tire in a month\n    JEREMY_DISTANCE = JEREMY_ROTATIONS_PER_MONTH * 12\n\n    # Calculate the number of rotations Jeremy can travel in a month\n    JEREMY_ROTATIONS_PER_MONTH = JEREMY_DISTANCE // 2 * 725\n\n    # Calculate the number of years before the tire needs to be replaced\n    years_before_tire = JEREMY_ROTATIONS_PER_MONTH / 12\n\n    # Display the number of years before the tire needs to be replaced\n    result = years_before_tire\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the jumbo bottle and the number of pumps of shampoo used\n    BOTTLE_COST = 24.00\n    NUM_PUMPS = 2\n\n    # Define the number of washings needed\n    NUM_WASHINGS = 120\n\n    # Calculate the total number of pumps needed\n    total_pumps = NUM_PUMPS * NUM_WASHINGS\n\n    # Calculate the cost per pump in cents\n    cost_per_pump = BOTTLE_COST / total_pumps\n\n    # Display the cost per pump in cents\n    result = cost_per_pump\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Joe has\n    initial_money = 50\n\n    # Calculate the discounted price of the outfit\n    discounted_price = initial_money * 0.7\n\n    # Calculate the total cost of the outfit\n    total_cost = discounted_price + 35\n\n    # Calculate the amount of money Joe will have left after the purchase\n    money_left = initial_money - total_cost\n\n    # Display the amount of money Joe will have left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of butter needed to make 1 dozen croissants\n    butter_per_dozen = 0.25\n\n    # Define the number of dozens of croissants Juan wants to start with\n    dozens_per_day = 4\n    days_per_week = 7\n\n    # Calculate the total amount of butter needed for the croissants\n    total_butter = dozens_per_day * butter_per_dozen * croissants_per_dozen * days_per_week\n\n    # return the result\n    result = total_butter\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per meter and the length of Monica's street\n    COST_PER_METER = 198\n    MONICA_STICKET_LENGTH = 150\n\n    # Define the length of Lewis' street\n    LWIS_STICKET_LENGTH = 490\n\n    # Calculate the total length of Monica's street\n    monica_street_length = MONICA_STICKET_LENGTH + MONICA_STICKET_LENGTH\n\n    # Calculate the total cost to repave Lewis' street\n    lewis_street_cost = LWIS_STICKET_LENGTH * COST_PER_METER\n\n    # Calculate the difference in cost\n    cost_difference = lewis_street_cost - monica_street_cost\n\n    # Display the cost difference\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    initial_funding = 100000\n    funding_increase = 0.5\n    funding_per_month_after_first_5 = initial_funding * (1 + funding_increase)\n    total_funding_after_first_5 = funding_per_month_after_first_5 * (1 + funding_increase)\n    total_research_cost = initial_funding + total_funding_after_first_5\n    result = total_research_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of meat consumed by the team\n    total_meat = 6 + 8 + (8 * 1)  # first player ate 6 ounces, second player ate 8 ounces, third player ate 1 pound, fourth and fifth players ordered vegetarian meals\n    result = total_meat\n    return result"}
{"output": "def solution():\n    \n    # Define the number of members in the group and the average number of posts per day\n    members = 1000\n    posts_per_day = 3\n\n    # Calculate the total number of posts in March\n    total_posts = members * posts_per_day * 7\n\n    # Display the total number of posts\n    result = total_posts\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weeks in a year\n    WEEKS_IN_YEAR = 52\n\n    # Define the number of gallons of water used per load\n    GALLONS_PER_LOAD = 20\n\n    # Define the cost of a gallon of water\n    GALLON_COST = 0.15\n\n    # Calculate the number of loads of laundry used in a year\n    loads_per_year = WEEKS_IN_YEAR / GALLONS_PER_LOAD\n\n    # Calculate the total number of loads of laundry used in a year\n    total_loads = loads_per_year * GALLONS_PER_YEAR\n\n    # Calculate the total cost of water for laundry in a year\n    total_cost = total_loads * GALLON_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    aquarium_cost = 10\n    rocks_cost = 2 * 2.5\n    coral_cost = 2 * 3\n    fish_cost = 20 * 0.5\n    total_cost = aquarium_cost + rocks_cost + coral_cost + fish_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the beanstalk in the first week\n    week1_height = 3\n\n    # Calculate the height of the beanstalk in the second week\n    week2_height = week1_height * 2\n\n    # Calculate the height of the beanstalk in the third week\n    week3_height = week2_height + 4\n\n    # Calculate the total height of the beanstalk after 3 weeks\n    total_height = week1_height + week2_height + week3_height\n\n    # Display the total height\n    result = total_height\n    return result"}
{"output": "def solution():\n    \n    # Define Prince's hourly wage and number of hours worked per day\n    HOURLY_WAGE = 15\n    HOURS_WORKED_PER_DAY = 10\n\n    # Define the weight of the bull\n    BULL_WEIGHT = 750\n\n    # Calculate Prince's daily earnings\n    daily_earnings = HOURLY_WAGE * HOURS_WORKED_PER_DAY\n\n    # Calculate the number of days it will take Prince to sell the meat\n    days_to_sell = BULL_WEIGHT / daily_earnings\n\n    # Display the number of days\n    result = days_to_sell\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and seats per row\n    rows = 4\n    seats_per_row = 18\n\n    # Calculate the total number of seats\n    total_seats = rows * seats_per_row\n\n    # Calculate the number of occupied seats\n    occupied_seats = total_seats // 4\n\n    # Calculate the number of remaining seats\n    remaining_seats = total_seats - occupied_seats\n\n    # Calculate the number of occupied seats\n    occupied_seats = remaining_seats // 3\n\n    # Calculate the number of students\n    students = remaining_seats - occupied_seats\n\n    # Display the number of students\n    result = students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of streetlights per pole and the number of intersections\n    STREETLIGHTS_PER_POUND = 4\n    NUM_INTERSECTIONS = 4\n\n    # Calculate the total number of poles\n    total_poles = NUM_INTERSECTIONS * 6\n\n    # Calculate the total number of functioning street lights\n    total_functioning_lights = total_poles * STREETLIGHTS_PER_POUND\n\n    # Subtract the number of streetlights from the total number of functioning street lights\n    total_functioning_lights -= 20\n\n    # Display the total number of functioning street lights\n    result = total_functioning_lights\n    return result"}
{"output": "def solution():\n    # Calculate the total number of DVDs played before break\n    total_DVDs = 1000 + 356 + 135\n    result = total_DVDs\n    return result"}
{"output": "def solution():\n    \n    weeks = 6\n    hours_per_week = 2\n    sessions_cost_per_hour = 125\n    total_hours = weeks * hours_per_week * sessions_cost_per_hour\n    total_cost = total_hours * sessions_cost_per_hour\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of gum pieces\n    initial_gum = 20\n\n    # Calculate the number of gum pieces Jim chews at the school day\n    school_gum = initial_gum // 2\n\n    # Calculate the number of gum pieces Jim chews on the way home\n    school_gum -= school_gum\n\n    # Calculate the number of gum pieces Jim chews on the way home\n    dinner_gum = 2\n\n    # Calculate the number of gum pieces Jim has left after dinner\n    remaining_gum = initial_gum - school_gum - dinner_gum\n\n    # Calculate the number of gum pieces Jim gives to his sister\n    sister_gum = remaining_gum / 2\n\n    # Calculate the final number of gum pieces Jim has left\n    final_gum = remaining_gum - sister_gum\n\n    # Display the final number of gum pieces Jim has left\n    result = final_gum\n    return"}
{"output": "def solution():\n    \n    current_age = 16 + 12\n    future_age = current_age + 4\n    result = future_age\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the baseball coaches\n    baseball_cost = 9 * 3\n\n    # Calculate the total cost of the basketball coaches\n    basketball_cost = 8 * 14\n\n    # Calculate the difference in cost between the basketball coaches and the baseball coach\n    difference = basketball_cost - baseball_cost\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and flowers per row\n    rows = 10\n    flowers_per_row = 20\n\n    # Calculate the total number of flowers in the garden\n    total_flowers = rows * flowers_per_row\n\n    # Calculate the number of flowers that have bloomed\n    bloomed_flowers = total_flowers * (4/5)\n\n    # Display the number of flowers that have bloomed\n    result = bloomed_flowers\n    return result"}
{"output": "def solution():\n    # Convert 1000kb to seconds\n    total_seconds = 1000 * 60\n\n    # Calculate Ashley's internet speed in Mb per hour\n    speed = total_seconds / 20\n\n    result = speed\n    return result"}
{"output": "def solution():\n    \n    first_three_days_cars = 10 * 3\n    remaining_days_cars = (10 - 4) * 2\n    total_cars = first_three_days_cars + remaining_days_cars\n    result = total_cars\n    return result"}
{"output": "def solution():\n    height = 40  # Adam's height is 40 inches\n    growth_rate = 2  # Adam grows 2 inches a year\n    height_needed = 4  # Adam needs to be 4 feet tall to ride it\n\n    # Calculate how many years until Adam is tall enough to ride the roller coaster\n    years_until_riding = height_needed - (height * growth_rate)\n    result = years_until_riding\n    return result"}
{"output": "def solution():\n    # Calculate the total revenue from selling 10 cars that cost $25,000 each\n    total_revenue = 10 * 25000\n\n    # Calculate the amount paid to acquire the cars\n    cars_payment = 0.3 * total_revenue\n\n    # Calculate the total commission\n    commission = 0.1 * total_revenue\n\n    # Calculate the total profit\n    total_profit = commission - cars_payment\n    result = total_profit\n    return result"}
{"output": "def solution():\n    # Calculate the number of riders who can stay upright on the wave\n    num_riders_upright = 0.25 * 100  # 25% of the riders can stay upright\n\n    # Calculate the number of women who can stay upright\n    num_women = 0.6 * 100  # 60% of 100 riders are women\n\n    # Calculate the number of men who can stay upright on the wave\n    num_men = 100 - num_women\n\n    result = num_men\n    return result"}
{"output": "def solution():\n    \n    diamond_jewell_price = 2000\n    gold_jewell_price = diamond_jewell_price * (4/5)\n    silver_jewell_price = gold_jewell_price - 400\n    total_price = diamond_jewell_price + gold_jewell_price + silver_jewell_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    snowflake_stamps = 16\n    truck_stamps = snowflake_stamps + 3\n    rose_stamps = truck_stamps - 9\n    total_stamps = snowflake_stamps + truck_stamps + rose_stamps\n    result = total_stamps\n    return result"}
{"output": "def solution():\n    \n    bob_distance = 75\n    tom_speed = 55\n    bob_distance_to_catch_up = bob_distance / tom_speed\n    time_to_catch_up = bob_distance / bob_speed\n    result = time_to_catch_up\n    return result"}
{"output": "def solution():\n    \n    naomi_fish = 17\n    darren_fish = naomi_fish - 6\n    tommy_fish = darren_fish + 3\n    result = tommy_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per class and the total number of classes\n    COST_PER_CLASS = 10\n    NUM_CLASSES = 10\n\n    # Calculate the total cost of the classes\n    total_cost = COST_PER_CLASS * NUM_CLASSES\n\n    # Calculate the cost of the remaining classes\n    remaining_cost = 60 - total_cost\n\n    # Calculate the number of classes who can miss before they won't sign him up again\n    num_missed_classes = remaining_cost // COST_PER_CLASS\n\n    # Display the number of missed classes\n    result = num_missed_classes\n    return result"}
{"output": "def solution():\n    \n    jewel_production = 50\n    julie_production = jewel_production * 2\n    total_production = jewel_production + julie_production\n    weekly_production = total_production * 7\n    result = weekly_production\n    return result"}
{"output": "def solution():\n    \n    paisley_distance = 4\n    reggie_distance = paisley_distance * 5\n    lynn_distance = reggie_distance - 3\n    result = lynn_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of apples and oranges\n    APPLE_PRICE = 5.20\n    ORANGE_PRICE = 3.30\n\n    # Define the quantities of apples and oranges\n    num_apples = 4\n    num_oranges = 3\n\n    # Calculate the total cost of 5 apples and 5 oranges\n    total_cost = (num_apples * APPLE_PRICE) + (num_oranges * ORANGE_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the hole\n    length = 6\n    width = 4\n    depth = 3\n\n    # Calculate the volume of the hole\n    volume = length * width * depth\n\n    # Calculate the time it will take to shovel the earth\n    time = volume * 3\n\n    # Display the time it will take to dig the hole\n    result = time\n    return result"}
{"output": "def solution():\n    base_price = 30000\n    extra_price = 7500\n    leather_seat_price = base_price / 3\n    running_board_price = leather_seat_price - 500\n\n    # Calculate the total cost of the two-ton truck\n    total_cost = base_price + extra_price + leather_seat_price + running_board_price\n\n    # Calculate the cost of the two-ton truck upgrade\n    upgrade_cost = 30000\n\n    # Calculate the cost of the two-ton truck upgrade\n    upgrade_cost = total_cost - upgrade_cost\n    result = upgrade_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Tim's salary and the percentage raise\n    salary = 20000\n    raise_percentage = 0.05\n\n    # Calculate Tim's salary after a 5% raise\n    salary_after_raise = salary * (1 + raise_percentage)\n\n    # Calculate Tim's salary after a bonus\n    salary_after_bonus = salary_after_raise / 2\n\n    # Calculate Tim's salary after a year\n    salary_after_year = salary_after_raise + salary_after_bonus\n\n    # Display Tim's salary after a year\n    result = salary_after_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of suits and dress pants purchased\n    num_suits = 10\n    num_dress_pants = 10\n\n    # Define the cost of each suit and dress shirt\n    suit_cost = 750\n    dress_pant_cost = suit_cost / 5\n\n    # Define the number of dress shirts purchased\n    num_dress_shirts = 10\n\n    # Define the cost of each dress shirt\n    dress_shirt_cost = 60\n\n    # Calculate the total cost of the suits and dress pants\n    total_cost = (num_suits * suit_cost) + (num_dress_pants * dress_shirt_cost)\n\n    # Calculate the total cost of everything\n    total_cost = total_cost + total_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the average number of political and weather news articles per day\n    political_articles_per_day = 20\n\n    # Define the average number of business news articles per day\n    business_news_articles_per_day = 10\n\n    # Define the number of days in the month\n    days_in_month = 28\n\n    # Calculate the total number of political and weather news articles published in February\n    total_political_weather_articles = political_articles_per_day * days_in_month\n\n    # Calculate the total number of business news articles published in February\n    total_business_news_articles = business_news_articles_per_day * days_in_month\n\n    # Calculate the total number of articles published in February\n    total_articles = total_political_weather_articles + total_business_news_articles\n\n    # return the result\n    result = total_articles\n    return result"}
{"output": "def solution():\n    \n    steve_age = 60\n    wife_age = steve_age + 4\n    mom_age = steve_age / 2\n    son_age = mom_age - 3\n    son_age_now = son_age + wife_age\n    result = son_age_now\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of flour in each bag and the number of portions\n    FLOUR_PER_BAG = 2\n    NUM_PORTIONS = 8\n\n    # Calculate the total amount of flour in three bags\n    total_flour = FLOUR_PER_BAG * NUM_PORTIONS\n\n    # Display the total amount of flour\n    result = total_flour\n    return result"}
{"output": "def solution():\n    # Calculate the distance Alisa biked\n    alisa_distance = 12 * 4.5\n\n    # Calculate the distance Stanley biked\n    stanley_distance = 10 * 2.5\n\n    # Calculate the total distance biked\n    total_distance = alisa_distance + stanley_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    soil_rate = 4\n    clay_rate = soil_rate / 2\n    soil_length = 24\n    clay_length = 8\n    total_soil_length = soil_length * soil_rate\n    total_clay_length = clay_length * clay_rate\n    total_time = total_soil_length + total_clay_length\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    classmates = 25\n    cupcakes_per_person = 2\n    total_cupcakes = classmates * cupcakes_per_person\n    result = total_cupcakes\n    return result"}
{"output": "def solution():\n    \n    initial_likes = 2000\n    weekly_increase = 70\n    new_likes = 20000\n    total_weeks = 3\n    total_increase = (weekly_increase * initial_likes) + (weekly_increase * new_likes)\n    total_likes = initial_likes + total_increase + new_likes\n    result = total_likes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price and discount\n    initial_price = 20\n    discount = 2\n\n    # Calculate the price after the first discount\n    price_after_discount = initial_price - discount\n\n    # Calculate the price after the second discount\n    price_after_discount = price_after_discount * 0.9\n\n    # Calculate the final price after the second discount\n    final_price_after_discount = price_after_discount - price_after_discount\n\n    # Calculate the difference between the final price and the final price\n    price_difference = final_price_after_discount - price_after_discount\n\n    # Display the difference\n    result = price_difference\n    return result"}
{"output": "def solution():\n    red_sales = 400\n    green_sales = red_sales / 2\n    first_month_sales = red_sales + green_sales\n    second_month_sales = (3/4) * first_month_sales\n    total_sales = first_month_sales + second_month_sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the first paid hour\n    cost_first_paid_hour = 15 * 2\n\n    # Calculate the cost of the remaining hours\n    remaining_hours = 9 - 1\n\n    # Calculate the total cost of the carriage\n    total_cost = cost_first_paid_hour + remaining_hours * 2\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    starting_amount = 200\n    current_amount = 420\n    remaining_amount = starting_amount - current_amount\n    amount_to_withheld = remaining_amount - 300\n    result = amount_to_withheld\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and deviled egg halves needed\n    guests = 16\n    egg_halves_needed = 2 * guests\n\n    # Calculate the total number of eggs needed\n    total_eggs = egg_halves_needed * 12\n\n    # Display the total number of eggs needed\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    total_pages = 15  # Shiela is required to submit a 15-page research paper\n    writing_fraction = 1/3  # Shiela already written 1/3 of the paper\n\n    # Calculate the number of pages Shiela has left to write\n    pages_left = total_pages - (total_pages * writing_fraction)\n    result = pages_left\n    return result"}
{"output": "def solution():\n    \n    pages_per_day = 10\n    total_pages = 200\n    days_until_deadline = 30\n    pages_read_per_day = pages_per_day * days_until_deadline\n    days_before_deadline = total_pages / pages_read_per_day\n    result = days_before_deadline\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the plane and the monthly rent and fuel\n    plane_cost = 150000\n    monthly_rental_cost = 5000\n    fuel_cost = 2 * monthly_rental_cost\n\n    # Calculate the total cost of the plane for the first year\n    total_cost = plane_cost + (monthly_rental_cost * 12) + (fuel_cost * 12)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    rice_time = 30\n    pork_time = rice_time + 20\n    beans_time = (rice_time + pork_time) / 2\n    total_time = rice_time + pork_time + beans_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    almonds_cost = 10\n    walnuts_cost = 15\n    mixture_1_2_pound = 1/2\n    mixture_2_walnuts_cost = 15\n    mixture_3_pound = 1/5\n    mixture_3_pound = 1/3\n    total_cost = (mixture_1_2_pound * almonds_cost) + (mixture_1_2_pound * walnuts_cost)\n    difference = total_cost - total_cost\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the number of sheep on Lee's farm\n    legs_on_farm = 70\n    legs_on_farm = legs_on_farm * 2\n    heads_on_farm = 20\n    sheep_on_farm = legs_on_farm - legs_on_farm - heads_on_farm\n    result = sheep_on_farm\n    return result"}
{"output": "def solution():\n    \n    normal_price = 5\n    expensive_price = normal_price * 1.2\n    weekly_coffee_cost = weekly_coffee_cost * 7\n    donut_price = 2\n    total_cost = normal_price + expensive_price + donut_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_cost = 20\n    chips_cost = 2 * 2\n    chicken_cost = 8\n    soda_cost = 1\n    total_spent = chips_cost + chicken_cost + soda_cost\n    apple_pie_cost = total_cost - total_spent\n    result = apple_pie_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of newspapers delivered\n    total_newspapers = 600\n\n    # Define the number of newspapers delivered to District A\n    district_a_newspapers = 198\n\n    # Define the number of newspapers delivered to District C\n    district_c_newspapers = 209\n\n    # Calculate the number of newspapers delivered to District B\n    district_b_newspapers = total_newspapers - district_a_newspapers - district_c_newspapers\n\n    # return the result\n    result = district_b_newspapers\n    return result"}
{"output": "def solution():\n    \n    class_meets_per_week = 4\n    class_hours_per_class = 2\n    weeks = 6\n    total_class_hours = class_meets_per_week * class_hours_per_class * weeks\n    recipe_time_per_recipe = 1.5\n    recipes_ learned = total_class_hours // recipe_time_per_recipe\n    result = recipes_learned\n    return result"}
{"output": "def solution():\n    \n    total_teachers = 150\n    history_teachers = total_teachers * 0.6\n    math_teachers = total_teachers - history_teachers\n    sleep_time = 6\n    total_sleep_time = math_teachers * sleep_time\n    result = total_sleep_time\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Aurelia has\n    aurelia_money = 120\n\n    # Calculate Kassidy's money\n    kassidy_money = aurelia_money * 3/4\n\n    # Calculate Rayna's money\n    rayna_money = kassidy_money + 60\n\n    # Calculate the total amount of money they have\n    total_money = aurelia_money + kassidy_money + rayna_money\n\n    # Calculate how much each person would have if they share equally\n    each_person_money = total_money / 2\n\n    # Display how much each person would have\n    result = each_person_money\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each quarter in minutes\n    QUARTER_LENGTH = 12\n\n    # Calculate the total length of the four quarters in minutes\n    total_length = 4 * QUARTER_LENGTH * 4\n\n    # Calculate the length of the fourth game in minutes\n    fourth_game_length = total_length - 5\n\n    # Display the length of the entire game\n    result = fourth_game_length\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of employees in the company\n    total_employees = 50\n\n    # Calculate the number of employees who are management\n    management_employees = total_employees * 0.2\n\n    # Calculate the number of employees who oversee\n    oversee_employees = total_employees * 0.3\n\n    # Display the number of employees who oversee\n    result = oversee_employees\n    return result"}
{"output": "def solution():\n    flour_per_muffin = 5\n    sugar_per_muffin = 3\n    salt_per_muffin = 0.25\n    num_muffins = 16\n\n    # Calculate the total tablespoons of flour needed for 16 muffins\n    total_flour = flour_per_muffin * num_muffins\n\n    # Calculate the total tablespoons of sugar needed for 16 muffins\n    total_sugar = sugar_per_muffin * num_muffins\n\n    # Calculate the total tablespoons of salt needed for 16 muffins\n    total_salt = salt_per_muffin * num_muffins\n\n    # Calculate the total tablespoons of dry ingredients needed\n    total_dry_ingredients = total_flour + total_sugar + total_salt\n    result = total_dry_ingredients\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of candy each person had\n    robert_candy = 3\n    cindy_candy = 5\n    aaron_candy = 4\n\n    # Calculate the total amount of candy\n    total_candy = robert_candy + cindy_candy + aaron_candy\n\n    # Calculate the amount of candy each person would have if they share equally\n    candy_per_person = total_candy / 2\n\n    # Display the amount of candy each person would have\n    result = candy_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and quantities of type A and type B\n    type_a_price = 0.5\n    type_b_price = 0.75\n    type_a_quantity = 7\n    type_b_quantity = 10\n\n    # Calculate the total cost of type A and type B\n    type_a_cost = type_a_price * type_a_quantity\n    type_b_cost = type_b_price * type_b_quantity\n\n    # Calculate the change Adam received\n    change = 15 - type_a_cost - type_b_cost\n\n    # return the result\n    result = change\n    return result"}
{"output": "def solution():\n    \n    total_good_days = 12\n    total_bad_days = 12\n    total_good_days = total_good_days - total_bad_days\n    good_days_bad_days = total_good_days - 8\n    total_good_days = good_days_bad_days * 3\n    good_days_left = total_good_days - good_days_bad_days - total_good_days\n    result = good_days_left\n    return result"}
{"output": "def solution():\n    \n    janey_books = 21\n    sally_books = (janey_books - 3) / 2\n    result = sally_books\n    return result"}
{"output": "def solution():\n    \n    # Define the growth rate of the bamboo in inches per day\n    GROWTH_RATE = 30\n\n    # Define the height of the bamboo in feet\n    height_feet = 20 * 12\n\n    # Calculate the number of days it will take to reach 600 inches\n    days = 600 / height_feet\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of toys\n    initial_toys = 4\n\n    # Define the number of dogs in the shelter\n    initial_dogs = 4\n\n    # Define the number of dogs in the shelter\n    final_dogs = 8\n\n    # Calculate the number of toys James has left\n    left_toys = initial_dogs + initial_dogs\n\n    # Calculate the number of toys James gets back to\n    back_toys = 2 * left_toys + 3\n\n    # Calculate the total number of toys James needs\n    total_toys = initial_toys + left_toys + back_toys\n\n    # Display the total number of toys needed\n    result = total_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the initial investment amount\n    initial_investment = 1200\n\n    # Calculate the amount Dylan invested\n    dylan_investment = initial_investment * (2/5)\n\n    # Calculate the remaining amount after Dylan's investment\n    remaining_amount = initial_investment - dylan_investment\n\n    # Calculate the amount Frances invested\n    frances_investment = remaining_amount * (2/3)\n\n    # Calculate the remaining amount after Frances invested\n    remaining_amount -= frances_investment\n\n    # Calculate the amount Skyler's investment\n    skyler_investment = remaining_amount\n\n    # Display the amount Skyler's investment\n    result = skyler_investment\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weeks of summer vacation\n    weeks_summer_vacation = 3\n\n    # Define the number of weeks of summer vacation\n    weeks_summer_vacation = weeks_summer_vacation + 5\n\n    # Calculate the total number of signatures collected\n    total_signatures = 20 + 44\n\n    # Calculate the number of afternoons collected\n    afternoons_collected = total_signatures // afternoons_collected\n\n    # Calculate the number of additional weeks they want to reach 100 signatures between them by the end of the summer\n    additional_weeks_collected = 100 - weeks_summer_vacation\n\n    # Display the number of additional weeks they want to reach 100 signatures\n    result = additional_weeks_collected\n    return result"}
{"output": "def solution():\n    \n    lorie_hourly_pay = 10\n    karen_hourly_pay = lorie_hourly_pay * 2\n    lorie_hours_per_day = 3\n    karen_hours_per_day = lorie_hours_per_day / karen_hourly_pay\n    karen_earnings_in_two_days = karen_hours_per_day * 2\n    result = karen_earnings_in_two_days\n    return result"}
{"output": "def solution():\n    \n    potatoes_made = 6\n    potatoes_left = 96 - potatoes_made\n    hash_browns_per_potato = 36\n    total_browns = hash_browns_per_potato * potatoes_left\n    result = total_browns\n    return result"}
{"output": "def solution():\n    \n    max_load = 700\n    adult_weight = 80\n    num_adults = 8\n    total_adult_weight = adult_weight * num_adults\n    max_load_exceeded = max_load - total_adult_weight\n    result = max_load_exceeded\n    return result"}
{"output": "def solution():\n    \n    katarina_cookies = 68\n    max_cookies = katarina_cookies - 5\n    monster_cookies = max_cookies + 12\n    summer_cookies = max_cookies + 23\n    total_cookies = katarina_cookies + max_cookies + monster_cookies + summer_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    final_length = 140  # The final design is 140cm long\n    original_length = final_length / 0.5  # Shania's original length is 50% of its original length\n    lace_trim = 20  # Shania adds 20cm to the bottom of the dress with a lace trim\n\n    # Calculate the original length of the dress\n    original_length = original_length + lace_trim\n    result = original_length\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to mow the lawn in \"turtle\" mode\n    turtle_time = 1\n\n    # Define the time it takes to mow the lawn in \"rabbit\" mode\n    rabbit_time = 40\n\n    # Calculate the time it takes to mow the lawn in \"turtle\" mode\n    turtle_time = turtle_time / 2\n\n    # Calculate the time it takes to mow the lawn in \"rabbit\" mode\n    rabbit_time = rabbit_time / 2\n\n    # Calculate the total time it takes to mow the lawn\n    total_time = turtle_time + rabbit_time\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    total_time = 30\n    library_time = 6\n    fire_station_time = 13\n\n    # Calculate the time it takes to get to school without being late\n    late_time = total_time - library_time - fire_station_time\n\n    result = late_time\n    return result"}
{"output": "def solution():\n    apple_weight = 1\n    apple_price = 4\n\n    banana_weight = 2\n    banana_price = 2\n\n    orange_weight = 2\n    orange_price = 3\n\n    # Calculate the total cost of apples\n    apple_cost = apple_weight * apple_price\n\n    # Calculate the total cost of bananas\n    banana_cost = banana_weight * banana_price\n\n    # Calculate the total cost of oranges\n    orange_cost = orange_weight * orange_price\n\n    # Calculate the total cost of all items\n    total_cost = apple_cost + banana_cost + orange_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    greta_cookies = 30\n    celinda_cookies = greta_cookies * 2\n    total_cookies = greta_cookies + celinda_cookies\n    eaten_cookies = 10\n    remaining_cookies = total_cookies - eaten_cookies\n    result = remaining_cookies\n    return result"}
{"output": "def solution():\n    \n    # Let x be the age of one set of twins\n    # Then the age of one set of triplets is x + 7\n    # The combined ages are 44, so x + (x + 7) = 44\n    # Simplifying the equation, we get 2x + 7 = 44\n    # Solving for x, we get x = 21\n\n    # Therefore, the age of one set of twins is 21\n    result = 21\n    return result"}
{"output": "def solution():\n    \n    math_homework = 20\n    reading_homework = 40\n    history_homework = 20\n    total_homework_time = math_homework + reading_homework + history_homework\n    hours_to_eat_dinner = 3 * 60\n    nap_time = total_homework_time - hours_to_eat_dinner\n    result = nap_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each lollipop and candy\n    LOLLIPOP_PRICE = 0.40\n    CANDY_PRICE = 3.20\n\n    # Define the number of lollipops and candies purchased\n    lollipops = 5\n    candies = 4\n\n    # Calculate the total cost of the lollipops\n    lollipop_cost = lollipops * LOLLIPOP_PRICE\n\n    # Calculate the total cost of the candies\n    candy_cost = candies * CANDY_PRICE\n\n    # Calculate the total cost of 10 lollipops and 10 candies\n    total_cost = lollipop_cost + candy_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of coins saved by Rong per month\n    rong_coins = 20\n\n    # Define the number of coins saved by Neil per month\n    neil_coins = (2/5) * rong_coins\n\n    # Calculate the total number of coins saved by Rong in 10 years\n    rong_total = rong_coins * 12 * 10\n\n    # Calculate the total number of coins saved by Neil in 10 years\n    neil_total = neil_coins * 12 * 10\n\n    # Calculate the total number of coins saved by both of them\n    total_coins = rong_total + neil_total\n\n    # Display the total number of coins saved\n    result = total_coins\n    return result"}
{"output": "def solution():\n    \n    vaccine_cost = 20\n    heartworm_cost = 0.6 * vaccine_cost\n    total_cost = vaccine_cost + heartworm_cost\n    money_left = 125 - money_left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each fruit\n    BANANA_PRICE = 0.5\n    APPLE_PRICE = BANANA_PRICE * 2\n    ORANGE_PRICE = BANANA_PRICE * 3\n\n    # Define the number of fruits in each crate\n    bananas = 5\n    apples = 12\n    oranges = 7\n\n    # Calculate the total cost of the fruits\n    total_cost = (bananas * BANANA_PRICE) + (apples * APPLE_PRICE) + (oranges * ORANGE_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    red_squares = 14\n    blue_squares = red_squares + 4\n    green_squares = blue_squares + 6\n    white_squares = green_squares - 12\n    total_squares = red_squares + blue_squares + green_squares + white_squares\n    result = total_squares\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and babies\n    adults = 42\n    babies = 15\n\n    # Define the number of high chairs\n    high_chairs = 8\n\n    # Calculate the number of regular chairs\n    regular_chairs = high_chairs * 5\n\n    # Calculate the total number of chairs\n    total_chairs = adults + babies + regular_chairs\n\n    # Calculate the number of chairs left to get\n    chairs_left = total_chairs - total_chairs\n\n    # Display the number of chairs left to get\n    result = chairs_left\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of deer and the percentage of bucks\n    total_deer = 50\n    bucks_percentage = 0.5\n\n    # Calculate the number of bucks\n    bucks = total_deer * bucks_percentage\n\n    # Calculate the number of 8 point bucks\n    8_point_bucks = bucks * 0.2\n\n    # Display the number of 8 point bucks\n    result = 8_point_bucks\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum threshold of school points\n    MIN_THRESHOLD = 400\n\n    # Calculate the number of points collected by Adam\n    adam_points = 50\n\n    # Calculate the number of points collected by Betty\n    betty_points = adam_points * 1.3\n\n    # Calculate the number of points collected by Marta\n    marta_points = betty_points * 3\n\n    # Calculate the total number of points collected\n    total_points = adam_points + betty_points + marta_points\n\n    # Calculate the minimum threshold of school points\n    minimum_threshold = MIN_THRESHOLD + total_points\n\n    # Calculate the number of points missing to go on the trip\n    missing_points = min_threshold - total_points\n\n    # Display the number of points missing\n    result = missing_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of children and grandchildren\n    num_children = 3\n    num_grandchildren = 3\n\n    # Define the number of babies of the grandchildren\n    num_babies_grandchildren = 3\n\n    # Calculate the number of babies of the grandchildren\n    num_babies_grandchildren = num_grandchildren * num_babies_grandchildren\n\n    # Calculate the number of great grand-babies for the family\n    num_great_grand_babies = num_babies_grandchildren * num_babies_grandchildren\n\n    # return the result\n    result = num_great_grand_babies\n    return result"}
{"output": "def solution():\n    # Calculate the amount Greta puts into her retirement account\n    retirement_amount = 0.5 * 2400\n\n    # Calculate the amount Greta uses for her monthly car payment\n    car_payment = 0.2 * 2400\n\n    # Calculate the total amount Greta puts into her retirement and paying for her car\n    total_retirement_and_pay = retirement_amount + car_payment\n\n    # Calculate the amount Greta has left to spend\n    amount_left = 2400 - total_retirement_and_pay\n    result = amount_left\n    return result"}
{"output": "def solution():\n    \n    total_pencils = 20\n    missing_pencils = 4\n    pairs_of_pencils = (total_pencils - missing_pencils) / 2\n    result = pairs_of_pencils\n    return result"}
{"output": "def solution():\n    \n    city_fireworks = 15 * 20\n    house_fireworks = city_fireworks * 0.4\n    hannah_fireworks = 3 * 5\n    total_fireworks = hannah_fireworks + house_fireworks\n    result = total_fireworks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and the number of friends\n    num_friends = 12 + 7\n    num_friends = 12 + 7\n\n    # Calculate the number of seats needed\n    num_seats = num_friends + num_friends\n\n    # Calculate the number of drinks needed\n    num_drinks = num_seats * 2\n\n    # Calculate the number of snacks needed\n    num_snacks = num_seats * 3\n\n    # Calculate the total cost of drinks and snacks\n    total_cost = num_drinks + num_snacks\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    gissela_truck = 4000\n    gordy_truck = gissela_truck + 800\n    total_gravel = 11600\n    gary_truck = total_gravel - gissela_truck - gordy_truck\n    result = gary_truck\n    return result"}
{"output": "def solution():\n    # Calculate the total number of dumplings cooked by Larry\n    total_dumplings = 8*3 + 6*3  # 8 males, including Larry, and 6 females, each with 3 dumplings\n    result = total_dumplings\n    return result"}
{"output": "def solution():\n    # Calculate the total ratio\n    total_ratio = 3 + 2\n\n    # Calculate the amount of money Gerald spent\n    gerald_spent = 10\n\n    # Calculate the amount of money Julia spent\n    julia_spent = 2 * gerald_spent\n\n    # Calculate the amount of money Gerald has left\n    gerald_left = gerald_spent - julia_spent\n\n    result = gerald_left\n    return result"}
{"output": "def solution():\n    cat_speed = 15  # feet per second\n    turtle_speed = cat_speed / 5  # feet per second\n    time = 40  # seconds\n\n    # Calculate the distance Martha's cat can crawl in 40 seconds\n    distance = cat_speed * time\n    result = distance\n    return result"}
{"output": "def solution():\n    \n    goal = 6300\n    raised_after_first_3_hours = 2100\n    raised_per_hour = goal - raised_after_first_3_hours\n    hours_needed = goal / raised_per_hour\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage of the water used from the Colorado River\n    CITY_PERCENTAGE = 40\n\n    # Calculate the percentage of the water used for industrial purposes\n    industrial_percentage = 80\n\n    # Calculate the percentage of the water used for non-industrial purposes\n    non_industrial_percentage = (100 - industrial_percentage) / CITY_PERCENTAGE\n\n    # Display the percentage of the water used for non-industrial purposes\n    result = non_industrial_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days in a week and the daily price\n    DAYS_IN_WEEK = 7\n    DAILY_PRICE = 12\n\n    # Calculate the total cost of tutoring for 2 weeks\n    total_cost = DAYS_IN_WEEK * DAILY_PRICE * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total quarts made in 48 hours\n    quarts_chocolate = 100 * 2  # 100 quarts of chocolate ice cream in 2 hours\n    quarts_vanilla = 50 * 4  # 50 quarts of vanilla ice cream in 4 hours\n    total_quarts = quarts_chocolate + quarts_vanilla\n    result = total_quarts\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    CROISSANT_PRICE = 3.00\n    CINNAMON_PRICE = 2.50\n    MINI_QUICH_PRICE = 4.00\n    BLUEBerry_MUFFIN_PRICE = 1.00\n\n    # Define the quantities of each item purchased\n    croissants = 5\n    cinnamon_rolls = 4\n    mini_quiches = 3\n    blueberry_muffins = 13\n\n    # Calculate the total cost of the purchase\n    total_cost = (croissants * CROISSANT_PRICE) + (cinnamon_rolls * CINNAMON_PRICE) + (mini_quiches * MINI_QUICH_PRICE) + (blueberry_muffins * BLUEBerry_MUFFIN_PRICE)\n\n    # Calculate the discount\n    discount = total_cost * 0.1\n\n    # Calculate the total bill\n    total_bill = c"}
{"output": "def solution():\n    \n    # Define the cost of each scoop\n    ICE_CREAM_COST = 1.5\n\n    # Define the number of scoops of ice cream\n    ice_cream_scoops = 2\n\n    # Define the number of scoops Erin had\n    erin_scoops = 6\n\n    # Calculate the total cost of the ice cream scoops\n    total_cost = erin_scoops * ICE_CREAM_COST\n\n    # Calculate the number of scoops of ice cream needed\n    ice_cream_scoops = total_cost - erin_scoops\n\n    # Display the number of scoops of ice cream needed\n    result = ice_cream_scoops\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of candy pieces\n    initial_candy = 100\n\n    # Define the number of candy pieces eaten by Ginger and Amy per day\n    ginger_candy_per_day = 4\n    amy_candy_per_day = 3\n\n    # Calculate the total number of candy pieces eaten by Ginger and Amy after two weeks\n    ginger_candy_total = (ginger_candy_per_day * 7) + (amy_candy_per_day * 7)\n\n    # Calculate the difference in candy pieces between Ginger and Amy\n    candy_difference = amy_candy_total - ginger_candy_total\n\n    # Display the difference in candy pieces\n    result = candy_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of mosaic tiles needed per square foot and the total area of the bathroom\n    tiles_per_sq_ft = 24\n    total_area = 36\n\n    # Calculate the total number of tiles needed\n    total_tiles = tiles_per_sq_ft * total_area\n\n    # Calculate the number of tiles needed\n    tiles_needed = total_tiles * tiles_per_sq_ft\n\n    # return the result\n    result = tiles_needed\n    return result"}
{"output": "def solution():\n    \n    cost_per_pound = 20\n    cost_per_pound_of_blueberries = 1.5\n    pounds_of_blueberries = 30\n    total_cost = cost_per_pound_of_blueberries * pounds_of_blueberries\n    savings = total_cost - cost_per_pound_of_blueberries\n    result = savings\n    return result"}
{"output": "def solution():\n    num_computers = 500\n    original_price = 700\n    new_price = original_price * 1.1\n\n    # Calculate the total cost of buying 500 computers at the new prices\n    total_cost = num_computers * new_price\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of cheese and ham in the omelet\n    cheese_weight = 2\n    cheese_calories_per_ounce = 120\n    ham_weight = cheese_weight / cheese_calories_per_ounce\n\n    # Define the weight of the omelet in the omelet\n    omelet_weight = 6\n\n    # Calculate the total number of calories in the egg omelet\n    egg_calories = egg_weight * cheese_calories_per_ounce\n\n    # Calculate the total number of calories in the omelet\n    omelet_calories = egg_calories * omelet_weight\n\n    # Display the total number of calories\n    result = omelet_calories\n    return result"}
{"output": "def solution():\n    \n    pencil_cost = 0.5\n    eraser_cost = 0.25\n    num_pencils = 6\n    num_erasers = 8\n    total_cost = (pencil_cost * num_pencils) + (eraser_cost * num_erasers)\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people and the percentage of people who receive interviews\n    total_people = 100\n    interviews_percentage = 0.3\n\n    # Calculate the number of people who receive interviews\n    interviews = total_people * interviews_percentage\n\n    # Calculate the number of people who receive a job offer\n    offer_people = total_people * 0.2\n\n    # Calculate the number of people who accept the position\n    position_people = offer_people / 3\n\n    # Display the number of people who accept the position\n    result = position_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sacks and the amount of rice per sack\n    num_sacks = 20\n    rice_per_sack = 25\n\n    # Calculate the total amount of rice given away\n    total_rice = num_sacks * rice_per_sack\n\n    # Calculate the amount of rice given to cousin and brother\n    cousin_brother_rice = total_rice - 3 * rice_per_sack\n\n    # Calculate the total amount of rice given to cousin and brother\n    total_given = cousin_brother_rice + 4 * rice_per_sack\n\n    # return the result\n    result = total_given\n    return result"}
{"output": "def solution():\n    \n    coco_crunch_boxes = 3\n    fruit_loops_boxes = 5\n    this_week_boxes = coco_crunch_boxes + fruit_loops_boxes\n    last_week_boxes = 4\n    difference = this_week_boxes - last_week_boxes\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the tap rates for each hand and the time raised\n    right_rate = 300\n    left_rate = 250\n    missed_rate = 200\n\n    # Define the time raised and the time raised\n    time_raised = 5\n    missed_time = 2\n\n    # Calculate the total taps during the hands\n    right_taps = right_rate * time_raised\n    left_taps = left_rate * time_raised\n\n    # Calculate the total taps during the middle foot\n    left_taps = left_rate * time_raised\n\n    # Calculate the total taps during the middle foot\n    left_taps = left_rate * time_raised\n\n    # Calculate the combined total taps\n    combined_taps = right_taps + left_taps + left_taps\n\n    # Display the combined total taps\n    result = combined_taps\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Ron does\n    initial_money = 450\n\n    # Define the amount of money Ron will fine for unauthorized road maintenance\n    unauthorized_money = 120\n\n    # Define the cost of each bucket of asphalt\n    asphalt_cost = 25\n\n    # Calculate the total cost of fixing the pothole\n    total_cost = initial_money + unauthorized_money + asphalt_cost\n\n    # Calculate the amount of money Ron saves by fixing the pothole\n    savings = total_cost - total_cost\n\n    # Display the amount of money Ron saves\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    normal_chairs = 170\n    baby_chairs = 23\n    normal_chairs -= 20\n    baby_chairs -= 13\n    total_chairs -= normal_chairs\n    result = total_chairs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per pizza\n    SLICES_PER_PIZZA = 12\n\n    # Calculate the total number of slices\n    total_slices = 4 * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by Bryce and 2 friends\n    slices_eaten_by_bryce = (2/3) * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by the two remaining friends\n    slices_eaten_by_friends = (2/3) * SLICES_PER_PIZZA\n\n    # Calculate the number of slices left\n    slices_left = total_slices - slices_eaten_by_friends - slices_eaten_by_friends\n\n    # Display the number of slices left\n    result = slices_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sausages eaten by the cat\n    cat_sausages = 9\n\n    # Define the number of sausages eaten by the dog\n    dog_sausages = (2/3) * cat_sausages\n\n    # Calculate the total time the cat takes\n    cat_time = cat_sausages * 30\n\n    # Calculate the total time the dog takes\n    dog_time = dog_sausages * 30\n\n    # Calculate the average time the two take the sausages eat\n    average_time = (cat_time + dog_time) / 2\n\n    # Display the average time\n    result = average_time\n    return result"}
{"output": "def solution():\n    \n    topher_length = 8 * 12 + 4\n    bobby_length = 9 * topher_length + 10\n    result = bobby_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students' and teachers' cars\n    num_students = 64\n    num_teachers = 32\n\n    # Define the number of students' and teachers' cars\n    num_students_cars = 64\n    num_teachers_cars = 32\n\n    # Calculate the number of students' and teachers' windows\n    num_students_windows = num_students / 4\n    num_teachers_windows = num_teachers * (3/4)\n\n    # Calculate the total number of windows\n    total_windows = (num_students_windows * 4) + (num_teachers_windows * 2)\n\n    # Display the total number of windows\n    result = total_windows\n    return result"}
{"output": "def solution():\n    # Calculate the total number of spools\n    total_spools = 15 + 45 + 40 + 50\n\n    # Calculate the percentage of spools that are blue\n    blue_percentage = (15 / total_spools) * 100\n    result = blue_percentage\n    return result"}
{"output": "def solution():\n    \n    total_people = 5000\n    voted_by_midday = total_people * (2/5)\n    remaining_people = total_people - voted_by_midday\n    voted_by_16 = remaining_people * (2/3)\n    not_voted_by_16 = remaining_people - voted_by_16\n    result = not_voted_by_16\n    return result"}
{"output": "def solution():\n    \n    pieces_per_day = 4\n    pieces_per_pack = 15\n    days = 30\n    total_pieces = pieces_per_day * days\n    packs_needed = total_pieces / pieces_per_pack\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of smores needed\n    total_smores = 9 * 2 + 6 * 1\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_smores / 3\n\n    result = total_boxes\n    return result"}
{"output": "def solution():\n    \n    dora_age = 15\n    father_age = 2 * dora_age + 8\n    mother_age = father_age - 4\n    total_age = dora_age + father_age + mother_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    num_siblings = 3\n    found_money = 20\n\n    # Calculate the total amount of money Greg has\n    total_money = found_money + (num_siblings * found_money)\n\n    # Divide the total money equally among the siblings\n    money_per_sibling = total_money / 2\n    result = money_per_sibling\n    return result"}
{"output": "def solution():\n    # Calculate the total weight of the books Cindy is carried\n    total_books_weight = 2 * 2 + 4 + 3 + 2 * 3  # Cindy carries all her books at once, French book weighs 4 pounds, English book weighs 3 pounds, History book weighs twice as much as English book\n    result = total_books_weight\n    return result"}
{"output": "def solution():\n    \n    total_voters = 100\n    votes_A = total_voters * 0.2\n    votes_B = votes_A * 1.5\n    votes_C = total_voters - votes_A - votes_B\n    result = votes_C\n    return result"}
{"output": "def solution():\n    \n    boris_apples = 100\n    beck_apples = boris_apples - 23\n    beck_apples -= 10\n    difference = beck_apples - boris_apples\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water Peter can make with each cube\n    giant_cube = 4\n    medium_cube = 2\n    small_cube = 1/2\n\n    # Define the number of each type of cube Peter can make\n    giant_cubes = 3\n    medium_cubes = 7\n    small_cubes = 8\n\n    # Calculate the total amount of water Peter can make\n    total_water = (giant_cubes * giant_cube) + (medium_cubes * medium_cube) + (small_cubes * small_cube)\n\n    # Calculate the amount of water Peter has left\n    water_left = 32 - total_water\n\n    # Display the amount of water Peter has left\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    clara_books = 20\n    steven_books = clara_books / 2\n    alice_books = steven_books + 6\n    difference = clara_books - alice_books\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a gallon jar and the cost difference between a gallon jar and a half-gallon jar\n    GALLON_PRICE = 5\n    GALLON_DIFFERENCE = 2\n\n    # Calculate the cost of a half-gallon jar\n    half_gallon_cost = GALLON_PRICE + GALLON_DIFFERENCE\n\n    # Calculate the total cost of 10-gallon jars\n    total_cost_10_gallons = 10 * HALF_GALLON_COST\n\n    # Calculate the total cost of 16 half-gallon jars\n    total_cost_16_gallons = 16 * HALF_GALLON_COST\n\n    # Calculate the total cost of all the jars\n    total_cost = total_cost_10_gallons + total_cost_16_gallons\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_students = 50\n    bake_likes = 10\n    basketball_likes = 5\n    music_likes = (total_students - bake_likes - basketball_likes) / 2\n    video_likes = music_likes - music_likes\n    result = video_likes\n    return result"}
{"output": "def solution():\n    \n    initial_birds = 12\n    scared_away = initial_birds * (1/3)\n    fearless_birds = 20\n    total_birds = initial_birds + scared_away + fearless_birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    total_students = 80\n    girls_percent = 40\n    girls_students = total_students * (girls_percent / 100)\n    boys_students = total_students - girls_students\n    boys_per_class = boys_students / 2\n    result = boys_per_class\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cake slices\n    initial_slices = 3\n\n    # Define the number of cake slices Mara has\n    initial_slices = 2\n\n    # Define the number of cake slices Mara tripled\n    tripled_slices = initial_slices * 3\n\n    # Define the number of cake slices Mara ate\n    eaten_slices = 2\n\n    # Define the number of cake slices Stole\n    stole_slices = 5\n\n    # Calculate the total number of cake slices\n    total_slices = initial_slices + tripled_slices - eaten_slices - stole_slices\n\n    # Display the number of cake slices remaining\n    result = total_slices\n    return result"}
{"output": "def solution():\n    # Calculate the total number of animals that need to be bathed\n    dog_animals = 8\n    cat_animals = 5\n    nails_animals = 3\n    wings_animals = 3\n    horses_animals = 12\n    total_animals = dog_animals + cat_animals + nails_animals + wings_animals + horses_animals\n\n    # Calculate the number of animals that need to be groomed each day\n    animals_per_day = total_animals / 7\n    result = animals_per_day\n    return result"}
{"output": "def solution():\n    \n    packs_bought = 3\n    pack_price = 1800\n    total_cost = packs_bought * pack_price\n    total_card_value = 4000 + 1000\n    average_card_value = 50\n    cards_sold = (total_cost + (cards_sold * average_card_value)) / 50\n    profit = total_card_value - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and children in the family\n    num_adults = 2\n    num_children = 2\n\n    # Define the fee for the first amusement park\n    adult_fee = 26\n    child_fee = 12\n\n    # Define the fee for the second amusement park\n    second_adult_fee = 14\n    second_child_fee = 10\n\n    # Calculate the total fee for the first amusement park\n    total_cost = (num_adults * adult_fee) + (num_children * child_fee)\n\n    # Calculate the savings for the second amusement park\n    savings = total_cost - total_cost\n\n    # return the result\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tomatoes sold per day and the cost per tomato vendor\n    TOMATOES_PER_DAY = 500\n    COST_PER_TOMATO_COST = 0.5\n\n    # Define the number of tomatoes sold per day and the selling price per new vendor\n    TOMATOES_PER_DAY = 500\n    VENDOR_PRICE = 0.4\n\n    # Calculate the cost per day and per week\n    cost_per_day = TOMATOES_PER_DAY * COST_PER_TOMATO_COST * 7\n    cost_per_week = cost_per_day * 7\n\n    # Calculate the amount saved per week\n    amount_saved_per_week = cost_per_week - cost_per_week\n\n    # Display the amount saved per week\n    result = amount_saved_per_week\n    return result"}
{"output": "def solution():\n    \n    sean_marbles = 56\n    cal_marbles = sean_marbles / 2\n    carl_marbles = 4 * sean_marbles\n    total_marbles = sean_marbles + cal_marbles\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of groups\n    total_students = 50\n    num_groups = 6\n\n    # Calculate the number of students in each group\n    group_size = total_students / num_groups\n\n    # Calculate the number of additional groups needed to form the students\n    additional_groups = group_size - group_size\n\n    # Display the number of additional groups needed\n    result = additional_groups\n    return result"}
{"output": "def solution():\n    # Calculate the total number of chairs rented during weekdays\n    weekday_rented = 60 * 5\n\n    # Calculate the total number of chairs rented during weekends\n    weekend_rented = 100 * 2\n\n    # Calculate the total number of chairs rented in two 4-week months\n    total_rented = weekday_rented + weekend_rented\n    result = total_rented\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of bananas\n    initial_bananas = 48\n\n    # Calculate the number of bananas stolen on the first day\n    day1_bananas = initial_bananas / 2\n\n    # Calculate the number of bananas stolen on the second day\n    day2_bananas = day1_bananas + 25\n\n    # Calculate the number of bananas stolen on the third day\n    day3_bananas = 6\n\n    # Calculate the total number of bananas added\n    total_bananas = day1_bananas + day2_bananas + day3_bananas\n\n    # Display the total number of bananas\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    num_roommates = 4\n    monthly_bill = 100\n    num_months = 12\n\n    # Calculate the total cost of electricity for all roommates\n    total_cost = num_roommates * monthly_bill * num_months\n\n    # Divide the total cost equally among the 4 roommates\n    cost_per_roommate = total_cost / num_roommates\n    result = cost_per_roommate\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of glasses and plates\n    initial_glasses = 8 * 12\n    initial_plates = 4 * 12\n\n    # Subtract the number of broken glasses and plates from the initial number of glasses and plates\n    final_glasses = initial_glasses - 10\n    final_plates = initial_plates - 6\n\n    # Display the final number of glasses and plates\n    result = final_glasses\n    return result"}
{"output": "def solution():\n    \n    small_sticker_1 = 30\n    small_sticker_2 = 40\n    large_sticker_1 = small_sticker_1 / 3\n    small_sticker_2 = small_sticker_2 / 3\n    lorraine_small_stickers = 30\n    lorraine_large_stickers = 40\n    lorraine_large_stickers = large_sticker_1 * 0.9\n    colleen_large_stickers = large_sticker_1 * 0.5\n    colleen_small_stickers = large_sticker_2 * 0.5\n    lorraine_large_stickers = large_sticker_2 * 0.5\n    colleen_large_stickers = large_sticker_2 * 0.5\n    total_buttons = lorraine_large_stickers + colleen_large_stickers + lorraine_large_stickers + colleen_large_stickers\n    result = total_buttons"}
{"output": "def solution():\n    \n    # Define the number of matches Joey played on Monday\n    monday_matches = 2\n\n    # Define the number of matches Joey played on Friday\n    friday_matches = 1\n\n    # Define the number of matches Joey played on Saturday\n    saturday_matches = monday_matches * 2\n\n    # Calculate the total number of matches Joey played in one week\n    total_matches = monday_matches + friday_matches + saturday_matches\n\n    # Display the total number of matches\n    result = total_matches\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people on the council\n    total_people = 33\n\n    # Calculate the number of votes against the council\n    against_votes = total_people // 3\n\n    # Calculate the number of votes in favor of the new regulation\n    favor_votes = against_votes * 2\n\n    # Display the number of votes in favor of the new regulation\n    result = favor_votes\n    return result"}
{"output": "def solution():\n    \n    small_students = 11\n    medium_students = small_students * 2\n    large_students = medium_students / 2\n    extra_large_students = large_students + 6\n    total_students = small_students + medium_students + large_students + extra_large_students\n    result = total_students\n    return result"}
{"output": "def solution():\n    original_price = 140  # The bag is marked $140\n    discount_percentage = 5  # The bag has a 5% discount\n    discount_amount = original_price * (discount_percentage / 100)  # Calculate the discount amount\n    discounted_price = original_price - discount_amount  # Calculate the discounted price\n    result = discounted_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of playlists and the length of each song\n    playlists = 20\n    song_length = 10\n\n    # Calculate the total length of the playlists\n    total_length = playlists * song_length\n\n    # return the result\n    result = total_length\n    return result"}
{"output": "def solution():\n    # Calculate the number of people who think horse #2 will win the big race\n    num_horse_2 = 0.2 * 50\n\n    # Calculate the number of people who did not win the big race\n    num_remaining = 50 - num_horse_2\n\n    # Calculate the number of people who think horse #7 will win the big race\n    num_horse_7 = 0.6 * num_remaining\n\n    # Calculate the number of people who think horse #12 will win the big race\n    num_horse_12 = num_remaining - num_horse_7\n\n    result = num_horse_12\n    return result"}
{"output": "def solution():\n    # Calculate the number of girls in the Pomeranians\n    girls = 6\n\n    # Calculate the number of pomeranians in the puppies\n    pomeranians = girls / 3\n\n    # Calculate the number of puppies in Jana's puppies\n    puppies = pomeranians * 2 / 3\n\n    result = puppies\n    return result"}
{"output": "def solution():\n    \n    # Define Jayden's starting amount of money\n    jayden_money = 70\n\n    # Calculate Ava's allowance\n    ava_allowance = jayden_money / 2\n\n    # Calculate the total amount of money Jayden has\n    total_money = jayden_money + ava_allowance\n\n    # Calculate the cost of the camera\n    camera_cost = 200\n\n    # Calculate the amount of money Jayden still needs to buy the camera\n    remaining_money = total_money - camera_cost\n\n    # Display the amount of money Jayden still needs to buy the camera\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    total_cases = 250\n    first_house_cases = total_cases / 2\n    third_house_cases = first_house_cases * 2\n    result = third_house_cases\n    return result"}
{"output": "def solution():\n    \n    leila_cucumber_cost = 3 * 2\n    jack_tomato_cost = 5 * 1\n    chase_lettuce_cost = 1 * 3\n    total_cost = leila_cucumber_cost + jack_tomato_cost + chase_lettuce_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    bananas = 200\n    pears = bananas * 1.45\n    total_fruits = bananas + pears\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Marissa had\n    initial_money = 80\n\n    # Calculate the amount of money Marissa had left after buying the ball\n    remaining_money = initial_money - initial_money\n\n    # Calculate the number of candy bars Marissa bought for Jimmy\n    candy_bars_bought = remaining_money / 5\n\n    # Display the number of candy bars Marissa bought for Jimmy\n    result = candy_bars_bought\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per kilogram of oranges\n    ORANGE_COST = 3\n\n    # Define the amount of juice needed per liter\n    juice_per_liter = 1\n\n    # Calculate the total amount of oranges needed\n    total_oranges = juice_per_liter * 5\n\n    # Calculate the total cost of the oranges\n    total_cost = total_oranges * ORANGE_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books Ezra read in one hour\n    EZRA_READ_TIME = 1\n\n    # Calculate the number of books Ahmed read in one hour\n    Ahmed_read_time = EZRA_READ_TIME / 2\n\n    # Calculate the number of books Ezra has read so far\n    Ezra_books_read = 300 + 150\n\n    # Calculate the total number of books they have read altogether\n    total_books_read = Ezra_books_read + Ahmed_read_time\n\n    # Display the total number of books they read\n    result = total_books_read\n    return result"}
{"output": "def solution():\n    # Calculate Tanya's earnings on Monday\n    monday_hours = 4 * 5\n\n    # Calculate Tanya's earnings on Wednesday\n    wednesday_hours = 2 * 2\n\n    # Calculate Tanya's total earnings for Monday\n    monday_earnings = monday_hours * 15\n\n    # Calculate Tanya's total earnings for Wednesday\n    wednesday_earnings = wednesday_hours * 5\n\n    # Calculate Tanya's total earnings for both days\n    total_earnings = monday_earnings + wednesday_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of vanilla and fruity scents\n    initial_vanilla_scents = 4\n    initial_fruity_scents = 8\n\n    # Define the number of vanilla and fruity scents sold by the end of the day\n    vanilla_sold = 5\n    fruity_sold = 2\n\n    # Calculate the number of vanilla and fruity scents sold\n    vanilla_sold = vanilla_scents - vanilla_sold\n    fruity_sold = fruity_scents - fruity_sold\n\n    # Calculate the difference between the number of vanilla and fruity scents sold\n    difference = vanilla_sold - fruity_sold\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    eggplants_sold = 20\n    eggplant_price = 3\n    corn_ears_available = 25\n    total_ears_needed = 135\n    total_price_per_ear = (eggplants_sold * eggplant_price) + (corn_ears_available * corn_price)\n    result = total_price_per_ear\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hours Tatiana has\n    total_hours = 7 + 5\n\n    # Calculate the number of hours Tatiana spends playing soccer\n    soccer_hours = (total_hours - 3) / 3\n\n    # Calculate the percentage of Tatiana spends playing soccer\n    soccer_percentage = (soccer_hours / total_hours) * 100\n\n    # Display the percentage of Tatiana spends playing soccer\n    result = soccer_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pencils\n    initial_pencils = 50\n\n    # Calculate the number of pencils given to Brandon\n    brandon_pencils = initial_pencils * (1/2)\n\n    # Calculate the number of pencils remaining after Brandon's share\n    remaining_pencils = initial_pencils - brandon_pencils\n\n    # Calculate the number of pencils given to Charlie\n    charlie_pencils = remaining_pencils * (3/5)\n\n    # Calculate the number of pencils kept by Anthony\n    kept_pencils = remaining_pencils - charlie_pencils\n\n    # Display the number of pencils kept\n    result = kept_pencils\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Jack drives and back\n    distance_driven = 75\n    distance_back = 150\n\n    # Calculate the time Jack spends at the museum\n    time_at_museum = distance_driven / distance_back\n\n    # Convert the time to hours\n    time_at_museum_hours = 6 * 60\n\n    # Calculate the time Jack gone from home\n    time_at_home = time_at_museum - time_at_museum_hours\n\n    # Display the time Jack gone from home\n    result = time_at_home\n    return result"}
{"output": "def solution():\n    num_cars = 57\n    num_motorcycles = 73\n    wheels_per_car = 4\n    wheels_per_motorcycle = 2\n    total_wheels = (num_cars * wheels_per_car) + (num_motorcycles * wheels_per_motorcycle)\n    remaining_wheels = 650 - total_wheels\n    result = remaining_wheels\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the laptop\n    original_price = 1000\n\n    # Calculate the discount amount\n    discount = original_price * 0.2\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies and the cost of a normal movie\n    num_movies = 600\n    normal_movie_cost = 10\n\n    # Calculate the number of movies in the series\n    num_series_movies = num_movies // 3\n\n    # Calculate the cost of the normal movie\n    normal_movie_cost = num_movies * normal_movie_cost\n\n    # Calculate the number of remaining movies\n    num_remaining_movies = num_movies - num_movies - num_series_movies\n\n    # Calculate the cost of the older movies\n    older_movie_cost = num_remaining_movies * 0.4\n\n    # Calculate the total cost of replacing the movies\n    total_cost = (num_normal_movies * normal_movie_cost) + (num_older_movies * older_movie_cost)\n\n    # Display the total cost of replacing the movies\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    peaches_price = 2\n    plums_price = 1\n    apricots_price = 3\n    peaches_weight = 6\n    plums_weight = 8\n    apricots_weight = 6\n    peaches_cost = peaches_price * peaches_weight\n    plums_cost = plums_price * plums_weight\n    apricots_cost = apricots_price * apricots_weight\n    total_cost = peaches_cost + plums_cost + apricots_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the time taken to hike and the speed of the drove\n    driving_time = 6\n    driving_speed = 50\n\n    # Define the time taken to hike and the speed of the hiking\n    hiking_time = 1.5\n    hiking_speed = (driving_time / 2) - 5\n\n    # Calculate the distance covered by the drove and hiking\n    distance_covered = (driving_time * driving_speed) + (hiking_time * hiking_speed)\n\n    # Display the distance covered\n    result = distance_covered\n    return result"}
{"output": "def solution():\n    \n    # Define the scores\n    enemy_score = 10\n    berry_score = 5\n    second_score = 30\n\n    # Calculate the number of enemies and berries collected by Ava\n    ava_enemies = emma_enemies + 8\n    emma_berries = emma_berries + 3\n\n    # Calculate the number of berries collected by Ava\n    ava_berries = emma_berries + 3\n\n    # Calculate the number of points collected by Ava\n    ava_points = ava_enemies * enemy_score\n\n    # Calculate the number of berries collected by Emma\n    emma_berries = emma_berries * berry_score\n\n    # Calculate the number of points collected by Ava\n    ava_second_points = ava_berries * berry_score\n\n    # Calculate the difference between Ava and Emma's scores\n    score_difference = abs(ava_points - emma_second_points"}
{"output": "def solution():\n    \n    total_pizzas = 4\n    total_cost = 64\n    cost_of_two_pizzas = 30\n    cost_of_other_pizzas = (total_cost - cost_of_two_pizzas) / 2\n    result = cost_of_other_pizzas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Chase and Rider ride their bikes each day\n    chase_rides = 5\n    rider_rides = 2 * chase_rides\n\n    # Calculate the total number of times they ride their bikes in a week\n    total_rides = (chase_rides + rider_rides) * 7\n\n    # Display the total number of times they ride their bikes in a week\n    result = total_rides\n    return result"}
{"output": "def solution():\n    \n    # Define the number of orange fish and white fish in Bob's pond\n    orange_fish = 7 - 3\n    white_fish = 4\n\n    # Calculate the total number of orange and white fish\n    total_orange_white = orange_fish * 2\n\n    # Calculate the total number of white fish\n    total_white_fish = white_fish + 17\n\n    # Display the total number of white fish\n    result = total_white_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the fuel efficiency in miles per gallon\n    efficiency = 10\n\n    # Define the regular gas price per gallon\n    regular_price = 3\n\n    # Define the distance between the home and office\n    distance = 5\n\n    # Calculate the total distance to be consumed\n    total_distance = distance * 2\n\n    # Calculate the total cost of the fuel for the week\n    total_cost = total_distance * efficiency * regular_price\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Carrie paid for lunch\n    total_money = 10*0.75 + 140*0.75*0.75*10  # she spent 3/5 of the 20enties and 3/5 of the quarters\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the total number of tomatoes and eggplants\n    total_tomatoes = 22 * 5  # 5 tomato plants yields 22 tomatoes each\n    total_eggplants = 4 * 8  # 8 eggplants yield 4 eggplants each\n    total_fruits = total_tomatoes + total_eggplants\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    total_tvs = 40\n    smart_tvs = total_tvs / 4\n    analog_tvs = total_tvs / 8\n    oled_tvs = total_tvs - smart_tvs - analog_tvs\n    result = oled_tvs\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the school trip\n    TRIP_COST = 300\n\n    # Define the initial amount of money John has\n    initial_money = 50\n\n    # Calculate the amount of money John has left after covering half the cost of the trip\n    remaining_money = TRIP_COST - initial_money\n\n    # Calculate the amount of money John is missing\n    missing_money = remaining_money - 300\n\n    # Display the amount of money John is missing\n    result = missing_money\n    return result"}
{"output": "def solution():\n    # Calculate the number of logs Carson needs to burn to catch up to freezing\n    total_temp = 45 + 33  # 45 degrees during the day, 33 degrees colder during the day\n    logs_needed = 32 - total_temp  # calculate the number of logs Carson needs to burn\n    result = logs_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people required to break into smaller groups and the number of groups formed\n    required_people = 90\n    smaller_groups = 9\n\n    # Calculate the number of groups that bring back 2 seashells each\n    seashells_per_group = (3/5) * required_people * 2\n\n    # Calculate the total number of seashells brought\n    total_seashells = seashells_per_group * 3\n\n    # Display the total number of seashells brought\n    result = total_seashells\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 172\n\n    # Calculate the number of people on the first stop\n    first_stop_people = initial_people - 47\n\n    # Calculate the number of people on the second stop\n    second_stop_people = initial_people + 13\n\n    # Calculate the total number of people on the train\n    total_people = initial_people + second_stop_people\n\n    # Display the total number of people on the train\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    bottle_caps_per_day = 10\n    bottle_cap_value = 0.25\n    days_per_month = 30\n    total_bottle_caps = bottle_caps_per_day * days_per_month\n    total_money = total_bottle_caps * bottle_cap_value\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    regular_rate = 20\n    regular_hours = 8\n    additional_hours = 11 - regular_hours\n    special_rate = regular_rate * 0.7\n    total_pay = (regular_hours * regular_rate) + (additional_hours * special_rate)\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    female_lions = 12\n    male_lions = female_lions / 2\n    cubs = 14\n    total_lions = female_lions + male_lions + cubs\n    result = total_lions\n    return result"}
{"output": "def solution():\n    \n    original_price = 40\n    discount = 0.25\n    discounted_price = original_price * (1 - discount)\n    money_left = 50 - discounted_price\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial employee number and the salary per month\n    initial_employee = 200\n    salary_per_month = 4000\n\n    # Calculate the total salary paid to the employees after three months\n    total_salary = initial_employee * salary_per_month\n\n    # Calculate the total amount paid to the employees after three months\n    total_paid = total_salary * 3\n\n    # return the result\n    result = total_paid\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to sing \"Deck the Halls\" and \"Jingle Bells\"\n    DECK_HALL_TIME = 150\n    Jingle_BELL_TIME = 240\n\n    # Define the number of times the choir plans to sing the Halls\n    desck_halls = 2\n\n    # Define the time it takes to sing the Jingle Bells\n    jingle_bells = 1\n\n    # Calculate the total time it takes to sing the Halls\n    desck_hall_time = desck_halls * DECK_HALL_TIME\n\n    # Calculate the total time it takes to sing the Jingle Bells\n    jingle_bell_time = jingle_bells * Jingle_BELL_TIME\n\n    # Calculate the total time they will be caroling\n    total_time = desck_hall_time + jingle_bell_time\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    billy_rate = 10\n    billy_salary = billy_rate * 20\n    sally_rate = billy_salary + 1.0\n    anniversary_pay = billy_rate * 20\n    sally_salary = sally_rate + 0.5\n    difference = billy_salary - sally_salary\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a loaf of bread and a bagel of bread\n    LOAF_COST = 2\n    BAGEL_COST = 1\n\n    # Define the number of loaves of bread and bagels of bread\n    num_loaves = 3\n    num_bagels = 2\n\n    # Calculate the total cost of 3 loaves of bread\n    total_cost_3_loaves = num_loaves * LOAF_COST\n\n    # Calculate the total cost of 2 bagels of bread\n    total_cost_2_bagels = num_bagels * BAGEL_COST\n\n    # Calculate the difference in cost between 3 loaves of bread and 2 bagels\n    cost_difference = total_cost_3_loaves - total_cost_2_bagels\n\n    # Display the difference in cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define Pierson's score\n    pierson_score = 278\n\n    # Calculate Nikita's score\n    nikita_score = (pierson_score / 2) + 11\n\n    # Calculate the total score\n    total_score = pierson_score + nikita_score\n\n    # Display the total score\n    result = total_score\n    return result"}
{"output": "def solution():\n    num_classes = 40\n    num_students_per_class = 25\n    num_teachers_per_class = 3\n    num_trees_per_child = 1\n    num_trees_per_teacher = 2\n\n    # Calculate the total number of students\n    total_students = num_classes * num_students_per_class\n\n    # Calculate the total number of teachers\n    total_teachers = num_classes * num_teachers_per_class\n\n    # Calculate the total number of trees\n    total_trees = total_students * num_trees_per_teacher\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stuffed animals\n    puppies = 3\n    koalas = 5\n    zebras = 2\n    frogs = 4\n\n    # Calculate the total number of stuffed animals\n    total_animals = puppies + koalas + zebras + frogs\n\n    # Calculate the percentage of stuffed goats\n    goats_percentage = 0.3 * total_animals\n\n    # Calculate the number of stuffed goats Bubbles should buy\n    goats_needed = goats_percentage * total_animals\n\n    # Display the number of stuffed goats Bubbles should buy\n    result = goats_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hours playing\n    total_hours = 30\n\n    # Define the number of hours Kris plays for each day\n    daily_hours = 0.5\n    weekly_hours = 2\n\n    # Calculate the total number of hours Kris plays in 2 weeks\n    total_hours_2_weeks = daily_hours * 2 * 2 * 2\n\n    # Calculate the total number of hours Kris still needs to play\n    remaining_hours = total_hours - total_hours_2_weeks\n\n    # return the result\n    result = remaining_hours\n    return result"}
{"output": "def solution():\n    # Calculate the distance traveled by the first car\n    distance_car1 = 60 * 2\n\n    # Calculate the distance traveled by the second car\n    distance_car2 = 70 * 2\n\n    # Calculate the total distance traveled\n    total_distance = distance_car1 + distance_car2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    diamond_cost = 600\n    gold_cost = 300\n    premium_percent = 30\n    premium_amount = (diamond_cost + gold_cost) * (premium_percent / 100)\n    total_cost = diamond_cost + gold_cost + premium_amount\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    third_graders = 340\n    fourth_graders = 40\n    fourth_graders = 100\n    fifth_graders = 400\n    fourth_pass_rate = fourth_graders * 2\n    third_pass_rate = third_graders * 340\n    fourth_pass_rate = fourth_graders * 4\n    fifth_pass_rate = fourth_pass_rate * fifth_graders\n    total_pass_rate = third_pass_rate + fourth_pass_rate + fifth_pass_rate\n    result = total_pass_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the number of glass chips needed to make one square inch of the mosaic\n    GLASS_CHIPS_PER_SQ_INCH = 12\n\n    # Define the number of bags of glass chips\n    NUM_BAGS = 2\n\n    # Define the height of the mosaic in inches\n    TOTAL_HEIGHT = 3\n\n    # Calculate the total number of glass chips needed\n    total_glass_chips = NUM_BAGS * GLASS_CHIPS_PER_SQ_INCH\n\n    # Calculate the maximum number of glass chips Milo can make\n    max_glass_chips = total_glass_chips // GLASS_CHIPS_PER_SQ_INCH\n\n    # Display the maximum number of glass chips Milo can make\n    result = max_glass_chips\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of tea\n    initial_tea = 10\n\n    # Calculate the total amount of tea consumed by the students\n    drank1 = 4 * 1.5\n    drank2 = 16 * 2\n    total_consumed = drank1 + drank2\n\n    # Calculate the initial amount of tea in gallons\n    initial_tea_gallons = initial_tea - total_consumed\n\n    # Display the initial amount of tea in gallons\n    result = initial_tea_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of butterscotch candies\n    initial_candies = 100\n\n    # Define the number of butterscotch candies sold\n    candies_sold = 150 + 100\n\n    # Calculate the total amount of money earned from selling candies\n    total_money = initial_candies + candies_sold\n\n    # Calculate the number of butterscotch candies still needed to sell all of Dale's candies\n    candies_needed = total_money - 100\n\n    # return the result\n    result = candies_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of students on campus\n    initial_students = 10\n\n    # Calculate the number of students on campus after one month\n    after_one_month = initial_students * 2\n\n    # Calculate the number of students on campus after May\n    after_may = after_one_month - (after_one_month * 12)\n\n    # Calculate the additional students who would have joined by the end of May\n    additional_students = after_may - initial_students\n\n    # Display the additional students\n    result = additional_students\n    return result"}
{"output": "def solution():\n    # Calculate the total number of branches Felix climbed in a week\n    total_branches = 105 / 0.25  # Felix charges $0.25 for every branch he climb\n    # Calculate the average number of branches Felix climbed per day\n    average_branches_per_day = total_branches / 7  # Felix made $105 on average\n    result = average_branches_per_day\n    return result"}
{"output": "def solution():\n    # Calculate the total number of petals picked by Rose\n    total_picked = 3*5 + 4*6 + 5*4 + 6*7  # 3 flowers with 5 petals each, 4 flowers with 6 petals each, 5 flowers with 4 petals each, 6 flowers with 7 petals each, and 6 flowers with 7 petals each\n\n    # Calculate the number of flowers remaining in the vase\n    remaining_flowers = total_picked - 1  # Rose drops 1 of each flower\n\n    result = remaining_flowers\n    return result"}
{"output": "def solution():\n    # Calculate the total number of marshmallows used\n    total_marshmallows_used = 9 + 9 + 3  # John makes 9 S'mores, DeSean makes 9 S'mores, and they dropped 3 marshmallows on the ground\n\n    # Calculate the number of marshmallows each kid can have\n    marshmallows_per_kid = 35 // total_marshmallows_used\n\n    result = marshmallows_per_kid\n    return result"}
{"output": "def solution():\n    \n    jack_play_time = 0.25 * 20\n    jack_friends_play_time = jack_play_time * 2\n    jack_friends_play_time_1 = jack_friends_play_time / 2\n    jack_friends_play_time_2 = jack_friends_play_time / 2\n    jack_friends_play_time_3 = jack_friends_play_time / 1.5\n    total_play_time = jack_play_time_1 + jack_friends_play_time_2 + jack_friends_play_time_3 + jack_friends_play_time_4\n    money_used = total_play_time * 60\n    result = money_used\n    return result"}
{"output": "def solution():\n    jar_size = 10  # Tanya makes enough to fill a 10-ounce jar each time\n    citrus_zest = 2 * jar_size  # Tanya uses the same amount of citrus zest as fragrance\n    sugar = 2 * jar_size  # Tanya uses twice as much salt as zest\n    oil = 2 * jar_size  # Tanya uses twice as much oil as salt\n\n    # Calculate the total amount of oil Tanya uses\n    total_oil = jar_size * oil\n    result = total_oil\n    return result"}
{"output": "def solution():\n    \n    goats_cost = 3 * 500\n    cows_cost = 2 * 1500\n    total_cost = goats_cost + cows_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cupcakes needed\n    total_cupcakes = 63\n\n    # Define the number of chocolate and toffee cupcakes Paul already has\n    chocolate_cupcakes = 8\n    toffee_cupcakes = 40\n\n    # Calculate the number of cupcakes Paul still needs to buy\n    remaining_cupcakes = total_cupcakes - chocolate_cupcakes - toffee_cupcakes\n\n    # Display the number of cupcakes Paul still needs to buy\n    result = remaining_cupcakes\n    return result"}
{"output": "def solution():\n    \n    robert_cars = 20\n    joe_cars = robert_cars * 2\n    sold_cars = robert_cars * 0.2\n    given_cars = sold_cars * 2\n    remaining_cars = joe_cars - sold_cars - given_cars\n    result = remaining_cars\n    return result"}
{"output": "def solution():\n    num_students = 20\n    total_raised = 175000\n    organizations_raised = 50000\n\n    # Calculate the total amount raised from non-organizations\n    non_organizations_raised = total_raised - organizations_raised\n\n    # Calculate the amount raised per student\n    amount_per_student = non_organizations_raised / num_students\n    result = amount_per_student\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Sandy walked on the first day\n    day1_hours = 8\n\n    # Define the number of hours Sandy walked on the second day\n    day2_hours = day1_hours / 2\n\n    # Calculate the total number of hours Sandy walked in two days\n    total_hours = day1_hours + day2_hours + day3_hours\n\n    # Convert the total hours to minutes\n    total_minutes = total_hours * 60\n\n    # return the result\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cars\n    initial_cars = 50\n\n    # Add the cars in the parking lot when entering the first break\n    initial_cars += 20\n\n    # Calculate the number of cars that gone during the lunch break\n    lunch_cars = initial_cars / 2\n\n    # Calculate the total number of cars\n    total_cars = initial_cars + initial_cars + lunch_cars\n\n    # Display the total number of cars\n    result = total_cars\n    return result"}
{"output": "def solution():\n    \n    cycles_per_day = 30\n    tasks_per_cycle = 5\n    tasks_per_week = tasks_per_cycle * 7\n    earnings_per_task = 1.20\n    total_earnings = cycles_per_day * tasks_per_week * earnings_per_task\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    # Calculate Julie's score\n    julie_score = 14 - 4\n\n    # Calculate Sasha's score in the first game\n    sasha_first_game = 14\n\n    # Calculate Julie's score in the second game\n    julie_second_game = julie_first_game - 6\n\n    # Calculate Sasha's total score\n    total_score = sasha_first_game + julie_second_game + sasha_first_game\n    result = total_score\n    return result"}
{"output": "def solution():\n    # Calculate the total number of tins of cat food and dog food bought by Kimberly\n    total_cat_tins = 8 * 11  # 8 packages of cat food, each containing 11 tins\n    total_dog_tins = 6 * 6  # 6 packages of dog food, each containing 6 tins\n    difference = total_cat_tins - total_dog_tins\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cards\n    total_cards = 341\n\n    # Calculate the number of cards Smendrick has\n    smendrick_cards = 3 * total_cards\n\n    # Calculate the number of cards Becca has\n    becca_cards = smendrick_cards + 12\n\n    # Display the number of cards Becca has\n    result = becca_cards\n    return result"}
{"output": "def solution():\n    \n    green_eggs = 5\n    blue_eggs = 2 * green_eggs\n    pink_eggs = blue_eggs - 1\n    yellow_eggs = pink_eggs / 3\n    total_eggs = green_eggs + blue_eggs + pink_eggs + yellow_eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    book_weight = 4  # The book weighs 4 pounds\n    book_cost = 32  # The book costs $32\n    miles_to_return = 20  # Milly needs to be returned to the distribution center 20 miles away\n    shipping_price_per_pound = 0.35  # The shipping company charges $0.35 per pound\n    miles_to_refund = miles_to_return * 0.08  # The book costs $0.08 per mile\n    shipping_price_per_pound = 0.35  # The shipping company charges $0.35 per pound\n    refund_percentage = 0.75  # Amazon will refund 75% of the book's purchase price\n\n    # Calculate the total cost of the book\n    total_cost = book_weight * book_cost + shipping_price_per_pound * miles_to_refund\n\n    # Calculate the amount of money Milly will lose\n    money_lost = total_cost - total_cost\n    result = money_lost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money\n    initial_money = 40\n\n    # Define the amount of money given by the father\n    father_money = 100\n\n    # Define the cost of the jeans\n    jeans_cost = 30 * 2\n\n    # Define the cost of the bag\n    bag_cost = 20\n\n    # Calculate the total cost of the jeans\n    jeans_cost = jeans_cost * 2\n\n    # Calculate the total cost of the items\n    total_cost = jeans_cost + bag_cost\n\n    # Calculate the amount of money left\n    money_left = initial_money - total_cost\n\n    # return the result\n    result = money_left\n    return result"}
{"output": "def solution():\n    # Calculate the total bars of chocolate produced by Boris in the first two weeks\n    first_week_bars = 8000\n    second_week_bars = first_week_bars / 2\n    third_week_bars = first_week_bars * 3\n    total_bars = first_week_bars + second_week_bars + third_week_bars\n\n    # Calculate the bars of chocolate produced by Boris in the fourth week\n    fourth_week_bars = total_bars - total_bars\n    result = fourth_week_bars\n    return result"}
{"output": "def solution():\n    # Calculate the total time Britany spends on TikTok in a week\n    total_time = (18 * 4) + (2 * 60) + (15 * 6)  # 18 videos per week, 2 hours a week writing amateur songs, 15 minutes a week doing her makeup, and 15 minutes a week doing her makeup\n\n    # Calculate the total time Britany spends on TikTok in a month\n    total_time_per_month = total_time * 4  # 4 weeks in a month\n\n    result = total_time_per_month\n    return result"}
{"output": "def solution():\n    # Calculate the total number of items Angela needs to install/hung\n    total_items = 6*4 + 2*2 + 10*15  # 6 mirrors, 2 shelves, 1 chandelier, and 10 pictures\n\n    # Calculate the total cost of Angela's installation\n    total_cost = 129.00\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Eva's savings\n    eva_savings = 20\n\n    # Calculate Anthony's savings\n    anthony_savings = eva_savings + 10\n\n    # Calculate Roy's savings\n    roy_savings = anthony_savings * 1.4\n\n    # Display Roy's savings\n    result = roy_savings\n    return result"}
{"output": "def solution():\n    \n    # Define Pompei's mountain height\n    POMPEI_HEIGHT = 1\n\n    # Calculate Saskay's mountain height\n    SASKAY_HEIGHT = POMPEI_HEIGHT * 12\n\n    # Calculate Kagiyami's mountain height\n    Kagiyami_HEIGHT = SASKAY_HEIGHT * 4\n\n    # Calculate Naruto's mountain height\n    NARuto_HEIGHT = Kagiyami_HEIGHT * 10\n\n    # Display Naruto's mountain height\n    result = Naruto_HEIGHT\n    return result"}
{"output": "def solution():\n    # Calculate the distance Mason travels in the first 4 hours\n    distance_first_leg = 8 * 4\n\n    # Calculate the distance Mason has traveled after the first 4 hours\n    distance_second_leg = 8 * (4 - 6)\n\n    # Calculate the total distance Mason has traveled\n    total_distance = distance_first_leg + distance_second_leg\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes for 3 kangaroos to travel across a highway\n    time_kangaroos = 3 * 18  # 3 kangaroos traveling at the same speed a total of 18 hours\n\n    # Calculate the time it takes for 4 turtles to travel across a highway\n    time_turtles = 4 * (18 / 2)  # 4 turtles traveling at half the speed of a kangaroo to do\n\n    # Calculate the total time it will take for all four turtles to travel across a highway\n    total_time = time_kangaroos + time_turtles\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    kora_dishes = 20\n    rory_dishes = kora_dishes + 20\n    jada_dishes = 2 * rory_dishes\n    total_dishes = kora_dishes + rory_dishes + jada_dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    old_laptop_cost = 600\n    new_laptop_cost = old_laptop_cost - 200\n    savings = old_laptop_cost - 200 + 150 + 80\n    extra_cost = 50\n    total_savings = savings + extra_cost\n    result = total_savings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per apple\n    LARGE_SLICES = 5\n    SMALL_SLICES = 3\n\n    # Define the number of apples to be sliced\n    large_apples = 3\n    small_apples = 5\n\n    # Calculate the total number of slices\n    total_slices = (large_apples * LARGE_SLICES) + (small_apples * SMALL_SLICES)\n\n    # Subtract the number of slices Adam ate\n    total_slices -= 15\n\n    # Display the number of slices left\n    result = total_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the daily milk production and the number of cows\n    daily_milk_production = 5\n    num_cows = 3\n\n    # Define the target milk production\n    target_milk_production = 25\n\n    # Calculate the total milk production needed per day\n    total_milk_production_needed = target_milk_production - (daily_milk_production * num_cows)\n\n    # Calculate the number of additional cows needed to reach the target milk production\n    additional_cows_needed = total_milk_production_needed / daily_milk_production\n\n    # Return the result\n    result = additional_cows_needed\n    return result"}
{"output": "def solution():\n    # Calculate the length of the glue sticks that are not used\n    used_length = (1/6) * 12 + (2/3) * 12 + (1/2) * 12  # 1/6 left left, 2/3 left left, 1/2 left left\n    # Calculate the total length of the glue sticks that are not used\n    total_length = used_length + 12  # the original length of the glue sticks is 12 millimeters long\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the car and phone\n    CAR_COST = 10000\n    PHONE_COST = 800\n\n    # Define the initial amount of money Gabriel has\n    initial_money = 5000\n\n    # Define the amount of money Gabriel's brother gave him\n    brother_money = 200\n\n    # Calculate the total cost of the car and phone\n    total_cost = CAR_COST + PHONE_COST\n\n    # Calculate the amount of money Gabriel still needs\n    remaining_money = total_cost - brother_money\n\n    # Display the amount of money Gabriel still needs\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the hat and the amount given away\n    hat_cost = 70\n    amount_given_away = 4 * 20\n\n    # Calculate the change Thea received\n    change = amount_given_away - hat_cost\n\n    # Display the change Thea received\n    result = change\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the squirt guns\n    squirt_cost = 6 * 2\n\n    # Calculate the total cost of the water balloons\n    water_cost = 3 * 3\n\n    # Calculate the total cost of all the items\n    total_cost = squirt_cost + water_cost\n\n    # Calculate the amount of money left\n    money_left = 20 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    jack_dishes = 60\n    peter_dishes = jack_dishes / 2\n    total_socks = jack_dishes * 2\n    total_dishes += peter_dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    total_students = 20\n    good_at_math_only = 5\n    good_at_english_only = 8\n    good_at_both = total_students - good_at_math_only - good_at_english_only\n    result = good_at_both\n    return result"}
{"output": "def solution():\n    total_show_time = 2 * 60  # convert 2 hours to minutes\n    stage_time = 6  # minutes\n    exit_time = 2  # minutes\n    intermission_time = 10  # minutes\n\n    # Calculate the total time Vicki spends on stage and exit\n    total_stage_time = stage_time + exit_time\n\n    # Calculate the remaining time Vicki can perform in the concert\n    remaining_time = total_show_time - total_stage_time\n\n    # Calculate the number of groups Vicki can perform in the concert\n    num_groups = remaining_time // group_time\n    result = num_groups\n    return result"}
{"output": "def solution():\n    \n    # Define the initial investment and interest rate\n    initial_investment = 300\n    interest_rate = 0.75\n\n    # Calculate the interest earned after 3 years\n    interest_earned = initial_investment * interest_rate * 3\n\n    # Calculate the total amount Brenda will have after 3 years\n    total_amount = initial_investment + interest_earned\n\n    # Display the total amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the number of white and floral shirts\n    white_shirts = 40\n    floral_shirts = 50\n\n    # Calculate the number of floral shirts with collars\n    white_collar_shirts = white_shirts / 2\n\n    # Calculate the number of floral shirts with buttons\n    buttons_floral_shirts = 20\n\n    # Calculate the difference between the number of floral shirts with no buttons and the number of white shirts with no collars\n    difference = floral_shirts - white_collar_shirts - buttons_floral_shirts\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of eggs on the tray\n    eggs_on_tray = 30 * 900\n\n    # Calculate the total earnings from selling the tray\n    earnings_per_tray = 2.5\n\n    # Calculate the total earnings from selling the tray\n    total_earnings = eggs_on_tray * earnings_per_tray\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of goats in Farm X and Farm Y\n    goats_X = 55\n    goats_Y = 45\n\n    # Define the number of goats sold from Farm X and Farm Y\n    goats_X_sold = 10\n    goats_Y_sold = goats_X_sold * 2\n\n    # Calculate the total number of goats\n    total_goats = goats_X + goats_Y_sold + goats_Y_sold\n\n    # Calculate the number of goats left\n    goats_left = total_goats - total_goats\n\n    # return the result\n    result = goats_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pairs of shoes James buys per month and the annual cost\n    SHOES_PER_MONTH = 2\n    MONTHLY_COST = 2840\n\n    # Calculate the total cost of shoes James buys in a year\n    total_cost = 2 * SHOES_PER_MONTH * 12\n\n    # Calculate the average cost per pair of shoes\n    avg_cost = total_cost / total_cost\n\n    # Display the average cost per pair of shoes\n    result = avg_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of green and red food\n    green_price = 25\n    red_price = 18\n\n    # Define the number of baskets of green and red food purchased\n    green_baskets = 3\n    red_baskets = 3\n\n    # Calculate the total cost of the green food and red food\n    total_cost = (green_baskets * green_price) + (red_baskets * red_price)\n\n    # Apply the discount for each basket of red food\n    total_cost -= 2\n\n    # Return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_rooms = 90\n    time_per_room = 20  # minutes\n    num_half_rooms = num_rooms / 2\n\n    # Calculate the total time it would take to clean one-half of the rooms\n    total_time = num_half_rooms * time_per_room\n\n    # Convert the total time to hours\n    total_time_hours = total_time / 60\n    result = total_time_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of homes built in the first year\n    homes_first_year = 12\n\n    # Define the number of homes built in the next year\n    homes_next_year = homes_first_year * 3\n\n    # Define the number of homes built in the third year\n    homes_third_year = homes_next_year * 2\n\n    # Calculate the total number of homes built over the next three years\n    total_homes = homes_first_year + homes_next_year + homes_third_year\n\n    # Display the total number of homes built\n    result = total_homes\n    return result"}
{"output": "def solution():\n    \n    brother_age = 87 / 3\n    sister_age = brother_age + 2\n    mom_age = 3 * brother_age - 1\n    my_age = sister_age + mom_age\n    result = my_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the number of glue sticks per student\n    num_students = 27\n    glue_sticks_per_student = 2\n\n    # Calculate the total number of glue sticks needed\n    total_glue_sticks_needed = num_students * glue_sticks_per_student\n\n    # Calculate the number of packs needed\n    packs_needed = total_glue_sticks_needed // 8\n\n    if total_glue_sticks_needed % 8!= 0:\n        packs_needed += 1\n\n    # Display the number of packs needed\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    \n    initial_volume = 4000\n    doubled_volume = initial_volume * 2\n    third_day_volume = 6000\n    total_volume = initial_volume + doubled_volume + third_day_volume\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people infected\n    initial_infects = 10\n\n    # Define the number of people infected each day\n    daily_infects = 6\n\n    # Calculate the total number of people infected after three days\n    total_infected = initial_infects * (daily_infects * 3)\n\n    # return the result\n    result = total_infected\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of tips received by Rafaela\n    rafaela_tip = 20\n\n    # Calculate the amount of tips Julieta received\n    julieta_tip = 0.1 * rafaela_tip\n\n    # Calculate the total amount of money received by both customers\n    total_money = rafaela_tip + julieta_tip\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of oranges\n    initial_oranges = 12\n\n    # Calculate the number of oranges given to the daughters\n    daughters_oranges = 3 * 2\n\n    # Calculate the total number of oranges given away\n    total_given_away = daughters_oranges + 3\n\n    # Calculate the number of oranges left with\n    oranges_left = initial_oranges - total_given_away\n\n    # Display the number of oranges left with\n    result = oranges_left\n    return result"}
{"output": "def solution():\n    \n    claire_badges = 1 * 12\n    amber_badges = claire_badges * 2\n    wendy_badges = 3 * claire_badges\n    difference = wendy_badges - amber_badges\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of banana bread loaves and slices per loaf\n    NUM_LOAVES = 2\n    SLICES_PER_LOAF = 8\n\n    # Calculate the total number of slices\n    total_slices = NUM_LOAVES * SLICES_PER_LOAF\n\n    # Calculate the number of fundraiser sold\n    fundraiser_slices = total_slices * 0.5\n\n    # Calculate the total amount raised\n    total_raised = fundraiser_slices * 0.5\n\n    # Display the total amount raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gold coins\n    gold_coins = 70\n\n    # Calculate the number of silver coins\n    silver_coins = gold_coins + 30\n\n    # Calculate the total number of coins\n    total_coins = gold_coins + silver_coins\n\n    # Display the total number of coins\n    result = total_coins\n    return result"}
{"output": "def solution():\n    total_burritos = 600\n    num_students = 50\n    burritos_per_student = 10\n    num_eating = 20\n\n    # Calculate the total number of burritos given away\n    total_given_away = num_students * burritos_per_student\n\n    # Calculate the number of leftover burritos\n    leftover_burritos = total_burritos - total_given_away\n    result = leftover_burritos\n    return result"}
{"output": "def solution():\n    \n    red_cars = 12\n    green_cars = red_cars - 2\n    blue_cars = green_cars * 3\n    total_cars = 75\n    yellow_cars = total_cars - red_cars - green_cars - blue_cars\n    result = yellow_cars\n    return result"}
{"output": "def solution():\n    total_books = 85\n    anne_books = total_books - 12\n    sofie_books = anne_books + 25\n    fawn_books = total_books - anne_books - sofie_books\n    result = fawn_books\n    return result"}
{"output": "def solution():\n    \n    potatoes_weight = 5\n    sweet_potatoes_weight = potatoes_weight * 2\n    carrots_weight = sweet_potatoes_weight - 3\n    result = carrots_weight\n    return result"}
{"output": "def solution():\n    # Calculate the total number of jello cups needed\n    total_jello_cups = 30 * 4\n\n    # Calculate the total number of jello cups needed\n    total_jello_cups = total_jello_cups * 10\n\n    # Calculate the total cost of the jello cups\n    total_cost = total_jello_cups * 1.25\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_phones = 5\n    phone_price = 700\n    total_paid = 4000\n\n    # Calculate the total cost of all phones\n    total_phones_cost = num_phones * phone_price\n\n    # Calculate the amount of change the seller will receive\n    change = total_paid - total_phones_cost\n    result = change\n    return result"}
{"output": "def solution():\n    total_cost = 400\n    madeline_monthly_cost = total_cost * 0.6\n    keenan_monthly_cost = total_cost - madeline_monthly_cost\n    keenan_weekly_cost = keenan_monthly_cost / 4\n    result = keenan_weekly_cost\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 60\n    day1_pieces = (2/5) * total_pieces\n    day2_pieces = 10\n    remaining_pieces = total_pieces - day1_pieces - day2_pieces\n    day3_pieces = (7/13) * remaining_pieces\n    total_pieces_eaten = day1_pieces + day2_pieces + day3_pieces\n    result = total_pieces_eaten\n    return result"}
{"output": "def solution():\n    soda_cost = 21.0\n    water_cost = 8.0\n    num_soda = 7\n    num_water = 4\n\n    # Calculate the total cost of soda\n    total_soda_cost = soda_cost * num_soda\n\n    # Calculate the total cost of water\n    total_water_cost = water_cost * num_water\n\n    # Calculate the total cost of all items\n    total_cost = total_soda_cost + total_water_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money David has\n    initial_money = 12.48\n\n    # Define the number of bolts David wants to buy\n    bolts_needed = 16\n\n    # Define the cost of each bolt\n    bolt_cost = 0.03\n\n    # Calculate the total cost of the bolts\n    total_cost = bolts_needed * bolt_cost\n\n    # Calculate the amount of money David has left\n    money_left = initial_money - total_cost\n\n    # Display the amount of money David has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    # Calculate Ella's earnings after 12 hours of dog walking\n    earnings = 33 * 3  # Ella earned $33 for 3 hours of dog walking\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 52\n\n    # Define the number of marbles Paul's friend gave him\n    friend_marbles = 28\n\n    # Calculate the number of marbles Paul has after his friend gave him 28\n    remaining_marbles = initial_marbles - friend_marbles\n\n    # Calculate the number of marbles Paul lost\n    lost_marbles = remaining_marbles * (1/4)\n\n    # Calculate the number of marbles Paul has left\n    remaining_marbles = remaining_marbles - lost_marbles\n\n    # Display the number of marbles Paul has left\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of multiple-choice questions and the percentage of each type of question\n    multiple_choice_questions = 10\n    multiple_choice_percentage = 0.8\n\n    # Define the number of true/false questions and the percentage of each type of question\n    yes_percentage = 0.9\n    yes_percentage = 0.6\n\n    # Define the number of long-answer questions and the percentage of each type\n    long_answer_questions = 5\n    long_answer_percentage = 0.6\n\n    # Calculate the total score\n    total_score = (multiple_choice_questions * multiple_choice_percentage) + (no_choice_questions * yes_percentage) + (no_question_questions * yes_percentage) + (long_answer_questions * long_answer_percentage)\n\n    # return the result\n    result = total_score\n    return result"}
{"output": "def solution():\n    profit = 2000\n    num_chickens = 300\n    sell_percentage = 3/5\n\n    # Calculate the total revenue from selling all the chickens\n    total_revenue = num_chickens * sell_percentage\n\n    # Calculate the profit earned from selling all the chickens\n    profit_earned = total_revenue - profit_earned\n\n    # Calculate the price of the chicken Isaias bought for sale\n    price_per_chicken = 50\n    price_for_sale = profit_earned / num_chickens\n    result = price_for_sale\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of glasses sold\n    total_glasses = 32\n\n    # Define the number of glasses sold by Julie and Micah\n    julie_glasses = 14\n    micah_glasses = (total_glasses - julie_glasses) / 2\n\n    # Calculate the difference between the number of glasses sold by Julie and Micah\n    difference = julie_glasses - micah_glasses\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    hair_cost = 400\n    manicure_cost = hair_cost / 4\n    pedicure_cost = manicure_cost * 3 / 4\n    total_cost = hair_cost + manicure_cost + pedicure_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    rope_length = 20  # The rope is 20 meters long\n    friend_cost = 2  # Sarah's friend wants to buy the rope for $2 a meter\n    profit_per_meter = 1.5  # Sarah plans to use the profit to buy a new rope at the store cost $1.5 a meter\n\n    # Calculate the total cost of buying the rope\n    total_cost = friend_cost + profit_per_meter\n\n    # Calculate the amount of money Sarah will have left over after buying the new rope\n    money_left = rope_length - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    melanie_age_in_10_years = 18\n    melanie_present_age = melanie_age_in_10_years - 10\n    melanie_present_age_three_years = melanie_present_age * 3\n    result = melanie_present_age_three_years\n    return result"}
{"output": "def solution():\n    \n    bacon_packs = 5\n    bacon_cost = 10\n    chicken_packs = 6\n    chicken_cost = bacon_cost * 2\n    strawberry_packs = 3\n    strawberry_price = 4\n    apple_packs = 7\n    apple_price = strawberry_packs / 2\n    total_budget = 65\n    total_bacon_cost = bacon_packs * bacon_cost\n    total_chicken_cost = chicken_packs * chicken_cost\n    total_strawberry_cost = strawberry_packs * strawberry_price\n    total_apple_cost = apple_packs * apple_price\n    total_price = total_bacon_cost + total_chicken_cost + total_strawberry_cost + total_apple_cost\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the runtime of the concert\n    runtime_length = 65\n\n    # Calculate the length of the usual concert\n    usual_concert_length = runtime_length * 2\n\n    # Calculate the total length of the concert before encore\n    total_length = usual_concert_length + 15\n\n    # Display the total length of the usual concert\n    result = usual_concert_length\n    return result"}
{"output": "def solution():\n    \n    starting_toys = 200\n    toys_given = 40 + 80 + 30\n    remaining_toys = starting_toys - toys_given\n    result = remaining_toys\n    return result"}
{"output": "def solution():\n    \n    tuesdays_chimichangas = 125\n    wednesdays_chimichangas = 125\n    friday_chimichangas = 2 * tuesdays_chimichangas\n    total_chimichangas = tuesdays_chimichangas + wednesdays_chimichangas + friday_chimichangas\n    result = total_chimichangas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of microphones in the stage\n    stage_microphones = 50\n\n    # Calculate the number of microphones that won't find any space in after arrangement\n    unused_microphones = stage_microphones * 0.2\n\n    # Calculate the number of pairs of microphones that can fit in in after arrangement\n    pairs_of_microphones = stage_microphones - unused_microphones\n\n    # Display the number of pairs of microphones\n    result = pairs_of_microphones\n    return result"}
{"output": "def solution():\n    # Calculate the number of birds flying overhead\n    flying_overhead = (2/3) * 6\n\n    # Calculate the total number of birds\n    total_birds = 6 + flying_overhead + (3 * 8)\n\n    result = total_birds\n    return result"}
{"output": "def solution():\n    total_cookies = 55\n    eaten_cookies = 5\n    remaining_cookies = total_cookies - eaten_cookies\n    jars = 5\n    cookies_per_jar = remaining_cookies / jars\n    result = cookies_per_jar\n    return result"}
{"output": "def solution():\n    \n    # Define the number of orchids and daisies\n    num_orchids = 5\n    num_daisies = 4\n\n    # Define the number of petals for each type of daisie\n    orchid_petals = 5\n    daisie_petals = 10\n\n    # Calculate the total number of petals\n    total_petals = (num_orchids * orchid_petals) + (num_daisies * daisie_petals)\n\n    # Calculate the difference in petals between the daisies and the orchids\n    difference = total_petals - total_petals\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_plants = 100\n    indoor_plants = total_plants / 4\n    remaining_plants = total_plants - indoor_plants\n    outdoor_plants = remaining_plants * (2/3)\n    flowering_plants = remaining_plants - outdoor_plants\n    flowering_percent = flowering_plants / flowering_plants * 100\n    result = flowering_percent\n    return result"}
{"output": "def solution():\n    # Calculate the speed of a whirligigig\n    whirligigig_speed = 5 * 121  # the whirligigigig spins at five times faster than a thingamabob\n    # Calculate the speed of a whatchamacallit\n    whatchamacallit_speed = 11 * 121  # the whatchamacallit spins eleven times faster than a thingamabob\n    # Calculate the speed of a whirligigig\n    whirligig_speed = whatchamacallit_speed / 5  # the whirligigigigig spins at five times faster than a thingamabob\n    result = whirligig_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the salad and yogurt\n    SALAD_PRICE = 6\n    YOGURT_PRICE = SALAD_PRICE / 2\n\n    # Define the number of carrots Ellen eats each day\n    carrots_per_day = 2\n\n    # Calculate the total cost of the goods\n    total_cost = 11\n\n    # Calculate the total cost of the carrots\n    carrot_cost = (total_cost - SALAD_PRICE - YOGURT_PRICE) / carrots_per_day\n\n    # Display the total cost of one carrot\n    result = carrot_cost\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 8\n    days_per_week = 5\n    hourly_rate = 10\n    new_hourly_rate = 2\n    regular_pay = hours_per_day * hourly_rate\n    new_pay = hours_per_day * new_hourly_rate\n    total_pay = regular_pay + new_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Tasha made from selling lemonade\n    tasha_money = 80\n\n    # Calculate the amount of money mowed by Joe's lawn in the first week\n    joe_lawn_1 = tasha_money * 3\n\n    # Calculate the amount of money mowed by Kamala's lawn in the second week\n    kamala_lawn_2 = joe_lawn_1 * 5\n\n    # Calculate the amount of money mowed by Alba's lawn in the second week\n    alba_lawn_2 = joe_lawn_2 * 5\n\n    # Calculate the total amount of money made\n    total_money = tasha_money + joe_lawn_1 + kamala_lawn_2 + alba_lawn_2\n\n    # Display the total amount of money made\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    martin_weight = 55\n    carl_weight = martin_weight + 16\n    christian_weight = carl_weight + 8\n    harry_weight = christian_weight - 5\n    result = harry_weight\n    return result"}
{"output": "def solution():\n    \n    rental_frequency = 10\n    rental_duration = 3\n    hourly_rate = 25\n    payment = 500\n    total_rental_duration = rental_frequency * rental_duration * rental_duration\n    total_rental_cost = total_rental_duration * hourly_rate\n    profit = total_rental_cost - payment\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    martha_notebooks = 7\n    joseph_notebooks = 3 * martha_notebooks\n    total_notebooks = joseph_notebooks + 5\n    difference = total_notebooks - joseph_notebooks\n    result = difference\n    return result"}
{"output": "def solution():\n    dijana_distance = 50\n    anis_distance = dijana_distance + (1/5 * dijana_distance)\n    total_distance = dijana_distance + anis_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the number of cookies each nephew will get\n    cookies_per_nephew = 100 / 6\n\n    # Calculate the number of cookies each nephew will get\n    cookies_per_nephew = cookies_per_nephew / 4\n\n    result = cookies_per_nephew\n    return result"}
{"output": "def solution():\n    # Calculate the number of pages Denise read yesterday\n    denise_yesterday = 10\n\n    # Calculate the number of pages Daniel read today\n    daniel_today = 13 + 5\n\n    # Calculate the number of pages Denise read today\n    denise_today = 2 * denise_yesterday\n\n    # Calculate the total number of pages read\n    total_pages = denise_yesterday + daniel_today + daniel_today\n\n    # Calculate the difference in the number of pages Denise and Daniel read\n    difference = total_pages - denise_today\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    adult_bowls = 4\n    child_bowls = 8\n    total_bowls = adult_bowls + child_bowls\n    meals_per_child = total_bowls // meals_per_child\n    result = meals_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of notebooks and ballpen\n    NOTEBOOK_PRICE = 1.5\n    BALPE_PRICE = 0.5\n\n    # Define the number of notebooks and ballpen purchased\n    notebooks = 5\n    ballpens = 1\n\n    # Calculate the total cost of notebooks and ballpen\n    notebook_cost = notebooks * NOTEBOOK_PRICE\n    ballpen_cost = ballpens * BALPE_PRICE\n\n    # Calculate the total cost\n    total_cost = notebook_cost + ballpen_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    small_masks = 4\n    large_masks = 3\n    small_masks_yards = 2\n    large_masks_yards = 2.25\n    total_small_masks = small_masks * small_masks_yards\n    total_large_masks = large_masks * large_masks_yards\n    total_material = (20 * small_masks_yards) + (8 * large_masks_yards)\n    result = total_material\n    return result"}
{"output": "def solution():\n    \n    # Define the number of Fast and Furious movies\n    num_fastas = 9\n    num_furious = 3\n\n    # Define the total amount spent\n    total_spent = 216\n\n    # Calculate the total number of movies seen\n    total_movies = num_fastas + num_furious\n\n    # Calculate the average price per ticket\n    average_price = total_spent / total_movies\n\n    # Display the average price per ticket\n    result = average_price\n    return result"}
{"output": "def solution():\n    \n    sleeps_per_night = 10\n    dog_sleep_per_night = sleeps_per_night - 2\n    total_sleep_per_day = sleeps_per_night + dog_sleep_per_day\n    free_time_per_day = total_sleep_per_day - 10\n    result = free_time_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of blue and red shoe boxes\n    blue_boxes = 7\n    red_boxes = 9\n\n    # Define the number of blue and red shoe boxes used to go fishing\n    blue_boxes_used = 3\n    red_boxes_used = red_boxes_used / 3\n\n    # Calculate the number of blue and red shoe boxes left\n    blue_boxes_left = blue_boxes - blue_boxes_used\n    red_boxes_left = red_boxes - red_boxes_used\n\n    # Display the number of red and blue shoe boxes left\n    result = red_boxes_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of books Sarah has\n    sarah_books = 9\n\n    # Calculate the number of books Joseph has after losing 2\n    joseph_books = sarah_books * 2 - 2\n\n    # Display the number of books Joseph has\n    result = joseph_books\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 30\n\n    # Calculate the number of marbles given to Jamie\n    jamie_marbles = initial_marbles // 5\n\n    # Calculate the number of marbles given to Donald\n    donald_marbles = initial_marbles - jamie_marbles - 10\n\n    # Calculate the number of marbles left for Dean\n    dean_marbles = initial_marbles - jamie_marbles - donald_marbles\n\n    # Display the number of marbles left for Dean\n    result = dean_marbles\n    return result"}
{"output": "def solution():\n    duncan_age_now = 60\n    duncan_age_8_years_ago = duncan_age_now - 8\n    duncan_age_4_years_ago = duncan_age_8_years_ago - 4\n    adam_age_now = duncan_age_4_years_ago + 8\n    adam_age_in_8_years = adam_age_now + 8\n    result = adam_age_in_8_years\n    return result"}
{"output": "def solution():\n    \n    brown_farm_acres = 200\n    smith_farm_acres = 2 * brown_farm_acres + 100\n    total_acres = brown_farm_acres + smith_farm_acres\n    result = total_acres\n    return result"}
{"output": "def solution():\n    # Calculate the total number of packages Colby completes in a typical eight-hour workday\n    packages_per_hour = 50 - 10  # Colby completes 10 less than 50 packages per hour\n    earnings_per_package = 0.20  # Colby earns $0.20 for every package he completes\n    total_earnings = packages_per_hour * earnings_per_package  # Calculate the total earnings in a typical eight-hour workday\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    normal_sudoku_time = 45\n    animee_sudoku_time = normal_sudoku_time * 4\n    normal_sudoku_bottles = normal_sudoku_time / 0.5\n    animee_sudoku_bottles = animee_sudoku_time / 0.5\n    total_bottles = normal_sudoku_bottles + animee_sudoku_bottles\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    red_balloons = 20\n    yellow_balloons = 20\n    total_red_balloons = 58\n    red_balloons = red_balloons * 2\n    yellow_balloons = yellow_balloons * 3\n    total_yellow_balloons = total_red_balloons - red_balloons - yellow_balloons\n    result = yellow_balloons\n    return result"}
{"output": "def solution():\n    \n    miles_per_day = 100\n    days_per_month = 30\n    miles_per_tune_up = 1000\n    tune_ups_per_day = miles_per_day / 1000\n    total_tune_ups = tune_ups_per_day * days_per_month * tune_ups_per_tune_up\n    result = total_tune_ups\n    return result"}
{"output": "def solution():\n    \n    tuesday_hours = 5\n    wednesday_hours = tuesday_hours * 2\n    thursday_hours = wednesday_hours - 2\n    total_hours = tuesday_hours + wednesday_hours + thursday_hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    cake_cost = 11\n    balloons_cost = 12 * balloons_cost\n    ice_cream_cost = 7 * 2\n    total_cost = cake_cost + balloons_cost + ice_cream_cost\n    julia_share = total_cost / 2\n    result = julia_share\n    return result"}
{"output": "def solution():\n    \n    apples = 3\n    bananas = 5\n    oranges = 6\n    apples_left = apples - 2\n    bananas_left = bananas - 5\n    oranges_left = oranges - 2\n    total_left = apples_left + bananas_left + oranges_left\n    result = total_left\n    return result"}
{"output": "def solution():\n    num_tennis = 6\n    num_volleyball = num_tennis * 2\n    num_boys = 16\n    num_girls = 22\n\n    # Calculate the total number of students\n    total_students = num_tennis + num_volleyball + num_boys + num_girls\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the cost per lollypop\n    num_students = 30\n    cost_per_lollippop = 0.8\n\n    # Calculate the total revenue from selling lollipops\n    total_revenue = num_students * cost_per_lollippop\n\n    # Calculate the total number of lollipops sold\n    num_lollipops = num_students * 10\n\n    # Calculate the total revenue from selling lollipops\n    total_revenue = num_lollipops * 10\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    num_cats = 3\n    num_dogs = num_cats * 3\n    num_rabbits = num_dogs - 2\n    num_fish_tank = num_rabbits * 3\n    num_gerbils = num_fish_tank / 3\n\n    # Calculate the total number of pets Larry has\n    total_pets = num_cats + num_dogs + num_rabbits + num_gerbils\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices in the loaf of bread\n    slices = 24\n\n    # Define the number of slices Abby can eat per day\n    abby_slices_per_day = 2\n\n    # Define the number of slices Josh can eat per day\n    josh_slices_per_day = abby_slices_per_day * 2\n\n    # Calculate the number of days the loaf of bread will last\n    days = slices // slices\n\n    # Display the number of days the loaf of bread will last\n    result = days\n    return result"}
{"output": "def solution():\n    # Calculate the total number of shells Martha will collect in 10th birthday\n    total_shells = 5 * 12 * 10  # Martha collects 5 years old, every month for 10 years\n    result = total_shells\n    return result"}
{"output": "def solution():\n    total_cups = 27  # Lana has 27 cups of tea\n    num_rows = 3  # Lana divides the cups into 3 rows\n    cups_per_row = total_cups / num_rows  # Lana uses the remaining cups of cinnamon tea\n\n    # Calculate the number of mint tea cups in each row\n    mint_cups_per_row = cups_per_row / (num_rows - 1)\n    result = mint_cups_per_row\n    return result"}
{"output": "def solution():\n    # Calculate the number of berries the sloth takes to make the trip down the tree\n    time_per_trip = 4 / 8  # the sloth takes 4 hours to make the trip down the tree\n\n    # Calculate the minimum number of berries the sloth can pick up per trip down to the ground\n    min_berries_per_trip = (8 * time_per_trip) / 24  # the sloth can pick up 24 berries on each trip\n\n    result = min_berries_per_trip\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of water in the pool\n    initial_water = 10000\n\n    # Calculate the amount of water used to fill the tank\n    water_used = initial_water / 2\n\n    # Calculate the amount of water remaining in the tank after 6 days\n    remaining_water = initial_water - water_used - 500 * 6\n\n    # Display the amount of water remaining in the tank\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    TICKET_COST = 7\n    POPCORN_COST = 8\n    CANDY_COST = 2\n\n    # Define the number of each item Colby has\n    friday_tickets = 5\n    saturday_tickets = 10\n    friday_saturday_tickets = 5\n    saturday_candy_tickets = 8\n    popcorn_boxes = 1\n    candy_popcorn_boxes = 1\n\n    # Calculate the total cost of tickets for Fridays and Saturdays\n    friday_saturday_cost = friday_tickets * FRIURDAY_TICKET_COST\n    saturday_saturday_cost = saturday_tickets * FRIURDAY_TICKET_COST\n    total_cost = friday_saturday_tickets * FRIURDAY_TICKET_COST + saturday_saturday_tickets * FRIURDAY_TICKET_COST + popcorn_"}
{"output": "def solution():\n    # Calculate the total calories from the mini cinnamon rolls\n    cinnamon_calories = 200 * 600\n\n    # Calculate the total calories from the normal blueberry muffins\n    blueberry_calories = 300 * 450\n\n    # Calculate the total calories from the pastries\n    pastry_calories = normal_calories / 3\n\n    result = pastry_calories\n    return result"}
{"output": "def solution():\n    \n    monday_removed = 39\n    tuesday_wednesday_removed = monday_removed * 2\n    thursday_removed = 48\n    friday_removed = 57\n    total_removed = monday_removed + tuesday_wednesday_removed + thursday_removed + friday_removed\n    average_removed_per_day = total_removed / 5\n    result = average_removed_per_day\n    return result"}
{"output": "def solution():\n    \n    bus_speed = 60\n    bus_time = 5\n    car_speed = 30\n    car_time = 8\n    bus_distance = bus_speed * bus_time\n    car_distance = car_speed * car_time\n    difference = bus_distance - car_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the total number of stuffed animals\n    total_stuffed_animals = 31 * 8\n\n    # Calculate the total number of multicolored rings\n    total_multicolored_rings = 9 * 9\n\n    # Calculate the total number of bouncy balls\n    total_bouncy_balls = 62 - total_stuffed_animals - total_multicolored_rings\n\n    result = total_bouncy_balls\n    return result"}
{"output": "def solution():\n    \n    # Define Paul's age and Jean's age\n    paul_age = 100\n    jean_age = paul_age - 10\n\n    # Calculate Peter's age\n    peter_age = paul_age + jean_age\n\n    # Return Peter's age\n    result = peter_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of water balloons\n    initial_balloons = 4 * 2\n\n    # Define the number of water balloons Maria had for herself\n    herself_balloons = 1\n\n    # Define the number of water balloons Maria's mom gave away\n    mom_balloons = 3\n\n    # Calculate the total number of balloons\n    total_balloons = initial_balloons + herself_balloons + mom_balloons\n\n    # Display the total number of balloons\n    result = total_balloons\n    return result"}
{"output": "def solution():\n    # Calculate the total number of boxes donated\n    total_boxes_donated = 10 * 5\n\n    # Calculate the total number of boxes remaining\n    total_boxes_remaining = 10 + 10\n\n    # Calculate the total number of boxes that can fit in all the boxes\n    total_boxes_remaining = total_boxes_remaining * 2\n\n    # Calculate the number of new tables needed\n    new_tables_needed = total_boxes_remaining // 15\n\n    result = new_tables_needed\n    return result"}
{"output": "def solution():\n    \n    zoey_seeds = 40\n    zoey_distance = zoey_seeds * 10\n    sydney_seeds = 35\n    sydney_distance = sydney_seeds * 12\n    total_distance = zoey_distance + sydney_distance\n    average_distance = total_distance / 3\n    result = average_distance\n    return result"}
{"output": "def solution():\n    \n    widgets_per_hour_3 = 60\n    widgets_per_hour_9 = 45\n    price_per_widget = 6\n    hours_per_day = 24\n    days_per_month = 30\n    total_widgets = widgets_per_hour_3 * hours_per_day * days_per_month * days_per_month\n    total_money = (widgets_per_hour_9 * price_per_widget) - total_widgets\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the total number of pesos added after 12 hours\n    added_tesos_12_hours = 70 * 12\n\n    # Calculate the total number of pesos added after 24 hours\n    added_tesos_24_hours = 70 * 24\n\n    # Calculate the total number of pesos added after 5 pm\n    total_added_tesos = added_tesos_12_hours + added_tesos_24_hours\n\n    # Calculate the total amount of money saved by Cameron\n    savings = total_added_tesos - 1000 - 1600\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    goats = 15\n    sheep = 12\n    goat_weight = 5\n    sheep_weight = 2 * goat_weight - 3\n    total_goat_weight = goats * goat_weight\n    total_sheep_weight = sheep * sheep_weight\n    total_hay_weight = total_goat_weight + total_sheep_weight\n    result = total_hay_weight\n    return result"}
{"output": "def solution():\n    \n    hourly_wage = 50\n    weekly_hours = 6\n    total_earnings = hourly_wage * weekly_hours\n    gas_spending = 50\n    gas_deposit = 100\n    pencils_bought = 5\n    pencil_cost = 10\n    pens_bought = (total_earnings - gas_spending - pencils_bought * pencil_cost) / 25\n    result = pens_bought\n    return result"}
{"output": "def solution():\n    \n    craig_words = 20\n    craig_letters = 15\n    brother_letters = craig_letters + 50\n    total_letters = (craig_words * craig_letters) + brother_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and Schools per row\n    ROWS_PER_ROW = 7\n    SCHOOLS_PER_ROW = 5\n\n    # Define the number of children standed in a row\n    CHILDS_STILL = 8\n\n    # Calculate the total number of drills\n    total_drills = ROWS_PER_ROW * SCHOOLS_PER_ROW * 5\n\n    # Display the total number of drills\n    result = total_drills\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pupils and coupons\n    pupils = 29\n    coupons = 9\n\n    # Calculate the total number of bottles of apple juice before any coupons were redeemed\n    total_bottles = pupils * 100\n\n    # Calculate the total number of students of apple juice given to drinks\n    total_students = coupons * 2\n\n    # Calculate the total number of bottles of apple juice after giving some to lunch\n    total_bottles -= total_students\n\n    # Return the result\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of labor\n    labor_cost = 35 * 2.25\n\n    # Calculate the total cost of parts\n    parts_cost = 60\n\n    # Calculate the total cost of labor\n    labor_total_cost = labor_cost + parts_cost\n\n    # Calculate the total cost of visiting the house\n    total_cost = 40 + labor_total_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    num_cds = 10\n    cost_per_cd = 15\n    discount = 0.4  # 40% discount\n    num_no_like = 5\n    num_sold = 40\n\n    # Calculate the total cost of all the CDs before the discount\n    total_cost_before_discount = num_cds * cost_per_cd\n\n    # Calculate the discounted cost of all the CDs after the discount\n    discounted_cost_after_discount = total_cost_before_discount * (1 - discount)\n\n    # Calculate the total cost of all the CDs after the discount\n    total_cost_after_discount = discounted_cost_after_discount - num_no_like * cost_per_cd\n\n    result = total_cost_after_discount\n    return result"}
{"output": "def solution():\n    # Calculate the total earnings from selling the yams\n    yam_sales = 6 * 1.5\n\n    # Calculate the total earnings from selling the sweet potatoes\n    sweet_potato_sales = 10 * 2\n\n    # Calculate the total earnings from selling the carrots\n    carrot_sales = 4 * 1.25\n\n    # Calculate the total earnings\n    total_earnings = yam_sales + sweet_potato_sales + carrot_sales\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    distance = 20\n    speed = 2\n    swim_time = distance * 0.6\n    island_rest_time = swim_time / 2\n    remaining_distance = distance - island_rest_time\n    remaining_speed = remaining_distance / 2\n    total_time = swim_time + remaining_speed\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    sam_last_friday = 7\n    sam_bakery = 7 * sam_last_friday - 40\n    total_bakery = sam_bakery + sam_bakery\n    result = total_bakery\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 15\n\n    # Define the number of stickers lost during playtime\n    playtime_stickers = 7\n\n    # Define the number of stickers given for helping classmates\n    helping_stickers = 5\n\n    # Calculate the total number of stickers\n    total_stickers = initial_stickers + playtime_stickers + helping_stickers\n\n    # Display the total number of stickers\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the commission rate for each copy of the New York Times\n    NY_TATRES_COMMISSION = 0.1\n\n    # Define the commission rate for each copy of Wall Street Journal\n    WALL_COMMISSION_RATE = 0.08\n\n    # Define the number of copies of each type of copy\n    NY_TATRES_COMMISSION = 5\n    WALL_COMMISSION = 10\n\n    # Calculate the commission earned for each type of copy\n    NY_TATRES_COMMISSION = NY_TATRES_COMMISSION * NY_TATRES_COMMISSION\n    WALL_COMMISSION = WALL_COMMISSION * WALL_COMMISSION\n\n    # Calculate the total commission earned\n    total_commission = NY_TATRES_COMMISSION + WALL_COMMISSION\n\n    # Display the total commission earned\n    result = total_commission\n    return result"}
{"output": "def solution():\n    \n    deanna_age = 26\n    marcus_age = deanna_age - 5\n    leo_age = marcus_age / 2\n    result = leo_age\n    return result"}
{"output": "def solution():\n    \n    total_points = 45\n    azibo_points = (total_points - 20) / 3\n    bahati_points = azibo_points + 20\n    dinar_points = dinar_points + 10\n    azibo_points = azibo_points - bahati_points\n    result = azibo_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pages to the inch\n    PAGES_PER_INCH = 100\n\n    # Define the length of the book in inches\n    INCH_TO_INCH = 1.5\n\n    # Calculate the number of pages on each side of the book\n    pages_per_side = PAGES_PER_INCH / 2\n\n    # Calculate the total number of pages in the book\n    total_pages = pages_per_side * 3 * INCH_TO_INCH\n\n    # Display the total number of pages\n    result = total_pages\n    return result"}
{"output": "def solution():\n    # Calculate the total number of reports stapled by Vince in 15 minutes\n    total_reports = 30 * 60 * 15  # Vince staple 30 reports every 15 minutes, so he staps 30 reports every 15 minutes\n    result = total_reports\n    return result"}
{"output": "def solution():\n    sleep_speed = 10  # in p.m.\n    sleep_sleep_hours = 6  # in hours\n    cameras_sleepwalking_time = (2 * 15) + 38  # in hours\n    bathroom_sleep_hours = (1 - 5) * 60  # in minutes\n\n    # Calculate the total sleep time for the cameraeras\n    camera_sleepwalking_time = cameras_sleepwalking_time + sleep_sleep_hours\n\n    # Calculate the total sleep time for the bed\n    bed_sleep_time = camera_sleepwalking_time + bathroom_sleep_hours\n    result = bed_sleep_time\n    return result"}
{"output": "def solution():\n    \n    cups = 2 * 12\n    spoons = cups * (2/3)\n    utensils_remaining = spoons - 6\n    result = utensils_remaining\n    return result"}
{"output": "def solution():\n    # Calculate the number of occupied beds in the hospital after 2 weeks\n    occupied_beds = 1000 * (1/5)  # capacity of 1000 beds with 1/5 occupied\n    total_occupied_beds = occupied_beds * 14  # total number of occupied beds after 2 weeks\n    result = total_occupied_beds\n    return result"}
{"output": "def solution():\n    \n    # Define the number of work emails\n    work_emails = 7\n\n    # Calculate the number of remaining emails\n    remaining_emails = 6teen - work_emails\n\n    # Calculate the number of to family emails\n    family_emails = remaining_emails * (2/3)\n\n    # Calculate the number of remaining emails\n    remaining_emails = remaining_emails - family_emails\n\n    # Calculate the number of to her boyfriend emails\n    boyfriend_emails = remaining_emails / 3\n\n    # Display the number of emails to her boyfriend\n    result = boyfriend_emails\n    return result"}
{"output": "def solution():\n    \n    aliya_age = 3\n    shawna_age = aliya_age * 3\n    father_age = shawna_age * 5\n    result = father_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of attending the concert\n    initial_attending = 48\n\n    # Calculate the number of attending people Kelly was right\n    kelly_attending = initial_attending * 1.2\n\n    # Calculate the actual number of attending people\n    actual_attending = kelly_attending + initial_attending\n\n    # Display the actual number of attending people\n    result = actual_attending\n    return result"}
{"output": "def solution():\n    \n    jason_balls = 2\n    jeffrey_balls = jason_balls * 2\n    jordan_balls = jason_balls * 2\n    total_balls = jason_balls + jeffrey_balls + jordan_balls\n    result = total_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of holes for each type of hat\n    holes_day1 = 10\n    holes_day2 = 13\n    holes_day3 = 8\n    holes_day4 = holes_day1 * 4\n\n    # Calculate the total number of holes during the first three days\n    total_holes_first_three_days = holes_day1 + holes_day2 + holes_day3\n\n    # Calculate the total number of holes during the fourth day\n    holes_day4 = holes_day4 * 4\n\n    # Calculate the total number of holes at the end of the map\n    total_holes = holes_day1_three_days + holes_day2 + holes_day3 + holes_day4\n\n    # Display the total number of holes at the end of the map\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    amora_chips = 70\n    lainey_chips = 70\n    other_person_chips = amora_chips + 15\n    total_chips = amora_chips + lainey_chips + other_person_chips\n    result = total_chips\n    return result"}
{"output": "def solution():\n    \n    supplies_cost = 400\n    tickets_cost = supplies_cost * 1.5\n    total_cost = supplies_cost + tickets_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_pokemon = 339\n    alex_pokemon = stan_pokemon + 5\n    stan_pokemon = (4 * alex_pokemon) - 13\n    result = stan_pokemon\n    return result"}
{"output": "def solution():\n    \n    episode_length = 20\n    total_episodes = episode_length / 2\n    total_minutes = total_episodes * episode_length\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance the bird leaves in the north direction\n    north_distance = 10 * 30\n\n    # Calculate the distance the bird leaves in the north direction\n    north_distance = 2 * 18\n\n    # Calculate the distance the bird leaves in the south direction\n    south_distance = 5 * 22\n\n    # Calculate the total distance the bird leaves\n    total_distance = north_distance + south_distance\n\n    # Calculate the distance the bird changes\n    change_distance = total_distance - north_distance\n\n    # Display the distance the bird changes\n    result = change_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of brownies\n    initial_brownies = 1 * 12\n\n    # Calculate the number of brownies after the party\n    brownies_after_party = initial_brownies + 4 * 12\n\n    # Calculate the number of brownies eaten during the party\n    brownies_eaten = brownies_after_party * (1.5 / 2)\n\n    # Calculate the number of brownies left over\n    brownies_left_over = brownies_after_party - brownies_eaten\n\n    # Display the number of brownies left over\n    result = brownies_left_over\n    return result"}
{"output": "def solution():\n    \n    nani_age = 8\n    brother_age = nani_age * 2\n    sister_age = nani_age * 0.25\n    total_age = nani_age + brother_age + sister_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    num_racquets = 12\n    num_synthetic_gut = 3\n    num_polyester_gut = 5\n    num_hybrid_gut = 4\n    avg_time_synthetic_gut = 15\n    avg_time_polyester_gut = 22\n    avg_time_hybrid_gut = 18\n\n    # Calculate the total time to string all racquets\n    total_time = (num_synthetic_gut * avg_time_synthetic_gut) + (num_polyester_gut * avg_time_polyester_gut) + (num_hybrid_gut * avg_time_hybrid_gut)\n    result = total_time\n    return result"}
{"output": "def solution():\n    num_phones = 3  # John and his 2 kids\n    phone_price = 600  # The phone price is $600\n\n    # Calculate the total cost of the phones before the first 2\n    total_cost_before_2_phones = num_phones * phone_price\n\n    # Calculate the total cost of the phones after the first 2\n    total_cost_after_2_phones = total_cost_before_2_phones * 2\n\n    # Calculate the total cost of the phones after the second 2\n    total_cost_after_2_phones = total_cost_after_2_phones * 2\n\n    # Calculate the total cost of all phones\n    total_cost = total_cost_after_2_phones + total_cost_after_2_phones\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of players in Carlton's team\n    carlton_players = 13\n\n    # Calculate the number of players in Zeke's team\n    zeke_players = carlton_players + 7\n\n    # Calculate the total number of players in both teams\n    total_players = carlton_players + zeke_players\n\n    # return the result\n    result = total_players\n    return result"}
{"output": "def solution():\n    \n    length = 15\n    width = 10\n    fence_length = length * width\n    slats_per_foot = 2\n    total_slats = fence_length * slats_per_foot\n    result = total_slats\n    return result"}
{"output": "def solution():\n    # Calculate the total number of oranges Mrs. Harrington bought\n    total_oranges = 12 * 20\n\n    # Calculate the number of oranges Mrs. Harrington gave her mom and her sister\n    given_oranges = 2 * 20\n\n    # Calculate the number of oranges Mrs. Harrington kept\n    kept_oranges = total_oranges / 4\n\n    # Calculate the number of oranges Mrs. Harrington sold\n    sold_oranges = total_oranges - given_oranges - kept_oranges\n\n    result = sold_oranges\n    return result"}
{"output": "def solution():\n    \n    usa_states = (1/2) * 60\n    india_states = (1/2) * usa_states + 4\n    total_states = usa_states + india_states\n    result = total_states\n    return result"}
{"output": "def solution():\n    \n    dictionary_cost = 18\n    dinosaur_book_cost = 13\n    childrens_cookbook_cost = 8\n    total_cost = dictionary_cost + dinosaur_book_cost + childrens_cookbook_cost\n    saved_money = 14\n    hourly_rate = 5\n    hours_needed = total_cost / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    total_cherries = 60\n    robert_cherries = 30\n    jerry_cherries = robert_cherries + 10\n    robert_jerry_cherries = robert_cherries - jerry_cherries\n    difference = robert_jerry_cherries - jerry_cherries\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    gingerbread_sold = 10\n    apple_pie_sold = 15\n    sunday_gingerbread_sold = gingerbread_sold - 4\n    sunday_gingerbread_sold = gingerbread_sold + 5\n    sunday_apple_pie_sold = sunday_apple_pie_sold + 15\n    total_gingerbread_sold = gingerbread_sold * 6\n    total_apple_pie_sold = apple_pie_sold * 15\n    total_sales = total_gingerbread_sold + total_apple_pie_sold\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of sunscreen per bottle and the number of hours worked per day\n    SUNSCREEN_PER_BOTTLE = 8\n    HOURS_PER_DAY = 4\n\n    # Calculate the total amount of sunscreen needed for 8 days\n    total_sunscreen_needed = SUNSCREEN_PER_BOTTLE * HOURS_PER_DAY * 8\n\n    # Display the total amount of sunscreen needed\n    result = total_sunscreen_needed\n    return result"}
{"output": "def solution():\n    \n    blue_car_price = 100\n    red_car_price = blue_car_price * 0.4\n    total_price = blue_car_price + red_car_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    emil_age_now = 19\n    emil_age_turning_24 = 24\n    dad_age_now = emil_age_now - emil_age_turning_24\n    brother_age_now = dad_age_now * 2\n    total_age_now = emil_age_now + dad_age_now + brother_age_now\n    result = total_age_now\n    return result"}
{"output": "def solution():\n    \n    mother_beads = 20\n    sister_beads = mother_beads + 10\n    friend_beads = mother_beads * 2\n    total_beads = mother_beads + sister_beads + friend_beads\n    result = total_beads\n    return result"}
{"output": "def solution():\n    \n    thursday_crawfish = 3\n    friday_crawfish = thursday_crawfish * 4\n    saturday_crawfish = friday_crawfish / 2\n    total_crawfish = thursday_crawfish + friday_crawfish + saturday_crawfish\n    serving_size = 3\n    servings = total_crawfish // serving_size\n    result = servings\n    return result"}
{"output": "def solution():\n    \n    total_students = 30\n    football_players = total_students * 0.2\n    remaining_students = total_students - football_players\n    cheerleaders = remaining_students * 0.25\n    band_players = remaining_students - cheerleaders\n    total_early_students = football_players + band_players\n    result = total_early_students\n    return result"}
{"output": "def solution():\n    \n    sophie_size = 5\n    charlie_size = sophie_size * 5\n    total_size = sophie_size + charlie_size\n    average_size = total_size / 2\n    result = average_size\n    return result"}
{"output": "def solution():\n    \n    flower_bed_length = 111\n    flower_width = 12\n    flowering_plants_per_plant = 1.5\n    flowers_owned = 17\n    flowering_plants_needed = flower_bed_length - (flower_width * flowering_plants_per_plant)\n    cost_per_flowering_plant = 6\n    total_cost = flowering_plants_needed * cost_per_flowering_plant\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pretzels Edgar eats per day\n    edgar_pretzels_per_day = 18\n\n    # Calculate the number of pretzels his brother eats per day\n    brother_pretzels_per_day = edgar_pretzels_per_day / 2\n\n    # Calculate the number of pretzels his brother eats in a week\n    brother_pretzels_per_week = brother_pretzels_per_day * 7\n\n    # Display the number of pretzels his brother eats in a week\n    result = brother_pretzels_per_week\n    return result"}
{"output": "def solution():\n    num_baskets = 5\n    petunias_per_basket = 3\n    sweet_potato_vines_per_basket = 2\n    petunias_cost = 3.0\n    sweet_potato_vines_cost = 2.5\n\n    # Calculate the total cost of petunias\n    total_petunias_cost = num_baskets * petunias_per_basket * petunias_cost\n\n    # Calculate the total cost of sweet potato vines\n    total_sweet_potato_vines_cost = num_baskets * sweet_potato_vines_per_basket * sweet_potato_vines_cost\n\n    # Calculate the total cost of all hanging baskets\n    total_cost = total_petunias_cost + total_sweet_potato_vines_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    soil_weight = 30  # Artemis buys a 30-pound bag of soil\n    rose_weight = 1  # Each rose needs 1 pound of soil\n    carnation_weight = 1.5  # Each carnation needs 1.5 pounds of soil\n    sunflowers = 4  # Artemis planted 4 sunflowers\n    carnations = 10  # Artemis planted 10 carnations\n\n    # Calculate the total weight of the soil\n    total_soil_weight = soil_weight * sunflowers + carnations * carnation_weight\n\n    # Calculate the number of roses they can plant\n    roses = total_soil_weight // rose_weight\n    result = roses\n    return result"}
{"output": "def solution():\n    \n    monthly_income = 2000\n    percent_to_set = 25\n    percent_to_set = 100 - percent_to_set\n    cost_per_shoe = 1000\n    shoes_per_month = monthly_income / (percent_to_set / 100)\n    shoes_per_year = shoes_per_month * 12\n    result = shoes_per_year\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes Emily to peel 90 shrimp\n    time_peeled = 90 / 6  # Emily can peel 6 shrimp a minute\n    time_saute = 10  # Emily sautes 30 shrimp in 10 minutes\n    total_time = time_peeled + time_saute\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the starting temperature and the time of the air conditioner\n    starting_temp = 2\n    starting_time = 3\n    high_temp = 3\n    starting_time = 4\n\n    # Calculate the temperature after the air conditioner ran\n    temperature_after_air_conditioner = (2 * starting_time) - (3 * high_temp)\n\n    # Calculate the temperature after the air conditioner turned off\n    temperature_after_air_conditioner -= (2 * starting_time)\n\n    # Calculate the difference between the final temperature and the starting temperature\n    temperature_difference = starting_temp - temperature_after_air_conditioner\n\n    result = temperature_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the age of Bill's dad when he was 30\n    dad_age = 30\n\n    # Calculate the age of Bill's father when he was 30\n    father_age = dad_age / 75\n\n    # Calculate Bill's age when he was three times the age his father was when he was 30\n    father_age_at_30 = father_age * 3\n\n    # Calculate Bill's age when he saw the Comet for the first time\n    bill_age_at_first_time = father_age_at_30 - 30\n\n    # Display Bill's age when he saw the Comet for the first time\n    result = bill_age_at_first_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of checks written per month for each service\n    electric_checks = 12\n    gas_checks = 12\n    church_checks = 2 * electric_checks\n    pest_lawn_checks = 0.25 * gas_checks\n\n    # Calculate the total number of checks written per year\n    total_checks = electric_checks + gas_checks + church_checks + pest_lawn_checks\n\n    # Display the total number of checks written per year\n    result = total_checks\n    return result"}
{"output": "def solution():\n    # Calculate the number of flights the first plane takes in one day\n    first_plane_flights = 0.75 * 44  # Greece takes three-quarters of its flights\n\n    # Calculate the number of flights the second plane takes in one day\n    second_plane_flights = (1/4) * first_plane_flights\n\n    # Calculate the number of trips the first plane makes throughout each day\n    other_plane_trips = 44 / 2  # The other plane makes half the number of trips the first plane makes throughout each day\n\n    # Calculate the number of flights to France the first plane takes in one day\n    first_plane_flights = first_plane_flights + other_plane_trips\n\n    result = first_plane_flights\n    return result"}
{"output": "def solution():\n    tobias_time = 20  # seconds\n    chikote_time = tobias_time * 2  # seconds\n    igneous_time = (tobias_time + chikote_time) / 2  # seconds\n    total_time = tobias_time + chikote_time + igneous_time  # total time in minutes\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of trousers\n    initial_trousers = 30\n\n    # Define the amount of trousers his mother gave him\n    mother_trousers = 6\n\n    # Define the amount of trousers his father gave him\n    father_trousers = initial_trousers * 2\n\n    # Calculate the total amount of trousers\n    total_trousers = initial_trousers + mother_trousers + father_trousers\n\n    # Calculate the amount of money Adam needs to contribute from his savings\n    savings = total_trousers - total_trousers\n\n    # Display the amount of money Adam needs to contribute\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define Akbar's age and Alessandro's age\n    akbar_age = 3\n    alessandro_age = 4\n\n    # Calculate the average age of the group\n    average_age = 20 / 4\n\n    # Calculate Helene's age\n    helene_age = 2 * average_age\n\n    # Calculate the total age of the group\n    total_age = akbar_age + alessandro_age + helene_age\n\n    # Calculate the age of Wilfred\n    wilfred_age = total_age - 20\n\n    # Display the age of Wilfred\n    result = wilfred_age\n    return result"}
{"output": "def solution():\n    # Calculate the total amount collected by Walter\n    total_collected = 500 + 1500\n\n    # Calculate the amount donated by Walter's lawyer\n    lawyer_donation = 3 * (total_collected - 200)\n\n    result = lawyer_donation\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and cookies per guest\n    num_guests = 100\n    cookies_per_guest = 15\n\n    # Calculate the total number of cookies\n    total_cookies = num_guests * cookies_per_guest\n\n    # Calculate the number of cookies the bride gave to the church next door\n    cookies_to_church_next_door = total_cookies / 2\n\n    # Calculate the number of people in the church next door\n    num_people_next_door = cookies_to_church_next_door / 15\n\n    # Display the number of people in the church next door\n    result = num_people_next_door\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and kids\n    num_adults = 6\n    num_kids = 4\n\n    # Calculate the total number of slices\n    total_slices = num_adults * 2 + num_kids * 4\n\n    # Calculate the percentage of watermelon each adult gets\n    watermelon_percentage = (num_adults * watermelon_slices / total_slices) * 100\n\n    # Display the percentage of watermelon each adult gets\n    result = watermelon_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to check one inpatient and one appointment\n    INVATIENT_TIME = 20\n    APPOINTMENT_TIME = 30\n\n    # Define the number of inpatients and appointments\n    num_inpatients = 9\n    num_appointments = 10\n\n    # Calculate the total time to check all the inpatients\n    total_time = num_inpatients * INVATIENT_TIME + num_appointments * APPOINTMENT_TIME\n\n    # Convert the total time to hours\n    total_time_hours = total_time / 60\n\n    # Calculate the time left to update the records\n    time_left = 9 * TIME_TO_UPDATE\n\n    # Display the time left to update the records\n    result = time_left\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to make the batter and bake the cake\n    batter_time = 20\n    bake_time = 30\n\n    # Define the time it takes to cool and frost the cake\n    cool_time = 2 * 60 + 10\n\n    # Calculate the total time it takes to make the cake\n    total_time = batter_time + bake_time + cool_time + frost_time\n\n    # Calculate the latest time of the cake\n    latest_time = total_time - 5 * 60\n\n    # Display the latest time of the cake\n    result = latest_time\n    return result"}
{"output": "def solution():\n    \n    lisa_bars = 3.5 * 64\n    peter_bars = 4.5 * 64\n    total_bars = lisa_bars + peter_bars\n    bars_per_box = 64 / total_bars\n    result = bars_per_box\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per session and the number of students rented per week\n    SESSION_COST = 25\n    REnt_PER_WEEK = 1.5\n\n    # Define the number of students per session and the number of days per week\n    STUDENTS_PER_WEEK = 10\n    DAYS_PER_WEEK = 3\n\n    # Calculate the total number of session sessions in a month\n    sessions_per_month = STUDENTS_PER_WEEK * DAYS_PER_WEEK * 4\n\n    # Calculate the expected earnings per month\n    expected_earnings_per_month = sessions_per_month * REENT_COST\n\n    # Display the expected earnings per month\n    result = expected_earnings_per_month\n    return result"}
{"output": "def solution():\n    # Calculate the number of chocolate bars in Martha's boxes\n    martha_boxes = 7\n    martha_bars = 56\n\n    # Calculate the number of chocolate bars in Peter's boxes\n    peter_bars = 4 * martha_boxes\n\n    # Calculate the difference in the number of chocolate bars in each box\n    difference = peter_bars - martha_bars\n    result = difference\n    return result"}
{"output": "def solution():\n    # Calculate the number of female porcupines\n    female_porcupines = (3/5) * 50\n\n    # Calculate the number of porcupines after a year\n    porcupines_after_year = 50 + (female_porcupines * 4)\n\n    result = porcupines_after_year\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the pool\n    width = 14\n    length = 25\n    depth = 4\n\n    # Calculate the volume of the pool\n    volume = width * length * depth\n\n    # Calculate the amount of water needed to fill the pool\n    water_needed = volume / 5.9\n\n    # Calculate the cost to fill the pool\n    cost = water_needed * 0.10\n\n    # Display the cost to fill the pool\n    result = cost\n    return result"}
{"output": "def solution():\n    \n    red_sticks = 9\n    blue_sticks = red_sticks + 5\n    yellow_sticks = blue_sticks - 3\n    total_sticks = red_sticks + blue_sticks + yellow_sticks\n    result = total_sticks\n    return result"}
{"output": "def solution():\n    \n    matteo_speed = 55\n    matteo_hours = 4\n    shandy_speed = 45\n    shandy_hours = 10\n    matteo_distance = matteo_speed * matteo_hours\n    shandy_distance = shandy_speed * shandy_hours\n    difference = shandy_distance - matteo_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    total_students = 3000\n    over_16_students = total_students / 2\n    male_over_16_students = over_16_students / 4\n    male_under_16_students = total_students / 2\n    male_under_16_students = under_16_students / 2\n\n    # Calculate the number of female students\n    female_students = total_students - (over_16_students + male_over_16_students + male_under_16_students)\n    result = female_students\n    return result"}
{"output": "def solution():\n    \n    bethany_laps = 10\n    trey_laps = bethany_laps + 4\n    shaelyn_laps = trey_laps / 2\n    quinn_laps = shaelyn_laps - 2\n    difference = bethany_laps - trey_laps - quinn_laps\n    result = difference\n    return result"}
{"output": "def solution():\n    tank_capacity = 18000  # The tank has a capacity of 18000 gallons\n    wanda_filled = tank_capacity * (1/4)  # Wanda filled 1/4 of the tank's capacity with water on the first day\n    wanda_pumped_first_day = wanda_filled * (3/4)  # Wanda pumped 3/4 as much water she pumped on the first day\n    wanda_pumped_second_day = wanda_pumped_first_day * (2/3)  # Wanda pumped 2/3 of the amount of water she pumped on the second day\n\n    # Calculate the total amount of water Wanda pumped in two days\n    total_wanda_pumped = wanda_pumped_first_day + wanda_pumped_first_day + wanda_pumped_second_day\n\n    result = total_wanda_pumped\n    return result"}
{"output": "def solution():\n    \n    # Define the initial charge and the percentages lost\n    initial_charge = 0\n    lost_percent = 0.9\n\n    # Calculate the charge after losing 9% of the total capacity each hour\n    charged_charge_1 = initial_charge * lost_percent\n\n    # Calculate the charge after losing 7% of the total capacity each hour for 3 hours\n    charged_charge_2 = charged_charge_1 * 3\n\n    # Calculate the charge after losing 7% of the total capacity for 3 hours\n    charged_charge_3 = charged_charge_2 * 3\n\n    # Calculate the charge after losing 28% of the total capacity\n    charged_charge_4 = charged_charge_1 + charged_charge_2 + charged_charge_3\n\n    # Display the charge after charging 28%\n    result = charged_charge_4\n    return result"}
{"output": "def solution():\n    \n    wages_per_week = 10\n    tips_per_week = 15\n    total_wages = wages_per_week * 40\n    total_tips = tips_per_week * 40\n    total_cost = 10000\n    savings_percentage = 0.2\n    weeks_to_save = (total_cost - total_wages) / savings_percentage\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    peach_price = 0.5\n    pear_price = 0.75\n    apple_price = 1\n    kiwis_price = 1\n    plum_price = 0.25\n\n    # Define the number of each item purchased\n    num_peaches = 3\n    num_pears = 4\n    num_kiwis = 2\n    num_apples = 5\n\n    # Calculate the total cost of the peaches\n    peach_cost = num_peaches * peach_price\n\n    # Calculate the total cost of the pears\n    pear_cost = num_peaches * pear_price\n\n    # Calculate the total cost of the kiwis\n    kiwis_cost = num_kiwis * kiwis_price\n\n    # Calculate the total cost of the apples\n    apple_cost = num_apples * apple_price\n\n    # Calculate the total cost of all the fruit\n    total_cost = peach_cost + pear"}
{"output": "def solution():\n    # Calculate the total number of sweets\n    total_sweets = 15 * 60\n\n    # Calculate the number of sweets kept\n    kept_sweets = 2 * 60\n\n    # Calculate the number of sweets given to her friends\n    friends_sweets = total_sweets - kept_sweets\n\n    # Calculate the number of sweets each friend received\n    sweets_per_friend = friends_sweets // 10\n\n    result = sweets_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of carrots\n    initial_price = 120\n\n    # Calculate the new price of carrots after three years\n    new_price = initial_price * 1.05\n\n    # Round the price to the nearest integer\n    rounded_price = round(new_price)\n\n    # Display the rounded price\n    result = rounded_price\n    return result"}
{"output": "def solution():\n    total_pictures = 72\n    num_albums = 8\n    num_selfies = 3\n    num_portraits = 2\n\n    # Calculate the number of pics in each album\n    pics_per_album = total_pictures / num_albums\n\n    # Calculate the number of portraits in each album\n    portraits_per_album = pics_per_album - num_selfies - num_portraits\n\n    result = portraits_per_album\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes James to read 3 pages of his book\n    time_3_pages = 10\n\n    # Define the number of pages James reads\n    pages_read = 18\n\n    # Calculate the time it takes James to read the book\n    time_read = pages_read / time_3_pages\n\n    # Calculate the time it takes James to sleep\n    time_sleep = pages_read / time_sleep\n\n    # Calculate the total time James spends reading\n    total_time = time_read + time_sleep\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of guests\n    guests = 100\n\n    # Calculate the number of guests who checked in early and late checkout\n    early_checkout_checked = 24\n    late_checkout_checked = 15\n\n    # Calculate the number of guests who checked in afternoon\n    afternoon_checked = late_checkout_checked * 2\n\n    # Calculate the number of guests who checked in after dinner\n    after_dinner_checked = early_checkout_checked + late_checkout_checked + afternoon_checked\n\n    # Display the current number of guests\n    result = after_dinner_checked\n    return result"}
{"output": "def solution():\n    \n    wednesday_bananas = 4\n    thursday_bananas = 6\n    friday_bananas = 3 * wednesday_bananas\n    total_bananas = wednesday_bananas + thursday_bananas + friday_bananas\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of items in the quiz\n    total_items = 60\n\n    # Calculate the number of easy questions\n    easy_questions = total_items * 0.4\n\n    # Calculate the number of average and difficult questions\n    difficult_questions = total_items - easy_questions\n\n    # Calculate the number of easy and difficult questions\n    easy_difficult_questions = easy_questions / 2\n\n    # Calculate the total points Aries is sure to get\n    easy_points = easy_questions * 0.75\n    difficult_points = difficult_questions * 0.5\n\n    # Calculate the total points Aries is sure to get\n    total_points = easy_points + difficult_points\n\n    # Display the total points\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each large stuffed animal\n    LARGE_ANTITY_PRICE = 4\n\n    # Define the number of large stuffed animals sold today\n    large_animals_sold = 2\n\n    # Calculate the total earnings from selling large stuffed animals\n    large_animals_earnings = large_animals_sold * LARGE_ANTITY_PRICE\n\n    # Calculate the total earnings from selling small stuffed animals\n    small_animals_earnings = 120 - large_animals_earnings\n\n    # Calculate the number of small stuffed animals sold\n    small_animals_sold = small_animals_earnings / LARGE_ANTITY_PRICE\n\n    # Display the number of small stuffed animals sold\n    result = small_animals_sold\n    return result"}
{"output": "def solution():\n    # Calculate the total number of sandwiches eaten by the family in one week\n    total_sandwiches = 5*7 + 4*7 + 2*7  # man eats 5 sandwiches per day, wife eats 4 sandwiches per day, son eats 2 sandwiches per day\n    result = total_sandwiches\n    return result"}
{"output": "def solution():\n    \n    cookies_sold = 80\n    cookies_price = 1\n    cupcakes_sold = 60\n    cupcakes_price = 4\n    sisters_given = 2 * 10\n    total_earnings = (cookies_sold * cookies_price) + (cupcakes_sold * cupcakes_price)\n    money_left = total_earnings - sisters_given\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_eggs = 100\n    eggs_found_by_smith = 30 * 2\n    eggs_found_by_friends = total_eggs - eggs_found_by_smith - 10\n    result = eggs_found_by_friends\n    return result"}
{"output": "def solution():\n    ore_per_dwarf = 12  # One dwarf can mine 12 pounds of ore per day with his bare hands\n    iron_pickaxe_mine = ore_per_dwarf * 2  # One dwarf can mine twice as much with an iron pickaxe\n    steel_pickaxe_mine = iron_pickaxe_mine * 1.5  # One dwarf can mine 50% more with a steel pickaxe than with an iron pickaxe\n    days_in_month = 30  # There are 30 days in a month\n\n    # Calculate the total amount of ore mine with iron pickaxes in a month\n    total_iron_pickaxe_mine = iron_pickaxe_mine * days_in_month\n\n    # Calculate the total amount of ore mine with steel pickaxes in a month\n    total_ste_pickaxe_mine = steel_pickaxe_mine * days_in_month\n\n    # Calculate the total"}
{"output": "def solution():\n    \n    package1_price = 3\n    package2_price = 6\n    package3_price = 6\n    package1_size = 2\n    package2_size = 4\n    package3_size = 8\n    package4_price = 6\n    package3_size = 8\n    total_price = (package1_price * package1_size) + (package2_price * package2_size) + (package3_price * package2_size) + (package3_price * package3_size)\n    price_of_8_sandwiches = total_price - (package1_price * package2_size)\n    result = price_of_8_sandwiches\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the bedroom set and the selling price of the old bedroom set\n    bedroom_set_cost = 3000\n    old_bedroom_price = 1000\n\n    # Calculate the total cost of the bedroom set\n    total_cost = bedroom_set_cost - old_bedroom_price\n\n    # Calculate the amount to be paid per month\n    monthly_payment = total_cost * 0.1\n\n    # Display the monthly payment\n    result = monthly_payment\n    return result"}
{"output": "def solution():\n    \n    red_balloons = 25\n    green_balloons = 7\n    yellow_balloons = 12\n    red_burst = red_balloons * 0.4\n    yellow_burst = yellow_balloons * 0.5\n    red_balloons -= red_burst\n    green_balloons -= green_balloons\n    yellow_balloons -= yellow_balloons\n    blue_balloons += 8\n    clutch_balloons = blue_balloons * 0.75\n    total_balloons = red_balloons + green_balloons + yellow_balloons + blue_balloons + clutch_balloons\n    result = total_balloons\n    return result"}
{"output": "def solution():\n    normal_teacher_chance = 50  # Marcus has a 50% chance that tomorrow he'll have a substitute teacher\n    normal_teacher_chance = normal_teacher_chance * 1.4  # Marcus gives everyone an extension\n    personal_teacher_chance = 20  # Marcus gives a 20% chance that the dog ate his assignment\n\n    # Calculate the total number of students in the tomorrow\n    total_students = normal_teacher_chance + personal_teacher_chance\n\n    # Calculate the percentage chance that Marcus will actually have to turn in his homework tomorrow\n    percentage_chance = (total_students / total_students) * 100\n    result = percentage_chance\n    return result"}
{"output": "def solution():\n    \n    total_people = 6000\n    graduates = 950\n    faculty_attendees = 300\n    total_attendees = graduates + faculty_attendees\n    tickets_per_graduate = total_attendees / total_people\n    result = tickets_per_graduate\n    return result"}
{"output": "def solution():\n    \n    large_beans = 75\n    medium_beans = large_beans * 2\n    small_beans = medium_beans - 3\n    result = small_beans\n    return result"}
{"output": "def solution():\n    hours_per_day = 6\n    num_days = 3\n    court_case_pay = 15\n    parking_pay = 3\n\n    # Calculate the total pay for the court case\n    court_case_pay = hours_per_day * court_case_pay * num_days\n\n    # Calculate the total pay for parking\n    parking_pay = parking_pay * num_days\n\n    # Calculate the total pay for all expenses\n    total_expenses = court_case_pay + parking_pay\n\n    # Calculate the jury pay per hour after expenses\n    jury_pay_per_hour = total_pay / total_expenses\n    result = jury_pay_per_hour\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    BOOK_COST = 16\n    PENCIL_COST = 6\n\n    # Define the number of each item purchased\n    num_books = 3\n    num_pencils = 3\n\n    # Calculate the total cost of the books\n    book_cost = num_books * BOOK_COST\n\n    # Calculate the total cost of the pencils\n    pencil_cost = num_pencils * PENCIL_COST\n\n    # Calculate the total cost\n    total_cost = book_cost + pencil_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the driveway\n    width = 24\n\n    # Calculate the volume of the driveway\n    driveway_volume = width * 3\n\n    # Calculate the volume of the soda in the first bottle\n    soda_volume = driveway_volume // 3\n\n    # Calculate the total time it will take to set off all the soda\n    total_time = soda_volume + 5\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    apples_per_box = 40  # There are 40 apples in one box\n    boxes = 2  # Uncle Franky ordered two boxes of apples\n    apples_per_pack = 8  # Uncle Franky is planning to pack the apples with 8 apples in one pack\n\n    # Calculate the total number of apples Uncle Franky can make\n    total_apples = apples_per_box * boxes\n\n    # Calculate the number of packs of apples Uncle Franky can make\n    packs_of_apples = total_apples // apples_per_pack\n    result = packs_of_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of Parmesan and Mozzarella cheese\n    PARMEAN_PRICE = 11\n    MOZARELLA_PRICE = 6\n\n    # Define the amount of each type of cheese Amor buys\n    parmesan_pounds = 2\n    mozzarella_pounds = 3\n\n    # Calculate the total cost of the meat\n    total_cost = (parmesan_pounds * PARMEAN_PRICE) + (mozzarella_pounds * MOZARELLA_PRICE)\n\n    # Calculate the amount of money Amor will have left\n    money_left = 50 - total_cost\n\n    # Display the amount of money Amor will have left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of years it takes Jim to finish and the income per year\n    years_to_finish = 4\n    income_per_year = 50000\n\n    # Define the number of years it takes Jim to college\n    years_to_college = years_to_finish * 25\n\n    # Calculate the total income for college\n    income_per_year = income_per_year * years_to_college\n\n    # Calculate the number of years it will take Jim to earn the money equivalent to the loans\n    years_to_earn = income_per_year / income_per_year\n\n    # Display the number of years it will take Jim to earn the money equivalent to the loans\n    result = years_to_earn\n    return result"}
{"output": "def solution():\n    \n    bed_length = 6\n    bed_width = 8\n    bed_fabric_length = bed_length + 2\n    bed_fabric_width = bed_width + 2\n    total_fabric_length = bed_fabric_length * bed_fabric_width\n    result = total_fabric_length\n    return result"}
{"output": "def solution():\n    \n    monday_letters = 425\n    tuesday_letters = (1/5) * monday_letters + 17\n    wednesday_letters = (2 * tuesday_letters) + 5\n    result = wednesday_letters\n    return result"}
{"output": "def solution():\n    num_people = 16\n    chicken_salad_price = 6.5\n    pasta_salad_price = 6.0\n    num_chicken_salad = 10\n    num_pasta_salad = 6\n\n    # Calculate the total cost of all chicken salad\n    total_chicken_cost = num_people * chicken_salad_price\n\n    # Calculate the total cost of all pasta salad\n    total_pasta_cost = num_people * pasta_salad_price\n\n    # Calculate the total cost of all catering salad\n    total_cost = total_chicken_cost + total_pasta_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    first_race_loss = 5\n    second_race_loss = 2 * first_race_loss + 1\n    third_race_loss = 1.5 * second_race_loss\n    total_loss = first_race_loss + second_race_loss + third_race_loss\n    average_loss = total_loss / 3\n    result = average_loss\n    return result"}
{"output": "def solution():\n    \n    # Define the number of countries and cities in each country\n    num_countries = 26\n    num_cities = 5\n\n    # Define the number of people living in each city\n    people_per_city = 1000\n\n    # Calculate the total number of people in the cities\n    total_people = num_countries * people_per_country * num_cities\n\n    # Calculate the number of people in South America\n    num_south_america = total_people\n\n    # return the result\n    result = num_south_america\n    return result"}
{"output": "def solution():\n    \n    xavier_height = 4 * 12 + 3\n    cole_height = 50\n    cole_growth = 2\n    summer_height = xavier_height + cole_growth\n    difference = summer_height - summer_height\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_amount = 1920\n    second_share = total_amount + 80\n    third_share = second_share * 2\n    first_share = total_amount / 3\n    result = first_share\n    return result"}
{"output": "def solution():\n    \n    # Define the number of painters worked in a day and the number of weeks\n    painters_per_day = 4\n    days_per_week = 7\n\n    # Calculate the total number of painters worked\n    total_painters = painters_per_day * days_per_week * weeks\n\n    # Calculate the total number of hours worked per painter\n    hours_per_painter = total_painters / 4\n\n    # Display the total number of hours worked per painter\n    result = hours_per_painter\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tennis balls Rory retrieved in the first set\n    set1_balls = 19\n\n    # Calculate the number of tennis balls Rory retrieved in the second set\n    set2_balls = set1_balls + 4\n\n    # Calculate the number of tennis balls Rory retrieved in the third set\n    set3_balls = set2_balls / 2\n\n    # Calculate the total number of tennis balls Rory retrieved\n    total_balls = set2_balls + set3_balls\n\n    # Calculate the number of tennis balls Rory retrieved in the first set\n    first_set_balls = total_balls - total_balls\n\n    # Display the number of tennis balls Rory retrieved in the first set\n    result = first_set_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the car and the depreciation rate\n    initial_cost = 20000\n    depreciation_rate = 0.21\n\n    # Calculate the price of the car after the depreciation rate\n    price_after_depreciation = initial_cost * depreciation_rate\n\n    # Calculate the price of the car in the year 2010\n    price_in_year_2010 = price_after_depreciation * 365\n\n    # Display the price of the car in the year 2010\n    result = price_in_year_2010\n    return result"}
{"output": "def solution():\n    total_books = 50\n    english_books = total_books / 2\n    german_books = total_books * 0.1\n    Spanish_books = total_books - english_books - german_books\n    result = Spanish_books\n    return result"}
{"output": "def solution():\n    \n    total_distance = 1955\n    daily_distance = 325\n    days = 4\n    remaining_distance = total_distance - (daily_distance * days)\n    result = remaining_distance\n    return result"}
{"output": "def solution():\n    cups_per_day = 8\n    cups_per_gallon = 16\n    days = 30\n\n    # Calculate the total number of cups in 30 days\n    total_cups = cups_per_day * days\n\n    # Calculate the total number of gallons of water in 30 days\n    total_gallons = total_cups / cups_per_gallon\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 120\n\n    # Calculate the number of people on the train at the first stop\n    first_stop_people = initial_people + 20\n\n    # Calculate the number of people on the train at the second stop\n    second_stop_people = 50 + 2 * 50\n\n    # Calculate the number of people on the train at the third station\n    third_stop_people = 80\n\n    # Calculate the total number of people on the train at the final stop\n    final_people = initial_people + second_stop_people + third_stop_people\n\n    # Display the total number of people on the train at the final stop\n    result = final_people\n    return result"}
{"output": "def solution():\n    \n    top_price = 10\n    running_shorts_price = top_price + 5\n    tennis_shoes_price = 48 / 2\n    socks_price = 8\n    total_price = top_price + running_shorts_price + tennis_shoes_price + socks_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the area of the square floor floor and the cost of each tile\n    area = 200\n    tile_cost = 12\n\n    # Calculate the total length of the square floor tiles\n    total_length = area * 3\n\n    # Calculate the total cost of the new square floor tiles\n    total_tile_cost = total_length * tile_cost\n\n    # Calculate the total cost of renovating the floor\n    total_cost = area * total_tile_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    normal_cost = 120  # The normal cost is $120 per month\n    accident_cost = normal_cost * 1.6  # James had an accident it was 60% more than normal cost\n    annual_cost = normal_cost * 12  # James pays for a year (12 months)\n\n    result = annual_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of beds and king size bed used per week\n    beds_per_week = 4\n    king_size_beds_per_week = 1\n\n    # Define the number of sets of sheets Greg can wash per week\n    twin_sets_per_week = 2\n    king_sets_per_week = 1\n\n    # Calculate the number of loads of laundry Greg can do in a year\n    loads_per_year = (beds_per_week * weeks_per_year) / (twin_sets_per_week * king_sets_per_week * weeks_per_year)\n\n    # Display the number of loads of laundry Greg can do in a year\n    result = loads_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies watched on Saturday\n    saturday_movies = 4\n\n    # Calculate the number of movies watched on Sunday\n    sunday_movies = saturday_movies / 2\n\n    # Calculate the total number of movies watched in 4 weeks\n    total_movies = (saturday_movies + sunday_movies) * 4 * 4\n\n    # Display the total number of movies watched\n    result = total_movies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 100\n\n    # Calculate the number of stickers collected last year\n    last_year_stickers = 50\n\n    # Calculate the number of stickers collected this year\n    this_year_stickers = 2 * last_year_stickers\n\n    # Calculate the total number of stickers collected\n    total_stickers = initial_stickers + last_year_stickers + this_year_stickers\n\n    # return the result\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cats and the amount of cat food feeds per day\n    NUM_CATS = 3\n    COST_PER_DAY = 60\n\n    # Calculate the total amount of cat food used per day\n    total_food_per_day = COST_PER_DAY * 2\n\n    # Calculate the number of days the cat food will last\n    days_last = 720 / total_food_per_day\n\n    # Display the number of days\n    result = days_last\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per pizza\n    SLICES_PER_PIZZA = 8\n\n    # Calculate the total number of slices\n    total_slices = 4 * SLICES_PER_PIZZA\n\n    # Calculate the number of slices Becky ate\n    becky_slices = 10\n\n    # Calculate the number of slices Jake ate\n    jake_slices = becky_slices + 3\n\n    # Calculate the number of slices Silvia ate\n    silvia_slices = jake_slices * 2\n\n    # Calculate the total number of slices eaten\n    total_slices = becky_slices + jake_slices + silvia_slices\n\n    # Display the total number of slices eaten\n    result = total_slices\n    return result"}
{"output": "def solution():\n    meal_length = 98  # The meal was made in 98 minutes\n    donovan_length = meal_length - 18  # Betsy's part took 18 minutes longer than Donovan's part\n    betsy_length = donovan_length + 18  # Betsy's part took 18 minutes longer than Donovan's part\n\n    result = betsy_length\n    return result"}
{"output": "def solution():\n    \n    cast_cost = 200\n    cast_duration = 30\n    visit_cost = cast_cost * cast_duration\n    pill_cost = 4 * 30\n    painkillers_cost = pill_cost * painkillers_cost\n    parking_hours = 2\n    parking_cost = 6 * parking_hours\n    total_cost = cast_cost + visit_cost + painkillers_cost + parking_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days in a week and the percentage of emails who don't require any response\n    DAYS_IN_WEEK = 5\n    FIVE_EMAIL_PER_DAY = 80\n\n    # Calculate the number of emails who don't require any response\n    no_response_emails = int(FIVE_EMAIL_PER_DAY * 0.2)\n\n    # Calculate the number of emails who respond to\n    respond_emails = FIVE_EMAIL_PER_DAY - no_response_emails\n\n    # Display the number of emails who respond to\n    result = respond_emails\n    return result"}
{"output": "def solution():\n    \n    monday_visited = 32\n    tuesday_visited = monday_visited * 2\n    wednesday_visited = tuesday_visited * 3\n    thursday_visited = 30\n    friday_visited = 25\n    total_visited = monday_visited + tuesday_visited + wednesday_visited + thursday_visited + friday_visited\n    result = total_visited\n    return result"}
{"output": "def solution():\n    # Calculate John's average score across the 4 tests\n    total_score = 100 + 80  # John scored 100 on his first 3 tests and an 80 on his 4th\n    average_score = total_score / 4  # Calculate John's average score across the 4 tests\n    result = average_score\n    return result"}
{"output": "def solution():\n    \n    glee_club_pizzas = 20\n    glee_club_eaten = glee_club_pizzas * 0.7\n    football_team_pizzas = glee_club_pizzas * 2\n    football_team_eaten = football_team_pizzas * 0.8\n    total_pizzas = glee_club_eaten + football_team_eaten\n    pizzas_left = total_pizzas - total_pizzas\n    result = pizzas_left\n    return result"}
{"output": "def solution():\n    small_coupons = 700  # Anthony wants to send out 700 small coupons\n    big_coupons = 2 * small_coupons  # Anthony wants to send out twice as many big coupons as small coupons\n    small_coupon_cost = 5  # Each small coupon costs 5 cents\n    big_coupon_cost = 15  # Each big coupon costs 15 cents\n\n    # Calculate the total cost of postage\n    total_cost = (small_coupons * small_coupon_cost) + (big_coupons * big_coupon_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of meatballs in one sub sandwich\n    MEATBALLS_PER_SUB_SANDWICH = 4\n\n    # Calculate the number of meatballs Sidney ordered\n    sidney_ordered = 10 - 3\n\n    # Calculate the number of meatballs Mark ate\n    mark_ate = 4\n\n    # Calculate the number of meatballs Mark ate\n    mark_ate = mark_ate\n\n    # Calculate the total number of meatballs in the sub sandwiches\n    total_meatballs = meatballs_per_sub_sandwich + sidney_ordered + mark_ate\n\n    # Calculate the number of meatballs remaining\n    remaining_meatballs = total_meatballs - mark_ate\n\n    # Display the number of meatballs remaining\n    result = remaining_meatballs\n    return result"}
{"output": "def solution():\n    trucks = 20  # Mr Hezekiah had 20 trucks\n    tons_per_truck = 20  # Each truck is carrying 20 tons of fertiliser packed in bags\n    departed_trucks = 2  # Two hours after departing trucks\n    mechanical_failures_ratio = 0.25  # A quarter of the number of lorries dispatched for delivery had mechanical failures on the road\n\n    # Calculate the total number of tons of fertilisers\n    total_fertilisers = trucks * tons_per_truck\n\n    # Calculate the number of lorries dispatched for delivery\n    lorries_delivered = departed_trucks * tons_per_truck\n\n    # Calculate the total number of tons of fertilisers\n    total_tons = total_fertilisers * lorries_delivered\n    result = total_tons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dozens of croissants Dennis needs to make\n    dozens_of_croissants = 6\n\n    # Calculate the number of pounds of butter Dennis needs to make\n    pounds_of_butter = dozens_of_croissants * 12\n\n    # Calculate the number of pounds of butter the grocery store gets\n    pounds_of_butter_bought = pounds_of_butter / 2\n\n    # Calculate the total cost of 6 pounds of butter\n    cost_of_6_pounds = pounds_of_butter_bought * 4.00\n\n    # Display the total cost of 6 pounds of butter\n    result = cost_of_6_pounds\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the party\n    total_cost = 125 + 6 + 25 + 7 + 13  # $125 for the party, plus $6 for each additional guest, 25 classmates, 7 girls, and 13 family members\n    remaining_cost = total_cost - 4  # Only 4 people said they could not come\n    result = remaining_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money each person had\n    each_money = 60\n\n    # Calculate the amount of money Maggie spent\n    maggie_spent = each_money / 4\n\n    # Calculate the amount of money Riza spent\n    riza_spent = each_money / 3\n\n    # Calculate the total amount of money the two of them have\n    total_money = maggie_spent + riza_spent\n\n    # Calculate the amount of money the two of them have left\n    money_left = total_money - total_money\n\n    # Display the amount of money the two of them have left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_bananas = 315\n    first_monkey_bananas = 10\n    second_monkey_bananas = first_monkey_bananas + 4\n    third_monkey_bananas = total_bananas - first_monkey_bananas - second_monkey_bananas\n    result = third_monkey_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of puzzle pieces\n    initial_pieces = 500\n\n    # Calculate the number of puzzle pieces Teddy placed during the hour\n    placed_pieces = initial_pieces / 2\n\n    # Calculate the total number of puzzle pieces\n    total_pieces = placed_pieces + 500\n\n    # Display the total number of puzzle pieces\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the flowers\n    total_cost = 15 * 12\n\n    # Calculate the total cost of the flowers\n    total_cost_with_cost = 15 * 2 + 15 * 12\n\n    # Calculate the amount of change Jenny received\n    change = 5 * 5 - total_cost_with_cost\n\n    # Calculate the number of quarters Jenny leave with\n    quarters_leave = change // 0.25\n\n    result = quarters_leave\n    return result"}
{"output": "def solution():\n    # Calculate the total revenue from milkshakes\n    milkshakes_revenue = 6 * 5.5\n\n    # Calculate the total revenue from burger platters\n    burger_platters_revenue = 9 * 11\n\n    # Calculate the total revenue from sodas\n    sodas_revenue = 20 * 1.5\n\n    # Calculate the total revenue\n    total_revenue = milkshakes_revenue + burger_platters_revenue + sodas_revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes for each train to arrive in the station\n    train1_time = 10\n    train2_time = 20\n    train3_time = train1_time / 4\n\n    # Calculate the time it takes for each train to arrive in the station\n    train1_time_train1 = train1_time * 60\n    train2_time_train2 = train2_time * 60\n\n    # Calculate the time it takes for each train to arrive in the station\n    train3_time_train1 = train2_time - train2_time_train1\n    train3_time_train2 = train3_time * 60\n\n    # Calculate the total time Paul needs to wait\n    total_time = train1_time + train2_time_train1 + train3_time_train2\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toothpicks needed and the number of weeks it will take to save them\n    toothpicks_needed = 200\n    weeks_saved = 0\n\n    # Calculate the total number of toothpicks saved\n    total_saved = 10 * 12\n\n    # Calculate the number of toothpicks needed to collect the same rate\n    toothpicks_per_rate = toothpicks_needed / total_saved\n\n    # Calculate the number of weeks needed to save the remaining toothpicks\n    weeks_needed = toothpicks_needed / toothpicks_per_rate\n\n    # Display the number of weeks needed\n    result = weeks_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the watch and the discount percentage\n    original_price = 2000\n    discount_percentage = 0.75\n\n    # Calculate the price of the watch after the discount\n    original_price_after_discount = original_price * (1 - discount_percentage)\n\n    # Calculate the price of the watch after the discount\n    price_after_discount = original_price * (1 - discount_percentage)\n\n    # Calculate the percentage discount obtained by Mr. Roger's friend\n    discount_percentage = (price_after_discount / original_price) * 100\n\n    # Display the percentage discount obtained\n    result = discount_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the rate of jellyfish created per second\n    rate = 1 / 2\n\n    # Calculate the number of jellyfish working in 4 hours\n    jellyfish_working = 5 * rate * 4\n\n    # Display the number of jellyfish working\n    result = jellyfish_working\n    return result"}
{"output": "def solution():\n    binkie_score = 90  # Binkie bowled a score of 90\n    frankie_score = 2 * binkie_score + 15  # Frankie's score was 15 more than twice as high as Binkie's\n    result = frankie_score\n    return result"}
{"output": "def solution():\n    # Calculate the time it took James to walk to the store\n    time_to_store = 4 / 4  # James walks 4 miles per hour at home\n\n    # Calculate the time it took James to walk back\n    time_back = time_to_store / 2  # James walks halfway at home\n\n    # Calculate the total time it took James to reach the store\n    total_time = time_to_store + time_back\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each banana and the cost of a bunch\n    BANANA_COST = 0.8\n    BONE_COST = 3.0\n\n    # Define the number of bananas in each bunch and the number of bunches purchased\n    bananas_per_bunch = 4\n    num_bunches = 10\n\n    # Calculate the total cost of buying the bananas individually\n    bananas_individual_cost = bananas_per_bunch * num_bunches * BONE_COST\n\n    # Calculate the amount saved by buying the bananas instead of individually\n    amount_saved = bananas_individual_cost - bananas_individual_cost\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    total_fence = 100\n    harry_fence = (total_fence - 60) / 2\n    sam_fence = total_fence - harry_fence\n    result = sam_fence\n    return result"}
{"output": "def solution():\n    \n    # Define the growth rate of the crocodile\n    GROWTH_RATE = 8 / 4\n\n    # Calculate the growth of the crocodile in 13 years\n    growth_in_13_years = GROWTH_RATE * 13\n\n    # Display the growth in 13 years\n    result = growth_in_13_years\n    return result"}
{"output": "def solution():\n    \n    # Define the price of one MTB and calculate the price of BMX and Trekking bikes\n    MTB_PRICE = 500\n    BMX_PRICE = 0.5 * MTB_PRICE\n    TREKKING_PRICE = 450\n\n    # Calculate the number of Trekking bikes sold\n    trekking_bikes = 300 / 2\n\n    # Calculate the number of BMX bikes sold\n    bMX_bikes = trekking_bikes * 0.15\n\n    # Calculate the number of Trekking bikes sold\n    trekking_bikes = 300 - trekking_bikes\n\n    # Calculate the number of BMX bikes sold\n    bMX_bikes = bMX_bikes * BMX_PRICE\n\n    # Calculate the total revenue\n    total_revenue = trekking_bikes + bMX_bikes + trekking_bikes\n\n    # Calculate the total revenue"}
{"output": "def solution():\n    # Calculate the total number of bales of hay picked by the truck in 6 hours\n    truck_bales = 3 * 6  # each hour the truck picks up 3 bales of hay, and the farmer makes 5 bales, and the truck picks up 3 bales\n\n    # Calculate the total number of bales of hay left in the field\n    total_bales = 5 + truck_bales  # the farmer makes 5 bales each hour and the truck picks up 3 bales of hay\n    bales_left = total_bales - 6  # the farmer and the truck put in a 6 hour day\n\n    result = bales_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of periods and extra classes per week\n    periods_per_day = 6\n    extra_classes_per_week = 2 * periods_per_day\n\n    # Define the length of each class in minutes\n    class_length = 40\n\n    # Define the number of days John goes to class per week\n    days_per_week = 5\n\n    # Calculate the total extra class time per week\n    extra_class_time = class_length * days_per_week\n\n    # Calculate the total time spent learning per week\n    total_learning_time = (extra_class_time * 2) * 60\n\n    # Calculate the total time spent learning per week\n    total_learning_hours = total_learning_time / 60\n\n    # Display the total time spent learning per week\n    result = total_learning_hours\n    return result"}
{"output": "def solution():\n    \n    starting_height = (2/3) * 24\n    second_bounce_height = starting_height - starting_height\n    result = second_bounce_height\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the first child\n    child1_height = 6\n\n    # Define the height of the second child\n    child2_height = child1_height + 2\n\n    # Define the height of the third child\n    child3_height = child2_height - 5\n\n    # Define the height of the fourth child\n    child4_height = child3_height + 3\n\n    # Display the height of the fourth child\n    result = child4_height\n    return result"}
{"output": "def solution():\n    # Calculate the total number of apples sold in one day\n    total_apples_per_day = 2000\n\n    # Calculate the total number of bags sold in one day\n    bags_sold = total_apples_per_day / 10\n\n    # Calculate the total earnings from selling the apples in one bag\n    earnings_per_bag = 5 * bags_sold\n    result = earnings_per_bag\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of meat on the triceratops\n    initial_meat = 270\n\n    # Calculate the amount of meat the triceratops had hunted before the T-Rex ate\n    triceratops_hunted = initial_meat / 2\n\n    # Calculate the amount of meat the pack of velociraptors had left\n    velociraptors_left = initial_meat / 2\n\n    # Calculate the amount of meat the group of lazy Allosaurus gulped down the last 270 kilograms of meat\n    lazy_meat = initial_meat - velociraptors_left\n\n    # Display the amount of meat on the triceratops before the T-Rex ate\n    result = lazy_meat\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each wall\n    north_south_width = 10\n    east_south_width = 5\n    east_west_width = 5\n\n    # Define the area of each wall\n    north_area = 10 * north_south_width\n    east_area = west_south_width * east_west_width\n\n    # Calculate the total area to be painted\n    total_area = north_south_area + east_south_area + east_area\n\n    # Calculate the number of gallons of paint needed\n    gallons_needed = total_area / 20\n\n    # Calculate the cost of the gallons of paint needed\n    cost = gallons_needed * 12\n\n    # Display the cost\n    result = cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sodas Ellen got initially\n    initial_sodas = 12\n\n    # Calculate the number of sodas Ellen shook up\n    shaken_sodas_shaked = 3\n\n    # Calculate the number of unshaken sodas Ellen has left\n    unshaken_sodas_left = initial_sodas - shaken_sodas_shaked\n\n    # Calculate the number of sodas Ellen's brother took\n    brother_sodas_taken = 1 + 2\n\n    # Calculate the number of sodas Ellen's friend took\n    friend_sodas_taken = brother_sodas_taken + unshaken_sodas_left\n\n    # Calculate the likelihood that Ellen's friend gets sprayed with soda\n    likelihood = friend_sodas_taken / shaken_sodas_taken * 100\n\n    # Display the likelihood that Ellen's friend gets sprayed with soda\n    result = likelihood\n    return result"}
{"output": "def solution():\n    \n    # Define the distance traveled by the first train in miles per hour\n    train1_distance = 60\n\n    # Define the distance traveled by the second train in miles per hour\n    train2_distance = train1_distance / 2\n\n    # Define the time of the train\n    time = 3\n\n    # Calculate the total distance traveled by both trains in 3 hours\n    total_distance = (train1_distance + train2_distance) * time\n\n    # Return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    # Calculate the number of people Billy can help in one day\n    people_per_day = 2 * 3\n\n    # Calculate the total number of people Billy can help in one day\n    people_per_day = people_per_day * 31\n\n    # Calculate the number of people Billy takes for March 1st and April 19th off\n    people_between_1st_and_april = people_per_day * 0.8\n\n    # Calculate the total number of people Billy can help in all the days\n    total_people = people_per_day * 31\n\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars and buses\n    num_cars = 20\n    num_buses = 12\n\n    # Define the number of people each car carried\n    car_people = 35\n    bus_people = 3\n\n    # Calculate the total number of people in the church\n    total_people = num_cars * car_people + num_buses * bus_people\n\n    # return the result\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    mike_age = 24\n    martha_age = mike_age - 4\n    jeff_age = martha_age + 10\n    result = jeff_age\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes to ride the biggest slide\n    time_biggest_waterslide = (240 - 60) / 60  # time taken to ride the biggest slide\n\n    # Calculate the time it takes to ride the second biggest slide\n    time_biggest_waterslide = (240 - 80) / 80  # time taken to ride the second biggest slide\n\n    # Calculate the difference in time between the two biggest waterslide and the second biggest slide\n    time_difference = time_biggest_waterslide - time_biggest_waterslide\n    result = time_difference\n    return result"}
{"output": "def solution():\n    lunch_time = 30  # Bobby takes a 30 min lunch\n    break_time = 2  # Bobby takes 2 15 minutes break per day\n    num_days = 5  # Bobby wants to know how many hours his lunches and breaks add up to\n\n    # Calculate the total time Bobby spends lunching and breaks after 5 days\n    total_lunch_time = lunch_time * num_days\n    total_break_time = break_time * num_days\n\n    # Convert the total break time to hours\n    total_break_hours = total_lunch_time / 60\n\n    result = total_break_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Amber ran\n    amber_distance = 8\n\n    # Calculate the distance Micah ran\n    micah_distance = 3.5 * amber_distance\n\n    # Calculate the total distance Ahito ran\n    ahito_distance = 52 - amber_distance - micah_distance\n\n    # Display the distance Ahito ran\n    result = ahito_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial balance and the cost of the item\n    initial_balance = 85\n    item_cost = 15\n\n    # Calculate the cost of the frying pan and towels before the discount\n    frying_pan_cost = initial_balance * 0.8\n    towels_cost = initial_balance * 0.9\n\n    # Calculate the total cost of the frying pan and towels after the discount\n    total_cost = frying_pan_cost + towels_cost\n\n    # Calculate the new balance on the credit card\n    new_balance = initial_balance + item_cost - total_cost\n\n    # return the result\n    result = new_balance\n    return result"}
{"output": "def solution():\n    # Calculate the number of large jellyfish\n    large_jellyfish = 6 / 5  # a fifth of the jellyfish are large\n\n    # Calculate the number of jellyfish that change color from green to blue under UV light\n    blue_jellyfish_change = large_jellyfish / 3  # a third of the large jellyfish change color from green to blue\n\n    # Calculate the total number of jellyfish in the tank\n    total_jellyfish = large_jellyfish + blue_jellyfish_change\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    # Define Chris's age\n    chris_age = 4\n\n    # Calculate Ben's age\n    ben_age = chris_age * 2\n\n    # Calculate Caroline's age\n    caroline_age = ben_age * 3\n\n    # Display Caroline's age\n    result = caroline_age\n    return result"}
{"output": "def solution():\n    # Calculate Lauren's current annual salary\n    annual_salary = 100000\n\n    # Calculate Lauren's current savings\n    current_savings = annual_salary * 0.4\n\n    # Calculate the number of paychecks Lauren needs to save\n    paychecks_needed = retirement_period * 20 / 0.2\n\n    # Calculate the number of years Lauren needs to work\n    years_to_work = paychecks_needed - current_savings\n    result = years_to_work\n    return result"}
{"output": "def solution():\n    \n    # Define the total length of ribbon and the number of equal parts\n    total_length = 100\n    equal_parts = 4\n\n    # Calculate the length of each equal part\n    equal_parts_length = total_length / equal_parts\n\n    # Calculate the length of each final cut\n    final_cut_length = equal_parts_length * 5\n\n    # Display the length of each final cut\n    result = final_cut_length\n    return result"}
{"output": "def solution():\n    # Calculate the number of girls in the school\n    num_girls = 0.4 * 240  # 40% of a school population is made up of 240 boys\n    result = num_girls\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the pots and garden soil\n    POTS_PRICE = 19\n    SOIL_PRICE = 26\n\n    # Define the discount amount\n    COUPON_AMOUNT = 7\n\n    # Calculate the total cost before the coupon\n    total_cost_before_coupon = POTS_PRICE + SOIL_PRICE\n\n    # Calculate the total cost after the coupon\n    total_cost_after_coupon = total_cost_before_coupon - COUPON_AMOUNT\n\n    # Display the total cost after the coupon\n    result = total_cost_after_coupon\n    return result"}
{"output": "def solution():\n    # Calculate the total height of heels at the party\n    total_height = 3 * 4 + 3 * 2  # three wearing 4 inch heels and three wearing 2 inch heels\n\n    # Calculate the average height of heels\n    average_height = total_height / 3\n    result = average_height\n    return result"}
{"output": "def solution():\n    \n    # Define the total distance Soledad can hike in a month\n    total_distance = 9300\n\n    # Define the distance Soledad walked per day and the distance covered each time\n    walking_distance = 125 * 2\n    walking_time = 2\n\n    # Calculate the remaining distance Soledad needs to hike per day to complete her journey\n    remaining_distance = total_distance - walking_distance\n\n    # Calculate the additional distance Soledad needs to hike per day to complete her journey\n    additional_distance_per_day = remaining_distance / walking_time\n\n    # Display the additional distance Soledad needs to hike per day\n    result = additional_distance_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red, blue, and green balls\n    red_balls = 3\n    blue_balls = 11\n    green_balls = 25\n\n    # Define the prices of each type of ball\n    red_price = 9\n    blue_price = 5\n    green_price = 3\n\n    # Calculate the total revenue from all the balls\n    total_revenue = (red_balls * red_price) + (blue_balls * blue_price) + (green_balls * green_price)\n\n    # Calculate the amount of money the store will receive\n    money_received = total_revenue - total_revenue\n\n    # return the result\n    result = money_received\n    return result"}
{"output": "def solution():\n    \n    total_apples = 12\n    peter_apples = total_apples / 4\n    paul_apples = total_apples / 3\n    james_apples = total_apples - peter_apples - paul_apples\n    result = james_apples\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 2\n    decreased_temp = 8\n    increased_temp = 3\n    final_temp = initial_temp - decreased_temp + increased_temp\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    starting_money = 21\n    saved_money = 11\n    comic_book_cost = 5\n    puzzle_cost = 19\n    total_spent = comic_book_cost + puzzle_cost\n    money_left = starting_money - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial budget and the amount spent\n    initial_budget = 16\n    spent_amount = 4\n\n    # Define the remaining budget\n    remaining_budget = 2\n\n    # Calculate the total amount spent\n    total_spent = spent_amount + remaining_budget\n\n    # Calculate the total cost of the books\n    total_cost = initial_budget - total_spent\n\n    # Calculate the cost of each of the books\n    cost_per_book = total_cost / 2\n\n    # Display the cost of each of the books\n    result = cost_per_book\n    return result"}
{"output": "def solution():\n    \n    last_year_students = 50\n    increase_percent = 20\n    this_year_students = last_year_students + (last_year_students * (increase_percent / 100))\n    result = this_year_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the light blinks and the time it takes to blink them\n    blinks = 255\n    time_per_blink = 5\n\n    # Calculate the total time it will take to blink 459 times\n    total_time = 459 / (blinks * time_per_blink)\n\n    # Return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of male guppies, female guppies, and female goldfishes\n    male_guppies = 4\n    female_guppies = 7\n    female_guppies = 3\n    female_guppies = 5\n\n    # Define the number of male guppies, female goldfishes, and female goldfishes purchased\n    male_guppies = 2\n    female_guppies = 1\n    male_goldfishes = 2\n    female_goldfishes = 3\n\n    # Calculate the total number of male fishes\n    total_male_fishes = male_guppies + female_guppies + female_guppies\n\n    # Calculate the total number of female fishes\n    total_female_fishes = male_guppies + female_guppies + female"}
{"output": "def solution():\n    \n    amalia_time = 4\n    megan_time = amalia_time + 2\n    dior_time = amalia_time + 4\n    total_time = amalia_time + megan_time + dior_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    # Calculate the distance John travels in a month\n    distance_per_month = 2 * 70 * 2  # John visits his parents twice a month, which takes 2 hours to drive at a speed of 70 mph\n    result = distance_per_month\n    return result"}
{"output": "def solution():\n    \n    sofie_days = 7\n    sofie_distance = 10 * sofie_days\n    brian_distance = sofie_distance / 2\n    brian_days = 7 - sofie_days\n    result = brian_days\n    return result"}
{"output": "def solution():\n    \n    total_toys = 400\n    workers_available = 5\n    worker1_toys = 6\n    worker2_toys = 6\n    worker3_toys = 4\n    worker4_toys = 4\n    shift_time = 10\n    remaining_toys = 20\n    \n    # Calculate the total number of toys produced by the first 5 workers\n    worker1_total_toys = workers_available * worker1_toys\n    worker2_total_toys = workers_available * worker2_toys\n    worker3_total_toys = workers_available * worker2_toys\n    worker4_total_toys = workers_available * worker3_toys\n    \n    # Calculate the total number of toys produced by the fifth worker\n    fifth_worker_total_toys = total_toys - worker1_total_toys - worker2_total_toys - shift_time\n    \n    # Calculate the average number of toys produced per hour\n    toys_per_hour = fifth_worker_total_to"}
{"output": "def solution():\n    kory_dog_weight = 60  # Kory's dog is 60 pounds\n    elijah_kory_weight = kory_dog_weight / 4  # Elijah has one-fourth the weight of Kory's dog\n    elijah_kory_weight = elijah_kory_weight * 2  # Elijah has one-fourth the weight of Kory's dog\n\n    # Calculate the total weight of Elijah and Kory's dogs\n    total_weight = elijah_kory_weight + kory_dog_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of stickers Seth gave to Luis\n    luis_stickers = 6\n\n    # Calculate the number of stickers Seth gave to Kris\n    kris_stickers = 9\n\n    # Calculate the number of stickers Seth gave to Kris\n    kris_stickers = kris_stickers - 7\n\n    # Calculate the number of stickers Seth gave to Luis\n    suis_stickers = luis_stickers / 2\n\n    # Calculate the number of stickers Seth had in the beginning\n    beginning_stickers = suis_stickers + kris_stickers + 7\n\n    # Display the number of stickers Seth had in the beginning\n    result = beginning_stickers\n    return result"}
{"output": "def solution():\n    # Calculate the total weight of M&M in small bags\n    total_weight = 3 * 10 * 30  # 3 large bags weighing 10 ounces each, with 30 M&M in it\n\n    # Calculate the number of small bags John can make\n    num_small_bags = total_weight // 10  # John puts 10 in each small bag\n\n    result = num_small_bags\n    return result"}
{"output": "def solution():\n    distance_per_day = 400  # Alfie flies 400 kilometers every day\n    total_distance = 40000  # The circumference of the earth is 40,000 kilometers\n    half_distance = total_distance / 2  # Alfie wants to fly a distance equal to half of the way around the earth\n\n    # Calculate the number of days it will take Alfie to fly a distance equal to half the way around the earth\n    days_to_fly_distance = half_distance / distance_per_day\n    result = days_to_fly_distance\n    return result"}
{"output": "def solution():\n    average_car_speed = 120  # The average car can go 120 Miles per hour\n    average_car_speed = average_car_speed  # The average car can go 120 Miles per hour\n    fastest_car_speed = average_car_speed * 5  # The 2nd fastest car was 5 times faster than the average car\n    faster_car_speed = 2.25 * fastest_car_speed  # The faster car was 1.25 times faster than the 2nd fastest car\n\n    result = faster_car_speed\n    return result"}
{"output": "def solution():\n    \n    liam_age_now = 16\n    vince_age_two_years_ago = (liam_age_now - 2) / 2\n    vince_age_now = vince_age_two_years_ago + 2\n    result = vince_age_now\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs painted by Arnold\n    arnold_eggs = 56\n\n    # Calculate the number of eggs painted by Madeline\n    madeline_eggs = 56 - arnold_eggs\n\n    # Calculate the number of eggs painted by Sarah\n    sarah_eggs = 30\n\n    # Calculate the number of eggs painted by Camden\n    camden_eggs = sarah_eggs + 12\n\n    # Calculate the difference between Camden and Arnold\n    difference = camden_eggs - arnold_eggs\n\n    # Display the difference\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of crayons and the weight per crayon\n    num_crayons = 200\n    crayon_weight = 1\n\n    # Calculate the total weight of all the crayons\n    total_weight = num_crayons * 8 * crayon_weight\n\n    # Calculate the weight of the boxes\n    box_weight = total_weight / 8\n\n    # Calculate the total weight in pounds\n    total_weight_pounds = box_weight * 16\n\n    # Display the total weight in pounds\n    result = total_weight_pounds\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the tree and the percentage John can make logs\n    tree_length = 80\n    logs_percentage = 0.8\n\n    # Calculate the number of logs John can make\n    logs = tree_length * logs_percentage\n\n    # Calculate the number of planks John cuts into\n    planks_cut = logs // 5\n\n    # Calculate the total revenue from selling the planks\n    revenue = planks_cut * 1.2\n\n    # Display the total revenue\n    result = revenue\n    return result"}
{"output": "def solution():\n    \n    # Define Valerie's monthly earnings\n    valerie_earnings = 5000\n\n    # Calculate the brother's monthly earnings\n    brother_earnings = valerie_earnings / 2\n\n    # Calculate the combined salary of Valerie and her brother\n    combined_salary = valerie_earnings + brother_earnings\n\n    # Calculate the mother's monthly earnings\n    mother_earnings = combined_salary * 2\n\n    # Calculate the total amount of money they all have together\n    total_money = valerie_earnings + brother_earnings + mother_earnings\n\n    # Display the total amount of money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the beach and sidewalk\n    beach_distance = 3\n    sidewalk_distance = 1\n\n    # Calculate the total distance of the walk\n    total_distance = beach_distance + sidewalk_distance\n\n    # Calculate the distance Grandma walks on the beach\n    beach_distance = beach_distance * 40\n\n    # Calculate the distance Grandma walks on the sidewalk\n    sidewalk_distance = sidewalk_distance * 2\n\n    # Calculate the time it takes for Grandma to complete the entire walk\n    time = total_distance / 3\n\n    # Display the time it takes for Grandma to complete the entire walk\n    result = time\n    return result"}
{"output": "def solution():\n    # Calculate the total amount saved over 8 weeks\n    total_saved = 4 * 8  # $4 saved every week for 8 weeks\n\n    # Calculate the number of weeks needed to save a total of $60\n    weeks_needed = 60 / total_saved\n\n    result = weeks_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of blue birds in the trees\n    total_blue_birds = 3*7 + 2*4 + 3  # 3 trees with 7 blue birds each, 2 different trees with 4 blue birds each, 1 final tree with 3 blue birds\n    result = total_blue_birds\n    return result"}
{"output": "def solution():\n    # Calculate the total number of marbles Bob will have after receiving 2 dozen more\n    total_marbles = 60 + (2 * 12)  # Bob receives 2 dozen more marbles than he will have 60 marbles\n\n    # Subtract 10 marbles he loses\n    remaining_marbles = total_marbles - 10\n\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define Donny's initial temperature\n    initial_temp = 40\n\n    # Define the number of mugs of water Donny has\n    mug1 = 33\n    mug2 = 33\n\n    # Define the temperature of the other bottle\n    bottle2 = (mug1 + mug2) / 4\n\n    # Display the temperature of the second bottle\n    result = bottle2\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cows and chickens\n    initial_cows = 50\n    initial_chickens = 20\n\n    # Calculate the number of cows and chickens after three weeks\n    cows_after_three_weeks = initial_cows - (20 * 7)\n    chickens_after_three_weeks = initial_chickens - (10 * 7)\n\n    # Calculate the total number of animals after three weeks\n    total_animals = cows_after_three_weeks + chickens_after_three_weeks\n\n    # return the result\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pack of bagels\n    PACK_COST = 10.00\n\n    # Define the number of bagels in each pack\n    BAGELS_PER_PACK = 9\n\n    # Define the number of packs of bagels Russell orders\n    packs_of_bagels = 4\n\n    # Calculate the total cost before discount\n    total_cost_before_discount = PACK_COST * packs_of_bagels\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost_before_discount * 0.9\n\n    # Calculate the cost per bagel after discount\n    cost_per_bagel = total_cost_after_discount / 4\n\n    # Display the cost per bagel\n    result = cost_per_bagel\n    return result"}
{"output": "def solution():\n    mashed_scoops = 23  # Gomer ate 5 less than 23 scoops of mashed potatoes\n    less_than_6 = 6 - 3  # It takes 3 less than 6 potatoes to make 1 less than 3 scoops of mashed potatoes\n    mashed_scoops_eaten = mashed_scoops - 5  # Gomer ate 5 less than 23 scoops of mashed potatoes\n\n    # Calculate the number of potatoes Gomer ate\n    potatoes_eaten = less_than_6 - 3  # It takes 3 less than 6 scoops to make 1 less than 3 scoops of mashed potatoes\n    result = potatoes_eaten\n    return result"}
{"output": "def solution():\n    \n    eggs_per_day_1 = 3\n    eggs_per_day_2 = 5\n    days_1 = 30\n    days_2 = 30\n    total_eggs = (eggs_per_day_1 + eggs_per_day_2) * days_1\n    dozens_needed = 60 / total_eggs\n    result = dozens_needed\n    return result"}
{"output": "def solution():\n    \n    green_jellybeans = 17\n    red_jellybeans = 2 * green_jellybeans\n    total_jellybeans = 60\n    blue_jellybeans = total_jellybeans - green_jellybeans - red_jellybeans\n    result = blue_jellybeans\n    return result"}
{"output": "def solution():\n    \n    trees_growth = 5\n    lemons_per_tree = 6\n    years_per_decade = 52\n    total_lemons = trees_growth * lemons_per_tree * years_per_decade\n    result = total_lemons\n    return result"}
{"output": "def solution():\n    \n    total_ratio = 5 + 9\n    total_passengers = 84\n    men_ratio = 5\n    women_ratio = 9\n    women_on_bus = total_passengers * (men_ratio / total_ratio)\n    women_alight = 20\n    women_remaining = women_on_bus - women_alight\n    result = women_remaining\n    return result"}
{"output": "def solution():\n    # Calculate the total earnings from selling sunflowers\n    sunflower_earnings = 26 - 56  # Faraday earned $26 from the sunflower and $56 from the bouquet per day\n    sunflowers_sold = sunflower_earnings / 2  # Faraday sold a sunflower that costs $2 each\n    result = sunflowers_sold\n    return result"}
{"output": "def solution():\n    \n    initial_money = 100\n    rock_price = 5\n    rock_sell_price = 7\n    rock_inventory = initial_money - rock_price\n    rock_sell_amount = rock_inventory * 0.6\n    rock_loss = rock_sell_amount - rock_sell_amount\n    result = rock_loss\n    return result"}
{"output": "def solution():\n    \n    # Define the number of scenes drawn per day for each type of picture\n    LARGE_SCENE_PER_DAY = 5\n    MEDIUM_SCENE_PER_DAY = 6\n    SMALL_SCENE_PER_DAY = 7\n\n    # Define the number of scenes to be created\n    num_large_scenes = 45\n    num_medium_scenes = 36\n    num_small_scenes = 49\n\n    # Calculate the total number of scenes to be created\n    total_scenes = (num_large_scenes * LARGE_SCENE_PER_DAY) + (num_medium_scenes * MEDIUM_SCENE_PER_DAY) + (num_small_scenes * SMALL_SCENE_PER_DAY)\n\n    # Calculate the number of days it will take to draw all the scenes\n    num_days = total_scenes / total_scenes\n\n    # Display the number of days\n    result = num_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dozens of eggs prepared\n    dozens_prepared = 3\n\n    # Define the number of eggs prepared\n    eggs_prepared = dozens_prepared * 12\n\n    # Calculate the number of eggs each child receives\n    eggs_per_child = eggs_prepared // 4\n\n    # Display the number of eggs each child receives\n    result = eggs_per_child\n    return result"}
{"output": "def solution():\n    num_fish = 3\n    food_per_fish_per_day = 1\n    days_per_month = 31\n\n    # Calculate the total amount of food needed for one day\n    total_food_per_day = num_fish * food_per_fish_per_day\n\n    # Calculate the total amount of food needed for one month\n    total_food_per_month = total_food_per_day * days_per_month\n\n    result = total_food_per_month\n    return result"}
{"output": "def solution():\n    \n    initial_roses = 30\n    given_roses = 24\n    bought_roses = 15\n    total_roses = initial_roses - given_roses + bought_roses\n    result = total_roses\n    return result"}
{"output": "def solution():\n    \n    # Calculate Sid's speed\n    sid_speed = 110 / 2\n\n    # Calculate Sid's speed\n    sid_speed = 140 / 3\n\n    # Calculate the average speed\n    average_speed = sid_speed / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the probability of winning for the first and second tickets\n    probability_winning_1 = 0.2\n    probability_winning_2 = 3 * probability_winning_1\n\n    # Calculate the probability of winners for both tickets\n    probability_winners_both = (probability_winning_1 + probability_winning_2) / 2\n\n    # Convert the probability to a percentage\n    probability_winners_percentage = probability_winners_both * 100\n\n    # Display the probability winners percentage\n    result = probability_winners_percentage\n    return result"}
{"output": "def solution():\n    \n    jim_seashells = 27\n    carlos_seashells = jim_seashells - 5\n    carrey_seashells = carlos_seashells * 2\n    total_seashells = jim_seashells + carlos_seashells + carrey_seashells\n    each_person_gets = total_seashells / 2\n    result = each_person_gets\n    return result"}
{"output": "def solution():\n    # Calculate the total number of carrots Mason eats in a week\n    total_carrots = 4*5 + 5*2  # Mason eats 4 carrots each on weekdays and 5 carrots each on Saturday and Sunday\n    result = total_carrots\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the first song in minutes\n    song1_length = 5\n\n    # Calculate the length of the second song in minutes\n    song2_length = song1_length * 1.6\n\n    # Calculate the total length of the cassette in minutes\n    total_length = song1_length + song2_length\n\n    # Display the total length in minutes\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the mobile device\n    original_price = 20\n\n    # Calculate the selling price of the mobile device\n    selling_price = original_price * 2\n\n    # Calculate the total number of mobile devices bought\n    total_bought = 2 + 4\n\n    # Calculate the total earnings from selling all the mobile devices\n    total_earnings = (selling_price * total_bought) + (selling_price * total_tuesday)\n\n    # Calculate the profit from selling all the mobile devices\n    profit = total_earnings - total_bought\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    isabel_height = 7\n    ned_height = isabel_height + 2\n    carl_height = ned_height + 1\n    result = carl_height\n    return result"}
{"output": "def solution():\n    # Calculate the total number of bottles produced by the carrot juices in a day\n    bottles_per_day = 4200\n\n    # Calculate the total number of bottles produced by the carrot juices in 2300 people\n    total_bottles_2300 = bottles_per_day * 2300\n\n    # Calculate the total number of bottles produced by the carrot juices in 2300 people\n    total_bottles_2300 = total_bottles_2300 * 0.2\n\n    # Calculate the difference between the number of bottles produced and the total number of bottles produced by the additional juice consumption\n    bottles_difference = total_bottles_2300 - total_bottles_2300\n    result = bottles_difference\n    return result"}
{"output": "def solution():\n    # Calculate the number of blue wearers\n    blue_wearers = (1/4) * (1/4) * (1/3)\n\n    # Calculate the number of purple wearers\n    purple_wearers = (1/3) * blue_wearers\n\n    # Calculate the percentage chance a baby wearing a bow is wearing purple\n    percentage_chance = (purple_wearers / (3/4)) * 100\n\n    result = percentage_chance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tax reports received on Monday and Tuesday\n    monday_tues = 1907\n\n    # Define the number of reports received on Thursday and Friday\n    thursday_friday = 2136\n\n    # Calculate the total number of reports received on Monday and Tuesday\n    total_monday_tues = monday_tues + 1907\n\n    # Calculate the total number of reports received on Wednesday\n    total_wednesday = 5168 + total_monday_tues + thursday_friday\n\n    # Display the total number of reports received on Wednesday\n    result = total_wednesday\n    return result"}
{"output": "def solution():\n    # Calculate the total amount earned from selling unused land\n    unused_land_sold = 80 / 2  # Abraham sold half of the unused land for $50\n    total_earned = (unused_land_sold / 4) * 50 + (unused_land_sold / 4) * 30  # Abraham sold another 1/4 of his unused land for $30\n\n    # Calculate the total amount earned from selling unused land\n    total_earned_unused = unused_land_sold * 3  # Abraham sold the remaining land for $3 per square meter\n\n    # Calculate the total amount earned after selling all the land\n    total_earned = total_earned + total_earned_unused\n    result = total_earned\n    return result"}
{"output": "def solution():\n    \n    haley_age = 26\n    geb_age = (haley_age / 2) - 10\n    result = geb_age\n    return result"}
{"output": "def solution():\n    masks_per_day = 2 * 3  # Tyrion goes out three times a day and changes his face mask two times every time he goes out\n    masks_per_two_days = masks_per_day * 2  # Tyrion changes his face mask two times every time he goes out\n\n    result = masks_per_two_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in a dozen\n    EGGS_PER_DOZEN = 12\n\n    # Define the number of eggs found by Lamar\n    lamar_eggs = 5\n\n    # Define the number of eggs found by Stacy\n    stacy_eggs = lamar_eggs * 2\n\n    # Define the number of eggs found by Charlie\n    charlie_eggs = stacy_eggs - 2\n\n    # Define the number of eggs found by Mei\n    mei_eggs = charlie_eggs / 2\n\n    # Calculate the total number of eggs found\n    total_eggs = lamar_eggs + stacy_eggs + charlie_eggs + mei_eggs\n\n    # Calculate the number of eggs still hidden\n    eggs_hidden = EGGS_PER_DOZEN - total_eggs\n\n    # Display the number of eggs still hidden\n    result = eggs_hidden\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apartments in the first two complexes\n    apartments_first_two = 200\n\n    # Calculate the number of apartments in the last two complexes\n    apartments_last_two = apartments_first_two * 1.6\n\n    # Calculate the total number of apartments collected in a week\n    total_apartments = apartments_first_two + apartments_last_two\n\n    # Calculate the total amount of money collected in a week\n    total_money = total_apartments * 0.40\n\n    # Display the total amount of money collected in a week\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fruits produced in each year\n    tree_5_fruits = 50\n    tree_6_fruits = tree_5_fruits * 3\n    tree_7_fruits = tree_6_fruits * 7\n    tree_8_fruits = tree_7_fruits - 200\n    tree_10_fruits = tree_10_fruits * 20\n\n    # Calculate the total number of fruits produced by the tree\n    total_fruits = tree_5_fruits + tree_6_fruits + tree_7_fruits + tree_8_fruits + tree_10_fruits\n\n    # Display the total number of fruits produced\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    jack_money = 100  # Jack had $100\n    sophia_money = jack_money / 5  # Sophia gave Jack 1/5 of her $100\n\n    # Calculate Jack's current amount of money\n    jack_money = jack_money + sophia_money\n    result = jack_money\n    return result"}
{"output": "def solution():\n    \n    total_length = 37\n    blue_rope = (total_length - 7) / 3\n    red_rope = blue_rope * 4\n    result = red_rope\n    return result"}
{"output": "def solution():\n    \n    # Define Ronnie's money and calculate Rissa's money\n    ronnie_money = 5\n    rissa_money = 3 * ronnie_money\n\n    # Calculate how much money Rissa has left after each of them given an equal amount to their little sister\n    remaining_money = (4/5) * (ronnie_money + rissa_money)\n\n    # Display how much money is left in Ronnie's money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pints of paint in the mural\n    total_pints = 12\n\n    # Calculate the number of yellow pints\n    yellow_pints = total_pints / 2\n\n    # Calculate the number of red pints\n    red_pints = total_pints - yellow_pints\n\n    # Display the number of pints of red paint\n    result = red_pints\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the bedrooms\n    bedroom_length = 20\n    bedroom_width = 12\n\n    # Calculate the area of the bedrooms\n    bedroom_area = bedroom_length * bedroom_width\n\n    # Calculate the area of the living room\n    living_room_area = bedroom_area * 5\n\n    # Calculate the area of the remaining house\n    remaining_house_area = 1000 - bedroom_area - living_room_area\n\n    # Calculate the total area of the house\n    total_area = bedroom_area + living_room_area + remaining_house_area\n\n    # return the result\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    # Define the number of puffs of clouds counted on Monday\n    monday_clouds = 3\n\n    # Define the number of puffs of clouds counted on Friday\n    friday_clouds = monday_clouds * 2\n\n    # Calculate the total number of puffs of clouds counted across all five days\n    total_clouds = monday_clouds + (2 * friday_clouds)\n\n    # Display the total number of puffs of clouds counted\n    result = total_clouds\n    return result"}
{"output": "def solution():\n    # Calculate the number of dishwasher pods in the box\n    num_pods_box = 100\n    new_box_pods = 12 * 1.2  # 20% more than the original box\n\n    # Calculate the number of dishwasher pods in the new box\n    new_box_pods = num_pods_box * new_box_pods\n\n    # Calculate the number of dishwashing cycles the new box can run for $1\n    dishwashing_cycles = new_box_pods // 1  # 1 pod per cycle\n\n    result = dishwashing_cycles\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Thomas withdraws and the number of bills he loses\n    initial_money = 1000\n    lost_bills = 10\n\n    # Calculate the remaining amount of money after losing 10 bills\n    remaining_money = initial_money - lost_bills\n\n    # Calculate the number of bills Thomas uses to pay for a bill\n    used_bills = remaining_money / 2\n\n    # Calculate the number of 5 dollar bills Thomas uses to pay for a bill\n    remaining_bills = remaining_money - used_bills\n\n    # Calculate the number of 5 dollar bills Thomas uses to triples his money\n    triples_bills = triples_bills * 5\n\n    # Calculate the total number of 5 dollar bills Thomas has\n    total_bills = remaining_bills + triples_bills\n\n    # Display the total number of 5 dollar bills\n    result = total_bills\n    return result"}
{"output": "def solution():\n    \n    # Define the number of goals scored by team A in the first half\n    goals_A_first_half = 4\n\n    # Define the number of goals scored by team B in the first half\n    goals_B_first_half = goals_A_first_half - 2\n\n    # Define the number of goals scored by team B in the second half\n    goals_B_second_half = goals_B_first_half / 4\n\n    # Calculate the total number of goals scored in the match\n    total_goals = goals_A_first_half + goals_B_first_half + goals_A_second_half + goals_B_second_half\n\n    # Display the total number of goals scored\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of chalk\n    initial_chalk = 5\n\n    # Calculate the amount of chalk used on Monday\n    monday_chalk = initial_chalk * 0.2\n\n    # Calculate the amount of chalk used on Monday after the end of the day\n    monday_chalk += monday_chalk * 0.45\n\n    # Calculate the amount of chalk used on Monday after the end of the day\n    monday_chalk += monday_chalk * 0.8\n\n    # Calculate the total amount of chalk used\n    total_chalk = initial_chalk + monday_chalk\n\n    # Display the total amount of chalk used\n    result = total_chalk\n    return result"}
{"output": "def solution():\n    num_boys = 12\n    num_girls = 12\n\n    # Calculate the number of girls who are on varsity\n    num_varsity_boys = num_boys / 3\n\n    # Calculate the number of boys who are not on varsity\n    num_non_varsity_boys = num_boys - num_varsity_boys\n\n    # Calculate the number of students who are not on varsity\n    num_non_varsity_students = num_non_varsity_boys + num_non_varsity_girls\n    result = num_non_varsity_students\n    return result"}
{"output": "def solution():\n    \n    mike_masks = 5\n    johnny_masks = 3 * mike_masks + 2\n    result = johnny_masks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of teeth James has\n    james_teeth = 30\n\n    # Define the number of teeth James drills\n    drills = 4\n\n    # Define the number of teeth James caps\n    caps = james_teeth + 7\n\n    # Calculate the total number of teeth James has\n    total_teeth = james_teeth - drills + caps\n\n    # Calculate the percentage of James' teeth that the dentist caps fix\n    percentage_driven = (drills * 100) + (caps * 100)\n\n    # Display the percentage of James' teeth that the dentist caps fix\n    result = percentage_driven\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of milk sold\n    total_milk_sold = 4000 * 3.5\n\n    # Calculate the amount of milk purchased\n    purchased_milk = total_milk_sold * (2/5)\n\n    # Calculate the refund amount\n    refund_amount = purchased_milk - refund_amount\n\n    result = refund_amount\n    return result"}
{"output": "def solution():\n    \n    # Define Wendy's age in 25 years\n    wendy_age_in_25_years = 5 * 25\n\n    # Calculate Colin's current age\n    colin_age_now = (wendy_age_in_25_years - 25) / 3\n\n    # Display Colin's current age\n    result = colin_age_now\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount Bob spends\n    total_spending = 27000\n\n    # Define the number of schools Bob can buy books\n    num_schools = 3\n\n    # Define the cost of books Bob can buy per school\n    book_cost = 500\n\n    # Calculate the total number of books Bob can buy\n    total_books = total_spending // book_cost\n\n    # Calculate the number of books Bob can buy per school\n    books_per_school = total_books // num_schools\n\n    # Display the number of books Bob can buy per school\n    result = books_per_school\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples picked up by Newton\n    apples_picked_up1 = 2\n    apples_picked_up2 = 1\n    apples_picked_up3 = 1\n    apples_picked_up4 = 6\n\n    # Calculate the number of apples picked up by Newton\n    apples_picked_up1 = apples_picked_up1 + apples_picked_up2 - apples_picked_up3\n\n    # Calculate the number of apples picked up by Newton\n    apples_picked_up3 = apples_picked_up1 + apples_picked_up3\n\n    # Calculate the number of apples picked up by Newton\n    apples_picked_up4 = apples_picked_up1 - apples_picked_up4\n\n    # Calculate the total number of apples picked up\n    total_apples_picked_up = apples_picked_up1 + apples_picked_up2 + apples_picked_"}
{"output": "def solution():\n    \n    # Define the amount of coal ordered and the cost per unit\n    coal_ordered = 850\n    cost_per_bag = 18\n\n    # Calculate the number of bags of coal ordered\n    bags_ordered = coal_ordered / 50\n\n    # Calculate the total cost of the order\n    total_cost = bags_ordered * cost_per_bag\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    cheese_pizza_slices = 12  # Each cheese pizza is cut into 12 slices\n    pepperoni_pizza_slices = 8  # Each pepperoni pizza is cut into 8 slices\n    num_friends = 6  # Kate's 6 friends each eat 6 cheese pizza slices\n    num_cheese_slices_eaten = num_friends * 6  # Kate's 6 friends each eat 6 cheese pizza slices\n    num_pepperoni_slices_eaten = 4  # Kate's 4 pepperoni pizza slices\n\n    # Calculate the total number of cheese pizza slices needed\n    total_cheese_slices = cheese_pizza_slices * num_friends\n\n    # Calculate the total number of pepperoni pizza slices needed\n    total_pepperoni_slices = pepperoni_pizza_slices * num_pepperoni_slices\n\n    # Calculate the number of pies needed\n    num_"}
{"output": "def solution():\n    \n    # Define the number of miles Sam ran on each day\n    monday_miles = 3\n    wednesday_friday_miles = 3\n    tuesday_thursday_miles = 5\n\n    # Calculate the total number of miles Sam ran this week\n    total_miles = monday_miles + wednesday_friday_miles + tuesday_thursday_miles\n\n    # return the result\n    result = total_miles\n    return result"}
{"output": "def solution():\n    snowballs_per_hour = 20  # Jay can build 20 snowballs in an hour\n    snowballs_per_melt = 2  # Jay can build 2 melt every 15 minutes\n    minutes_per_hour = 60 / 60  # Jay wants to know how long it will take to build 60 snowballs\n\n    # Calculate the total time it will take Jay to build 60 snowballs\n    total_time = minutes_per_hour * snowballs_per_melt\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    john_age = 28\n    jim_age = john_age / 2\n    result = jim_age\n    return result"}
{"output": "def solution():\n    \n    total_slices = 8\n    doxa_slices = 1\n    sister_slices = doxa_slices + 1\n    brother_slices = sister_slices + 1\n    total_slices_eaten = doxa_slices + sister_slices + brother_slices\n    result = total_slices_eaten\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bandages used on the first day\n    bandages_day1 = 38\n\n    # Define the number of bandages used on the second day\n    bandages_day2 = bandages_day1 - 10\n\n    # Define the number of bandages used on the third day\n    bandages_day3 = bandages_day2 / 2\n\n    # Define the number of bandages left at the end of the third day\n    bandages_day3 = 78\n\n    # Calculate the total number of bandages used on the first day\n    bandages_day1 = bandages_day1 + bandages_day2 + bandages_day3\n\n    # Display the total number of bandages used on the first day\n    result = bandages_day1\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per inch of haircut\n    COST_PER_INCH = 40\n\n    # Define the cost per inch of haircut\n    COST_PER_INCH = 30\n\n    # Define the starting hair and ending hair\n    starting_hair = 10\n    ending_hair = 8\n\n    # Calculate the total cost of the haircut and colored\n    total_cost = (starting_hair + ending_hair) * COST_PER_INCH\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 7.5\n    days_per_week = 6\n    hourly_rate = 1.5\n    extra_money = 10\n    weeks_in_april = 4\n    total_hours = hours_per_day * days_per_week * weeks_in_april\n    total_money = total_hours * hourly_rate + extra_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    laundry_cost = 3.00\n    room_cost = 1.50\n    trash_cost = 0.75\n    dishwasher_cost = 0.50\n    num_dishwasher_emptied = 6\n\n    # Calculate the total earnings from laundry\n    laundry_earnings = laundry_cost * num_dishwasher_emptied\n\n    # Calculate the total earnings from cleaning room\n    room_cleaning_earnings = room_cost * num_dishwasher_emptied\n\n    # Calculate the total earnings from trash\n    trash_earnings = trash_cost * num_dishwasher_emptied\n\n    # Calculate the total earnings from emptying dishwasher\n    dishwasher_earnings = dishwasher_cost * num_dishwasher_emptied\n\n    # Calculate the total earnings\n    total_earnings = laundry_earnings + room_cleaning_earnings + trash_earn"}
{"output": "def solution():\n    \n    whale_blood = 40\n    shark_blood = 3 * whale_blood\n    total_blood = whale_blood * 10\n    result = total_blood\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people who entered the restaurant in the morning\n    morning_eaten = 50\n\n    # Calculate the number of people who ordered food\n    food_eaten = morning_eaten + 40\n\n    # Calculate the number of people who ordered lunch\n    lunch_eaten = 2 * food_eaten\n\n    # Calculate the number of people who entered the restaurant in the restaurant\n    first_entered = morning_eaten + food_eaten + lunch_eaten\n\n    # Calculate the additional number of people who entered the restaurant\n    additional_entered = 3 * first_entered\n\n    # Calculate the total number of people who entered the restaurant\n    total_entered = morning_eaten + additional_entered\n\n    # Display the total number of people who entered the restaurant\n    result = total_entered\n    return result"}
{"output": "def solution():\n    \n    red_packs = 5\n    black_packs = red_packs * 2\n    red_pens = red_packs * 5\n    black_pens = black_packs * 5\n    total_pens = red_pens + black_pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    scotch_cost = 600\n    cognac_cost = scotch_cost * 1.5\n    total_bottles = 10\n    total_cost = (scotch_cost * total_bottles) + (cognac_cost * total_bottles)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of White Oak trees planted on the first day\n    white_oak_1 = 20\n\n    # Calculate the number of Lodgepole Pine trees planted on the first day\n    lodgepole_pine_1 = 2 * white_oak_1\n\n    # Calculate the number of White Oak trees planted on the second day\n    white_oak_2 = white_oak_1 + 10\n\n    # Calculate the number of Lodgepole Pine trees planted on the second day\n    lodgepole_pine_2 = white_oak_2 * (1 + 1/4)\n\n    # Calculate the total number of trees planted\n    total_trees = white_oak_1 + lodgepole_pine_1 + lodgepole_pine_2\n\n    # Display the total number of trees planted\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of root beer\n    initial_gallons = 24\n\n    # Calculate the amount of root beer consumed on the first day\n    first_day_gallons = initial_gallons\n\n    # Calculate the amount of root beer consumed on the second day\n    second_day_gallons = 4\n\n    # Calculate the amount of root beer consumed on the third day\n    third_day_gallons = 7\n\n    # Calculate the total amount of root beer consumed\n    total_gallons = first_day_gallons + second_day_gallons + third_day_gallons\n\n    # Display the total amount of root beer consumed\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Let x be the number of coffee mugs in the teacher's lounge\n    # We know that 4x + 8 = 40\n    # Solving for x, we get x = 16\n\n    # Therefore, there are 16 coffee mugs in the teacher's lounge\n    result = 16\n    return result"}
{"output": "def solution():\n    total_fish = 66  # There are 66 fish in the tank\n    red_stripes = total_fish / 3  # One-third of the fish have red stripes\n    remaining_fish = total_fish - red_stripes  # Calculate the number of fish remaining with red stripes\n    blue_stripes = (5/11) * remaining_fish  # 5/11 of the remaining fish have blue stripes\n    total_red_blue_stripes = red_stripes + blue_stripes  # Calculate the total number of fish with red stripes and blue stripes\n    result = total_red_blue_stripes\n    return result"}
{"output": "def solution():\n    # Calculate the total number of eyeshadow colors Amy had\n    total_colors = 2*4 + 3*6  # two eyeshadow palettes with 4 colors each and three makeup sets with 6 colors each\n\n    # Calculate the number of eyeshadow colors Amy uses up from one makeup set\n    used_colors = 1/2 * total_colors  # Amy uses up half of the colors from one makeup set\n\n    # Calculate the number of eyeshadow colors Amy has left\n    remaining_colors = total_colors - used_colors\n    result = remaining_colors\n    return result"}
{"output": "def solution():\n    \n    # Define the height of Mattison's house\n    house_height = 60\n\n    # Calculate the height of the first floor\n    floor1_height = house_height * 3\n\n    # Calculate the height of the second floor\n    floor2_height = house_height * 2\n\n    # Calculate the height of the first floor\n    floor1_height = floor1_height * 3\n\n    # Calculate the height of the second floor\n    floor2_height = floor2_height * 3\n\n    # Display the height of the second floor\n    result = floor2_height\n    return result"}
{"output": "def solution():\n    \n    total_shells = 700\n    alphas_shells = total_shells * 0.4\n    remaining_shells = total_shells - alphas_shells\n    finders_shells = remaining_shells * 0.6\n    gogetters_shells = remaining_shells - finders_shells\n    result = gogetters_shells\n    return result"}
{"output": "def solution():\n    num_dogs = 4\n    miles_per_dog_1 = 1\n    miles_per_dog_2 = 4\n    miles_per_dog_3 = 3\n    miles_per_day_1 = miles_per_dog_1 + miles_per_dog_2\n    miles_per_day_2 = miles_per_dog_3\n    miles_per_day_3 = miles_per_dog_3\n\n    # Calculate the total miles needed for all dogs for the first two dogs\n    total_miles_first_two_dogs = miles_per_dog_1 + miles_per_dog_2 + miles_per_day_3\n\n    # Calculate the total miles needed for all dogs for the last dog\n    total_miles_last_dog = total_miles_first_two_dogs + miles_per_day_3\n\n    result = total_miles_last_dog\n    return result"}
{"output": "def solution():\n    \n    # Define John's house's value and the loan percentage\n    HIRD_VALUE = 250000\n    loan_percentage = 0.4\n\n    # Calculate John's loan amount\n    loan_amount = HIRD_VALUE * loan_percentage\n\n    # Calculate the amount John uses to pay off his debt\n    debt_amount = loan_amount * 0.6\n\n    # Calculate the amount John had leftover after paying debt\n    leftover_money = HIRD_VALUE - loan_amount - debt_amount\n\n    # Display the amount of money John had leftover\n    result = leftover_money\n    return result"}
{"output": "def solution():\n    \n    tunas_last_monday = 3\n    tunas_first_tuna = 56\n    tunas_second_tuna = 46\n    tunas_last_tuna = 26\n    cost_per_kilogram = 0.5\n    total_weight = tunas_last_monday + tunas_first_tuna + tunas_second_tuna + tunas_last_tuna\n    total_earnings = total_weight * cost_per_kilogram\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the magazines\n    cost = 72\n\n    # Calculate the selling price of the magazines\n    selling_price = cost * (11/8)\n\n    # Calculate Trinity's profit\n    profit = selling_price - cost\n\n    # Display Trinity's profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    low_setting_daily_water = 1\n    medium_setting_daily_water = low_setting_daily_water * 2\n    high_setting_daily_water = medium_setting_daily_water * 2\n    total_daily_water = low_setting_daily_water + medium_setting_daily_water + high_setting_daily_water\n    dehumidifier_daily_water = total_daily_water * 3\n    result = dehumidifier_daily_water\n    return result"}
{"output": "def solution():\n    \n    packs_of_balloons = 10\n    balloons_per_pack = 30\n    total_balloons = packs_of_balloons * balloons_per_pack\n    balloons_left = 12\n    balloons_thrown = total_balloons - balloons_left\n    result = balloons_thrown\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of the first medicine\n    first_medicine = 14\n\n    # Calculate the amount of the second medicine\n    second_medicine = 3 * first_medicine\n\n    # Calculate the total amount of medicine in 8 doses\n    total_medicine = first_medicine + second_medicine\n\n    # Display the total amount of medicine\n    result = total_medicine\n    return result"}
{"output": "def solution():\n    \n    ali_capacity = 120\n    john_capacity = ali_capacity * (1/8)\n    total_capacity = john_capacity + ali_capacity\n    result = total_capacity\n    return result"}
{"output": "def solution():\n    \n    borrowed_amount = 300\n    additional_amount = borrowed_amount * 0.02\n    total_amount = borrowed_amount + additional_amount\n    monthly_payment = 25\n    remaining_amount = total_amount - monthly_payment\n    twelfth_month_payment = remaining_amount / 2\n    result = twelfth_month_payment\n    return result"}
{"output": "def solution():\n    num_children = 2\n    diaper_changes_per_child_per_day = 5\n    wife_changes_per_day = diaper_changes_per_child_per_day / 2\n\n    # Calculate the total number of diapers Jordan changes per day\n    total_changes_per_day = num_children * diaper_changes_per_child_per_day\n    result = total_changes_per_day\n    return result"}
{"output": "def solution():\n    # Calculate the total area of the jar\n    total_area = 6 * 6 * 15\n\n    # Calculate the total number of jelly beans in the jar\n    total_jelly_beans = total_area * 0.15\n\n    # Calculate the number of red jelly beans in the jar\n    red_jelly_beans = total_jelly_beans * 0.3\n\n    # Calculate the guess that Tim was off\n    guess = red_jelly_beans - 900\n    result = guess\n    return result"}
{"output": "def solution():\n    capacity = 200  # The bus has a capacity of 200 people\n    first_stop = 40  # 40 people entered the bus on the first stop\n    second_station = (3/4) * (capacity * first_stop)  # 3/4 of the total number of people who entered the bus at the first station\n    remaining_people = capacity - first_stop - second_station  # Calculate the remaining number of people\n\n    # Calculate the number of people required to fill the remaining spaces\n    required_people = remaining_people * 2\n    result = required_people\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of one visit and the increase percentage\n    INITIAL_COST = 2\n    INCREASE_PERCENTAGE = 150\n\n    # Calculate the cost of one visit after 5 years\n    cost_after_5_years = INITIAL_COST * (1 + INCREASE_PERCENTAGE / 100)\n\n    # Calculate the cost of one visit after 3 years\n    cost_after_3_years = cost_after_5_years * 3\n\n    # Display the cost of all visits to the museum\n    result = cost_after_3_years\n    return result"}
{"output": "def solution():\n    grades = 4  # Cedar Falls Middle School has 4 grades\n    grades_per_year = 7  # There are 7 grades in each grade\n    students_per_grade = 10  # There are 10 students in each grade\n    points_per_grade = points_per_grade / students_per_grade  # The points get to try the escape room\n    students_with_extra_extra = 8  # Only 8 students have 45 minutes to try the escape room\n    time_per_group = 45  # Each group uses their full 45 minutes to try the escape room\n\n    # Calculate the total time it will take for everyone to try the escape room\n    total_time = (students_with_extra_extra * time_per_group) / points_per_grade\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of wooden tables and roof frames\n    WOODEN_PRICE = 20\n    ROOF_FRAME_PRICE = 10\n\n    # Define the number of wooden tables and roof frames manufactured\n    num_wooden_tables = 4\n    num_roof_frames = 2\n\n    # Calculate the total cost of the wooden tables\n    wooden_cost = num_wooden_tables * WOODEN_PRICE\n\n    # Calculate the total cost of the roof frames\n    roof_frame_cost = num_roof_frames * ROOF_FRAME_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = wooden_cost + roof_frame_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the board and the length of the shorter piece\n    board_length = 40\n    shorter_piece = board_length / 2\n\n    # Calculate the length of the longer piece\n    longer_piece = shorter_piece * 4\n\n    # Display the length of the longer piece\n    result = longer_piece\n    return result"}
{"output": "def solution():\n    \n    meatballs_per_pound = 16\n    total_meatballs = 80\n    total_pounds = total_meatballs / meatballs_per_pound\n    secret_seasoning_needed = total_pounds * 2\n    result = secret_seasoning_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total width of the windows\n    total_width = 5 * 35\n\n    # Calculate the number of fabric needed to cover 2 times the total width\n    fabric_needed = 2 * total_width\n\n    result = fabric_needed\n    return result"}
{"output": "def solution():\n    # Calculate the cost of a 16-minute call\n    cost_16_min = 0.25 * 16\n\n    # Calculate the cost of a 36-minute call\n    cost_36_min = cost_16_min * 36\n\n    result = cost_36_min\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of rain on Monday\n    monday_rain = 2\n\n    # Calculate the amount of rain on Tuesday\n    tuesday_rain = 2 * monday_rain + 1\n\n    # Display the amount of rain on Tuesday\n    result = tuesday_rain\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and treats per person\n    num_people = 5\n    treats_per_person = 2\n\n    # Calculate the number of brownies\n    num_brownies = 3 * num_people - 2\n\n    # Calculate the number of cupcakes\n    num_cupcakes = num_brownies / treats_per_person\n\n    # Display the number of cupcakes\n    result = num_cupcakes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the manicure and pedicure\n    manicure_cost = 35\n    pedicure_cost = 40\n\n    # Calculate the discounted cost of the manicure and pedicure\n    manicure_discounted_cost = manicure_cost - (manicure_cost * 0.8)\n    pedicure_discounted_cost = pedicure_cost - (pedicure_cost * 0.8)\n\n    # Calculate the total cost of both fingers\n    total_cost = manicure_discounted_cost + pedicure_discounted_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    susan_magazines = 3\n    susan_issues_per_year = 12\n    susan_magazines += susan_magazines\n    last_magazines = 4 * susan_issues_per_year\n    total_magazines = susan_magazines + last_magazines\n    result = total_magazines\n    return result"}
{"output": "def solution():\n    \n    samantha_paintings = 27\n    shelley_paintings = samantha_paintings - 12\n    kim_paintings = shelley_paintings - 8\n    result = kim_paintings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the toy\n    initial_price = 40\n\n    # Calculate the price after December\n    price_december = initial_price * 1.8\n\n    # Calculate the price after January\n    price_january = price_december * 0.5\n\n    # Calculate the final price after the discounted in January\n    final_price = initial_price - price_january\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    standard_fee = 80\n    veteran_fee = standard_fee * 0.25\n    num_standard_lessons = 4\n    num_veteran_lessons = 2\n    total_standard_fee = standard_fee * num_standard_lessons\n    total_veteran_fee = veteran_fee * num_veteran_lessons\n    total_fee = total_standard_fee + total_veteran_fee\n    result = total_fee\n    return result"}
{"output": "def solution():\n    \n    # Define the scores of each quiz\n    scores_50 = 50\n    scores_80 = 80\n    scores_60 = 60\n    scores_90 = 40\n    scores_100 = 90\n    scores_70 = 70\n    scores_60 = 60\n\n    # Calculate the mean score\n    mean_score = (scores_50 + scores_80 + scores_60 + scores_90 + scores_100 + scores_60) / 2\n\n    # Display the mean score\n    result = mean_score\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pomelos\n    initial_pomelos = 20\n\n    # Calculate the number of pomelos Eve has left\n    left_pomelos = initial_pomelos * (1/4)\n\n    # Calculate the number of pomelos Eve gave away\n    given_pomelos = initial_pomelos - left_pomelos\n\n    # Display the number of pomelos Eve gave away\n    result = given_pomelos\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of apples\n    initial_apples = 60\n\n    # Calculate the number of apples Walter ate\n    eaten_apples = initial_apples * 2/5\n\n    # Calculate the number of apples remaining after Walter ate\n    remaining_apples = initial_apples - eaten_apples\n\n    # Calculate the number of apples Walter gave to his sister\n    sister_apples = remaining_apples * 0.25\n\n    # Calculate the number of apples remaining after Walter gave his sister\n    remaining_apples -= sister_apples\n\n    # Calculate the total amount of money Walter received\n    total_money = remaining_apples * 3\n\n    # Display the total amount of money Walter received\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of novels Regina wrote last year\n    last_year_novels = 9\n\n    # Calculate the number of novels Regina has written this year\n    this_year_novels = last_year_novels * 0.75\n\n    # Display the number of novels Regina has written this year\n    result = this_year_novels\n    return result"}
{"output": "def solution():\n    \n    # Define the average speed of Michael\n    AVG_SPEED = 50\n\n    # Define the distance between Alaska and Texas\n    ALASKA_DISTANCE = 6000\n\n    # Calculate the total distance covered\n    total_distance = ALASKA_DISTANCE * 3\n\n    # Calculate the percentage of distance covered\n    percentage_covered = (total_distance / total_distance) * 100\n\n    # Display the percentage covered\n    result = percentage_covered\n    return result"}
{"output": "def solution():\n    \n    madeline_grapes = 6\n    brother_grapes = madeline_grapes * 5\n    remaining_grapes = madeline_grapes - brother_grapes\n    pies = 4\n    grapes_per_pie = 12\n    total_grapes = remaining_grapes + (pies * grapes_per_pie)\n    result = total_grapes\n    return result"}
{"output": "def solution():\n    # Calculate the number of teachers at school that day\n    total_teachers = 82 - 13 + 9  # 13 teachers were sick, 9 teachers were called in to help\n    result = total_teachers\n    return result"}
{"output": "def solution():\n    \n    pasta_cost = 1\n    cheddar_cost = 3\n    gruyere_cost = 2 * cheddar_cost\n    total_cost = (pasta_cost + cheddar_cost + gruyere_cost) * 52\n    result = total_cost\n    return result"}
{"output": "def solution():\n    total_classrooms = 80  # The custodian has to clean a school with 80 classrooms\n    num_days = 5  # The custodian has to clean the school for 5 days\n    classroom_time = 15  # It takes the custodian 15 minutes per classroom\n    hours_worked = 8  # The custodian works an 8 hour day\n\n    # Calculate the total time spent cleaning classrooms in minutes\n    total_time = num_days * classroom_time * hours_worked\n\n    # Calculate the total time spent cleaning classrooms in minutes\n    total_classroom_time = total_classrooms * classroom_time\n\n    # Calculate the average percentage of classrooms spent cleaning classrooms per day\n    avg_classroom_percentage = (total_classroom_time / total_classroom_time) * 100\n    result = avg_classroom_percentage\n    return result"}
{"output": "def solution():\n    # Calculate the number of books in each shelf\n    middle_shelf_books = 10\n    bottom_shelf_books = 2 * middle_shelf_books\n    top_shelf_books = bottom_shelf_books - 5\n\n    # Calculate the total number of books needed\n    total_books = 110\n\n    # Calculate the total number of bookcases needed\n    total_books_needed = total_books - (middle_shelf_books + bottom_shelf_books + top_shelf_books)\n    result = total_books_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of one dozen eggs\n    COST_PER_DOZEN = 2.40\n    SELLING_PRICE_PER_EGGS = 1\n\n    # Define the number of dozens of eggs Rose bought\n    dozens_bought = 5\n\n    # Calculate the total cost of the eggs\n    total_cost = dozens_bought * DOZENS_bought * COST_PER_DOZEN\n\n    # Calculate the total revenue from selling the eggs\n    total_revenue = 3 * SELLING_PRICE_PER_EGGS\n\n    # Calculate Rose's profit\n    profit = total_revenue - total_cost\n\n    # Display Rose's profit\n    result = profit\n    return result"}
{"output": "def solution():\n    total_hats = 100\n    red_hats = total_hats / 2\n    remaining_hats = total_hats - red_hats\n    blue_hats = (3/5) * remaining_hats\n    white_hats = remaining_hats - blue_hats\n    result = white_hats\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sticks and the cost per bag\n    STICKS_PER_BAG = 30\n    COST_PER_BAG = 18.00\n\n    # Define the number of bags Archie buys\n    num_bags = 1\n\n    # Calculate the total cost of the jerky before discount\n    total_cost_before_discount = STICKS_PER_BAG * COST_PER_BAG\n\n    # Calculate the cost per bag after discount\n    cost_per_bag_after_discount = total_cost_before_discount - 3.00\n\n    # Calculate the cost per stick in cents\n    cost_per_stick_cents = cost_per_bag_after_discount * 100\n\n    # Display the cost per stick in cents\n    result = cost_per_stick_cents\n    return result"}
{"output": "def solution():\n    # Calculate the number of questions Audrey needs to correct on the first test\n    first_test_correct = 0.7 * 70\n\n    # Calculate the number of questions Audrey needs to get right on the second test\n    second_test_correct = 0.6 * 40\n\n    # Calculate the number of questions Audrey needs to get right on the second test\n    second_test_correct = 40 - first_test_correct\n\n    result = second_test_correct\n    return result"}
{"output": "def solution():\n    \n    total_cubes = 116\n    strawberry_cubes = (total_cubes - 4) / 5\n    blueberry_cubes = total_cubes - strawberry_cubes - 4\n    result = blueberry_cubes\n    return result"}
{"output": "def solution():\n    \n    years_played = 4\n    games_played_per_year = 40\n    points_per_game = 21\n    total_points = years_played * games_played_per_year * points_per_game\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    initial_marbles = 10\n    dropped_marbles = initial_marbles / 2\n    search_marbles = 3\n    final_marbles = initial_marbles - dropped_marbles + search_marbles - 1\n    result = final_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Jason needs to sell\n    cars_to_sell = 15\n\n    # Define the average number of telephone calls Jason can make per car\n    calls_per_car = 25\n\n    # Define the number of customers Jason gets to potential customers\n    customers_to_sell = 2\n\n    # Calculate the number of telephone calls Jason needs to make to buy a car\n    calls_to_buy = cars_to_sell / customers_to_sell\n\n    # Calculate the number of telephone calls Jason needs to make to earn his bonus\n    calls_to_bonus = calls_to_sell * bonus_capacity\n\n    # Display the number of telephone calls Jason needs to make\n    result = calls_to_bonus\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and rooms in the house\n    num_people = 4\n    num_rooms = 8\n\n    # Calculate the total number of candles\n    total_candles = (num_people * 2) + (num_rooms * 4) + (num_people * 5)\n\n    # Calculate the number of small and medium candles\n    num_small_candles = (num_rooms // 2) * 4\n    num_medium_candles = (num_rooms // 2) * 5\n\n    # Calculate the total number of candles and flashlights\n    total_candles = num_small_candles + num_medium_candles\n\n    # Display the total number of candles and flashlights\n    result = total_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bags of chips and the number of chips per bag\n    bags_of_chips = 2\n    chips_per_bag = 55\n\n    # Calculate the total number of chips\n    total_chips = bags_of_chips * chips_per_bag\n\n    # Calculate the number of chips each person gets if they all get the same number\n    chips_per_person = total_chips / 5\n\n    # Display the number of chips each person gets\n    result = chips_per_person\n    return result"}
{"output": "def solution():\n    \n    first_side = 6\n    second_side = 2 * first_side\n    third_side = 2 * first_side\n    last_side = 0.5 * first_side\n    total_time = first_side + second_side + third_side + last_side\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    helmets = 20\n    footballs = helmets / 2\n    total_items = helmets + footballs\n    result = total_items\n    return result"}
{"output": "def solution():\n    hours_per_day = 6\n    minutes_per_call = 15\n    days_per_week = 5\n\n    # Calculate the total number of hours Tim spends on phones in a week\n    total_phones_hours = hours_per_day * days_per_week\n\n    # Calculate the total number of calls Tim deals in a week\n    total_calls_hours = total_phones_hours * minutes_per_call\n\n    # Calculate the total number of calls Tim deals in a week\n    total_calls_week = total_calls_hours * calls_per_week\n    result = total_calls_week\n    return result"}
{"output": "def solution():\n    \n    old_time_per_painting = 7\n    new_time_per_painting = 12\n    old_paintings = 6\n    new_paintings = new_paintings\n    old_time = old_paintings * old_time_per_painting\n    new_time = new_paintings * new_time_per_painting\n    extra_time = new_time - old_time\n    result = extra_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of plants and the amount of water needed for each type of plant\n    num_plants = 20\n    half_plants = 4\n    one_plant = 8\n    quarter_plants = num_plants - half_plants - one_plant\n\n    # Calculate the total amount of water needed for all the plants\n    total_water = (half_plants * 0.5) + (one_plant * 0.25)\n\n    # Display the total amount of water needed\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    land_distance = 200\n    water_distance = 200\n    land_speed = 20\n    water_speed = 10\n    land_time = land_distance / land_speed\n    water_time = water_distance / water_speed\n    return_time = land_time + water_time\n    result = return_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of popsicles needed and the number of boxes needed\n    popsicles_needed = 56\n    boxes_needed = popsicles_needed / 8\n\n    # Calculate the cost of the boxes\n    cost_per_box = 2.00\n    total_cost = boxes_needed * cost_per_box\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the main phone plan\n    MAIN_PHONE_COST = 20\n\n    # Calculate the cost of the additional phone\n    additional_phone_cost = MAIN_PHONE_COST * 2\n\n    # Calculate the total cost of the phone plan\n    total_cost = MAIN_PHONE_COST + additional_phone_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    doughnuts_per_day = 10  # Derrick makes 10 dozen doughnuts every day\n    price_per_doughnut = 2  # Derrick sells each doughnut at $2\n    days_in_june = 30  # There are 30 days in June\n\n    # Calculate the total number of doughnuts Derrick makes in June\n    total_doughnuts = doughnuts_per_day * days_in_june\n\n    # Calculate the total amount of money Derrick makes in June\n    total_money = total_doughnuts * price_per_doughnut\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of photos Jade has taken\n    photos_taken = 210\n\n    # Define the number of photos Jade needs to upload in one batch\n    photos_per_batch = 7\n\n    # Define the number of batches Jade needs to upload each day\n    batches_per_day = 6\n\n    # Calculate the total number of photos Jade needs to upload\n    total_photos_needed = photos_taken / (photos_per_batch * batches_per_day)\n\n    # Calculate the number of days Jade needs to upload all her photos\n    days_needed = total_photos_needed / 7\n\n    # Display the number of days needed\n    result = days_needed\n    return result"}
{"output": "def solution():\n    \n    blouses_per_week = 5\n    pants_per_week = 2\n    skirts_per_week = 1\n    cost_per_blouse = 5\n    cost_per_skirt = 6\n    cost_per_pants = 8\n    weeks = 5\n    total_cost = (blouses_per_week * cost_per_blouse) + (pants_per_week * cost_per_skirt) + (skirts_per_week * cost_per_pants)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define John's normal speaking speed and training speed\n    NORMAL_SPEING = 150\n    TRAINING_SPEED = NORMAL_SPEING * 2.5\n\n    # Define the number of words per page\n    WORDS_PER_PAGE = 450\n\n    # Calculate the total number of words John needs to speak\n    total_words = 10 * WORDS_PER_PAGE\n\n    # Calculate the time it would take John to speak all the words\n    time_in_hours = total_words / WORDS_PER_PAGE\n\n    # Display the time it would take John to speak all the words\n    result = time_in_hours\n    return result"}
{"output": "def solution():\n    \n    day_one = 50\n    day_two = day_one + 20\n    day_three = 2 * day_two\n    total_people = day_one + day_two + day_three\n    result = total_people\n    return result"}
{"output": "def solution():\n    # Calculate the number of kernels popped in the first 30 seconds\n    pop_first_30_seconds = 20\n\n    # Calculate the number of kernels popped in the next 30 seconds\n    pop_next_30_seconds = 3 * pop_first_30_seconds\n\n    # Calculate the number of kernels popped in the next 30 seconds\n    pop_next_30_seconds = 4 * pop_next_30_seconds\n\n    # Calculate the number of kernels popped in the final 30 seconds\n    pop_final_30_seconds = 0.5 * pop_next_30_seconds\n\n    # Calculate the total number of kernels popped\n    total_popped = pop_first_30_seconds + pop_next_30_seconds + pop_next_30_seconds + pop_next_30_seconds + pop_final_30_seconds\n\n    # Calculate the number of kernels that popped in the final 30 seconds\n    final_30_seconds = 0.25 * total_popped\n\n    result = final_30_seconds\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of lemons needed for each gallon of lemonade\n    FREE_LEMONS_PER_GALLON = 1\n\n    # Define the amount of lemons needed for each gallon of lemonade\n    FREE_LEMONS_PER_GALLON = 6\n\n    # Define the number of gallons of lemonade needed for the party\n    gallons_of_lemonade = 4\n\n    # Calculate the total amount of lemons needed\n    total_lemons = gallons_of_lemonade * FREE_LEMONS_PER_GALLON + gallons_of_lemonade * FREE_LEMONS_PER_GALLON\n\n    # Calculate the amount of lemons needed for Allen\n    allen_lemons = total_lemons * 2\n\n    # Display the number of lemons needed\n    result = allen_lemons\n    return result"}
{"output": "def solution():\n    \n    german_shepherds_per_day = 3\n    bulldogs_per_day = 2\n    german_shepherd_food = 5\n    bulldog_food = 3\n    days_per_week = 7\n    total_german_shepherds = german_shepherds_per_day * days_per_week\n    total_bulldogs = bulldogs_per_day * days_per_week\n    total_food = total_german_shepherds + total_bulldogs\n    result = total_food\n    return result"}
{"output": "def solution():\n    # Calculate the total number of legs on the farm\n    total_legs = 10*2 + 15*4  # 10 2-legged animals with 2 legs each and 15 4-legged animals with 4 legs each\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    blue_blocks = 4\n    yellow_blocks = blue_blocks * 2\n    total_blocks = 32\n    red_blocks = total_blocks - blue_blocks - yellow_blocks\n    result = red_blocks\n    return result"}
{"output": "def solution():\n    \n    # Define the time Elvis travels west and east\n    west_time = 5\n    east_time = 8\n\n    # Define the average speed of the journey\n    average_speed = 18\n\n    # Calculate the distance Elvis traveled at the end of the journey\n    distance_end = (west_time + east_time) * average_speed\n\n    # Calculate the total distance Elvis traveled\n    total_distance = distance_end + distance_end\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the boat\n    initial_cost = 9000\n\n    # Calculate the value of the boat after the first year\n    year1_value = initial_cost * 0.3\n\n    # Calculate the value of the boat after the second year\n    year2_value = year1_value * 0.3\n\n    # Calculate the value of the boat after the third year\n    year3_value = year2_value * 0.2\n\n    # Calculate the total value of the boat after three years\n    total_value = initial_cost + year1_value + year2_value + year3_value\n\n    # Display the total value of the boat\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red candies\n    red_candies = 54\n\n    # Calculate the number of orange candies\n    orange_candies = red_candies * 2\n\n    # Calculate the number of yellow candies\n    yellow_candies = red_candies / 2\n\n    # Calculate the total number of candies\n    total_candies = red_candies + orange_candies + yellow_candies\n\n    # Calculate the number of pink candies\n    pink_candies = 232 - total_candies\n\n    # Display the number of pink candies\n    result = pink_candies\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of one night at the hotel and the number of nights\n    HOTEL_COST = 80\n    NUM_NIGHTS = 3\n\n    # Calculate the cost of one bus at the hotel\n    bus_cost = HOTEL_COST * 7\n\n    # Calculate the cost of one bus trip\n    bus_trip_cost = bus_cost * 0.1\n\n    # Calculate the total cost of the hotel and bus\n    total_cost = hotel_cost + bus_trip_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles Mazie has\n    mazie_marbles = 52\n\n    # Define the number of marbles Dallas has after dropping 4\n    dallas_marbles = 21\n\n    # Calculate the number of marbles Darla has after dropping 4\n    darla_marbles = dallas_marbles - 4\n\n    # Display the number of marbles Darla has\n    result = darla_marbles\n    return result"}
{"output": "def solution():\n    adult_ticket_price = 12\n    child_ticket_price = 8\n    num_popcorns = 2\n    popcorn_price = 3\n\n    # Calculate the total cost of adult tickets\n    adult_ticket_cost = adult_ticket_price * num_popcorns\n\n    # Calculate the total cost of child tickets\n    child_ticket_cost = child_ticket_price * num_popcorns\n\n    # Calculate the total cost of all tickets\n    total_cost = adult_ticket_cost + child_ticket_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the car and the weight of the luggage and young children\n    car_weight = 1200\n    luggage_weight = 250\n    young_weight = 75 * 2\n\n    # Calculate the total weight of the car and the young children\n    total_weight = car_weight + luggage_weight + young_weight\n\n    # Calculate the force to move the car\n    force = total_weight * 0.01\n\n    # Display the force to move the car\n    result = force\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the backyard fence\n    length = 20\n    width = 15\n\n    # Calculate the perimeter of the rectangle\n    perimeter = 2 * length + width\n\n    # Display the perimeter of the crepe paper\n    result = perimeter\n    return result"}
{"output": "def solution():\n    mia_age = 16  # Mia is currently 16 years apart in age\n    emma_age = 40  # Emma is 40 years old\n\n    # Calculate Mia's age\n    mia_age = mia_age - mia_age\n\n    # Calculate Emma's age\n    emma_age = emma_age - mia_age\n\n    # Calculate the average of their ages\n    average_age = (mia_age + emma_age) / 2\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    tom_seashells = 214\n    nancy_seashells = 432\n    benny_seashells = 86\n    cracked_seashells = 67\n    total_seashells = tom_seashells + nancy_seashells + benny_seashells - cracked_seashells\n    result = total_seashells\n    return result"}
{"output": "def solution():\n    num_people = 12\n    dinner_plate_price = 6.0\n    bowl_price = 5.0\n    salad_plate_price = 4.0\n\n    # Calculate the total cost of all dinner plates\n    total_dinner_plate_cost = num_people * dinner_plate_price\n\n    # Calculate the total cost of all bowls\n    total_bowl_cost = num_people * bowl_price\n\n    # Calculate the total cost of all plates\n    total_plate_cost = total_dinner_plate_cost + total_bowl_cost\n\n    # Calculate the total cost of the place settings\n    total_cost = total_plate_cost + total_plate_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    steve_time = 10  # Steve put together the puzzle in 10 hours\n    anna_time = (steve_time / 2) + 2  # Anna put together the puzzle in 2 hours more than half Steve's time\n\n    result = anna_time\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of feed eaten by Dexter in a week\n    daily_feed = 4 * 2  # each pig eats 4 pounds of feed twice a day\n    total_feed_eaten = daily_feed * 7  # Dexter ordered 300 pounds of feed\n    remaining_feed = 300 - total_feed_eaten  # Calculate the remaining feed after a week\n    result = remaining_feed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of hot dogs needed\n    total_hot_dogs = 20 * 2  # each guest will eat 2 hot dogs\n\n    # Calculate the number of hot dogs John has left over\n    leftover_hot_dogs = 4\n\n    # Calculate the number of hot dogs John needs to buy\n    needed_hot_dogs = total_hot_dogs - leftover_hot_dogs\n\n    # Calculate the number of packs of hot dogs needed\n    packs_needed = needed_hot_dogs / 6\n\n    # Calculate the cost of the hot dogs\n    cost_per_pack = 2\n    total_cost = packs_needed * cost_per_pack\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    cupcakes_sold = 20\n    cupcake_price = 2\n    cookies_sold = 40\n    cookie_price = 1\n    tray_price = 4\n    trays_bought = 5\n    total_sales = (cupcakes_sold * cupcake_price) + (cookies_sold * cookie_price)\n    money_left = total_sales - money_left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of children\n    initial_children = 5\n\n    # Calculate the number of children after the first street\n    children_after_first_street = initial_children + 5\n\n    # Calculate the number of children after the second street\n    children_after_second_street = children_after_first_street + 2\n\n    # Calculate the number of children after the third street\n    children_after_third_street = children_after_second_street + 2\n\n    # Calculate the total number of children after the first street\n    total_children = children_after_second_street + children_after_third_street\n\n    # Display the total number of children\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    total_meals = 1360\n    friday_meals = 64\n    saturday_meals = 30\n    sunday_meals = 48\n    remaining_meals = total_meals - (friday_meals + saturday_meals + sunday_meals)\n    result = remaining_meals\n    return result"}
{"output": "def solution():\n    \n    quarter_value = 25\n    nickel_value = 5\n    dime_value = 10\n    total_value = (quarter_value * 100) + (2 * nickel_value) + (7 * dime_value)\n    result = total_value\n    return result"}
{"output": "def solution():\n    # Calculate the age of the older brother\n    older_brother_age = 12 / 2\n\n    # Calculate the age of the sisters\n    sisters_age = 16\n\n    # Calculate the age of the brothers\n    brothers_age = 12\n\n    # Calculate the age of the older brother\n    older_brother_age = older_brother_age / 2\n\n    # Calculate the total age of all the siblings\n    total_age = brothers_age + sisters_age + older_brother_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days Charisma practices per week\n    days_per_week = 5\n\n    # Define the time Charisma spends meditating each day\n    time_per_day = 15\n\n    # Define the time Charisma spends practicing each yoga\n    time_per_yoga = 60\n\n    # Calculate the total time Charisma spends meditation per week\n    total_time_per_week = days_per_week * time_per_yoga\n\n    # Calculate the total time Charisma spends on meditation/yoga practice in 4 weeks\n    total_time_per_4_weeks = total_time_per_week * 4\n\n    # Return the result\n    result = total_time_per_4_weeks\n    return result"}
{"output": "def solution():\n    \n    small_shirt_size = 3\n    medium_shirt_size = 4\n    large_shirt_size = 6\n    num_small_shirts = 11\n    num_medium_shirts = 8\n    num_large_shirts = 6\n    total_fabric = (small_shirt_size * num_small_shirts) + (medium_shirt_size * num_medium_shirts) + (large_shirt_size * num_large_shirts)\n    result = total_fabric\n    return result"}
{"output": "def solution():\n    \n    small_sunflower_seeds = 3 * 12\n    large_sunflower_seeds = small_sunflower_seeds * 1.5\n    total_seeds = small_sunflower_seeds + large_sunflower_seeds\n    result = total_seeds\n    return result"}
{"output": "def solution():\n    \n    george_pens = 18\n    timothy_pens = george_pens * 3\n    sarah_pens = timothy_pens / 2\n    result = sarah_pens\n    return result"}
{"output": "def solution():\n    \n    # Define Albert's height\n    albert_height = 36\n\n    # Calculate Anne's height\n    anne_height = albert_height * 2\n\n    # Calculate Jackie's height\n    jackie_height = anne_height - 3\n\n    # Display Jackie's height\n    result = jackie_height\n    return result"}
{"output": "def solution():\n    \n    bars_per_day = 5000\n    days_per_week = 7\n    weeks = 2\n    total_bars = bars_per_day * days_per_week * weeks\n    price_per_bar = 2\n    total_money = total_bars * price_per_bar\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of each T-shirt and the discount percentage\n    original_price = 8\n    discount_percentage = 0.5\n\n    # Calculate the discounted price of each T-shirt\n    discounted_price = original_price * (1 - discount_percentage)\n\n    # Calculate the discounted price of the shoes\n    discounted_price = discounted_price * (1 - discount_percentage)\n\n    # Calculate the discounted price of the shoes\n    discounted_price = discounted_price * (1 - discount_percentage)\n\n    # Calculate the total amount spent at the store\n    total_spent = discounted_price + discounted_price\n\n    # Display the total amount spent\n    result = total_spent\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Ryan spent on chores\n    total_money = 6 * 3 * 3  # Ryan completes his chores for 3 weeks, so he completes his chores for 3 weeks\n\n    # Calculate the total cost of ice cream cones and friends\n    total_cost = 1.25 * 3  # Ryan bought ice cream cones for himself and 3 friends at $1.25 each\n\n    # Calculate the total cost of movie tickets\n    total_movie_cost = total_money - total_cost\n\n    # Calculate the number of movie tickets Ryan can buy\n    num_movie_tickets = total_movie_cost / 6.5  # Each movie ticket costs $6.50\n\n    result = num_movie_tickets\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    leggings_price = 100\n    frame_price = 5\n    sunglasses_price = 30\n    bathrobes_price = 100\n\n    # Calculate the total cost of the presents\n    total_cost = leggings_price + frame_price + (2 * bathrobes_price)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the cost of passion fruit and jackfruit\n    cost_passion_fruit = 2 * 6  # 2 pounds of passion fruit at $6 per pound\n    cost_jackfruit = 1.5 * 8  # 1.5 pounds of jackfruit at $8 per pound\n    cost_honey = 2 * 10  # 2 pounds of special honey at $10 per pound\n\n    # Calculate the profit from selling 10 jars\n    profit = (selling_price - cost_passion_fruit - cost_jackfruit - cost_honey) * 10\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    quarters = 32\n    dimes = 95\n    nickels = 120\n    pennies = 750\n    total_quarters = quarters * 0.25\n    total_dimes = dimes * 0.1\n    total_nickels = nickels * 0.05\n    total_pennies = pennies * 0.01\n    total_dollar = total_quarters + total_dimes + total_nickels + total_pennies\n    result = total_dollar\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of ice cream, movie tickets, and bracelet\n    ice_cream_price = 3.5\n    movie_ticket_price = 7.5\n    bracelet_price = 8.5\n\n    # Define the total amount spent\n    total_spent = ice_cream_price + movie_ticket_price + bracelet_price\n\n    # Define the amount of money Janet's parents gave her\n    parents_money = 40\n\n    # Calculate the amount of money Janet has left\n    money_left = parents_money - total_spent\n\n    # Display the amount of money Janet has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    cars_per_day = 3\n    days_per_week = 7\n    weeks = 2\n    total_cars = cars_per_day * days_per_week * weeks\n    total_earned = total_cars * 4\n    result = total_earned\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies\n    oatmeal_cookies = 9\n    chocolate_chip_cookies = 4\n    sugar_cookies = 5\n\n    # Subtract the cookies eaten for early day snack\n    oatmeal_cookies -= 3\n    lunch_cookies -= 2\n    sugar_cookies -= 2\n\n    # Subtract the cookies given to friends\n    friends_cookies -= 2\n    dinner_cookies -= 4 * 4\n\n    # Calculate the total number of cookies Randy has now\n    total_cookies = oatmeal_cookies + chocolate_chip_cookies + sugar_cookies + dinner_cookies\n\n    # Display the total number of cookies Randy has now\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    num_collection = 12\n    price_per_toy_1 = 5\n    price_per_toy_2 = 7\n\n    # Calculate the total amount of money Matthew would earn\n    total_money = num_collection * (price_per_toy_1 * num_collection) + (price_per_toy_2 * num_toy_2)\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    holes_per_day = 6\n    days_digging = 14\n    holes_filled_per_day = 9\n    holes_per_week = holes_per_day * days_digging\n    new_holes_per_night = 6\n    weeks_to_fill = (holes_filled_per_day - new_holes_per_night) / holes_per_week\n    result = weeks_to_fill\n    return result"}
{"output": "def solution():\n    \n    # Define the average number of students enrolled by Norman High School\n   Norman_students = 4000\n\n    # Define the average number of students enrolled by Butler High School\n    Butler_students = (3/4) * Norman_students\n\n    # Calculate the average number of students enrolled by Butler High School\n    butler_students = Butler_students * 2\n\n    # Calculate the difference in the average number of students enrolled\n    difference = Norman_students - butler_students\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 7995\n    rainbow_cookies = 2595\n    oatmeal_cookies = 3075\n    chocolate_chip_cookies = total_cookies - rainbow_cookies - oatmeal_cookies\n    result = chocolate_chip_cookies\n    return result"}
{"output": "def solution():\n    # Calculate the number of test tubes Igor gathered\n    test_tubes = 16 / 2\n\n    # Calculate the number of Petri dishes Igor gathered\n    petri_dishes = 14 + 2\n\n    # Calculate the number of beakers Igor picked up\n    beakers = 7 - test_tubes\n\n    # Calculate the total number of test tubes gathered\n    total_test_tubes = 16 + test_tubes\n\n    # Calculate the total number of beakers gathered\n    total_beakers = 7 + petri_dishes\n\n    # Calculate the total number of dishes gathered\n    total_dishes = 14 + petri_dishes\n\n    # Calculate the number of lab bench lost\n    lost_lab_bench = total_test_tubes + total_beakers - lost_lab_bench\n\n    result = lost_lab_bench\n    return result"}
{"output": "def solution():\n    num_tables = 4\n    legs_per_table = 4\n    screws_per_leg = 2\n    total_legs = num_tables * legs_per_table\n    total_screws = 40\n\n    # Calculate the total number of screws needed\n    total_screws_needed = total_legs * screws_per_leg\n\n    # Calculate the number of screws left over\n    screws_left_over = total_screws - total_screws_needed\n    result = screws_left_over\n    return result"}
{"output": "def solution():\n    \n    eggs_in_basket1 = 10\n    eggs_in_basket2 = eggs_in_basket1 * 2\n    total_eggs = eggs_in_basket1 + eggs_in_basket2\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    alexandra_raised = 430\n    sarah_raised = 300\n    kim_raised = alexandra_raised + 320\n    maryam_raised = sarah_raised + 400\n    total_raised = alexandra_raised + kim_raised + sarah_raised + maryam_raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    aaron_distance = 4\n    aaron_speed = aaron_distance / 2\n    aaron_time = aaron_distance / aaron_speed\n    vanessa_time = aaron_time * 2\n    result = vanessa_time\n    return result"}
{"output": "def solution():\n    # Calculate the total length of line needed for the docks\n    total_line_needed = 200 - 6  # 200 feet of dock - 6 feet of new line\n    result = total_line_needed\n    return result"}
{"output": "def solution():\n    num_meals = 2\n    meal_cost = 5\n    wine_cost = 5\n    num_days = 2\n\n    # Calculate the total cost of meals for one week\n    total_meal_cost = num_meals * meal_cost\n\n    # Calculate the total cost of wine for one week\n    total_wine_cost = wine_cost * num_days\n\n    # Calculate the total revenue for all reservations for one week\n    total_revenue = total_meal_cost + total_wine_cost\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each watermelon\n    cost = 80\n    selling_price = cost / 50\n\n    # Calculate the profit per watermelon\n    profit_per_watermelon = selling_price * 0.25\n\n    # Calculate the price per watermelon\n    price_per_watermelon = selling_price / 50\n\n    # Display the price per watermelon\n    result = price_per_watermelon\n    return result"}
{"output": "def solution():\n    \n    john_age_when_john_was_19 = 19\n    james_age_now = john_age_when_john_was_19 + (2 * john_age_when_john_was_19)\n    james_age_in_3_years = james_age_now + 3\n    youngest_son_age_at_32 = 32 - james_age_in_3_years\n    result = youngest_son_age_at_32\n    return result"}
{"output": "def solution():\n    \n    ana_time = 3\n    jane_time = 4\n    ana_oranges = ana_time / ana_time\n    jane_oranges = jane_time / jane_time\n    difference = ana_oranges - jane_oranges\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the radiator and the discount percentage\n    radiator_cost = 400\n    discount_percentage = 80\n\n    # Calculate the discounted cost of the radiator\n    discounted_cost = radiator_cost * (1 - (discount_percentage / 100))\n\n    # Calculate the cost of the mechanic\n    mechanic_cost = 3 * 50\n\n    # Calculate the total cost\n    total_cost = discounted_cost + mechanic_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    total_animals = 20  # Farmer Brown has 20 animals on his farm\n    total_legs = 70  # The total legs of the animals are 70 legs\n    chicken_legs = total_legs / 4  # Each chicken has 4 legs\n    chicken_animals = chicken_legs / 4  # Each chicken has 4 legs\n    result = chicken_animals\n    return result"}
{"output": "def solution():\n    # Calculate the total number of slices\n    total_slices = 7 * 8\n\n    # Calculate the number of people sharing the pizzas\n    num_people = 3\n\n    # Calculate the number of slices per person\n    slices_per_person = total_slices / num_people\n    result = slices_per_person\n    return result"}