{"output": "def solution():\n    \n    # Define the amount of feed each chicken feeds\n    feed_per_chicken = 3\n\n    # Calculate the total amount of feed needed\n    total_feed = feed_per_chicken * 3\n\n    # Calculate the amount of feed given in the morning\n    morning_feed = 15\n\n    # Calculate the amount of feed given in the afternoon\n    afternoon_feed = 25\n\n    # Calculate the total amount of feed needed in the final meal\n    final_feed = total_feed - morning_feed - afternoon_feed\n\n    # Display the amount of feed needed in the final meal\n    result = final_feed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of one glass and the percentage increase\n    GLASS_PRICE = 5\n    PERCENTAGE_INCREASE = 0.6\n\n    # Calculate the total cost of 16 glasses\n    total_cost = 16 * GLASS_PRICE\n\n    # Calculate the number of glasses Kylar wants to buy\n    num_glasses = 16\n\n    # Calculate the total cost of the remaining glasses\n    remaining_glasses = num_glasses // 2\n    remaining_cost = num_glasses * GLASS_PRICE * (1 - PERCENTAGE_INCREASE)\n\n    # Calculate the total cost of all the glasses\n    total_cost_with_remaining_glasses = total_cost + remaining_cost\n\n    # Display the total cost\n    result = total_cost_with_remaining_glasses\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sheep Seattle has\n    seattle_sheep = 20\n\n    # Calculate the number of sheep Charleston has\n    charleston_sheep = seattle_sheep * 4\n\n    # Calculate the number of sheep Toulouse has\n    toulouse_sheep = charleston_sheep * 2\n\n    # Calculate the total number of sheep\n    total_sheep = seattle_sheep + charleston_sheep + toulouse_sheep\n\n    # Display the total number of sheep\n    result = total_sheep\n    return result"}
{"output": "def solution():\n    \n    # Define the total size of the file and the download speed\n    total_size = 200\n    download_speed = 2\n\n    # Calculate the time it takes to download the file without the restart\n    time_without_restart = total_size / download_speed\n\n    # Calculate the time it takes to download the file with the restart\n    time_with_restart = time_without_restart * 0.4\n\n    # Calculate the total time to download the file with the restart\n    total_time = time_with_restart + 20\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance covered in the first 2 hours\n    distance_first_2_hours = 2 * 60\n\n    # Calculate the distance covered in the next half-hours\n    distance_next_half_hours = 0.5 * 30 * 4\n\n    # Calculate the total distance covered\n    total_distance = distance_first_2_hours + distance_next_half_hours\n\n    # Calculate the distance left\n    distance_left = 80 * 4 - total_distance\n\n    # Display the distance left\n    result = distance_left\n    return result"}
{"output": "def solution():\n    \n    regular_rate = 10\n    regular_hours = 40\n    overtime_rate = regular_rate * 1.2\n    regular_pay = regular_rate * regular_hours\n    overtime_pay = overtime_rate * 45\n    total_pay = regular_pay + overtime_pay\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the number of downloads in the first month\n    first_month_downloads = 60\n\n    # Calculate the number of downloads in the second month\n    second_month_downloads = first_month_downloads * 3\n\n    # Calculate the number of downloads in the third month\n    third_month_downloads = second_month_downloads * 0.7\n\n    # Calculate the total number of downloads over the three months\n    total_downloads = first_month_downloads + second_month_downloads + third_month_downloads\n\n    # Display the total number of downloads\n    result = total_downloads\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of pastry\n    donut_price = 68\n    cupcake_price = 80\n    cheesecake_price = 55\n\n    # Define the number of each type of pastry purchased\n    donut_dozen = 3\n    cupcake_dozen = 2\n    cheesecake_dozen = 6\n\n    # Calculate the total cost of the donuts\n    donut_cost = donut_dozen * donut_price\n\n    # Calculate the total cost of the cupcakes\n    cupcake_cost = cupcake_dozen * cupcake_price\n\n    # Calculate the total cost of the cheesecakes\n    cheesecake_cost = cheesecake_dozen * cheesecake_price\n\n    # Calculate the total cost of all the pastries\n    total_cost = donut_cost + cupcake_cost + cheesecake_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost to plant the tree and the price of each lemon\n    INITIAL_COST = 90\n    LEMON_PRICE = 1.5\n\n    # Calculate the number of lemons needed to reach the initial cost\n    lemons_needed = INITIAL_COST / LEMON_PRICE\n\n    # Calculate the number of years needed to reach the initial cost\n    years_needed = lemons_needed / 7\n\n    # Calculate the cost of water and feeding the tree\n    water_cost = 3\n\n    # Calculate the total cost of feeding the tree\n    feeding_cost = years_needed * WATER_COST\n\n    # Calculate the total earnings from selling the lemons\n    earnings = lemons_needed * LEMON_PRICE\n\n    # Calculate the total earnings\n    total_earnings = feeding_cost + earnings\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vacuum cleaners left\n    vacuum_cleaners_left = 5\n\n    # Calculate the number of vacuum cleaners sold at the green house\n    green_cleaners = vacuum_cleaners_left / 3\n\n    # Calculate the number of vacuum cleaners sold to the red house\n    red_cleaners = green_cleaners + 2\n\n    # Calculate the number of vacuum cleaners sold at the orange house\n    orange_cleaners = vacuum_cleaners_left / 2\n\n    # Calculate the total number of vacuum cleaners sold\n    total_cleaners = green_cleaners + red_cleaners + orange_cleaners\n\n    # Display the total number of vacuum cleaners sold\n    result = total_cleaners\n    return result"}
{"output": "def solution():\n    \n    total_students = 20\n    cont_dance_students = total_students * 0.2\n    remaining_students = total_students - cont_dance_students\n    jazz_dance_students = remaining_students * 0.25\n    hip_hop_students = total_students - cont_dance_students - jazz_dance_students\n    percent_hip_hop = (hip_hop_students / total_students) * 100\n    result = percent_hip_hop\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of jewelry and electronic gadgets\n    jewelry_price = 5000\n    gadgets_price = 8000\n\n    # Calculate the total cost of each purchase\n    jewelry_cost = jewelry_price * 1.5\n    gadgets_cost = gadgets_price * 1.2\n\n    # Calculate the total revenue from each purchase\n    jewelry_revenue = jewelry_price * 1.5\n    gadgets_revenue = gadgets_price * 1.2\n\n    # Calculate the total profit\n    total_profit = (jewelry_revenue + gadgets_revenue) - (jewelry_cost + gadgets_cost)\n\n    # Display the total profit\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the distances traveled by each train\n    westward_distance = 80\n    northward_distance = 150\n\n    # Calculate the total distance traveled\n    total_distance = westward_distance + northward_distance\n\n    # Calculate the average distance covered by each train\n    average_distance = total_distance / 2\n\n    # return the result\n    result = average_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly rates and the number of hours worked per week\n    teacher_rate = 20\n    coach_rate = 30\n    teacher_hours = 35\n    coach_hours = 15\n\n    # Calculate the annual salary\n    teacher_salary = teacher_rate * teacher_hours * 50\n    coach_salary = coach_rate * coach_hours * 50\n    total_salary = teacher_salary + coach_salary\n\n    # return the result\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days in a week and the number of weeks\n    DAYS_IN_WEEK = 7\n    WEEKS = 4\n\n    # Calculate the total number of eggs eaten\n    total_eggs = 3 * DAYS_IN_WEEK * WEEKS\n\n    # Calculate the total number of dozens of eggs eaten\n    total_dozens = total_eggs / 12\n\n    # Display the total number of dozens of eggs eaten\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    \n    total_distance = 12\n    distance_1 = 4\n    distance_2 = 2\n    time_1 = 1\n    time_2 = 1\n    speed_1 = 4\n    speed_2 = 4\n    time_3 = 1\n    distance_3 = distance_2 - (distance_1 + distance_2)\n    distance_4 = distance_3 - (distance_1 + distance_2)\n    total_time = time_1 + time_2 + time_3\n    speed_needed = distance_4 / total_time\n    result = speed_needed\n    return result"}
{"output": "def solution():\n    \n    orange_water = 10 * (2/3)\n    pineapple_water = 15 * (3/5)\n    total_water = orange_water + pineapple_water\n    remaining_water = 24 - total_water\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    \n    # Define the current age of Samantha\n    samantha_age = 31\n\n    # Calculate the age difference between Raymond and Samantha\n    age_diff = samantha_age - 6\n\n    # Calculate the age of Raymond's son\n    son_age = 23\n\n    # Calculate the age difference between Raymond and Samantha\n    son_age_diff = son_age - age_diff\n\n    # Calculate the age difference between Raymond and Samantha\n    age_difference_in_24_years = raymond_age_diff + age_diff\n\n    # Return the result\n    result = age_difference_in_24_years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers and the number of DVDs sold\n    num_customers = 8\n    dVDs_sold = 0\n\n    # Calculate the number of DVDs sold in the first 3 customers\n    dVDs_sold += 3\n\n    # Calculate the number of DVDs sold in the next 2 customers\n    dVDs_sold += 2 * 2\n\n    # Calculate the number of DVDs sold in the last 3 customers\n    dVDs_sold += 3\n\n    # Display the total number of DVDs sold\n    result = dVDs_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of time the candle burns in minutes\n    time_in_minutes = 5 - 1\n\n    # Calculate the amount of time the candle melts in minutes\n    time_in_hours = time_in_minutes / 60\n\n    # Calculate the amount of time the candle melts in minutes\n    time_in_minutes = time_in_hours * 60\n\n    # Calculate the total amount of candimeters the candle melts in minutes\n    total_melts = time_in_minutes * 2\n\n    # Calculate the amount of candimeters shorter the candle will be after burning in minutes\n    shorter_melts = total_melts - total_melts\n\n    # Display the amount of candimeters shorter the candle will be\n    result = shorter_melts\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the book and the discount percentage\n    book_price = 19.5\n    discount_percentage = 25\n\n    # Calculate the original price of the book\n    original_price = book_price / (1 - discount_percentage/100)\n\n    # Display the original price of the book\n    result = original_price\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    CHICKEN_MEAL_PRICE = 12\n    MILK_PRICE = 3\n    APPLE_PRICE = 1.5\n    PIZZA_PRICE = 8.5\n\n    # Define the quantities of each item ordered\n    chicken_meal_quantity = 1\n    milk_quantity = 5\n    apple_quantity = 4\n\n    # Calculate the total cost of each item\n    chicken_meal_cost = chicken_meal_quantity\n    milk_cost = milk_quantity * MILK_PRICE\n    apple_cost = apple_quantity * APPLE_PRICE\n\n    # Calculate the total cost of all items\n    total_cost = chicken_meal_cost + milk_cost + apple_cost\n\n    # Calculate the remaining budget for pizza\n    pizza_budget = 50 - total_cost\n\n    # Calculate the number of boxes of pizza ordered\n    pizza_boxes = p"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    SHORTS_PRICE = 16.5\n    PANTS_PRICE = 22.5\n    SHOES_PRICE = 42\n\n    # Define the number of each item purchased\n    shorts = 3\n    pants = 3\n    shoes = 3\n\n    # Calculate the total cost of the shorts\n    shorts_cost = shorts * SHORTS_PRICE\n\n    # Calculate the total cost of the pants\n    pants_cost = pants * PANTS_PRICE\n\n    # Calculate the total cost of the shoes\n    shoes_cost = shoes * SHOES_PRICE\n\n    # Calculate the total cost of all the clothing items\n    total_cost = shorts_cost + pants_cost + shoes_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of servings of ice cream Cynthia will eat in 60 days\n    total_servings = 60 * 1  # Cynthia eats one serving of ice cream every night for 60 days\n\n    # Calculate the total cost of the ice cream cartons\n    total_cost = total_servings * 15 * 4  # Cynthia buys 15 cartons of ice cream per carton, at a cost of $4.00 per carton\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_distance = 60\n    first_stop_distance = 20\n    second_stop_distance = total_distance - first_stop_distance - 15\n    result = first_stop_distance + second_stop_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pair of high heels\n    HEEL_COST = 33\n\n    # Calculate the total cost of the high heels\n    high_heels_total_cost = 2 * HEEL_COST\n\n    # Calculate the cost of the boots\n    boots_cost = (high_heels_total_cost + 5) / 2\n\n    # Display the cost of the boots\n    result = boots_cost\n    return result"}
{"output": "def solution():\n    \n    total_ratio = 7 + 11\n    allen_ratio = 11\n    allen_age = (allen_ratio / total_ratio) * 162\n    allen_age_in_10_years = allen_age + 10\n    result = allen_age_in_10_years\n    return result"}
{"output": "def solution():\n    \n    first_guess = 80\n    second_guess = (first_guess / 2) + 20\n    third_guess = first_guess * 1.25\n    total_guess = first_guess + second_guess + third_guess\n    average_guess = total_guess / 3\n    result = average_guess\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and the time per dog\n    num_dogs = 10\n    time_per_dog = 0.5\n\n    # Calculate the total time spent taking care of all dogs per day\n    total_time_per_day = num_dogs * time_per_dog\n\n    # Calculate the total time spent taking care of all dogs per week\n    total_time_per_week = total_time_per_day * 7\n\n    # return the result\n    result = total_time_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of coins\n    total_coins = 110\n\n    # Calculate the number of silver coins\n    silver_coins = (total_coins - 30) / 2\n\n    # Calculate the number of gold coins\n    gold_coins = silver_coins + 30\n\n    # Display the number of gold coins\n    result = gold_coins\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jewels Raymond has\n    raymond_jewels = 40\n\n    # Calculate the number of jewels Aaron has\n    aaron_jewels = (raymond_jewels / 2) + 5\n\n    # Calculate the number of jewels Siobhan has\n    siobhan_jewels = aaron_jewels - 2\n\n    # Display the number of jewels Siobhan has\n    result = siobhan_jewels\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes in the ping pong\n    PONG_PONG_TIME = 40\n\n    # Calculate the number of points scored in the first 20 minutes\n    first_20_minutes_points = 4\n\n    # Calculate the number of points scored in the second 20 minutes\n    second_20_minutes_points = first_20_minutes_points * 1.25\n\n    # Calculate the total number of points scored\n    total_points = first_20_minutes_points + second_20_minutes_points\n\n    # Display the total number of points scored\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of yogurts eaten per day and the price per yogurt\n    YOGURTS_PER_DAY = 2\n    PRICE_PER_YOGURT = 5.0\n\n    # Calculate the total number of yogurts eaten over 30 days\n    total_yogurts = YOGURTS_PER_DAY * 30\n\n    # Calculate the total cost of the yogurts\n    total_cost = total_yogurts * PRICE_PER_YOGURT\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lego sets and the price per set\n    initial_sets = 13\n    price_per_set = 15\n\n    # Define the number of video games bought and the cost per game\n    games_bought = 8\n    game_cost = 20\n\n    # Calculate the total cost of the video games\n    total_cost = games_bought * game_cost\n\n    # Calculate the total revenue from selling all the video games\n    total_revenue = initial_sets * price_per_set\n\n    # Calculate the remaining number of lego sets\n    remaining_sets = initial_sets - total_revenue\n\n    # return the result\n    result = remaining_sets\n    return result"}
{"output": "def solution():\n    \n    total_distance = 60\n    days_per_week = 3\n    first_day_hours = 3\n    second_day_hours = (total_distance - first_day_hours) / 2\n    total_days = days_per_week\n    first_day_speed = first_day_hours / total_days\n    second_day_speed = second_day_hours / total_days\n    total_speed = first_day_speed + second_day_speed\n    result = total_speed\n    return result"}
{"output": "def solution():\n    \n    # Define Dana's speeds\n    RUN_SPEED = 1/3\n    WALKING_SPEED = 2/3\n    SKIP_SPEED = 3/2\n\n    # Calculate the distance Dana can run in 6 hours\n    run_distance = RUN_SPEED * 6\n\n    # Calculate the distance Dana can walk in 6 hours\n    walk_distance = WALKING_SPEED * 6\n\n    # Calculate the total distance Dana can travel\n    total_distance = run_distance + walk_distance\n\n    # Display the total distance Dana can travel\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define Suzy's iPhone's age\n    suzy_age = 1\n\n    # Calculate Ben's iPhone's age\n    ben_age = suzy_age * 2\n\n    # Calculate Brandon's iPhone's age\n    brandon_age = ben_age * 4\n\n    # Display Brandon's iPhone's age\n    result = brandon_age\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the dragon and the distance that can be thrown at the gold javelin\n    dragon_distance = 1000\n    gold_distance = 400\n\n    # Calculate the distance that can be thrown at the gold javelin when Polly held the gemstone\n    gemstone_distance = gold_distance / 3\n\n    # Calculate the total distance that can be thrown\n    total_distance = dragon_distance + gold_distance + gemstone_distance\n\n    # Calculate the distance outside of the dragon's flames\n    outside_distance = dragon_distance - total_distance\n\n    # Display the distance outside of the dragon's flames\n    result = outside_distance\n    return result"}
{"output": "def solution():\n    \n    total_pies = 5\n    pieces_per_pie = 8\n    total_pieces = total_pies * pieces_per_pie\n    eaten_pieces = 14\n    taken_pieces = total_pieces - eaten_pieces\n    result = taken_pieces\n    return result"}
{"output": "def solution():\n    calories_per_serving = 250  # A bag of chips has 250 calories per serving\n    servings_per_bag = 5  # A bag of chips has 5 servings\n    total_calories = calories_per_serving * servings_per_bag  # Calculate the total number of calories in the bag\n\n    daily_calorie_target = 2000  # The daily calorie target is 2000\n    consumed_calories = 1800  # You have already consumed 1800 calories\n\n    # Calculate the remaining calories the bag can eat\n    remaining_calories = total_calories - consumed_calories\n\n    # Calculate the grams of chips that can be eaten with the remaining calories\n    grams_eaten = remaining_calories / daily_calorie_target\n    result = grams_eaten\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of supplies per pound of beeswax\n    COST_PER_POUND = 10\n\n    # Calculate the total cost of supplies for 20 candles\n    total_cost = 20 * COST_PER_POUND\n\n    # Calculate the total revenue from selling the candles\n    total_revenue = 20 * 2\n\n    # Calculate the total number of pounds of beeswax that can be made\n    total_pounds = total_cost / COST_PER_POUND\n\n    # Calculate the net profit\n    net_profit = total_revenue - total_cost\n\n    # Display the net profit\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to research and write one article\n    research_time = 4\n    tuesday_time = research_time * (2/5 + 1)\n    wednesday_time = tuesday_time * 2\n\n    # Calculate the total time spent writing articles\n    total_time = (5 + tuesday_time + wednesday_time) * 3\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of post-it notes\n    initial_notes = 80\n\n    # Define the number of cups of coffee\n    cups_of_coffee = 220\n\n    # Calculate the total number of post-it notes\n    total_notes = cups_of_coffee * 1\n\n    # Calculate the number of post-it notes in the package\n    notes_in_package = initial_notes + total_notes - 23\n\n    # return the result\n    result = notes_in_package\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each blue tie\n    BLUE_TIE_PRICE = 40\n\n    # Calculate the number of blue ties purchased\n    blue_ties = 200 / BLUE_TIE_PRICE\n\n    # Calculate the cost of the red ties\n    red_tie_cost = blue_ties * BLUE_TIE_PRICE * 1.5\n\n    # Calculate the total cost of the blue ties\n    blue_tie_total_cost = blue_ties * BLUE_TIE_PRICE\n\n    # Calculate the total cost of the red ties\n    red_tie_total_cost = red_tie_cost * 2\n\n    # Calculate the total cost of all the ties\n    total_cost = blue_tie_total_cost + red_tie_total_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Convert the length of the wire from feet to inches\n    length_inches = 4 * 12\n\n    # Calculate the number of pieces\n    num_pieces = length_inches // 6\n\n    # Display the number of pieces\n    result = num_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the number of floors and units per floor\n    FLOORS = 15\n    UNITS_PER_FLOOR = 8\n\n    # Calculate the total number of units in the building\n    total_units = FLOORS * UNITS_PER_FLOOR\n\n    # Calculate the number of occupied units in the building\n    occupied_units = int(total_units * 0.75)\n\n    # Calculate the number of unoccupied units in the building\n    unoccupied_units = total_units - occupied_units\n\n    # Display the total number of unoccupied units\n    result = unoccupied_units\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced per day and the price per dozen\n    EGGS_PER_DAY = 252\n    PRICE_PER_DOZEN = 2\n\n    # Calculate the number of dozens of eggs produced per week\n    dozens_per_week = 7 / EGGS_PER_DAY * 12\n\n    # Calculate the total earnings per week\n    earnings_per_week = dozens_per_week * PRICE_PER_DOZEN\n\n    # Display the total earnings per week\n    result = earnings_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of the ship and the time it takes to travel from 1 to 4 PM\n    SHIPPING_SPEED = 10\n    TIME_1 = 1\n\n    # Calculate the distance of the ship\n    distance = SHIPPING_SPEED * TIME_1\n\n    # Calculate the time it takes to travel the remaining distance at the given speed\n    time = distance / SHIPPING_SPEED\n\n    # Display the time it takes to travel the remaining distance at the given speed\n    result = time\n    return result"}
{"output": "def solution():\n    \n    total_weight = 15\n    comic_weight = 1/4\n    toy_weight = 1/2\n    comic_books_removed = 30\n    total_weight_removed = comic_weight * comic_books_removed\n    remaining_weight = total_weight - total_weight_removed\n    toys_removed = remaining_weight / toy_weight\n    result = toys_removed\n    return result"}
{"output": "def solution():\n    \n    # Define the prices for each type of repair\n    TRUCK_PRICE = 60\n    CAR_PRICE = 40\n\n    # Calculate the total revenue earned on Thursday\n    thursday_revenue = 6 * TRUCK_PRICE + 4 * CAR_PRICE\n\n    # Calculate the total revenue earned on Friday\n    friday_revenue = 12 * CAR_PRICE\n\n    # Calculate the difference in revenue between Thursday and Friday\n    revenue_difference = thursday_revenue - friday_revenue\n\n    # Display the revenue difference\n    result = revenue_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of kittens\n    initial_kittens = 7\n\n    # Calculate the number of kittens adopted by the first cat\n    cat1_kittens = 3 * initial_kittens\n\n    # Calculate the total number of kittens\n    total_kittens = initial_kittens + cat1_kittens + 12\n\n    # Display the total number of kittens\n    result = total_kittens\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 30\n\n    # Subtract the number of lollipops Jean ate\n    remaining_lollipops = initial_lollipops - 2\n\n    # Calculate the number of bags Jean can fill\n    bags = remaining_lollipops // 2\n\n    # Display the number of bags\n    result = bags\n    return result"}
{"output": "def solution():\n    # Calculate the number of times Peter can go to the movies in a week\n    num_tickets = 42 // 7  # Peter gets a ticket for $7 and he has 42 dollars\n    num_popcorns = 42 // 7  # Peter gets popcorn for $7 and he has 42 dollars\n    num_movies = num_tickets + num_popcorns  # total number of times Peter can go to the movies\n    result = num_movies\n    return result"}
{"output": "def solution():\n    \n    bridge_limit = 5000\n    box_weight = 15\n    total_weight = 3755\n    remaining_weight = total_weight - box_weight\n    max_boxes = remaining_weight // box_weight\n    result = max_boxes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial bill and delivery fee\n    initial_bill = 40.00\n    delivery_fee = 3.00\n\n    # Calculate the total amount of the bill including delivery fees\n    total_bill = initial_bill + delivery_fee\n\n    # Calculate the total cost including delivery fees and tip\n    total_cost = total_bill + 4.00\n\n    # Calculate the final price of Stephen's groceries\n    final_price = total_cost / 1.25\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of clusters and the number of fruit per cluster\n    clusters = 6\n    fruit_per_cluster = 20\n\n    # Calculate the total number of fruit\n    total_fruit = clusters * fruit_per_cluster * 67\n\n    # Calculate the total number of raspberries\n    total_raspberries = total_fruit * 2\n\n    # return the result\n    result = total_raspberries\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of oranges in the basket\n    total_oranges = 25\n\n    # Calculate the number of unripe oranges\n    unripe_oranges = total_oranges * 0.2\n\n    # Calculate the number of good oranges\n    good_oranges = total_oranges - unripe_oranges - 2\n\n    # Display the number of good oranges\n    result = good_oranges\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the material and jeweler\n    material_price = 500\n    jeweler_price = 800\n\n    # Calculate the total cost of the brooch\n    total_cost = material_price + jeweler_price\n\n    # Calculate the amount of the 10% discount\n    discount = total_cost * 0.1\n\n    # Calculate the final cost after the discount\n    final_cost = total_cost - discount\n\n    # return the result\n    result = final_cost\n    return result"}
{"output": "def solution():\n    # Calculate the value of the pension after 20 years\n    pension_after_20_years = 50000 * 20\n\n    # Calculate the value of the pension after 30 years\n    pension_after_30_years = pension_after_20_years * 1.05\n\n    result = pension_after_30_years\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per month and the number of months in a year\n    COST_PER_MONTH = 140\n    MONTHS_IN_YEAR = 12\n\n    # Calculate the total cost for the first half of the year\n    first_half_cost = COST_PER_MONTH * (MONTHS_IN_YEAR / 2)\n\n    # Calculate the cost for the second half of the year\n    second_half_cost = (COST_PER_MONTH / 2) * (1 - 0.1)\n\n    # Calculate the total cost for the entire year\n    total_cost = first_half_cost + second_half_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the distance traveled and the amount of gas needed to fill the tank\n    distance_traveled = 100\n    gas_needed = 4\n\n    # Define the volume of gas in the tank\n    gas_volume = 12\n\n    # Calculate the distance traveled on the tank\n    distance_tank = (gas_volume / gas_volume) * distance_traveled\n\n    # return the result\n    result = distance_tank\n    return result"}
{"output": "def solution():\n    \n    # Define the time spent watching TV\n    tv_time = 2\n\n    # Calculate the time spent going to bed and reading\n    bed_reading_time = tv_time / 2\n\n    # Calculate the total time spent watching TV and reading in one week\n    weekly_reading_time = (tv_time + bed_reading_time) * 3\n\n    # Calculate the total time spent watching TV and reading in four weeks\n    total_time = weekly_reading_time * 4\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of schools and the number of players per school\n    NUM_SCHOOLS = 4\n    GIRLS_PLAYERS_PER_SCHOOL = 1\n    BOYS_PLAYERS_PER_SCHOOL = 1\n    CARACHS_PER_SCHOOL = 1\n\n    # Calculate the total number of players\n    total_players = NUM_SCHOOLS * (GIRLS_PLAYERS_PER_SCHOOL + BOYS_PLAYERS_PER_SCHOOL) * NUM_SCHOOLS\n\n    # Calculate the total number of coachs\n    total_coachs = NUM_SCHOOLS * CARACHS_PER_SCHOOL\n\n    # Calculate the total number of people\n    total_people = total_players + total_coachs\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of diamonds\n    diamonds = 175\n\n    # Calculate the number of rubies\n    rubies = diamonds - 35\n\n    # Calculate the number of emeralds\n    emeralds = 2 * rubies\n\n    # Calculate the total number of gems\n    total_gems = diamonds + rubies + emeralds\n\n    # Display the total number of gems\n    result = total_gems\n    return result"}
{"output": "def solution():\n    \n    # Define the number of girls and boys\n    num_girls = 60\n    num_boys = num_girls * 2\n\n    # Calculate the total number of students\n    total_students = num_girls + num_boys\n\n    # Calculate the number of teachers\n    num_teachers = total_students // 5\n\n    # Display the number of teachers\n    result = num_teachers\n    return result"}
{"output": "def solution():\n    \n    # Define the weekly allowance and the total amount of money Bailey has\n    weekly_allowance = 5\n    total_money = 100\n\n    # Calculate the total amount of money Bailey receives over 8 weeks\n    total_weekly_money = weekly_allowance * 8\n\n    # Calculate the amount of money Bailey started with\n    starting_money = total_weekly_money + total_money\n\n    # return the result\n    result = starting_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classes and students per class\n    dance_classes = 5\n    weekdays = 5\n    saturday_classes = 8\n    students_per_class = 15\n\n    # Calculate the total number of students\n    total_students = (dance_classes * weekdays) + (saturday_classes * students_per_class)\n\n    # Calculate the total earnings\n    earnings = total_students * 15\n\n    # return the result\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of instructions in the first recipes\n    first_recipes = 20\n\n    # Define the number of instructions in the second recipes\n    second_recipes = first_recipes * 2\n\n    # Calculate the total number of instructions to be read\n    total_instructions = first_recipes + second_recipes\n\n    # return the result\n    result = total_instructions\n    return result"}
{"output": "def solution():\n    \n    # Define the price of brownies and cheesecakes\n    brownie_price = 3\n    cheesecake_price = 4\n\n    # Calculate the total amount raised from selling brownies and cheesecakes\n    brownie_sales = 43 * brownie_price\n    cheesecake_sales = 23 * cheesecake_price\n    total_sales = brownie_sales + cheesecake_sales\n\n    # return the result\n    result = total_sales\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each cell phone and the interest rate\n    PHONE_COST = 150\n    INTEREST_RATE = 0.02\n\n    # Calculate the total cost of the cell phones for 3 months\n    total_cost = PHONE_COST * 5 * 3\n\n    # Calculate the interest charged for each unit\n    interest_charged = total_cost * INTEREST_RATE\n\n    # Calculate the total cost per month\n    monthly_cost = total_cost + interest_charged\n\n    # Display the monthly cost\n    result = monthly_cost\n    return result"}
{"output": "def solution():\n    \n    marigold_price = 2.74\n    petunias_price = 1.87\n    begonias_price = 2.12\n    marigold_pots = 12\n    petunias_pots = 9\n    begonias_pots = 17\n    total_marigold_price = marigold_price * marigold_pots\n    total_petunias_price = petunias_price * petunias_pots\n    total_begonias_price = begonias_price * begonias_pots\n    total_sales = total_marigold_price + total_petunias_price + total_begonias_price\n    result = round(total_sales, 2)\n    return result"}
{"output": "def solution():\n    \n    top_level = 16\n    second_level = top_level / 2\n    third_level = second_level / 2\n    fourth_level = third_level / 2\n    total_square_footage = top_level + second_level + third_level + fourth_level\n    average_square_footage = total_square_footage / 4\n    result = average_square_footage\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of dog food used in the first 180 days\n    total_dog_food_used = 1 * 180 + 2 * 180  # 1 cup per day for 180 days, 2 cups per day for remaining 180 days\n\n    # Calculate the total amount of dog food used in the first year\n    total_dog_food_used_year = total_dog_food_used * 365  # Assuming there are 365 days in a year\n\n    # Calculate the number of bags of dog food used in the first year\n    bags_of_dog_food_used = total_dog_food_used_year / 110  # Each bag of dog food contains 110 cups\n\n    result = bags_of_dog_food_used\n    return result"}
{"output": "def solution():\n    \n    sarah_laundry = 400\n    raymond_laundry = sarah_laundry / 2\n    david_laundry = sarah_laundry / 4\n    difference = raymond_laundry - david_laundry\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Calculate the price per flower in package 3\n    price_per_flower_3 = 2.5 / 3\n\n    # Calculate the price per flower in package 2\n    price_per_flower_2 = 1 / 2\n\n    # Calculate the total cost of buying 18 flowers at the faster price\n    total_cost_3 = price_per_flower_3 * 18\n\n    # Calculate the total cost of buying 18 flowers at the faster price\n    total_cost_2 = price_per_flower_2 * 18\n\n    # Calculate the amount saved by buying 18 flowers at the faster price\n    amount_saved = total_cost_3 - total_cost_2\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the dog and the discount percentage\n    original_price = 100\n    discount_percentage = 30\n\n    # Calculate the discount amount\n    discount_amount = original_price * (discount_percentage / 100)\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount_amount\n\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    girl_water = 24 * (1/6)\n    boy_water = 6\n    total_water = girl_water + boy_water\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 10\n\n    # Calculate the total number of stickers Charlie has after buying and receiving more\n    total_stickers = initial_stickers + 21 + 23\n\n    # Calculate the number of stickers Charlie gave away\n    given_away = 9 + 28\n\n    # Calculate the number of stickers Charlie has left\n    remaining_stickers = total_stickers - given_away\n\n    # Display the number of stickers Charlie has left\n    result = remaining_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define Grace's weight\n    grace_weight = 125\n\n    # Calculate Alex's weight\n    alex_weight = 4 * grace_weight - 2\n\n    # Calculate the combined weight of Grace and Alex\n    combined_weight = grace_weight + alex_weight\n\n    # Display the combined weight\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rose bushes and roses per bush\n    num_rose_bushes = 3\n    roses_per_bush = 25\n\n    # Define the number of thorns per rose\n    thorns_per_rose = 8\n\n    # Calculate the total number of thorns\n    total_thorns = num_rose_bushes * roses_per_bush * thorns_per_rose\n\n    # return the result\n    result = total_thorns\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of games played\n    total_games = 22\n\n    # Calculate the number of games won\n    games_won = (total_games - 8) / 2\n\n    # Display the number of games won\n    result = games_won\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vacations per year and the age of the vacation\n    vacations_per_year = 4\n    age = 23\n\n    # Calculate the total number of quilt blocks from each vacation\n    shirts_per_vacation = 1\n\n    # Calculate the total number of quilt blocks from all vacations\n    total_shirts = vacations_per_year * age * shirts_per_vacation\n\n    # Calculate the total number of quilt blocks\n    total_blocks = total_shirts * 4 * 4\n\n    # return the result\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the alarm rangs each time\n    rang_1 = 4\n    rang_2 = 3 * rang_1\n    rang_3 = rang_2 / 2\n\n    # Calculate the total number of times the alarm rangs\n    total_rangs = rang_1 + rang_2 + rang_3\n\n    # Display the total number of times the alarm rangs\n    result = total_rangs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial salary and the percentage increase\n    INITIAL_SALARY = 600\n    PERCENTAGE_INCREASE = 0.1\n\n    # Calculate the annual salary after 5 years\n    annual_salary = INITIAL_SALARY * 12 * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate the annual salary after 3 years of service\n    annual_salary_after_3_years = annual_salary * 12 * (1 + 3)\n\n    # Display the annual salary after 3 years of service\n    result = annual_salary_after_3_years\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of copies sold\n    total_copies = 88000\n\n    # Calculate the number of copies sold by Marilyn's first record\n    marilyn_copies = total_copies / 10\n\n    # Calculate the number of copies sold by Harald's first record\n    harald_copies = marilyn_copies / 10\n\n    # return the result\n    result = harald_copies\n    return result"}
{"output": "def solution():\n    # Calculate the total number of gift bags needed\n    total_bags = 0.75 * 16\n\n    # Calculate the number of gift bags that will show up\n    no_show = total_bags / 4\n\n    # Calculate the total cost of the gift bags\n    total_cost = total_bags * 2\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of potato salad each dinosaur will eat\n    ADULT_SALAD = 10\n    CHILD_SALAD = ADULT_SALAD / 2\n\n    # Define the number of dinosaurs and children at the picnic\n    num_adults = 20\n    num_children = 5\n\n    # Calculate the total amount of potato salad needed\n    total_salad = (num_adults * ADULT_SALAD) + (num_children * CHILD_SALAD)\n\n    # Convert the total amount of potato salad to pounds\n    total_weight = total_salad / 16\n\n    # Display the total weight of potato salad needed\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pets Cindy has\n    cindy_pets = 4\n\n    # Calculate the number of pets Marcia has\n    marcia_pets = cindy_pets + 2\n\n    # Calculate the number of pets Jan has\n    jan_pets = marcia_pets * 3\n\n    # Calculate the total number of pets\n    total_pets = cindy_pets + marcia_pets + jan_pets\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    # Define the age of James\n    james_age = 10\n\n    # Calculate the age of Corey\n    corey_age = james_age + 1\n\n    # Calculate the age of Amy\n    amy_age = james_age + 2\n\n    # Calculate the age of Jackson\n    jackson_age = amy_age - 5\n\n    # Display the age of Jackson\n    result = jackson_age\n    return result"}
{"output": "def solution():\n    \n    # Define the time Lee runs the 400-murdles\n    lee_time = 38\n\n    # Calculate the time Gerald can run the 400-murdles\n    gerald_time = lee_time / 2\n\n    # Calculate Gerald's improved speed\n    gerald_speed = gerald_time * 1.1\n\n    # Display Gerald's improved speed\n    result = gerald_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and cats\n    dogs = 60\n    cats = dogs * 2\n\n    # Calculate the number of rabbits pets\n    rabbits = (dogs + cats) - 12\n\n    # Calculate the total number of pets\n    total_pets = dogs + cats + rabbits\n\n    # return the result\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    total_students = 200\n    boys = (2/5) * total_students\n    girls = total_students - boys\n    girl_scout = (2/3) * girls\n    girl_not_scout = girls - girl_scout\n    result = girl_not_scout\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Harry slept\n    harry_hours = 9\n\n    # Calculate the number of hours James slept\n    james_hours = harry_hours * (2/3)\n\n    # Calculate the difference in hours slept between Harry and James\n    difference = harry_hours - james_hours\n\n    # Display the difference in hours slept\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the volume of the sauce and the volume of each can of tomatoes\n    sauce_volume = 32\n    can_volume = 16\n    tomatoes_per_can = 3\n\n    # Calculate the total volume of the tomatoes used\n    total_tomatoes_used = sauce_volume / can_volume\n\n    # Calculate the number of tomatoes used in the last batch\n    tomatoes_used_in_last_batch = total_tomatoes_used * tomatoes_per_can\n\n    # return the result\n    result = tomatoes_used_in_last_batch\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cars\n    initial_cars = 30\n\n    # Calculate the number of cars remaining after the first 15 minutes\n    remaining_cars = initial_cars - 20\n\n    # Calculate the number of cars that take an exit\n    exit_cars = 5\n\n    # Calculate the number of cars that drove in the first 15 minutes\n    first_15_cars = remaining_cars - exit_cars\n\n    # Display the number of cars drove in the first 15 minutes\n    result = first_15_cars\n    return result"}
{"output": "def solution():\n    # Calculate the total number of potted plants Mary will have after giving some to friends and family\n    total_plants = 2 * 40 + 18  # Mary already has 2 potted plants on each of the 40 window ledges\n    result = total_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and the number of times each friend pressed\n    num_friends = 4\n    friend1_times = 20\n    friend2_times = friend1_times * 1.25\n    friend3_times = friend4_times * 10\n    friend4_times = 60\n\n    # Calculate the total number of times the doorbell was made\n    total_times = friend1_times + friend2_times + friend3_times + friend4_times\n\n    # Calculate the total number of doorbell rings\n    total_rings = total_times * 2\n\n    # Display the total number of doorbell rings\n    result = total_rings\n    return result"}
{"output": "def solution():\n    \n    total_pages = 4 + 20 + 7 + 8\n    pages_per_day = total_pages / 4\n    result = pages_per_day\n    return result"}
{"output": "def solution():\n    \n    glasses_per_weekday = 4\n    glasses_per_weekend = 2\n    total_glasses = glasses_per_weekday * 5 + glasses_per_weekend * 2\n    result = total_glasses\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the city\n    distance = 42\n\n    # Calculate the number of fog banks needed to cover the whole city\n    num_banks = distance // 3\n    if distance % 3!= 0:\n        num_banks += 1\n\n    # Calculate the total time needed to cover the whole city\n    total_time = num_banks * 10\n\n    # return the result\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 1000\n    board_pieces = total_pieces / 4\n    remaining_pieces = total_pieces - board_pieces\n    mom_pieces = remaining_pieces / 3\n    pieces_left = remaining_pieces - mom_pieces\n    result = pieces_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Amir eats\n    amir_cookies = 5\n\n    # Calculate the number of cookies Cody eats\n    cody_cookies = amir_cookies * 3\n\n    # Calculate the total number of cookies they eat together\n    total_cookies = amir_cookies + cody_cookies\n\n    # return the result\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each box and the thickness of the walls\n    LENGTH = 5\n    WIDTH = 6\n    HEIGHT = 4\n    WALL_THICK = 1\n\n    # Calculate the volume of each box\n    box_volume = LENGTH * WIDTH * HEIGHT\n\n    # Calculate the total volume of all the boxes\n    total_volume = box_volume * 3\n\n    # Calculate the total volume of all the walls\n    total_wall_volume = total_volume * WALL_THICK\n\n    # Calculate the total volume of all the boxes\n    total_volume_inches = total_volume + total_wall_volume\n\n    # Display the total volume in inches\n    result = total_volume_inches\n    return result"}
{"output": "def solution():\n    \n    # Define the length of TV watched on Monday and Tuesday\n    monday_tuesday_length = 1\n\n    # Define the length of TV watched on Wednesday\n    wednesday_length = 30\n\n    # Define the length of TV watched on Thursday\n    thursday_length = 1\n\n    # Define the length of TV watched on Friday\n    friday_length = 1\n\n    # Calculate the total length of TV watched\n    total_length = 7 * monday_tuesday_length + wednesday_length + thursday_length + friday_length\n\n    # Calculate the total length of TV watched in minutes\n    total_length_in_minutes = total_length * 60\n\n    # Calculate the total length of TV watched in minutes\n    total_length_in_minutes = total_length_in_minutes + total_length_in_minutes\n\n    # Calculate the length of TV watched in 30 minutes\n    result = total_length_in_minutes\n    return result"}
{"output": "def solution():\n    \n    # Let x be the number of cookies Henry baked last year\n    # Henry wants to make twice as many cookies as he did last year\n    # Henry actually baked 15 more cookies than he meant to\n    # Therefore, x + 15 = 110\n    # Henry drops 5 cookies to cool\n    # Therefore, x - 5 = 110\n    # Solving for x, we get x = 110 - 5\n\n    # Henry baked twice as many cookies as he did last year\n    # Henry actually baked 15 more cookies than he meant to\n    # So, x + 15 = 110 - 5\n    # Henry actually baked 15 more cookies than he meant to\n    # Therefore, x = 110 - 5\n\n    # Henry baked last year, which is twice as many cookies\n    result = 110 - 5\n    return result"}
{"output": "def solution():\n    \n    gas_price = 3.00\n    cashback_per_gallon = 0.20\n    gallons_bought = 10\n    total_cost = (gallons_bought * gas_price) + (gallons_bought * cashback_per_gallon)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of roll-ups eaten\n    total_rollups = 2*24 + 3*14\n\n    # Calculate the average number of roll-ups eaten\n    average_rollups = total_rollups / 2\n\n    # Display the average number of roll-ups eaten\n    result = average_rollups\n    return result"}
{"output": "def solution():\n    \n    # Define the rate of water per feet\n    WATER_RATE = 2 * 10\n\n    # Define the distance of the shore\n    shore_distance = 64\n\n    # Calculate the time taken to row the shore\n    shore_time = shore_distance / WATER_RATE\n\n    # Calculate the total water taken on\n    total_water_taken = shore_time * WATER_RATE\n\n    # Display the total water taken on\n    result = total_water_taken\n    return result"}
{"output": "def solution():\n    \n    # Define the number of teachers and lessons per day\n    NUM_TEACHERS = 4\n    LESSONS_PER_TEACHER = 2\n\n    # Calculate the total number of lessons used per day\n    total_lessons = NUM_TEACHERS * LESSONS_PER_TEACHER\n\n    # Calculate the number of times the whiteboard is cleaned per lesson\n    cleaned_times_per_lesson = 3\n\n    # Calculate the total number of times the whiteboard is cleaned per day\n    cleaned_times_per_day = total_lessons * cleaned_times_per_lesson\n\n    # Display the total number of times the whiteboard is cleaned per day\n    result = cleaned_times_per_day\n    return result"}
{"output": "def solution():\n    \n    flowers_per_day = 2\n    days = 15\n    total_flowers = flowers_per_day * days\n    flowers_not_grown = 5\n    total_flowers = total_flowers + flowers_not_grown\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define the maximum number of photographs that Jamal's phone can hold\n    jamal_max = 1800\n\n    # Calculate the maximum number of photographs that Brittany's phone can hold\n    brittany_max = jamal_max / 6\n\n    # Calculate the maximum number of birds that Jamal's phone can hold\n    jamal_max_birds = brittany_max / 50\n\n    # Calculate the maximum number of ducks that Jamal's phone can hold\n    jamal_max_ducks = jamal_max / jamal_max\n\n    # Display the maximum number of ducks in Jamal's photographs at the zoo\n    result = jamal_max_ducks\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the 10 2 x 4 x 10 boards that cost her $10 each\n    cost_of_10_boards = 10 * 2 * 4 * 10\n\n    # Calculate the total cost of the 5 4 x 4 x 10 boards that cost her $16 each\n    cost_of_5_boards = 5 * 4 * 10\n\n    # Calculate the total revenue from selling all the boards\n    total_revenue = cost_of_10_boards + cost_of_5_boards\n\n    # Calculate the total profit made by selling all the boards\n    total_profit = total_revenue - total_cost\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of sugar to water\n    SUGAR_TO_WATER_RATIO = 7/13\n\n    # Calculate the amount of sugar used\n    sugar_used = (SUGAR_TO_WATER_RATIO / (SUGAR_TO_WATER_RATIO + 1)) * 120\n\n    # Calculate the amount of water used\n    water_used = 13 / (SUGAR_TO_WATER_RATIO / (SUGAR_TO_WATER_RATIO + 1))\n\n    # Calculate the amount of teaspoons of sugar used\n    sugar_used = sugar_used / SUGAR_TO_WATER_RATIO\n\n    # Display the number of teaspoons of sugar used\n    result = sugar_used\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pair of shoes and the number of children\n    SHOE_COST = 60\n    NUM_CHILDREN = 3\n\n    # Calculate the total number of pairs of shoes\n    total_shoes = SHOE_COST * NUM_CHILDREN\n\n    # Calculate the total cost of the shoes\n    total_cost = total_shoes * SHOE_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of vehicles imported on the first day\n    total_vehicles_first_day = 2 * 5\n\n    # Calculate the total number of vehicles imported on the second day\n    total_vehicles_second_day = 30 - total_vehicles_first_day\n\n    # Calculate the number of containers imported on the second day\n    containers_imported_second_day = total_vehicles_second_day / 5\n    result = containers_imported_second_day\n    return result"}
{"output": "def solution():\n    \n    # Calculate Lylah's salary\n    lylah_salary = 40000 / 1.3\n\n    # Calculate Adrien's salary\n    adrien_salary = lylah_salary * 1.4\n\n    # Calculate the total salary\n    total_salary = adrien_salary + lylah_salary\n\n    # Display the total salary\n    result = total_salary\n    return result"}
{"output": "def solution():\n    # Calculate the total number of sheets of paper used in a week\n    total_sheets_per_week = 2 * 30\n\n    # Calculate the total number of sheets of paper used in a month\n    total_sheets_per_month = total_sheets_per_week * 4\n\n    result = total_sheets_per_month\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples and oranges brought by Morisette\n    morisette_apples = 5\n    morisette_oranges = 8\n\n    # Calculate the number of apples and oranges brought by Kael\n    kael_apples = morisette_apples * 2\n    kael_oranges = morisette_oranges / 2\n\n    # Calculate the total number of fruits brought\n    total_fruits = morisette_apples + morisette_oranges + kael_apples + kael_oranges\n\n    # return the result\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Sadie slept on Monday\n    monday_hours = 8\n\n    # Define the number of hours Sadie slept on the next two days\n    next_two_days_hours = monday_hours - 2\n\n    # Define the number of hours Sadie slept on the remaining days\n    remaining_days_hours = (monday_hours + next_two_days_hours) + 1\n\n    # Calculate the total number of hours Sadie slept throughout the week\n    total_hours = monday_hours + next_two_days_hours + remaining_days_hours\n\n    # Display the total number of hours Sadie slept\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance Rosie can run in 3 hours\n    distance_3_hours = 10 * 3\n\n    # Calculate the distance Rosie can run in 5 hours\n    distance_5_hours = 5 * 5\n\n    # Calculate the total distance Rosie can run in 7 hours\n    total_distance = distance_3_hours + distance_5_hours\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of letters in the pile\n    total_letters = 60 + 30\n\n    # Calculate the number of letters stamped\n    stamped_letters = total_letters // 3\n\n    # Calculate the number of letters in the pile when Jennie began\n    remaining_letters = total_letters - stamped_letters\n\n    # Display the number of letters in the pile when Jennie began\n    result = remaining_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spoons in a package\n    PACKAGE_SIZE = 5\n\n    # Calculate the total number of spoons Julia had initially\n    total_spoons = 12\n\n    # Calculate the number of spoons Julia used to sample her stew\n    used_spoons = 3\n\n    # Calculate the number of spoons Julia gave to her husband\n    given_spoons = total_spoons - used_spoons\n\n    # Calculate the number of spoons Julia has left\n    remaining_spoons = total_spoons - given_spoons\n\n    # Display the number of spoons Julia has left\n    result = remaining_spoons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of chicken sausages\n    chicken_sausages = 38\n\n    # Calculate the number of fish sausages\n    fish_sausages = chicken_sausages + 6\n\n    # Calculate the total number of sausages\n    total_sausages = chicken_sausages + fish_sausages\n\n    # Display the total number of sausages\n    result = total_sausages\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends Lily made\n    lily_friends = 50\n\n    # Calculate the number of friends Amy made\n    amy_friends = lily_friends + 20\n\n    # Calculate the total number of friends they have together\n    total_friends = lily_friends + amy_friends\n\n    # Display the total number of friends\n    result = total_friends\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pepper\n    PEPPER_PRICE = 15\n\n    # Calculate the cost of each watermelon\n    watermelon_cost = 3 * PEPPER_PRICE\n\n    # Calculate the cost of each orange\n    orange_cost = watermelon_cost - 5\n\n    # Calculate the total cost of the watermelons\n    watermelon_total = 4 * watermelon_cost\n\n    # Calculate the total cost of the peppers\n    pepper_total = 20 * PEPPER_PRICE\n\n    # Calculate the total cost of the oranges\n    orange_total = 10 * orange_cost\n\n    # Calculate the total cost of all the items\n    total_cost = watermelon_total + pepper_total + orange_total\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the time per patient\n    num_people = 500\n    patient_time = 24 # in minutes\n\n    # Calculate the total time the hospital earns patients\n    total_patient_time = num_people * patient_time * 60 # in minutes\n\n    # Calculate the total cost of the doctors\n    total_doctors_cost = total_patient_time * 150 # in minutes\n\n    # Calculate the total cost of the patients\n    total_patient_cost = total_patient_time * 200 # in minutes\n\n    # Calculate the total profit\n    total_profit = total_doctors_cost + total_patient_cost - total_patient_cost\n\n    # return the result\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of elves\n    initial_elves = 60\n\n    # Calculate the number of elves who quit after vomitting\n    vomitting_elves = initial_elves // 3\n\n    # Calculate the number of remaining elves\n    remaining_elves = initial_elves - vomitting_elves\n\n    # Calculate the number of elves who quit after kids kicking their shins\n    kids_shins_elves = 10\n\n    # Calculate the final number of elves\n    final_elves = remaining_elves - kids_shins_elves\n\n    # return the result\n    result = final_elves\n    return result"}
{"output": "def solution():\n    \n    # Define the expenditure price in May\n    may_expenditure = 500\n\n    # Calculate the expenditure price in June\n    june_expenditure = may_expenditure - 60\n\n    # Calculate the total expenditure for both months\n    total_expenditure = may_expenditure + june_expenditure\n\n    # return the result\n    result = total_expenditure\n    return result"}
{"output": "def solution():\n    \n    pam_rides = 2\n    fred_rides = 4\n    total_rides = pam_rides + fred_rides\n    total_tickets = total_rides * 6\n    result = total_tickets\n    return result"}
{"output": "def solution():\n    \n    # Define the number of miles Walt walked on Monday\n    monday_miles = 4\n\n    # Define the number of miles Walt walked on Tuesday\n    tuesday_miles = monday_miles * 6\n\n    # Define the total number of miles Walt walked on Monday through Wednesday\n    total_miles = 41\n\n    # Calculate the number of miles Walt walked on Wednesday\n    wednesday_miles = total_miles - monday_miles - tuesday_miles\n\n    # Display the number of miles Walt walked on Wednesday\n    result = wednesday_miles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of car washes Tom gets per month and the cost per car wash\n    CAR_WASHS_PER_MONTH = 4\n    CAR_WASH_COST = 15\n\n    # Calculate the total cost of car washes per month and per year\n    total_cost = CAR_WASHS_PER_MONTH * CAR_WASH_COST * 12\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of video games Brian has\n    brian_games = 20\n\n    # Calculate the number of video games Bobby has\n    bobby_games = 3 * brian_games - 5\n\n    # Calculate the number of video games Bobby has after losing 5\n    bobby_games += 5\n\n    # Display the number of video games Bobby has\n    result = bobby_games\n    return result"}
{"output": "def solution():\n    \n    total_unicorns = 27\n    scottish_unicorns = total_unicorns / 3\n    female_scottish_unicorns = (2 / 3) * scottish_unicorns\n    result = female_scottish_unicorns\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    SUB_PRICE = 7.5\n    CHIPS_PRICE = 1.5\n    COOKIE_PRICE = 1.0\n\n    # Define the quantities of each item\n    sub_quantity = 2\n    chip_quantity = 2\n    cookie_quantity = 2\n\n    # Calculate the total cost of each item\n    sub_cost = sub_quantity * SUB_PRICE\n    chip_cost = chip_quantity * CHIPS_PRICE\n    cookie_cost = cookie_quantity * COOKIE_PRICE\n\n    # Calculate the total cost of the order\n    total_cost = sub_cost + chip_cost + cookie_cost\n\n    # Calculate the 20% delivery fee\n    delivery_fee = total_cost * 0.2\n\n    # Add the delivery fee to the total cost\n    total_cost_with_tip = total_cost + delivery_fee + 5.0\n\n    # Display the total cost with the delivery fee\n    result = total_cost_with_tip\n    return result"}
{"output": "def solution():\n    # Calculate the total number of questions completed in the first test\n    first_test_questions = 75 * 5\n\n    # Calculate the total number of questions completed in the second test\n    second_test_questions = 100 * 5\n\n    # Calculate the total number of questions completed in both tests\n    total_questions = first_test_questions + second_test_questions\n\n    # Calculate the number of questions Mark left incomplete\n    questions_left = 75 - total_questions\n    result = questions_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue gumballs\n    blue_gumballs = 12\n\n    # Calculate the number of pink gumballs\n    pink_gumballs = 4 * blue_gumballs + 22\n\n    # Display the number of pink gumballs\n    result = pink_gumballs\n    return result"}
{"output": "def solution():\n    \n    total_cars = 20\n    automatic_cars = 12\n    manual_cars = 4\n    semi_automatic_cars = total_cars - automatic_cars - manual_cars\n    percent_semi_automatic = (semi_automatic_cars / total_cars) * 100\n    result = percent_semi_automatic\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of bees and the ratio of workers to babies\n    total_bees = 700\n    worker_to_babies_ratio = 2\n\n    # Calculate the number of babies and queens\n    num_babies = total_bees / (2 * num_babies_ratio)\n    num_queens = num_babies / 2\n\n    # Calculate the number of worker bees\n    num_worker_bees = worker_to_babies_ratio * num_queens\n\n    # Display the number of worker bees\n    result = num_worker_bees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Jordan plays video games per day and the hourly rate of his part-time job\n    GAME_HOURS_PER_DAY = 2\n    PART_TIME_RATE = 10\n\n    # Calculate the total number of hours Jordan plays video games in a week\n    total_game_hours = GAME_HOURS_PER_DAY * 7\n\n    # Calculate the total earnings from the part-time job\n    total_earnings = PART_TIME_RATE * total_game_hours\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    milk_cost = 2\n    egg_cost = 3\n    light_bulb_cost = 3\n    cup_cost = 3\n    roach_cost = 4\n    subtotal = milk_cost + egg_cost + light_bulb_cost + cup_cost + roach_cost\n    tax_rate = 0.1\n    total_cost = subtotal * (1 + tax_rate)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of clients and the cost of each item\n    num_clients = 3 + 5\n    bleach_cost = 2\n    cloths_cost = 5\n\n    # Calculate the total cost of the bleach and cloths\n    total_cost = (num_clients * bleach_cost) + (num_clients * cloths_cost)\n\n    # Calculate the total income from the clients\n    total_income = 92\n\n    # Calculate the profit\n    profit = total_income - total_cost\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hectares and pineapples per hectare\n    hectares = 10\n    pineapples_per_hectare = 100\n\n    # Calculate the total number of pineapples in a year\n    total_pineapples = hectares * pineapples_per_hectare * 12\n\n    # Calculate the number of pineapples harvested in 3 months\n    harvested_pineapples = total_pineapples // 3\n\n    # return the result\n    result = harvested_pineapples\n    return result"}
{"output": "def solution():\n    \n    # Define the number of legos in the boxed set\n    legos = 500\n\n    # Calculate the number of legos in the second set\n    legos_second_set = 3 * legos\n\n    # Calculate the number of legos in the third set\n    legos_third_set = legos / 4\n\n    # Calculate the total number of legos\n    total_legos = legos + legos_second_set + legos_third_set\n\n    # Calculate the total number of blocks\n    total_blocks = total_legos * 2\n\n    # Display the total number of blocks\n    result = total_blocks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bees left in the first 6 hours\n    first_6_hours = 30\n\n    # Calculate the number of bees that leave in the next 6 hours\n    next_6_hours = first_6_hours * 2\n\n    # Calculate the number of bees that remained in the next 6 hours\n    remaining_6_hours = 6 - next_6_hours\n\n    # Calculate the number of bees that remained in the next 6 hours\n    remaining_6_hours = remaining_6_hours // 2\n\n    # Calculate the total number of bees that remained in the next 6 hours\n    total_bees = first_6_hours + next_6_hours + remaining_6_hours\n\n    # Display the total number of bees that remained in the next 6 hours\n    result = total_bees\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of adults and children\n    ADULT_PRICE = 12\n    CHILD_PRICE = 10\n\n    # Calculate the total cost of admission\n    total_cost = ADULT_PRICE + CHILD_PRICE\n\n    # Calculate the amount of change received\n    change = 8\n\n    # Calculate the amount of money given\n    money_given = total_cost + change\n\n    # Display the amount of money given\n    result = money_given\n    return result"}
{"output": "def solution():\n    \n    charlie_friends = 12\n    dorothy_friends = charlie_friends / 3\n    james_friends = dorothy_friends * 4\n    result = james_friends\n    return result"}
{"output": "def solution():\n    \n    # Define the distances and speeds for Steve and Tim\n    steve_distance = 3\n    steve_speed = 440\n    tim_distance = 2\n    tim_speed = 264\n\n    # Calculate the time it takes for Steve to reach Tim\n    steve_time = (steve_distance / steve_speed) * 60\n\n    # Calculate the time it takes for Tim to reach Steve\n    tim_time = (tim_distance / tim_speed) * 60\n\n    # Calculate the difference in time between Steve and Tim\n    time_difference = steve_time - tim_time\n\n    # Return the result in minutes\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost to inflate each tire and the total number of people\n    TIRE_COST = 0.25\n    TOTAL_PEOPLE = 5 + 3\n\n    # Calculate the total amount earned from the bikes\n    bike_earnings = TIRE_COST * TOTAL_PEOPLE\n\n    # Calculate the total amount earned from the tricycle tires\n    tricycle_earnings = TIRE_COST * 3\n\n    # Calculate the total amount earned from the unicycle tires\n    unicycle_earnings = TIRE_COST * 1\n\n    # Calculate the total earnings\n    total_earnings = bike_earnings + tricycle_earnings + unicycle_earnings\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    packs = 10\n    cookies_per_pack = 6\n    price_per_cookie = 0.10\n    total_cookies = packs * cookies_per_pack\n    total_cost = total_cookies * price_per_cookie\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of french fries\n    initial_fries = 14\n\n    # Calculate the number of french fries left after the seagull landed\n    remaining_fries = initial_fries / 2\n\n    # Calculate the number of french fries eaten by the pigeons\n    pigeon_fries = 3 * 3\n\n    # Calculate the number of french fries left after the pigeons eat their share\n    remaining_fries -= pigeon_fries\n\n    # Calculate the number of french fries eaten by the raccoon\n    raccoon_fries = (2/3) * remaining_fries\n\n    # Calculate the final number of french fries\n    final_fries = remaining_fries - raccoon_fries\n\n    # Display the final number of french fries\n    result = final_fries\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classes on each day\n    monday_wednesday_friday = 3\n    tuesday_thursday = 2\n\n    # Define the number of weeks of school\n    school_weeks = 16\n\n    # Calculate the total number of classes\n    total_classes = (monday_wednesday_friday * 3) + (tuesday_thursday * 2) + (school_weeks * 3)\n\n    # Calculate the total number of hours\n    total_hours = total_classes * 1\n\n    # return the result\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    rolls = 300\n    croissants = 120\n    baguettes = 60\n    roll_length = 4\n    croissant_length = 6\n    baguette_length = 2\n    total_length = (rolls * roll_length) + (croissants * croissant_length) + (baguettes * baguette_length)\n    result = total_length / 12\n    return result"}
{"output": "def solution():\n    \n    monkey_bananas = 200\n    gorillas_bananas = 400\n    baboon_bananas = 100\n    total_bananas = monkey_bananas + gorillas_bananas + baboon_bananas\n    bananas_per_two_months = total_bananas * 2\n    result = bananas_per_two_months\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the football field\n    field_distance = 100\n\n    # Calculate the distance run by Blake\n    blake_distance = field_distance * 2 * 15\n\n    # Calculate the distance run by Kelly\n    kelly_distance = field_distance * 2\n\n    # Calculate the total distance run by Kelly and Blake\n    total_distance = blake_distance + kelly_distance\n\n    # Calculate the time taken to run to the 40-yard line and back\n    time_taken = 34 * 0.25\n\n    # Calculate the time taken by the winner\n    winner_time = total_distance - time_taken\n\n    # Calculate the difference in time taken between the winner and loser\n    time_difference = winner_time - loser_time\n\n    # return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    pens_cost = 4 * 1.5\n    notebooks_cost = 2 * 4\n    bond_paper_cost = 20\n    total_cost = pens_cost + notebooks_cost + bond_paper_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of tadpoles\n    initial_tadpoles = 11\n\n    # Calculate the number of tadpoles that come out of hiding\n    lily_pad_tadpoles = 6\n\n    # Calculate the number of tadpoles that hide under a rock\n    rock_tadpoles = 2\n\n    # Calculate the total number of tadpoles that can be seen\n    total_tadpoles = initial_tadpoles - lily_pad_tadpoles - rock_tadpoles\n\n    # return the result\n    result = total_tadpoles\n    return result"}
{"output": "def solution():\n    \n    # Define the depth of the water on Monday\n    monday_depth = 17\n\n    # Define the depth of the water on Tuesday\n    tuesday_depth = monday_depth + 7\n\n    # Define the depth of the water on Wednesday\n    wednesday_depth = tuesday_depth * (2/3)\n\n    # Display the depth of the water on Wednesday\n    result = wednesday_depth\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish caught by Anakin\n    anakin_starfish = 10\n    anakin_sea_horses = 6\n    anakin_clownfish = 3\n\n    # Calculate the number of fish caught by Locsin\n    locsin_starfish = anakin_starfish - 5\n    locsin_sea_horses = anakin_sea_horses - 3\n    locsin_clownfish = anakin_clownfish + 2\n\n    # Calculate the total number of fish caught\n    total_fish = anakin_starfish + anakin_sea_horses + anakin_clownfish + locsin_starfish + locsin_sea_horses + locsin_clownfish\n\n    # Display the total number of fish caught\n    result = total_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the bag of marbles\n    original_price = 20\n\n    # Calculate the price after the 20% increase\n    new_price = original_price * 1.2\n\n    # Calculate the total cost of the bag of marbles after 36 months\n    total_cost = new_price * 36\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    red_car_cost = 4\n    doll_cost = 3 * red_car_cost\n    total_cost = doll_cost + (5 * red_car_cost)\n    action_figure_cost = 5\n    total_cost_of_action_figures = action_figure_cost * 3\n    result = total_cost_of_action_figures\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the accountant\n    accountant_cost = 90\n\n    # Calculate the number of hours Jackie will work to do herself\n    freelance_hours = 3\n\n    # Calculate the total amount of money Jackie will earn\n    total_earnings = freelance_hours * 35\n\n    # Calculate the amount of money Jackie will have after taxes and income\n    remaining_money = total_earnings - accountant_cost\n\n    # Display the remaining money\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Elvira earns from the computer\n    total_earnings = 1500 + 1090 + 1590 + 74 + 102\n\n    # Calculate the amount of money Elvira saves\n    savings = total_earnings - 1500\n\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs needed for each flan\n    EGGS_PER_FLIGHT = 3\n\n    # Define the number of flans Sandra has been making\n    num_flans = 15\n\n    # Calculate the total number of eggs Sandra needs to make\n    total_eggs = num_flans * EGGS_PER_FLIGHT\n\n    # Calculate the number of times Sandra needs to babysit\n    num_babysitters = total_eggs // 9\n\n    # Display the number of babysitters\n    result = num_babysitters\n    return result"}
{"output": "def solution():\n    \n    # Let x be Brooke's age\n    # Seth is twice as old as Brooke, so Seth's age is 2x\n    # In 2 years, their ages will be 28, so x + 2 = 28\n    # Solving for x, we get x = 5\n    # Therefore, Brooke's age is 5, and Seth's age is 2x = 4\n\n    # Calculate Seth's age\n    seth_age = 4\n\n    # Display Seth's age\n    result = seth_age\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Ethel has\n    elhel_money = 8\n\n    # Calculate the amount of money Jimmy has\n    jimmy_money = 2 + 2 * elhel_money\n\n    # Display the amount of money Jimmy has\n    result = jimmy_money\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Pancho walks each day\n    daily_distance = 20\n\n    # Define the distance Pancho walks on weekends\n    weekend_distance = 10\n\n    # Calculate the total distance Pancho walks in a week\n    total_distance = (daily_distance * 5) + (weekend_distance * 2)\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    hat_cost = 25\n    jacket_cost = 3 * hat_cost\n    total_cost = hat_cost + jacket_cost\n    pants_cost = total_cost / 2\n    total_per_uniform = total_cost + pants_cost\n    result = total_per_uniform\n    return result"}
{"output": "def solution():\n    \n    # Define the number of legs in each type of insect\n    SPIDER_LEGS = 8\n    INSECT_LEGS = 6\n    MITTEN_INVERTEBRATE_LEGS = 10\n\n    # Define the number of each type of insect Jake sees\n    num_spiders = 80\n    num_insects = 90\n    num_mITTEN_INVERTEBRATES = 3\n\n    # Calculate the total number of legs\n    total_legs = (num_spiders * SPIDER_LEGS) + (num_insects * INSECT_LEGS) + (num_mITTEN_INVERTEBRATES * MITTEN_INVERTEBRATE_LEGS)\n\n    # Display the total number of legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    sally_thirtytwo_age = 8\n    sally_four_age = sally_thirtytwo_age\n    granny_red_age = 2 * sally_four_age\n    sally_two_age = granny_red_age + 3\n    total_age = sally_thirtytwo_age + sally_four_age + granny_red_age + sally_two_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum payment and the maximum payment per month\n    MINIMUM_PAYMENT = 300\n    CARD_PAYMENT = 200\n    MORTGAGE_PAYMENT = 500\n\n    # Calculate the annual payment needed for each month\n    student_payment = MINIMUM_PAYMENT * 12\n    credit_card_payment = CARD_PAYMENT * 12\n    mortgage_payment = MORTGAGE_PAYMENT * 12\n\n    # Calculate the total annual payment needed\n    total_payment = student_payment + credit_card_payment + mortgage_payment\n\n    # Display the total annual payment needed\n    result = total_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the number of potatoes and the time it takes to peel and cut one potato\n    NUM_POTATOES = 60\n    PEEL_TIME = 1/2\n    CUT_TIME = 5\n\n    # Calculate the total time to prepping all the potatoes\n    total_time = NUM_POTATOES * PEEL_TIME + NUM_POTATOES * CUT_TIME\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of lemons and sugar\n    lemon_cost = 3\n    sugar_cost = 2\n\n    # Define the selling price of each glass and the number of glasses per gallon\n    glass_price = 0.5\n    glasses_per_gallon = 20\n\n    # Calculate the total revenue from selling glasses\n    total_revenue = glasses_per_gallon * glass_price * glasses_per_gallon\n\n    # Calculate the cost of making the profit\n    profit = 25\n\n    # Calculate the total cost of making the profit\n    total_cost = profit + total_revenue\n\n    # Calculate the cost of making the lemons\n    lemon_cost = total_cost - lemon_cost\n\n    # return the result\n    result = lemon_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of Asians and Japanese\n    total_asians = 240\n    japanese = 80\n\n    # Calculate the number of Chinese\n    chinese = total_asians - japanese\n\n    # Calculate the number of boys on the Chinese team\n    boys = 60\n\n    # Calculate the number of girls on the Chinese team\n    girls = chinese - boys\n\n    # return the result\n    result = girls\n    return result"}
{"output": "def solution():\n    \n    monthly_salary = 6000\n    rent = monthly_salary / 4\n    car_fuel = monthly_salary / 3\n    remaining_salary = monthly_salary - rent - car_fuel\n    donated_charity = remaining_salary / 2\n    daughter_expenses = 200\n    wife_budget = 700\n    total_expenses = daughter_expenses + wife_budget\n    remaining_money = remaining_salary - total_expenses - donated_charity\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of crabs Bo has\n    bo_crabs = 40\n\n    # Calculate the number of crabs Monic has\n    monic_crabs = bo_crabs - 4\n\n    # Calculate the number of crabs Rani has\n    rani_crabs = monic_crabs + 10\n\n    # Calculate the total number of crabs the three have together\n    total_crabs = bo_crabs + monic_crabs + rani_crabs\n\n    # Display the total number of crabs\n    result = total_crabs\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly rate and the number of hours tutored in each week\n    hourly_rate = 10\n    week1_hours = 5\n    week2_hours = 8\n\n    # Calculate the total earnings for each week\n    week1_earnings = hourly_rate * week1_hours\n    week2_earnings = hourly_rate * week2_hours\n\n    # Calculate the total earnings for both weeks\n    total_earnings = week1_earnings + week2_earnings\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students who voted\n    total_students = 80\n\n    # Calculate the number of votes received by the winner\n    winner_votes = total_students * 3/4\n\n    # Calculate the number of votes received by the loser\n    loser_votes = total_students - winner_votes\n\n    # return the result\n    result = loser_votes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of white carnations\n    white_carnations = 200 / 5\n\n    # Calculate the number of red roses\n    red_roses = 4 * white_carnations\n\n    # Calculate the number of missing red roses\n    missing_red_roses = red_roses - 5\n\n    # Display the number of missing red roses\n    result = missing_red_roses\n    return result"}
{"output": "def solution():\n    \n    # Define Jan's age\n    jan_age = 30\n\n    # Calculate Mark's age\n    mark_age = (jan_age - 2) / 2 + 5\n\n    # Calculate Jean's age\n    jean_age = mark_age + 2\n\n    # Display Jean's age\n    result = jean_age\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each team\n    team_length = 4\n    team_width = 400\n\n    # Calculate the time for each team\n    team_1_time = 55\n    team_2_time = 55\n\n    # Calculate the time for the first runner\n    runner_1_time = 60\n\n    # Calculate the time for each runner\n    runner_2_time = (team_1_time + runner_1_time) / 2\n\n    # Calculate the time for the second runner\n    runner_2_time = (team_2_time + runner_1_time) / 2\n\n    # Calculate the difference in time between the two teams\n    time_difference = team_2_time - runner_2_time\n\n    # Calculate the time the faster team will win by\n    faster_team_time = (team_1_time + runner_2_time) / 2\n\n    # Display the time the faster team will win by\n    result = faster_team_time\n    return result"}
{"output": "def solution():\n    \n    # Define the probability of rolling a 6-sided die\n    probability = 6\n\n    # Define the probability of rolling an even number\n    even_probability = 3\n\n    # Calculate the probability of rolling an odd number\n    odd_probability = (even_probability * probability) / 2\n\n    # Calculate the probability of rolling a percentage increase\n    percentage_increase = (even_probability * 100) - (even_probability * 100)\n\n    # return the result\n    result = percentage_increase\n    return result"}
{"output": "def solution():\n    \n    mom_apples = 20\n    jenna_apples = mom_apples / 2\n    total_apples = mom_apples + jenna_apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cages and pieces of straw each rat gets\n    cages_per_rid = 3\n    pieces_per_rat = 6\n    cages_per_hamster = 10\n    pieces_per_hamster = 5\n    pieces_per_rabbit = 20\n\n    # Calculate the total number of pieces of straw used in each rat\n    total_pieces_per_rat = (cages_per_rid * pieces_per_rat) + (cages_per_hamster * pieces_per_hamster) + (pieces_per_rabbit * 1)\n\n    # Calculate the total number of pieces of straw used in the small rodents\n    total_pieces = 160\n\n    # Calculate the number of rats\n    rats = (total_pieces // total_pieces_per_rat) + (total_pieces // total_pieces_per_rat)\n\n    # return the result\n    result = rats\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount owed and the monthly interest rate\n    initial_amount = 100\n    monthly_interest_rate = 0.02\n\n    # Calculate the amount owed after 3 months\n    amount_owed = initial_amount * (1 + monthly_interest_rate) * 3\n\n    # return the result\n    result = amount_owed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and transport cost of each bag\n    COST_PER_BAG = 2\n\n    # Define the selling price per bag\n    SELLING_PRICE_PER_BAG = 30\n\n    # Calculate the total cost of transporting all the bags\n    total_cost = 400\n\n    # Calculate the total revenue from selling all the bags\n    total_revenue = total_cost + (total_cost / COST_PER_BAG)\n\n    # Calculate the number of bags sold\n    num_bags = int(total_revenue / SELLING_PRICE_PER_BAG)\n\n    # Display the number of bags sold\n    result = num_bags\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the tickets\n    ticket_cost = 20.25 * 3\n\n    # Calculate the total cost of the food\n    food_cost = ticket_cost - 4.5\n\n    # Calculate the total cost of the rides\n    ride_cost = 2 * 33\n\n    # Calculate the total cost of all the items\n    total_cost = ticket_cost + food_cost + ride_cost\n\n    # Calculate the cost per person\n    num_people = 3\n    cost_per_person = total_cost / num_people\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    # Calculate the total number of peaches John collects in 3 hours\n    total_peaches = 2 * 60 * 3  # John can collect 2 peaches per minute, and he collects for 3 hours\n    result = total_peaches\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of insects needed per week\n    total_insects_per_week = 3.5 * 10\n\n    # Calculate the total amount of insects needed per day\n    total_insects_per_day = total_insects_per_week / 7\n\n    result = total_insects_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of trees\n    initial_trees = 50\n\n    # Define the number of trees planted per year and the number of trees chopped down per year\n    planted_trees_per_year = 10\n    chopped_trees_per_year = 2\n\n    # Calculate the total number of trees planted over 10 years\n    total_planted_trees = planted_trees_per_year * 10\n\n    # Calculate the total number of trees chopped down over 10 years\n    total_chopped_trees = chopped_trees_per_year * 10\n\n    # Calculate the total number of trees left\n    total_trees_left = initial_trees - total_planted_trees + total_chopped_trees\n\n    # Calculate the number of trees that die after 10 years\n    trees_die = total_trees_left * 0.3\n\n    # Calculate the final number of trees left\n    final_trees_left = total_trees_left - trees_die\n\n    # return the result\n    result"}
{"output": "def solution():\n    \n    # Calculate the number of pink plastic flamingos remaining after Friday\n    remaining_flamingos = 18 - (1/3 * 18)\n\n    # Calculate the number of pink plastic flamingos after Saturday\n    remaining_flamingos -= (1/3 * remaining_flamingos)\n\n    # Calculate the number of pink plastic flamingos after Sunday\n    total_flamingos = remaining_flamingos + 18\n\n    # Display the total number of pink plastic flamingos\n    result = total_flamingos\n    return result"}
{"output": "def solution():\n    \n    # Define the number of colors and the cost per crayon\n    NUM_COLORS = 5\n    CRAYON_PRICE = 2\n\n    # Calculate the total cost of the crayons\n    total_cost = NUM_COLORS * CRAYON_PRICE\n\n    # Calculate the amount of change\n    change = 20 - total_cost\n\n    # Display the amount of change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    pencil_cost = 1.20\n    eraser_cost = 0.30\n    total_cost = (pencil_cost + eraser_cost) * 8\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_carrots = 200\n    restaurants = 40\n    carrots_per_restaurant = 2\n    total_carrots_needed = restaurants * carrots_per_restaurant\n    carrots_not_used = total_carrots - total_carrots_needed\n    result = carrots_not_used\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of inhabitants and the number of men and women\n    total_inhabitants = 23786\n    men = 8417\n    women = 9092\n\n    # Calculate the number of children\n    children = total_inhabitants - men - women\n\n    # Calculate the total number of kids\n    total_kids = children * 2\n\n    # Display the total number of kids\n    result = total_kids\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pokemon cards\n    initial_cards = 20\n\n    # Calculate the number of pokemon cards collected in the first month\n    month1_cards = initial_cards * 3\n\n    # Calculate the number of pokemon cards collected in the second month\n    month2_cards = month1_cards - 20\n\n    # Calculate the total number of pokemon cards collected in the first two months\n    total_cards_first_two_months = month1_cards + month2_cards\n\n    # Calculate the number of pokemon cards collected in the third month\n    month3_cards = total_cards_first_two_months * 2\n\n    # Calculate the total number of pokemon cards\n    total_cards = initial_cards + total_cards_first_two_months + month3_cards\n\n    # return the result\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sentences each publisher pays per week\n    A_SENTENCES = 1000 / 2\n    B_SENTENCES = A_SENTENCES * 2\n\n    # Calculate the total amount earned by each publisher\n    A_earnings = A_SENTENCES * 0.05\n    B_earnings = B_SENTENCES * 0.05\n\n    # Calculate the total amount earned by Mark\n    total_earnings = (A_earnings + B_earnings) * 100\n\n    # Display the total amount earned\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pails of water Baldur gets each day\n    morning_pails = 5\n    afternoon_pails = 6\n\n    # Define the volume of water in each pail\n    pail_volume = 5\n\n    # Calculate the total volume of water Baldur gets every day\n    total_volume = (morning_pails + afternoon_pails) * pail_volume * 1\n\n    # Display the total volume of water\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    # Define the reward and salary of the award\n    reward = 5000\n    salary = reward * 0.05\n\n    # Calculate the total amount of money John made in a year\n    total_salary = salary * 2000\n    total_money = reward + total_salary\n\n    # Display the total money John made\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    acre_size = 10\n    grapes_per_acre = 5\n    barrels_per_grapes = 2\n    total_grapes = acre_size * grapes_per_acre\n    total_barrels = total_grapes * barrels_per_grapes\n    result = total_barrels\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices of cheese used per sandwich\n    SANDWICH_CHEESE = 2\n\n    # Define the number of days Carl ate sandwichs\n    lunch_days = 3\n\n    # Define the number of slices of cheese used per omelet\n    omelet_cheese = SANDWICH_CHEESE + 1\n\n    # Define the number of slices of macaroni used\n    macaroni_cheese = 8\n\n    # Calculate the total number of slices of cheese used\n    total_cheese = (lunch_days * SANDWICH_CHEESE) + (omelet_days * omelet_cheese) + macaroni_cheese\n\n    # Display the total number of slices of cheese used\n    result = total_cheese\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pens\n    green_pens = 22\n    yellow_pens = 10\n    blue_pens = 6 * 9\n    red_pens = 2 * 6\n\n    # Calculate the total number of pens\n    total_pens = green_pens + yellow_pens + blue_pens + red_pens\n\n    # Display the total number of pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define the scores from the first five tests\n    test_scores = [90, 71, 92, 100, 86]\n\n    # Calculate the sum of the scores from the first five tests\n    sum_scores = sum(test_scores)\n\n    # Calculate the minimum score needed on the sixth test to achieve an average of 93\n    min_score = (93 * 6) - sum_scores\n\n    # Display the minimum score needed on the sixth test\n    result = min_score\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Micheal rode in 4 weeks\n    distance_first_leg = 5 * 25  # Micheal rode 5 times a week, making 25 kilometers each time\n\n    # Calculate the total distance Micheal rode in 3 weeks\n    distance_second_leg = 2 * 60  # Micheal rode 2 times a week, making 60 kilometers each time\n\n    # Calculate the total distance Micheal rode in 4 weeks\n    total_distance = distance_first_leg + distance_second_leg\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each chocolate bar\n    chocolate_weight = 40\n\n    # Calculate the weight of each candied apple\n    candied_weight = chocolate_weight / 2\n\n    # Calculate the total weight of the chocolate bars\n    chocolate_total_weight = 25 * chocolate_weight\n\n    # Calculate the total weight of the candied apples\n    candied_total_weight = 80 * candied_weight\n\n    # Calculate the total weight of the candy\n    total_weight = chocolate_total_weight + candied_total_weight\n\n    # return the result\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cakes bought on each day\n    cakes_monday = 4\n    cakes_tuesday = cakes_monday * 3\n    cakes_wednesday = cakes_tuesday * 5\n\n    # Calculate the total number of cakes bought\n    total_cakes = cakes_monday + cakes_tuesday + cakes_wednesday\n\n    # Display the total number of cakes bought\n    result = total_cakes\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of half a dozen plates sold\n    total_cost_half_dozen = 6000 * 2\n\n    # Calculate the cost of 20 dozen cups\n    cost_20_dozen = total_cost_half_dozen - 1200\n\n    # Calculate the cost of one cup\n    cost_per_cup = cost_20_dozen / 12\n    result = cost_per_cup\n    return result"}
{"output": "def solution():\n    \n    jacket_cost = 30\n    shoe_cost = 20\n    num_shoes = 2\n    total_cost = jacket_cost + (shoe_cost * num_shoes)\n    earning_per_babysitting = 5\n    num_babysitting_kids = 4\n    total_earning = earning_per_babysitting * num_babysitting_kids\n    remaining_cost = total_cost - total_earning\n    lawn_payment = 4\n    initial_savings = 10\n    num_mows = (remaining_cost + lawn_payment) / lawn_payment\n    result = num_mows\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs produced by each type of chicken per day\n    RED_EGGS_PER_DAY = 3\n    WHITE_EGGS_PER_DAY = 5\n\n    # Define the number of days Jerry collects 42 eggs\n    days = 42\n\n    # Calculate the total number of red chickens\n    red_chickens = (days * RED_EGGS_PER_DAY) / WHITE_EGGS_PER_DAY\n\n    # Calculate the number of white chickens\n    white_chickens = red_chickens + 2\n\n    # Display the number of red chickens\n    result = red_chickens\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the rectangle\n    length = 1.5\n    width = 6\n\n    # Calculate the total distance of the rectangle\n    total_distance = length * width\n\n    # Calculate the time spent walking\n    time = total_distance / 3\n\n    # Display the time spent walking\n    result = time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers counted on the first day\n    day1_customers = 100\n\n    # Calculate the number of customers counted on the second day\n    day2_customers = day1_customers + 50\n\n    # Calculate the total number of customers counted on the first two days\n    total_customers = day1_customers + day2_customers\n\n    # Calculate the number of customers counted on the third day\n    day3_customers = 500 - total_customers\n\n    # Display the number of customers counted on the third day\n    result = day3_customers\n    return result"}
{"output": "def solution():\n    \n    # Define the leakage rate of the pool\n    leakage_rate = 4\n\n    # Calculate the amount of water in the first pool\n    first_pool_water = 0\n\n    # Calculate the amount of water in the second pool\n    second_pool_water = first_pool_water * 2\n\n    # Calculate the amount of water in the third pool\n    third_pool_water = second_pool_water * 4\n\n    # Calculate the total amount of water in both pools\n    total_water = first_pool_water + second_pool_water + third_pool_water\n\n    # Display the total amount of water in the pool\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the shoes and the matching belt\n    shoe_cost = 32\n    belt_cost = 32\n\n    # Calculate the total cost of the shoes and the matching belt\n    total_cost = shoe_cost + belt_cost\n\n    # Calculate the number of hours needed to pay off the total cost\n    hours_needed = total_cost / 8\n\n    # Round up to the nearest whole number of hours\n    hours_needed = int(hours_needed) + (hours_needed % 1 > 0)\n\n    # return the result\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    borrowed_amount = 2000\n    promised_amount = borrowed_amount * 0.1\n    remaining_balance = borrowed_amount - promised_amount\n    monthly_payment = 165\n    num_months = 12\n    total_payment = monthly_payment * num_months\n    remaining_balance -= total_payment\n    result = remaining_balance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roses and dahlias\n    roses = 4\n    dahlias = roses + 7\n\n    # Calculate the total number of flowers\n    total_flowers = roses + dahlias\n\n    # Display the total number of flowers\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define Harriet's current age\n    harriet_age = 21\n\n    # Calculate Adrian's current age\n    adrian_age = harriet_age * 3\n\n    # Calculate Zack's current age\n    zack_age = harriet_age / 2\n\n    # Calculate the average age of the three\n    average_age = (harriet_age + adrian_age + zack_age) / 3\n\n    # Display the average age\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of points and the number of points scored by Naomi\n    total_points = 251\n    naomi_points = 68\n\n    # Calculate the number of points scored by Yuri\n    yuri_points = (naomi_points / 2) + 10\n\n    # Calculate the number of points scored by Brianna\n    brianna_points = naomi_points + 17\n\n    # Calculate the number of points scored by Jojo\n    jojo_points = total_points - naomi_points - yuri_points - brianna_points\n\n    # return the result\n    result = jojo_points\n    return result"}
{"output": "def solution():\n    # Calculate the total time Carmen spent playing the games\n    time_crossword_puzzles = 10 * 3  # 10 minutes to finish each crossword puzzle, and she solved 3 crossword puzzles\n    time_sudoku_puzzles = 5 * 8  # 5 minutes to finish each sudoku puzzle, and she solved 8 sudoku puzzles\n    total_time = time_crossword_puzzles + time_sudoku_puzzles\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    initial_water = 120\n    used_water = 90\n    remaining_water = initial_water - used_water\n    rainwater = remaining_water * 2\n    final_water = remaining_water + rainwater\n    result = final_water\n    return result"}
{"output": "def solution():\n    \n    geraniums = 90\n    petunias = geraniums - 40\n    total_flowers = geraniums + petunias\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define the amount spent on advertising for each year\n    year1_spending = 15000\n    year2_spending = year1_spending / 3\n\n    # Calculate the total amount spent on advertising over both years\n    total_spending = year1_spending + year2_spending\n\n    # Display the total amount spent\n    result = total_spending\n    return result"}
{"output": "def solution():\n    \n    carlos_rate = 30\n    benji_rate = 18\n    carlos_hours = 3\n    benji_hours = 5\n    total_carlos_cost = carlos_rate * carlos_hours\n    total_benji_cost = benji_rate * benji_hours\n    total_cost = total_carlos_cost + total_benji_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days to travel by bus and the number of days to travel by car\n    BUS_DAYS = 6\n    CAR_DAYS = BUS_DAYS / 2\n\n    # Calculate the total number of days to travel\n    total_days = (BUS_DAYS + CAR_DAYS) * 2\n\n    # Display the total number of days\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of each type of card\n    fire_type = 30\n    grass_type = 20\n    water_type = 40\n\n    # Calculate the total number of each type of card\n    total_fire_type = fire_type - 8\n    total_grass_type = grass_type + 14\n    total_water_type = water_type - 8 - 14\n\n    # Calculate the percentage chance of a randomly picked card that will be a water type\n    chance = (total_water_type / total_fire_type) * 100\n\n    # Display the percentage chance\n    result = chance\n    return result"}
{"output": "def solution():\n    \n    base_burrito = 6.5\n    extra_meat = 2\n    extra_cheese = 1\n    avocado = 1\n    sauces = 2\n    sauces_price = 0.25\n    upgrade_meal = 3\n    gift_card = 5\n    total_spent = base_burrito + extra_meat + extra_cheese + avocado + (2 * sauces_price) + upgrade_meal + gift_card\n    remaining_amount = total_spent - total_spent\n    result = remaining_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pieces in the puzzle\n    total_pieces = 360\n\n    # Define the number of pieces added per minute by Kalinda's mom\n    mom_pieces_per_minute = 4 / 2\n\n    # Calculate the total number of pieces added per minute by both Kalinda and her mom\n    total_pieces_per_minute = mom_pieces_per_minute + kalinda_pieces_per_minute\n\n    # Calculate the total number of minutes it will take to complete the puzzle\n    total_minutes = total_pieces / total_pieces_per_minute\n\n    # Convert minutes to hours\n    total_hours = total_minutes / 60\n\n    # return the result\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of watermelons\n    total_watermelons = 120\n\n    # Calculate the number of watermelons that are ready for harvest\n    ready_watermelons = total_watermelons * 0.3\n\n    # Calculate the number of watermelons remaining after the two weeks\n    remaining_watermelons = total_watermelons - ready_watermelons\n\n    # Calculate the number of watermelons that are ready for harvest\n    harvest_watermelons = remaining_watermelons * (3/4)\n\n    # Calculate the number of watermelons not ready for harvest\n    not_ready_watermelons = total_watermelons - harvest_watermelons\n\n    # Display the number of watermelons not ready for harvest\n    result = not_ready_watermelons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars and the price per car\n    CARS = 12\n    CAR_PRICE = 20000\n\n    # Calculate the subtotal\n    subtotal = CARS * CAR_PRICE * 1.1 + CARS * 1000\n\n    # Display the total cost\n    result = subtotal\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shells collected by Robert\n    robert_shells = 20\n\n    # Calculate the number of shells collected by Kylie on Monday\n    kylie_shells_monday = robert_shells + 5\n\n    # Calculate the number of shells collected by Kylie on Tuesday\n    kylie_shells_tuesday = kylie_shells_monday * 2\n\n    # Display the number of shells collected on Tuesday\n    result = kylie_shells_tuesday\n    return result"}
{"output": "def solution():\n    \n    ants = 50\n    bugs = ants / 2\n    total_insects = ants + bugs\n    result = total_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of penguins\n    initial_penguins = 36\n\n    # Calculate the number of penguins that jump in and swim in the ocean\n    jumper_penguins = initial_penguins // 3\n\n    # Calculate the number of penguins that go inside the cave\n    dinner_penguins = initial_penguins // 3\n\n    # Calculate the number of penguins that are still left sunbathing\n    remaining_penguins = initial_penguins - jumper_penguins - dinner_penguins\n\n    # return the result\n    result = remaining_penguins\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tomatoes eaten per day\n    daily_eaten = 6\n\n    # Calculate the number of tomatoes eaten per week\n    weekly_eaten = daily_eaten * 7\n\n    # Calculate the number of vines needed per week\n    vines_needed = weekly_eaten / 3\n\n    # Display the number of vines needed\n    result = vines_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and slices per friend\n    num_friends = 20\n    slices_per_friend = 4\n\n    # Calculate the total number of slices needed\n    total_slices = num_friends * slices_per_friend\n\n    # Calculate the total number of pizzas needed\n    total_pizzas = total_slices / 8\n\n    # Display the total number of pizzas needed\n    result = total_pizzas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of empty pens and the cost per pen\n    EMPTY_PENS = 5\n    COST_PER_PEN = 1\n\n    # Define the number of pens bought\n    bought_pens = 25\n\n    # Calculate the number of pens used to make new pens\n    used_pens = bought_pens - COST_PER_PEN\n\n    # Calculate the total number of pens\n    total_pens = bought_pens + used_pens\n\n    # Display the total number of pens\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define Johnny's initial allowance and the amount added\n    initial_allowance = 20\n    additional_amount = 10\n\n    # Calculate Johnny's total allowance after a year\n    total_allowance = initial_allowance + additional_amount\n\n    # Calculate the amount of money Johnny invested in a year\n    investment_amount = total_allowance * 3\n\n    # Calculate Johnny's final amount after a year\n    final_amount = total_allowance - investment_amount\n\n    # Display Johnny's final amount\n    result = final_amount\n    return result"}
{"output": "def solution():\n    \n    jessa_age = 20\n    joan_age = jessa_age + 5\n    mary_age = joan_age - 2\n    sum_of_ages = jessa_age + joan_age + mary_age\n    result = sum_of_ages\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of entrances\n    total_students = 1000\n    entrances = 3\n\n    # Calculate the number of students who went out of the building through exit A\n    students_out_a = total_students * 0.3\n\n    # Calculate the number of students who went out of the building through exit B\n    students_out_b = students_out_a * (3/5)\n\n    # Calculate the number of students who went out of the building through exit C\n    students_out_c = total_students - students_out_a - students_out_b\n\n    # Display the number of students who went out of the building through exit C\n    result = students_out_c\n    return result"}
{"output": "def solution():\n    \n    john_candies = 54\n    robert_candies = john_candies / 2\n    james_candies = robert_candies + 6\n    difference = john_candies - james_candies\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    dolly_books = 2\n    candora_books = 1\n    total_books = dolly_books + candora_books\n    result = total_books\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the number of letters each sent per week\n    num_people = 5\n    num_letters = 2\n\n    # Calculate the total number of pages each sent per week\n    total_pages = num_people * num_letters * 5\n\n    # Calculate the total time spent writing per week in minutes\n    total_time_minutes = total_pages * 6\n\n    # Convert total time from minutes to hours\n    total_time_hours = total_time_minutes / 60\n\n    # Display the total time spent writing per week in hours\n    result = total_time_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial phone plan length and the length of the call\n    PLAN_LENGTH = 1000\n    CALL_LENGTH = 15\n\n    # Calculate the total length of the call\n    call_length = CALL_LENGTH * 30\n\n    # Add the extra minutes\n    call_length += 300\n\n    # Calculate the remaining time\n    remaining_time = PLAN_LENGTH - call_length\n\n    # Display the remaining time\n    result = remaining_time\n    return result"}
{"output": "def solution():\n    \n    griffin_fries = 24\n    kyle_fries = 5\n    billy_fries = kyle_fries * 2\n    ginger_fries = griffin_fries - kyle_fries - billy_fries - 3\n    result = ginger_fries\n    return result"}
{"output": "def solution():\n    \n    # Define the number of snails in each aquarium\n    aquarium1_snails = 4\n    aquarium2_snails = 32\n\n    # Calculate the difference in the number of snails\n    difference = abs(aquarium1_snails - aquarium2_snails)\n\n    # Calculate the number of fish in each aquarium\n    aquarium1_fish = difference / 2\n    aquarium2_fish = difference / 2\n\n    # Calculate the number of fish in each aquarium\n    fish_per_aquarium = aquarium1_fish + aquarium2_fish\n\n    # Display the number of fish in each aquarium\n    result = fish_per_aquarium\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 250\n    daily_hours = 6\n    days_per_week = 4\n    weeks = 5\n    total_hours = daily_hours * days_per_week * weeks\n    total_cost = total_hours * hourly_rate\n    discount = total_cost * 0.1\n    final_cost = total_cost - discount\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    total_cost = 12 + 43 + 15 + 4 + 22\n    num_people = 3\n    cost_per_person = total_cost / num_people\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each bag of onions and the cost per pound\n    BAG_WEIGHT = 50\n    COST_PER_POUND = 1.5\n\n    # Calculate the total weight of the bags of onions\n    total_weight = 4 * BAG_WEIGHT\n\n    # Calculate the total cost of the onions\n    total_cost = total_weight * COST_PER_POUND\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies eaten on each day\n    monday_cookies = 5\n    tuesday_cookies = monday_cookies * 2\n\n    # Calculate the total number of cookies eaten\n    total_cookies = monday_cookies + tuesday_cookies + 5 + 13\n\n    # Calculate the number of calories consumed by each day\n    monday_calories = monday_cookies * 200\n    tuesday_calories = tuesday_cookies * 200\n\n    # Calculate the difference in calories consumed between the two days\n    calories_difference = (total_cookies - monday_calories - tuesday_calories) * 200\n\n    # return the result\n    result = calories_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and the percentage of boys and girls in each class\n    num_students = 20\n    boy_percentage = 0.5\n    girl_percentage = 0.5\n\n    # Calculate the total number of girls and boys in each class\n    class1_girls = 15\n    class2_girls = 12\n\n    # Calculate the total number of girls and boys in each class\n    class1_total_girls = class1_girls + class2_girls\n    class2_total_boys = class1_total_girls * boy_percentage\n    class3_total_girls = class2_girls * girl_percentage\n\n    # Calculate the total number of boys in the third class\n    class3_boys = class3_total_boys * boy_percentage\n\n    # return the result\n    result = class3_boys\n    return result"}
{"output": "def solution():\n    \n    initial_apps = 61\n    deleted_apps = 9\n    downloaded_apps = 18\n    remaining_apps = initial_apps - deleted_apps + downloaded_apps\n    result = remaining_apps\n    return result"}
{"output": "def solution():\n    \n    # Define the number of wolves and cougars killed last night\n    wolves_last_night = 10\n    cougars_last_night = 15\n\n    # Calculate the number of wolves and cougars killed today\n    wolves_today = wolves_last_night * 3\n    cougars_today = cougars_last_night - 3\n\n    # Calculate the total number of animals killed\n    total_animals = wolves_last_night + cougars_last_night + wolves_today + cougars_today\n\n    # Display the total number of animals killed\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    starting_floor = 3\n    elevator_floor = 4 * starting_floor + 6\n    total_floor = starting_floor + elevator_floor\n    result = total_floor\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Mitchel went down the water slide\n    mitchel_slide = 30\n\n    # Calculate the number of times Anne went down the water slide\n    anne_slide = mitchel_slide * 0.7\n\n    # Calculate the number of times Robert went down the water slide\n    robert_slide = anne_slide * 4\n\n    # Display the number of times Robert went down the water slide\n    result = robert_slide\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stalls and cows per stall\n    num_stalls = 10\n    cows_per_stall = 20\n\n    # Calculate the total number of cows\n    total_cows = num_stalls * cows_per_stall\n\n    # Calculate the number of new cows after dividing by the number of stalls\n    new_cows = 40 / num_stalls\n\n    # Calculate the number of new cows in each stall\n    new_cows_per_stall = new_cows / 20\n\n    # Calculate the total number of cows in 8 stalls\n    total_cows_in_8_stalls = new_cows_per_stall * 8\n\n    # Display the total number of cows in 8 stalls\n    result = total_cows_in_8_stalls\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin in dollars\n    PENNY_VALUE = 0.01\n    NICKEL_VALUE = 0.05\n    DIME_VALUE = 0.1\n    DOLL_VALUE = 0.01\n\n    # Calculate the total value of the pennies\n    pennies_total = 100 * PENNY_VALUE\n\n    # Calculate the total value of the nickels\n    nickels_total = 40 * NICKEL_VALUE\n\n    # Calculate the total value of the dimes\n    dimes_total = 20 * DIME_VALUE\n\n    # Calculate the total value of the dollars\n    dollars_total = pennies_total + nickels_total + dimes_total + 40 * DOLL_VALUE\n\n    # Display the total value in dollars\n    result = dollars_total\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each section of the redwood\n    SECTION_WEIGHT = 400\n\n    # Define the height of the redwood in feet\n    height = 200\n\n    # Calculate the weight of each section of the redwood\n    section_weight = SECTION_WEIGHT * 0.7\n\n    # Calculate the total weight of the redwood\n    total_weight = section_weight * height\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per book and the number of books\n    BOOK_COST = 0.5\n    NUM_BOOKS = 8\n\n    # Calculate the total cost of the books\n    total_cost = BOOK_COST * NUM_BOOKS\n\n    # Add the flat fee for the first book\n    total_cost += 2.00\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples Andrea has\n    andrea_apples = 52\n\n    # Calculate the number of apples Jamal has\n    jamal_apples = andrea_apples - 8\n\n    # Calculate the number of bananas Jamal has\n    jamal_bananas = jamal_apples + 4\n\n    # Calculate the number of bananas Andrea has\n    andrea_bananas = jamal_bananas / 2\n\n    # Calculate the total number of fruits\n    total_fruits = andrea_apples + jamal_apples + andrea_bananas\n\n    # Display the total number of fruits\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    # Calculate the total number of cookies\n    total_cookies = 36 + 30\n\n    # Calculate the total amount of flour needed\n    total_flour = 2 * total_cookies\n\n    result = total_flour\n    return result"}
{"output": "def solution():\n    \n    total_pennies = 9300\n    fraction_of_pennies = 2/3\n    pennies_in_stack = total_pennies * fraction_of_pennies\n    result = pennies_in_stack\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes and marbles per box\n    boxes = 5\n    marbles_per_box = 50\n\n    # Calculate the total number of marbles before giving some away\n    total_marbles = boxes * marbles_per_box\n\n    # Subtract the marbles given away\n    total_marbles -= 20\n\n    # return the result\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees in Chris's yard\n    chris_trees = 6\n\n    # Calculate the number of trees in Ferdinand's yard\n    ferdinand_trees = chris_trees / 2\n\n    # Calculate the number of trees in Harry's yard\n    harry_trees = 2 * ferdinand_trees + 5\n\n    # Calculate the difference in the number of trees\n    difference = harry_trees - ferdinand_trees\n\n    # Display the difference in the number of trees\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money each girl has\n    carmen_money = 100\n    samantha_money = carmen_money + 25\n    daisy_money = samantha_money + 50\n\n    # Calculate the total amount of money they have combined\n    total_money = carmen_money + samantha_money + daisy_money\n\n    # Display the total amount of money they have combined\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the selling price of the property and the percentage of the selling price that is a brokerage fee and transfer fee\n    property_price = 350000\n    brokerage_percentage = 0.05\n    transfer_percentage = 0.12\n\n    # Calculate the total price of the house\n    total_price = property_price + (property_price * brokerage_percentage) + (property_price * transfer_percentage)\n\n    # Calculate the difference between the total price and Mrs. Cruz's budget\n    difference = total_price - 400\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial loan amount and the transfer fee and brokerage fee\n    loan_amount = 400000\n    transfer_fee = loan_amount * 0.3\n    brokerage_fee = loan_amount * 0.05\n\n    # Calculate the total amount paid, including the transfer fee and brokerage fee\n    total_paid = transfer_fee + brokerage_fee + loan_amount\n\n    # Calculate the net proceeds\n    net_proceeds = loan_amount - total_paid\n\n    # return the result\n    result = net_proceeds\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to heat up the oil\n    heat_up_1 = 20\n\n    # Define the time it takes to heat up the oil with 40% longer\n    heat_up_2 = heat_up_1 * 1.4\n\n    # Define the time it takes to warm up the oil\n    warm_up_1 = 300\n\n    # Define the time it takes to cook the oil\n    cook_time = warm_up_1 - 5\n\n    # Calculate the time passed from starting the oil to have cooked chicken\n    time_passed = (heat_up_1 + heat_up_2 + warm_up_1 + cook_time) / 60\n\n    # Display the time passed\n    result = time_passed\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each type of ad\n    NEWSPAPER_PRICE = 5\n    TV_PRICE = 75\n\n    # Define the number of each type of ad purchased\n    newspaper_ads = 50\n    tv_ads = 15\n\n    # Calculate the total cost of the newspaper ads\n    newspaper_cost = newspaper_ads * NEWSPAPER_PRICE\n\n    # Calculate the total cost of the television ads\n    tv_cost = tv_ads * TV_PRICE\n\n    # Calculate the total cost of all the ads\n    total_cost = newspaper_cost + tv_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_balls = 16\n    golf_balls = total_balls / 2\n    blue_golf_balls = golf_balls / 2\n    result = blue_golf_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of M&Ms in the first bag\n    first_bag = 300\n\n    # Calculate the number of M&Ms in the second bag\n    second_bag = first_bag + 12\n\n    # Calculate the number of M&Ms in the third bag\n    third_bag = first_bag / 2\n\n    # Calculate the total number of M&Ms\n    total_mms = first_bag + second_bag + third_bag\n\n    # Display the total number of M&Ms\n    result = total_mms\n    return result"}
{"output": "def solution():\n    \n    # Define the number of houses and bedrooms per house\n    num_houses = 2\n    bedrooms_per_house = 3\n\n    # Define the number of windows per bedroom\n    windows_per_bedroom = 2\n\n    # Calculate the total number of windows in each house\n    total_windows_per_house = (num_houses * bedrooms_per_house * windows_per_bedroom) + 4\n\n    # Calculate the total number of windows between the houses\n    total_windows = total_windows_per_house * num_houses\n\n    # return the result\n    result = total_windows\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the items\n    cocoa_price = 4.20\n    laundry_price = 9.45\n    pasta_price = 1.35\n\n    # Calculate the total cost of the items\n    total_cost = cocoa_price + laundry_price + pasta_price\n\n    # Calculate the change the cashier gave back\n    change = 20 - total_cost\n\n    # return the result\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stitches taken by each sleeve\n    body_stitches = 900\n    collar_stitches = body_stitches / 10\n    rosette_stitches = collar_stitches * 2\n\n    # Calculate the total number of stitches taken\n    total_stitches = body_stitches + collar_stitches + rosette_stitches\n\n    # Calculate the number of stitches taken per sleeve\n    stitches_per_sleeve = total_stitches / 2\n\n    # Display the number of stitches taken per sleeve\n    result = stitches_per_sleeve\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of seed\n    TOMATO_PRICE = 40\n    CELERY_PRICE = 30\n\n    # Define the number of packets of each type of seed bought\n    tomato_packets = 20\n    celery_packets = 80\n\n    # Calculate the total cost of the tomato seeds\n    tomato_cost = tomato_packets * TOMATO_PRICE\n\n    # Calculate the total cost of the celery seeds\n    celery_cost = celery_packets * CELERY_PRICE\n\n    # Calculate the total cost of all the seeds\n    total_cost = tomato_cost + celery_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of lines in the lyrics\n    lyrics_lines = 54\n\n    # Calculate the number of lines in the first scene\n    first_scene_lines = 2 * lyrics_lines\n\n    # Calculate the number of lines in the second scene\n    second_scene_lines = lyrics_lines + 6\n\n    # Calculate the number of lines in the third scene\n    third_scene_lines = first_scene_lines / 3\n\n    # Calculate the number of lines in the four-fifth scene\n    fourth_scene_lines = second_scene_lines * 4\n\n    # Calculate the total number of lines to memorize\n    total_lines = first_scene_lines + second_scene_lines + fourth_scene_lines\n\n    # return the result\n    result = total_lines\n    return result"}
{"output": "def solution():\n    \n    total_cards = 80\n    a_cards = (2/5) * total_cards\n    remaining_cards = total_cards - a_cards\n    b_cards = (1/2) * remaining_cards\n    c_cards = (5/8) * remaining_cards\n    d_cards = remaining_cards - c_cards\n    result = d_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to dig a small hole and a large hole\n    SMALL_HOLE_TIME = 3\n    LARGE_HOLE_TIME = 10\n\n    # Define the number of small and large holes to dig\n    small_holes = 30\n    large_holes = 15\n\n    # Calculate the total time to dig all the small and large holes\n    total_time = (small_holes * SMALL_HOLE_TIME) + (large_holes * LARGE_HOLE_TIME)\n\n    # Convert the total time to hours\n    hours = total_time / 60\n\n    # Display the total time in hours\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    sum_of_ages = 20\n    years = 10\n    sum_of_ages_in_10_years = sum_of_ages * years\n    result = sum_of_ages_in_10_years\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Sam's current age is x\n    # Then Ruby's current age is 3x\n    # According to the problem, x + 3x = 9\n    # Solving for x, we get x = 3\n\n    # Therefore, Sam is currently 3x = 24 years old\n\n    # Display Sam's current age\n    result = 24\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the popsicles\n    popsicles_cost = 20 * 0.25\n\n    # Calculate the total cost of the ice cream bars\n    ice_cream_bars_cost = 4 * 0.50\n\n    # Calculate the total cost of everything\n    total_cost = popsicles_cost + ice_cream_bars_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spots in a cobras\n    cobras_spots = 70\n\n    # Calculate the number of spots in a mamba\n    mambas_spots = cobras_spots / 2\n\n    # Calculate the total number of spots\n    total_spots = cobras_spots + mambas_spots\n\n    # Calculate half the number of spots\n    half_spots = total_spots / 2\n\n    # Display half the number of spots\n    result = half_spots\n    return result"}
{"output": "def solution():\n    \n    # Define the number of team members and coaches\n    num_team_members = 12\n    num_coaches = 3\n\n    # Calculate the total number of guests\n    total_guests = num_team_members * 2\n\n    # Calculate the total number of pizzas needed\n    total_pizzas = total_guests // 3 + (1 if total_guests % 3 > 0 else 0)\n\n    # Calculate the total cost of the pizzas\n    total_cost = total_pizzas * 15\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of topaz gemstones used per necklace\n    topaz_gemstones_per_necklace = 8\n\n    # Define the length of each sterling silver bead in inches\n    sterling_silver_bead_length = 0.25\n\n    # Define the total length of each necklace in inches\n    necklace_length = 25\n\n    # Calculate the total length of all the topaz gemstones used\n    total_topaz_gemstones = topaz_gemstones_per_necklace * necklace_length\n\n    # Calculate the total length of all the sterling silver beads used\n    total_sterling_silver_beads = total_topaz_gemstones * sterling_silver_bead_length\n\n    # Calculate the number of sterling silver beads used per necklace\n    sterling_silver_beads_per_necklace = total_sterling_silver"}
{"output": "def solution():\n    \n    alani_week1 = 20\n    braylen_week1 = 40\n    margot_week1 = 60\n    alani_week2 = alani_week1 * 2\n    braylen_week2 = braylen_week1 * 2\n    margot_week2 = margot_week1 * 2\n    total_stories = alani_week1 + braylen_week1 + margot_week1 + alani_week2 + braylen_week2 + margot_week2\n    result = total_stories\n    return result"}
{"output": "def solution():\n    \n    ann_age = 9\n    brother_age = ann_age * 2\n    brother_age_in_3_years = brother_age + 3\n    result = brother_age_in_3_years\n    return result"}
{"output": "def solution():\n    \n    # Define the value of a quarter and a dime in cents\n    quarter_value = 25\n    dime_value = 10\n\n    # Calculate the total value of the quarters and dimes in cents\n    total_value = (5 * quarter_value) + (2 * dime_value)\n\n    # Calculate the amount of cents left after buying the can of pop\n    cents_left = 55 - total_value\n\n    # Display the amount of cents left\n    result = cents_left\n    return result"}
{"output": "def solution():\n    # Calculate the total number of stars on the flag\n    total_stars = 76\n\n    # Calculate the number of stars in the first three rows\n    first_three_rows = 3 * 8\n\n    # Calculate the number of stars in the second two rows\n    second_two_rows = 2 * 6\n\n    # Calculate the number of stars in the remaining rows\n    remaining_rows = total_stars - first_three_rows - second_two_rows\n\n    # Calculate the total number of rows of 5 stars\n    total_5_rows = remaining_rows * 5\n    result = total_5_rows\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each flagstone and the total weight capacity\n    flagstone_weight = 75\n    total_weight_capacity = 2000\n\n    # Calculate the total weight of the flagstones\n    total_weight = flagstone_weight * 80\n\n    # Calculate the number of trucks needed to transport the flagstones\n    trucks_needed = total_weight / total_weight_capacity\n\n    # Round up to the nearest whole number of trucks\n    trucks_needed = int(trucks_needed + 0.5)\n\n    result = trucks_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of the car in the fast lane\n    fast_speed = 60\n\n    # Calculate the speed of the car in the slow lane\n    slow_speed = fast_speed / 2\n\n    # Calculate the time it takes the car to cover the same distance\n    time = 480 / slow_speed\n\n    # Display the time\n    result = time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of medals Ali has won\n    ali_medals = 22\n\n    # Define the number of medals Izzy has\n    izzy_medals = ali_medals - 5\n\n    # Calculate the total number of medals they have\n    total_medals = ali_medals + izzy_medals\n\n    # Calculate the number of medals given out\n    given_out_medals = total_medals // 10\n\n    # Display the number of medals given out\n    result = given_out_medals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and children\n    num_adults = 4\n    num_children = 8\n\n    # Calculate the total number of chocolate bars\n    total_bars = num_adults * 5 + num_children * 5\n\n    # Calculate the number of chocolate bars each child gets\n    bars_per_child = total_bars // num_children\n\n    # Display the number of chocolate bars each child gets\n    result = bars_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the rate of pay per 10 minutes\n    PAY_RATE = 5\n\n    # Calculate the total earnings in half an hour\n    earnings_half_hour = (8 * PAY_RATE) + (11 * PAY_RATE)\n\n    # Calculate the total earnings for the online task\n    total_earnings = earnings_half_hour * 30\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    mike_points = 21\n    jim_points = mike_points - 3\n    tony_points = mike_points * 2\n    total_points = mike_points + jim_points + tony_points\n    extra_points = 20\n    total_points += extra_points\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    oranges_bought = 15\n    oranges_per_son = oranges_bought / 2\n    oranges_washed = oranges_per_son * 2\n    oranges_left = oranges_bought - oranges_washed\n    result = oranges_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pushups, squats, and dumbbell presses on the first day\n    pushups_day1 = 100\n    squats_day1 = 50\n    dumbbell_day1 = 20\n\n    # Calculate the number of pushups and squats done on the second day\n    pushups_day2 = pushups_day1 + 20\n    squats_day2 = squats_day1 - 10\n\n    # Calculate the number of dumbbell presses done on the second day\n    dumbbell_day2 = dumbbell_day1 * 2\n\n    # Calculate the total number of activities done\n    total_activities = pushups_day1 + squats_day1 + dumbbell_day1 + pushups_day2 + squats_day2 + dumbbell_day2\n\n    # Display the total number of activities\n    result = total_activities\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of rice consumed per meal\n    rice_per_meal = 0.2\n\n    # Define the number of people in the household\n    num_people = 5\n\n    # Calculate the total amount of rice consumed per day\n    total_rice_per_day = rice_per_meal * num_people\n\n    # Calculate the total amount of rice consumed per week\n    total_rice_per_week = total_rice_per_day * 7\n\n    # Calculate the number of weeks the bag will last\n    num_weeks = 42 / total_rice_per_week\n\n    # Display the number of weeks\n    result = num_weeks\n    return result"}
{"output": "def solution():\n    \n    # Define the target number of crates sold\n    target_crates = 120\n\n    # Define the number of crates sold each day\n    monday_friday_crates = 20\n    tuesday_crates = 15\n    wednesday_crates = 12\n    thursday_crates = 18\n\n    # Calculate the total number of crates sold\n    total_crates_sold = monday_friday_crates + tuesday_crates + wednesday_crates + thursday_crates\n\n    # Calculate the number of crates sold off\n    crates_off = target_crates - total_crates_sold\n\n    # Display the number of crates sold off\n    result = crates_off\n    return result"}
{"output": "def solution():\n    \n    # Define the initial bid and the number of people\n    initial_bid = 200\n    num_people = 4\n\n    # Calculate the total amount of money after the first bid\n    first_bid_total = initial_bid + (num_people * 50)\n\n    # Calculate the total amount of money after the second bid\n    second_bid_total = first_bid_total + (num_people * 50)\n\n    # Calculate the total cost of the desk\n    total_cost = first_bid_total + second_bid_total\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total distance John goes to work in a week\n    total_distance = 30 * 2 * 5\n\n    # Calculate the total cost of driving in a week\n    driving_cost_per_week = total_distance * 2\n\n    # Calculate the total cost of driving in a year\n    driving_cost_per_year = driving_cost_per_week * 50\n\n    # Calculate the total cost of driving per month\n    driving_cost_per_month = driving_cost_per_month + 150\n\n    # Calculate the total cost of driving in a year\n    total_cost = driving_cost_per_year + driving_cost_per_month\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    sunday_time = 23\n    monday_time = 16\n    total_time = sunday_time + monday_time\n    tuesday_time = total_time * 2\n    result = tuesday_time\n    return result"}
{"output": "def solution():\n    # Calculate the total number of pieces of paper used in a 32-page tabloid\n    total_printed = 1 + 2 + 32 + 31  # page 1 is printed on the left back, page 2 is printed on the left front, page 32 is printed on the right back, and 31 is printed on the right front\n    result = total_printed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money\n    initial_amount = 50\n\n    # Calculate the amount spent on food and snacks\n    food_and_snack_cost = initial_amount / 2\n\n    # Calculate the total amount spent\n    total_spent = food_and_snack_cost + 10\n\n    # Calculate the amount left\n    amount_left = initial_amount - total_spent\n\n    # return the result\n    result = amount_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of books and the price per book\n    INITIAL_BOOKS = 250\n    BOOK_PRICE = 20\n\n    # Calculate the number of books sold in the first year\n    first_year_books = INITIAL_BOOKS - 50\n\n    # Calculate the total earnings in the first year\n    first_year_earnings = first_year_books * BOOK_PRICE\n\n    # Calculate the total earnings in the second year\n    second_year_earnings = INITIAL_BOOKS - first_year_earnings - 45\n\n    # Display the total earnings in the second year\n    result = second_year_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly rate and number of working days per week\n    hourly_rate = 10\n    working_days = 5\n\n    # Calculate the total earnings for each week\n    weekly_earnings = hourly_rate * working_days\n\n    # Calculate the total earnings for the whole month\n    monthly_earnings = weekly_earnings * 4\n\n    # Calculate the bonus earnings\n    bonus_earnings = 300\n\n    # Calculate the total earnings for the whole month\n    total_earnings = monthly_earnings + bonus_earnings\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people\n    initial_people = 20\n\n    # Calculate the number of people he beats\n    beats = initial_people * 0.8\n\n    # Calculate the number of people he lost\n    lost = initial_people - beats\n\n    # return the result\n    result = lost\n    return result"}
{"output": "def solution():\n    \n    total_loaves = 60\n    morning_sales = (2/3) * total_loaves\n    remaining_loaves = total_loaves - morning_sales\n    afternoon_sales = (1/2) * remaining_loaves\n    result = afternoon_sales\n    return result"}
{"output": "def solution():\n    \n    joey_weight_loss = 8\n    sandy_weight_loss = joey_weight_loss * 2\n    weeks_to_lose_weight = 4\n    sandy_weeks = sandy_weight_loss / sandy_weeks\n    result = sandy_weeks\n    return result"}
{"output": "def solution():\n    \n    ice_cream_cost = 13\n    ice_cream_discount = 11\n    milk_discount = 0.5\n    ice_cream_total = ice_cream_cost * 2\n    milk_total = milk_discount * 4\n    total_savings = ice_cream_total - ice_cream_discount + milk_total\n    result = total_savings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days and the growth rates of each type of limb\n    DAYS = 15\n    ARM_GROWTH_RATE = 3\n    LEG_GROWTH_RATE = 5\n\n    # Calculate the total number of limbs of each type of limb\n    arm_limbs = (DAYS // ARM_GROWTH_RATE)\n    leg_limbs = (DAYS // LEG_GROWTH_RATE)\n\n    # Calculate the total number of limbs of each type of limb\n    total_arm_limbs = arm_limbs * ARM_GROWTH_RATE\n    total_leg_limbs = leg_limbs * LEG_GROWTH_RATE\n\n    # Calculate the total number of new limbs of each type of limb\n    new_limbs = total_arm_limbs + total_leg_limbs\n\n    # Display the new number of new limbs\n    result = new_limbs\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the business suits\n    business_suit_cost = 6 * 100\n\n    # Calculate the total cost of the suitcases\n    suitcase_cost = 3 * 50\n\n    # Calculate the total cost of the flight ticket\n    flight_ticket_cost = 5 * business_suit_cost + 700\n\n    # Calculate the total cost of the business trip\n    total_cost = business_suit_cost + suitcase_cost + flight_ticket_cost + 2000\n\n    # Calculate how much more money Theo needs to spend on gifts\n    gift_cost = 6000 - total_cost\n    result = gift_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and eggs consumed per day\n    num_people = 5\n    eggs_per_person_per_day = 3\n    eggs_per_person_per_day = 2\n\n    # Calculate the total number of eggs consumed per day\n    total_eggs_per_day = (num_people * eggs_per_person_per_day) + (num_people - num_people) * eggs_per_person_per_day\n\n    # Calculate the total number of eggs consumed in a week\n    total_eggs_per_week = total_eggs_per_day * 7\n\n    # return the result\n    result = total_eggs_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define Quinn's age\n    quinn_age = 30\n\n    # Calculate Jane's age\n    jane_age = quinn_age - 3\n\n    # Calculate Trent's age\n    trent_age = jane_age + 5\n\n    # Display Trent's age\n    result = trent_age\n    return result"}
{"output": "def solution():\n    \n    cera_age = 46\n    noah_age = cera_age / 2\n    chile_age_6_years_ago = noah_age * 3\n    chile_population = chile_age_6_years_ago + 6\n    result = chile_population\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of players on the football team\n    total_players = 105\n\n    # Calculate the number of players on the offense\n    offense_players = total_players * 2\n\n    # Calculate the number of players on the special teams\n    special_players = total_players / 2\n\n    # Calculate the number of players on the defense\n    defense_players = total_players - offense_players - special_players\n\n    # Display the number of players on the defense\n    result = defense_players\n    return result"}
{"output": "def solution():\n    # Calculate the total number of people who attended the party\n    total_guests = 2 * 6 + 3 * 4  # 2 families with 6 people each and 3 families with 4 people each\n\n    # Calculate the number of people who had previous commitments\n    previous_commitments = (1/4) * total_guests\n\n    # Calculate the total number of people who showed up\n    total_people = total_guests - 8 - previous_commitments\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of marbles bought from Johanna and added to the store\n    johanna_marbles = 20\n    added_marbles = 50\n\n    # Calculate the number of marbles given to Solomon's father\n    father_marbles = (2/5) * johanna_marbles\n\n    # Calculate the total number of marbles\n    total_marbles = johanna_marbles + added_marbles + father_marbles\n\n    # Calculate the total weight of the marbles\n    total_weight = total_marbles * 2\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    pool_width = 6\n    pool_length = 4\n    pool_depth = 5\n    volume = pool_width * pool_length\n    cost_per_volume = 0.1\n    total_cost = volume * cost_per_volume\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    boys = 30\n    girls = boys * 3\n    nongendered = boys * 1/10\n    total_children = boys + girls + nongendered\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of electric poles to electric wires\n    POINT_TO_WIRE = 1/3\n\n    # Calculate the total number of electric wires needed\n    total_wires = 45\n\n    # Calculate the total number of electric poles needed\n    total_poles = total_wires / POINT_TO_WIRE\n\n    # Display the total number of electric poles needed\n    result = total_poles\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of men and women\n    initial_men = 25\n    initial_women = 15\n\n    # Calculate the total number of people at the party\n    total_people = initial_men + initial_women\n\n    # Calculate the number of people who left after an hour\n    people_left = total_people / 4\n\n    # Calculate the number of women left\n    women_left = total_people - people_left - 22\n\n    # Display the number of women left\n    result = women_left\n    return result"}
{"output": "def solution():\n    \n    book_cost = 4\n    magazine_cost = book_cost / 2\n    pen_cost = magazine_cost - 1\n    result = pen_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pencils Jam has\n    jam_pencils = 3 + 2\n\n    # Define the number of pencils Meg has\n    meg_pencils = 46\n\n    # Calculate the total number of pencils\n    total_pencils = jam_pencils + meg_pencils\n\n    # Calculate the number of boxes needed\n    boxes_needed = total_pencils // 26 + (total_pencils % 26 > 0)\n\n    # Display the number of boxes needed\n    result = boxes_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of coffee per ice cube\n    ice_cube_coffee = 13\n\n    # Define the amount of cream added\n    cream_added = 15\n\n    # Calculate the total amount of coffee when it is cooled by 65 degrees\n    total_coffee = (65 / ice_cube_coffee) + (cream_added * ice_cube_coffee)\n\n    # Calculate the amount of milliliters weaker\n    milliliters_weaker = total_coffee / 12\n\n    result = milliliters_weaker\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the number of new records they can trade for\n    num_people = 5\n    new_records = 7\n\n    # Calculate the total number of new records they can trade\n    total_new_records = new_records * num_people\n\n    # Calculate the total number of old records they can trade\n    total_old_records = total_new_records - 2\n\n    # return the result\n    result = total_old_records\n    return result"}
{"output": "def solution():\n    \n    total_employees = 100\n    junior_employees = total_employees * (2/5)\n    senior_employees = junior_employees + 400\n    salary_per_month = (total_employees * 2000) + (senior_employees * 2000)\n    result = salary_per_month\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the bus\n    initial_people = 0\n\n    # Add the number of people who got in at the first bus stop\n    initial_people += 5\n\n    # Subtract the number of people who got down at the second bus stop\n    initial_people -= 7\n\n    # Add the number of people who got in at the second bus stop\n    initial_people += 8\n\n    # Calculate the total number of people who got on the bus\n    total_people = initial_people + 20\n\n    # return the result\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    starting_lollipops = 24\n    friends_lollipops = 14\n    bought_lollipops = 2 * friends_lollipops\n    morning_lollipops = starting_lollipops + friends_lollipops + 3 + 2\n    total_lollipops = starting_lollipops - 2 + bought_lollipops + morning_lollipops\n    result = total_lollipops\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage of charge that the phone is at\n    PERCENTAGE = 60\n\n    # Calculate the time it takes to fully charge\n    time_in_minutes = (PERCENTAGE / 100) * 3\n\n    # Convert the time to hours\n    time_in_hours = time_in_minutes / 60\n\n    # Display the time in hours\n    result = time_in_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of lollipops\n    initial_lollipops = 7\n\n    # Add the number of lollipops given by Erin's mother\n    total_lollipops = initial_lollipops + 10\n\n    # Subtract the number of lollipops given to Ella\n    remaining_lollipops = total_lollipops - 3\n\n    # Display the number of lollipops remaining\n    result = remaining_lollipops\n    return result"}
{"output": "def solution():\n    \n    last_purchase_cost = 80\n    coupon_amount = 2 * last_purchase_cost\n    total_cost = last_purchase_cost + 43 + coupon_amount\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    job_a_salary = 15 * 2000\n    job_a_tax_rate = 0.2\n    job_a_total_tax = job_a_salary * job_a_tax_rate\n    job_b_salary = 42000\n    job_b_tax_rate = 0.1\n    job_b_total_tax = job_b_salary * job_b_tax_rate\n    job_b_total_tax = job_b_salary * job_b_tax_rate\n    job_a_income = job_a_total_tax + job_a_tax\n    job_b_income = job_b_total_tax + job_b_tax\n    net_income_difference = job_b_income - job_a_income\n    result = net_income_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of castles and the percentage of ruins\n    total_castles = 220\n    ruin_percentage = 0.4\n\n    # Calculate the number of ruin castles\n    ruin_castles = total_castles * ruin_percentage\n\n    # Calculate the number of unmanned ruin castles\n    unmanned_ruin_castles = ruin_castles / 2\n\n    # return the result\n    result = unmanned_ruin_castles\n    return result"}
{"output": "def solution():\n    \n    furniture_advance = 150\n    furniture_installments = 6\n    furniture_price = 350\n    cozy_homes_advance = 1100\n    cozy_homes_installments = 9\n    cozy_homes_price = 250\n    \n    furniture_total_cost = (furniture_advance + (furniture_installments * furniture_price)\n    cozy_homes_total_cost = (cozy_homes_advance + (cozy_homes_installments * cozy_homes_price))\n    \n    cost_difference = furniture_total_cost - cozy_homes_total_cost\n    result = cost_difference\n    \n    return result"}
{"output": "def solution():\n    \n    # Define the number of guns each person has\n    jason_guns = 8\n    nick_guns = 10\n    richard_guns = 5\n\n    # Calculate the total number of guns\n    total_guns = jason_guns + nick_guns + richard_guns\n\n    # Calculate the number of guns each person gets if they share equally\n    num_people = 3\n    guns_per_person = total_guns // num_people\n\n    # Display the number of guns each person gets\n    result = guns_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of sugar needed to make a batch of suckers and a batch of fudge\n    SUCKERS_SUCKERS_SUCKERS_SUGAR = 30\n    FUDGE_SUGAR = 70\n\n    # Define the number of batches to be made\n    suckers_batches = 8\n    fudge_batches = 1\n\n    # Calculate the total amount of sugar needed to make the suckers\n    suckers_sugar = suckers_batches * SUCKERS_SUGAR\n\n    # Calculate the total amount of sugar needed to make the fudge\n    fudge_sugar = fudge_batches * FUDGE_SUGAR\n\n    # Calculate the total amount of sugar needed\n    total_sugar = suckers_sugar + fudge_sugar\n\n    # Display the total amount of sugar needed\n    result = total_sugar\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of each share\n    initial_price = 8\n\n    # Calculate the price after the first year\n    first_year_price = initial_price * 1.5\n\n    # Calculate the price after the second year\n    second_year_price = first_year_price * 0.75\n\n    # Calculate the final value of all the shares\n    final_value = first_year_price + second_year_price\n\n    # return the result\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hot dogs eaten by Luke\n    luke_hotdogs = 2\n\n    # Define the number of hot dogs eaten by Thomas\n    thomas_hotdogs = luke_hotdogs * 3\n\n    # Define the number of hot dogs eaten by John\n    john_hotdogs = thomas_hotdogs / 2\n\n    # Calculate the difference in hot dogs eaten between John and Luke\n    difference = john_hotdogs - luke_hotdogs\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of equal groups\n    total_students = 200\n    equal_groups = 2\n\n    # Calculate the number of students in the other groups\n    other_groups = equal_groups * 2\n\n    # Calculate the number of students in the smallest group\n    smallest_group = other_groups - 10\n\n    # Calculate the number of students in the smallest group\n    smallest_group = smallest_group\n\n    # return the result\n    result = smallest_group\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cows and chickens\n    cows = 60 / 3\n    chickens = 2 * cows\n\n    # Calculate the total number of legs\n    total_legs = (cows * 2) + (chickens * 4)\n\n    # Display the total number of legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of balls and the number of balls added per week\n    INITIAL_BALLS = 3\n    ADDITIONAL_BALLS_PER_WEEK = 1\n\n    # Calculate the total number of balls after the first 4 weeks\n    total_balls = INITIAL_BALLS + ADDITIONAL_BALLS_PER_WEEK * 4\n\n    # Calculate the number of balls lost\n    lost_balls = 3\n\n    # Calculate the number of balls caught\n    caught_balls = 2\n\n    # Calculate the number of balls lost\n    lost_balls = 1\n\n    # Calculate the final number of balls\n    final_balls = total_balls - lost_balls + lost_balls\n\n    # Display the final number of balls\n    result = final_balls\n    return result"}
{"output": "def solution():\n    \n    pink_weight = 50\n    blue_weight = pink_weight\n    green_weight = pink_weight\n    yellow_weight = pink_weight - 10\n    red_weight = pink_weight + 20\n    total_weight = blue_weight + green_weight + yellow_weight + red_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    initial_outfits = 24\n    new_outfits = initial_outfits * 2\n    mom_gifted_outfits = 15\n    total_outfits = initial_outfits + new_outfits + mom_gifted_outfits\n    result = total_outfits\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Tyson runs each day and the coach runs 1/5 times more meters\n    daily_distance = 5000\n    coach_distance = daily_distance * (1 + 1/5)\n\n    # Calculate the total distance Tyson runs in June\n    total_distance = (daily_distance * 4) + (coach_distance * 4)\n\n    # Display the total distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the value of Juice Box A\n    box_a_value = 4\n\n    # Calculate the value of Juice Box B\n    box_b_value = box_a_value + 5\n\n    # Calculate the value of Juice Box C\n    box_c_value = box_a_value + 7\n\n    # Calculate the difference in value between Juice Box C and Juice Box B\n    difference = box_c_value - box_b_value\n\n    # Display the difference in value\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tables and legs per table\n    tables_4 = 40\n    tables_3 = 50\n    legs_4 = 4\n    legs_3 = 3\n\n    # Calculate the total number of legs\n    total_legs = (tables_4 * legs_4) + (tables_3 * legs_3)\n\n    # return the result\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies in the bag\n    initial_cookies = 36\n\n    # Define the number of cookies put in the lunch box\n    lunch_cookies = 4 * 5\n\n    # Define the number of cookies eaten by Jenny's husband\n    husband_cookies = 7\n\n    # Calculate the number of cookies eaten by Jenny\n    jenny_cookies = lunch_cookies - husband_cookies\n\n    # return the result\n    result = jenny_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of each shirt and the discount percentage\n    ORIGINAL_PRICE = 30\n    DISCOUNT_PERCENTAGE = 40\n\n    # Calculate the discounted price of each shirt\n    discounted_price = ORIGINAL_PRICE * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the total cost of the 2 shirts\n    total_cost = discounted_price * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    tractors_sold_per_day = 10\n    tractor_income_per_day = 100\n    silos_sold_per_day = 5\n    silo_income_per_day = 220\n    tractor_income_total = tractors_sold_per_day * tractor_income_per_day\n    silo_income_total = silos_sold_per_day * silo_income_per_day\n    difference = tractor_income_total - silo_income_total\n    percent_difference = (difference / (tracting_per_day * 100)) * 100\n    result = percent_difference\n    return result"}
{"output": "def solution():\n    \n    food_cost_per_week = 25\n    treats_cost_per_month = 20\n    medicine_cost_per_month = 100\n    weeks_per_month = 4\n    total_food_cost = food_cost_per_week * weeks_per_month * weeks_per_month\n    total_treats_cost = treats_cost_per_month * weeks_per_month * months_per_month\n    total_medicine_cost = medicine_cost_per_month * weeks_per_month * months_per_month\n    total_cost = total_food_cost + total_treats_cost + total_medicine_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each activity in hours\n    monday_length = 1\n    tuesday_length = monday_length * 3\n    wednesday_length = 0.5\n    thursday_length = monday_length / 2\n    friday_length = 2\n\n    # Calculate the total length of all activities in hours\n    total_length = monday_length + tuesday_length + wednesday_length + thursday_length + friday_length\n\n    # Display the total length of all activities in hours\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the number of plant pots for the daisies and roses\n    daisies_pots = 30\n    roses_pots = daisies_pots * 2\n\n    # Calculate the total number of plant pots needed\n    total_pots = daisies_pots + roses_pots\n\n    # Calculate the number of plant pots left over\n    left_over_pots = total_pots - 100\n\n    # Display the number of plant pots left over\n    result = left_over_pots\n    return result"}
{"output": "def solution():\n    \n    initial_money = 36\n    sweater_cost = 11\n    brother_money = 4\n    remaining_money = initial_money - sweater_cost - brother_money\n    saved_money = remaining_money\n    result = saved_money\n    return result"}
{"output": "def solution():\n    \n    # Calculate the time spent swimming\n    swimming_time = 6 / 2\n\n    # Calculate the total time spent\n    total_time = 6 + swimming_time + 3 * 2\n\n    # Calculate the time spent sightseeing\n    sightseeing_time = total_time * 0.4\n\n    # Display the time spent sightseeing\n    result = sightseeing_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the phone and the amount already saved\n    PHONE_COST = 400\n    SAVINGS = 80\n\n    # Calculate the earnings from the first job\n    job1_earnings = 10 * 20\n\n    # Calculate the earnings from the second job\n    job2_earnings = 5 * 15\n\n    # Calculate the total earnings from both jobs\n    total_earnings = job1_earnings + job2_earnings\n\n    # Calculate the remaining amount to save\n    remaining_amount = PHONE_COST - total_earnings\n\n    # Display the remaining amount to save\n    result = remaining_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the shortest tree\n    shortest_tree = 6\n\n    # Calculate the height of the second tree\n    second_tree = shortest_tree + 5\n\n    # Calculate the height of the first two trees\n    first_two_trees = shortest_tree + second_tree\n\n    # Calculate the height of the tallest tree\n    tallest_tree = 2 * first_two_trees\n\n    # Display the height of the tallest tree\n    result = tallest_tree\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    TOY_CAR_PRICE = 2\n    TEDDIY_BEAR_PRICE = 1\n\n    # Define the number of each item purchased\n    num_toy_cars = 6\n    num_teddy_bears = 5\n\n    # Calculate the total cost of the toy cars\n    toy_car_cost = num_toy_cars * TOY_CAR_PRICE\n\n    # Calculate the total cost of the teddy bears\n    teddy_bear_cost = num_teddy_bears * TEDDIY_BEAR_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = toy_car_cost + teddy_bear_cost\n\n    # Calculate the amount of money left after the generous fee\n    money_left = 28 - total_cost + 10\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    budget = 90\n    tokens_per_round = 5\n    total_tokens = budget // tokens_per_round\n    farts_per_round = 2\n    cost_per_ride = 10\n    total_cost = total_tokens * farts_per_round * cost_per_ride\n    friends_can_play = total_cost // total_tokens\n    result = friends_can_play\n    return result"}
{"output": "def solution():\n    \n    pocket_money_per_day = 5\n    lollipop_cost = 0.25\n    lollipops_per_day = 4\n    days = 5\n    total_spent = lollipops_per_day * lollipop_cost * days\n    total_money = total_spent + pocket_money_per_day\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the amount of money Billy spent on gumballs\n    gumballs_cost = 0.05 * 40\n\n    # Calculate the amount of money Billy has left after buying the gumballs\n    money_left = 10 - gumballs_cost\n\n    # Calculate the amount of pounds of candy Billy bought\n    pounds_of_candy = money_left / 1.5\n\n    result = pounds_of_candy\n    return result"}
{"output": "def solution():\n    \n    carver_age = 45\n    son_age = (carver_age + 5) / 2\n    result = son_age\n    return result"}
{"output": "def solution():\n    \n    distance_first_city = 75\n    distance_second_city = 100\n    distance_third_city = (distance_first_city + distance_second_city) - 50\n    total_distance = distance_first_city + distance_second_city + distance_third_city\n    days_per_trip = 3\n    total_days = total_distance / 18000\n    result = total_days\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of stuffing for each type of bed\n    ROTTWEILER_STUFFING = 8\n    CHIHUA_STUFFING = 2\n    COLLIE_STUFFING = (ROTTWEILER_STUFFING + CHIHUA_STUFFING) / 2\n\n    # Define the number of each type of bed\n    rottweiler_beds = 4\n    chihuahua_beds = 4\n    collie_beds = 3\n\n    # Calculate the total amount of stuffing needed\n    total_stuffing = (rottweiler_beds * ROTTWEILER_STUFFING) + (chihuahua_beds * CHIHUA_STUFFING) + (collie_beds * COLLIE_STUFFING)\n\n    # Display the total amount of stuffing needed\n    result = total_stuffing\n    return result"}
{"output": "def solution():\n    \n    distance = 200\n    speed = 70\n    detour_distance = 10\n    route_home_distance = 240\n    route_home_speed = 80\n    total_distance = distance + route_home_distance\n    total_speed = speed + detour_distance / total_distance\n    total_time = total_distance / total_speed\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_students = 96\n    girls = 43\n    boys = total_students - girls\n    absent_girls = 5\n    absent_boys = 4\n    boys_at_friday = boys - absent_boys\n    result = boys_at_friday\n    return result"}
{"output": "def solution():\n    \n    girls = 6\n    boys = girls * 2\n    total_kids = girls + boys\n    result = total_kids\n    return result"}
{"output": "def solution():\n    \n    total_points = 42\n    first_test_points = 15\n    second_test_points = 18\n    third_test_points = total_points - first_test_points - second_test_points\n    result = third_test_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of customers who were kicked out for refusing\n    refusing_customers = 3\n\n    # Define the number of customers who were kicked out for shoplifting\n    shoplifting_customers = (refusing_customers * 4) - 5\n\n    # Define the number of customers who were kicked out for physical violence\n    goods_customers = shoplifting_customers * 3\n\n    # Define the total number of customers who were kicked out\n    total_customers = 50\n\n    # Calculate the number of customers who were kicked out for other reasons\n    other_customers = total_customers - refusing_customers - shoplifting_customers - goods_customers\n\n    # Display the number of customers who were kicked out for other reasons\n    result = other_customers\n    return result"}
{"output": "def solution():\n    \n    sara_points = 8\n    erin_points = sara_points * 3\n    erin_points_before = erin_points - 14\n    result = erin_points_before\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each picture frame and the percentage increase\n    FRAME_COST = 20\n    PERCENTAGE_INCREASE = 0.2\n\n    # Calculate the cost of each picture frame\n    picture_frame_cost = FRAME_COST * PERCENTAGE_INCREASE\n\n    # Calculate the total cost of the picture frames\n    total_cost = picture_frame_cost * 44\n\n    # Calculate the cost of the pins\n    pin_cost = 5 * 2\n\n    # Calculate the cost of the cords\n    cord_cost = 12 * (44 / 4)\n\n    # Calculate the total cost of the gifts\n    gift_cost = total_cost + pin_cost + cord_cost\n\n    # Display the total cost\n    result = gift_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each hand-painted wallpaper\n    BOX_COST = 400\n\n    # Calculate the amount saved by DIY\n    DIY_SAVINGS = BOX_COST * 0.2\n\n    # Calculate the total cost\n    total_cost = DIY_SAVINGS + BOX_COST\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of shoes sold on each day\n    friday_shoes = 14\n    sunday_shoes = friday_shoes * 2\n    last_day_shoes = sunday_shoes / 2 - 6\n\n    # Calculate the total number of shoes sold\n    total_shoes = friday_shoes + sunday_shoes + last_day_shoes\n\n    # Display the total number of shoes sold\n    result = total_shoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Hallie had dance practice on Tuesdays and Thursdays\n    tuesday_hours = 1\n    thursday_hours = 2\n\n    # Define the number of hours Hallie had dance practice on Saturdays\n    saturday_hours = tuesday_hours * 2\n\n    # Calculate the total number of hours Hallie had dance practice in a week\n    total_hours = (tuesday_hours + thursday_hours + saturday_hours) * 7\n\n    # Display the total number of hours Hallie had dance practice in a week\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the equipment\n    initial_cost = 400000\n\n    # Calculate the number of faulty pieces of equipment\n    num_faulty = int(initial_cost * 0.4)\n\n    # Calculate the cost of the good pieces of equipment\n    good_cost = initial_cost - num_faulty\n\n    # return the result\n    result = good_cost\n    return result"}
{"output": "def solution():\n    num_sheep = 30\n    half_sheep = num_sheep / 2\n    half_milk = half_sheep * 1\n    other_half_milk = half_milk * 2\n    total_milk = half_milk + other_half_milk\n    result = total_milk\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bread rolls\n    bread_rolls = 12\n\n    # Calculate the number of bread rolls fed to the children\n    children_rolls = 6\n\n    # Calculate the number of bread rolls remaining\n    remaining_rolls = bread_rolls - children_rolls\n\n    # Calculate the number of bread rolls fed to the chickens\n    chicken_rolls = remaining_rolls // 8\n\n    # Display the number of bread rolls fed to the chickens\n    result = chicken_rolls\n    return result"}
{"output": "def solution():\n    \n    total_pupils = 40\n    blue_pupils = total_pupils / 2\n    remaining_pupils = total_pupils - blue_pupils\n    green_pupils = remaining_pupils / 4\n    yellow_pupils = remaining_pupils - green_pupils\n    result = yellow_pupils\n    return result"}
{"output": "def solution():\n    \n    # Define the price per piece of apples\n    APPLE_PRICE = 4\n\n    # Define the number of apples picked on each day\n    monday_apples = 12\n    tuesday_apples = 12\n    wednesday_apples = 2 * (monday_apples + tuesday_apples)\n\n    # Calculate the total number of apples picked over the three days\n    total_apples = monday_apples + tuesday_apples + wednesday_apples\n\n    # Display the total number of apples picked\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of socks and the number of pairs of socks washed\n    total_socks = 50\n    washed_socks = 10 * 2 + 15\n\n    # Calculate the number of missed socks\n    missed_socks = total_socks - washed_socks\n\n    # return the result\n    result = missed_socks\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies\n    initial_cookies = 23 + 42\n\n    # Define the number of cookies eaten by the brother\n    brother_cookies = 44\n\n    # Calculate the number of cookies left for Rachel\n    rachel_cookies = initial_cookies - brother_cookies\n\n    # return the result\n    result = rachel_cookies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial loan and interest rate\n    loan_amount = 36650\n    interest_rate = 0.1\n\n    # Calculate the interest earnings per month\n    interest_earnings = loan_amount * interest_rate * 5\n\n    # Calculate the amount to be paid per month\n    amount_per_month = loan_amount / 5\n\n    # Round the result to two decimal places\n    result = round(amount_per_month, 2)\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance Cho hiked in 8 hours\n    cho_distance = 14 * 8\n\n    # Calculate the distance Chloe hiked in 5 hours\n    chloe_distance = 9 * 5\n\n    # Calculate the difference in distance between Cho and Chloe\n    difference = cho_distance - chloe_distance\n\n    # Display the difference in distance\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of silver and gold pesos\n    silver_pesos = 50\n    gold_pesos = 80\n\n    # Calculate the number of silver pesos Anna has\n    anna_silver_pesos = silver_pesos * 2\n\n    # Calculate the number of gold pesos Anna has\n    anna_gold_pesos = gold_pesos + 40\n\n    # Calculate the total number of pesos\n    total_pesos = silver_pesos + gold_pesos + anna_silver_pesos + anna_gold_pesos\n\n    # return the result\n    result = total_pesos\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of buying supplies and the number of pitchers\n    cost = 18\n    num_pitchers = 3\n\n    # Calculate the total number of cups of lemonade needed\n    total_cups = num_pitchers * 12\n\n    # Calculate the total revenue from selling all the cups of lemonade\n    total_revenue = total_cups * 1\n\n    # Calculate the total cost of purchasing the supplies\n    total_cost = cost + total_revenue\n\n    # Calculate the average revenue per hour\n    revenue_per_hour = total_revenue / 4\n\n    # Calculate the profit per hour\n    profit_per_hour = revenue_per_hour - total_cost\n\n    # return the result\n    result = profit_per_hour\n    return result"}
{"output": "def solution():\n    \n    # Define the fraction of land sold and the amount left\n    fraction_sold = 3/5\n    amount_left = 12.8\n\n    # Calculate the total amount of land sold\n    total_land_sold = fraction_sold * amount_left\n\n    # Calculate the total amount of land at first\n    total_land_at_first = total_land_sold + amount_left\n\n    # Display the total amount of land at first\n    result = total_land_at_first\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of members and the percentage of boys and girls\n    total_members = 52\n    boys_percentage = 0.5\n    girls_percentage = 0.5\n\n    # Calculate the number of boys and girls\n    num_boys = total_members * boys_percentage\n    num_girls = total_members * girls_percentage\n\n    # Calculate the number of people who can't make it\n    num_no_show = num_boys // 2\n\n    # Calculate the number of people who can be made with the show\n    num_show = num_members - num_boys - num_girls\n\n    # Calculate the number of people who sang\n    num_sang = num_show - (num_no_show * 3)\n\n    # Display the number of people who sang\n    result = num_sang\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of tests and the desired grade\n    total_tests = 65 + 94 + 81 + 74\n    desired_grade = 80\n\n    # Calculate the average grade\n    average_grade = total_tests / 5\n\n    # Calculate the current grade\n    current_grade = average_grade * 5\n\n    # return the result\n    result = current_grade\n    return result"}
{"output": "def solution():\n    \n    eraser_cost = 2\n    pencil_cost = 3\n    num_erasers = 6\n    num_pencils = 8\n    total_cost = (eraser_cost * num_erasers) + (pencil_cost * num_pencils)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of messages delivered to Ms. Thompson\n    thompson_messages = 66\n\n    # Calculate the number of messages delivered to Mr. Yu\n    yu_messages = thompson_messages / 3\n\n    # Calculate the total number of messages delivered\n    total_messages = thompson_messages + yu_messages\n\n    # Display the total number of messages delivered\n    result = total_messages\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rides and the cost per ride\n    num_rides = 9\n    ride_cost = 2\n\n    # Calculate the total cost of buying the rides\n    total_cost = num_rides * ride_cost\n\n    # Calculate the cost of buying a ride bracelet\n    bracelet_cost = 30\n\n    # Calculate the total cost of buying the rides bracelet\n    total_bracelet_cost = num_rides * bracelet_cost\n\n    # Calculate the total cost of buying the rides bracelet\n    total_bracelet_cost = total_bracelet_cost + total_bracelet_cost\n\n    # Calculate the amount saved by buying the rides bracelet\n    amount_saved = total_bracelet_cost - total_cost\n\n    # return the result\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gifts to wrap\n    family_gifts = 6\n    friend_gifts = 4\n    teacher_gifts = 2\n\n    # Calculate the total number of gifts\n    total_gifts = family_gifts + friend_gifts + teacher_gifts\n\n    # Calculate the total amount of ribbon needed\n    total_ribbon = total_gifts * 144\n\n    # Calculate the amount of ribbon per gift\n    ribbon_per_gift = total_ribbon // total_gifts\n\n    # Display the amount of ribbon per gift\n    result = ribbon_per_gift\n    return result"}
{"output": "def solution():\n    \n    total_popsicles = 165\n    betty_popsicles = (5 / total_popsicles) * total_popsicles\n    sam_popsicles = (6 / total_popsicles) * total_popsicles\n    difference = sam_popsicles - betty_popsicles\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the monthly costs of each service\n    NETFLIX_COST = 10\n    HULU_COST = 10\n    DINEY_COST = 10\n\n    # Calculate the total monthly cost of both services\n    total_cost = (NETFLIX_COST + HULU_COST + DINEY_COST) * 2\n\n    # Calculate the amount saved by cancelling the cable package\n    savings = total_cost * 0.2\n\n    # Display the amount saved\n    result = savings\n    return result"}
{"output": "def solution():\n    \n    # Define the time spent writing the song\n    writing_time = 4\n\n    # Calculate the time spent recording the song\n    recording_time = writing_time / 2\n\n    # Define the time spent editing the song\n    editing_time = 90\n\n    # Calculate the total time spent editing\n    total_time = writing_time + recording_time + editing_time\n\n    # Calculate the percentage of time spent editing\n    editing_percentage = (editing_time / total_time) * 100\n\n    # Display the percentage of time spent editing\n    result = editing_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and columns in the shelving system\n    rows = 6\n    columns = 6\n\n    # Calculate the number of books Wendy wants to place\n    books = 2 * (rows * columns) + 20\n\n    # Display the number of books Wendy needs to carry\n    result = books\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cards made and the number of boxes\n    num_cards_made = 20\n    num_boxes = 2\n\n    # Define the number of cards per box\n    num_cards_per_box = 15\n\n    # Calculate the total number of cards\n    total_cards = num_cards_made + (num_boxes * num_cards_per_box)\n\n    # Subtract the cards given away\n    total_cards -= 24 + 5 + 17\n\n    # Display the total number of cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    total_slices = 12\n    bill_slices = total_slices / 3\n    mark_slices = total_slices / 4\n    remaining_slices = total_slices - bill_slices - mark_slices - 2\n    result = remaining_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Mark has and the amount he earns per day\n    INITIAL_MONEY = 50\n    DAILY_EARNINGS = 10\n\n    # Define the cost of the bike\n    BIKE_COST = 300\n\n    # Calculate the amount of money Mark still needs to save\n    remaining_money = INITIAL_MONEY - DAILY_EARNINGS * BIKE_COST\n\n    # Calculate the number of days Mark needs to save the remaining money\n    days_to_save = remaining_money / DAILY_EARNINGS\n\n    # Display the number of days\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the number of spiders\n    spiders = 90\n\n    # Calculate the number of millipedes\n    millipedes = spiders / 3\n\n    # Calculate the number of stink bugs\n    stink_bugs = 2 * millipedes - 12\n\n    # Calculate the total number of bugs\n    total_bugs = spiders + millipedes + stink_bugs\n\n    # Display the total number of bugs\n    result = total_bugs\n    return result"}
{"output": "def solution():\n    \n    # Define Erica's age\n    erica_age = 30\n\n    # Calculate Beth's age\n    beth_age = erica_age + 5\n\n    # Calculate Alice's age\n    alice_age = beth_age + 7\n\n    # Calculate the difference between Alice and Erica's ages\n    age_difference = alice_age - erica_age\n\n    # Display the age difference\n    result = age_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the volume of milk in one glass\n    GLASS_VOLUME = 8\n\n    # Define the number of glasses of milk John drinks\n    num_glasses = 2\n\n    # Calculate the total volume of milk John drinks\n    total_milk_volume = GLASS_VOLUME * num_glasses\n\n    # Calculate the total number of calories John consumed\n    calories_per_ounce = 3\n    total_calories = total_milk_volume * calories_per_ounce\n\n    # Display the total number of calories consumed\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weeks in a month and the number of days in a week\n    WEEKS_IN_MONTH = 4\n    DAYS_IN_WEEK = 6\n\n    # Define the pay rate per day\n    PAY_RATE = 50\n\n    # Calculate the total pay for a month\n    monthly_pay = WEEKS_IN_MONTH * DAYS_IN_WEEK * PAY_RATE\n\n    # Calculate the total pay for a year\n    yearly_pay = monthly_pay * 12\n\n    # Display the yearly pay\n    result = yearly_pay\n    return result"}
{"output": "def solution():\n    \n    flour_per_batch = 3 / 2\n    milk_per_batch = 1 / 2\n    bags_of_flour = flour_per_batch / 2\n    bags_of_milk = milk_per_batch / 2\n    difference = bags_of_flour - bags_of_milk\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of energy used per hour and the number of hours used per day\n    energy_per_hour = 900\n    hours_per_day = 8\n\n    # Calculate the amount of energy used per day\n    energy_per_day = energy_per_hour * hours_per_day\n\n    # Calculate the amount of energy used per day after reducing by 5 hours\n    energy_per_day_reduction = energy_per_day - 5\n\n    # Calculate the total amount of energy used in 30 days\n    total_energy_used = energy_per_day_reduction * 30\n\n    # Convert the total energy used to kilowatts\n    total_energy_kilowatts = total_energy_used / 1000\n\n    # return the result\n    result = total_energy_kilowatts\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stripes for each zebra\n    zebra_stripes_1 = 17\n    zebra_stripes_2 = 17\n\n    # Define the number of stripes for each zebra\n    zebra_stripes_3 = 36\n\n    # Define the number of stripes for each zebra\n    zebra_stripes_4 = zebra_stripes_1 / 2\n\n    # Calculate the total number of stripes\n    total_stripes = (2 * zebra_stripes_1) + (2 * zebra_stripes_2) + (4 * zebra_stripes_3)\n\n    # Calculate the average number of stripes\n    average_stripes = total_stripes / 3\n\n    # Display the average number of stripes\n    result = average_stripes\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of each sandwich and the number of people\n    MEAT_PER_SANDWICH = 1\n    CHEESE_PER_SANDWICH = 1\n    PEOPLE = 20\n\n    # Calculate the total amount of meat and cheese needed\n    total_meat = MEAT_PER_SANDWICH * PEOPLE\n    total_cheese = CHEESE_PER_SANDWICH * PEOPLE\n\n    # Calculate the total cost of the meat and cheese\n    meat_cost = total_meat * 7\n    cheese_cost = total_cheese * 3\n    total_cost = meat_cost + cheese_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cannolis and the difference in the number of cannolis\n    initial_cantolis = 40\n    cannolis_difference = 60\n\n    # Calculate the number of cannolis bought at the store\n    store_cantolis = initial_cantolis + cannolis_difference\n\n    # Calculate the number of corns bought at the store\n    store_corns = store_cantolis - 40\n\n    # Calculate the total number of corns and cannolis\n    total_corns = store_corns + store_cantolis\n\n    # return the result\n    result = total_corns\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of steps Elliott walks each day\n    total_steps = 10000\n\n    # Calculate the number of steps Elliott finished walking\n    finished_steps = total_steps / 2\n\n    # Calculate the number of steps Elliott went for short walks\n    short_walk_steps = 1000\n\n    # Calculate the number of steps Elliott went for short jog\n    short_jog_steps = total_steps - finished_steps - short_walk_steps - 2000\n\n    # Display the number of steps Elliott took during his jog\n    result = short_jog_steps\n    return result"}
{"output": "def solution():\n    # Calculate the total number of words in the book\n    total_words = 45 * 200\n\n    # Calculate the total time taken to read the book\n    total_time = total_words / 300\n\n    # Calculate the time left for the airport\n    time_left = 60\n\n    # Calculate the time it takes to get to the airport\n    time_to_airport = 10\n\n    # Calculate the time it takes to finish the book\n    time_to_book = time_left + time_to_airport\n\n    # Calculate the time early\n    time_early = (total_time - time_to_book) / 300\n\n    result = time_early\n    return result"}
{"output": "def solution():\n    \n    # Define the number of employees and their hourly rate\n    num_employees = 40\n    hourly_rate = 15\n\n    # Calculate the total number of hours worked in May\n    total_hours = 40 * 40\n\n    # Calculate the total amount paid to the employees in May\n    total_pay = num_employees * hourly_rate * total_hours\n\n    # Calculate the number of employees who are expired in June\n    expired_employees = num_employees / 4\n\n    # Calculate the total amount paid to the employees in June\n    total_paid = total_pay - expired_employees\n\n    # Display the total amount paid\n    result = total_paid\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Sally had\n    initial_money = 10\n\n    # Calculate the amount of money Sally spent on each pound of taffy\n    pound_cost = 3\n    pound_discount = 0.5\n    pound_price = pound_cost - (pound_cost * pound_discount)\n\n    # Calculate the total cost of the seashells\n    seashells_cost = 1.5\n\n    # Calculate the total cost of the magnets\n    magnets_cost = 0.25 * 4\n\n    # Calculate the total cost of all the items\n    total_cost = pound_price + seashells_cost + magnets_cost\n\n    # Calculate the amount of money Sally has left\n    money_left = initial_money - total_cost\n\n    # Display the amount of money Sally has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the fireworks\n    package_price = 400\n    pack_price = 2 * package_price\n    discount = 0.2\n    finale_price = 150\n\n    # Calculate the total cost of the fireworks\n    total_cost = (package_price + pack_price) * discount + finale_price\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    cookies_per_day = 2\n    days = 30\n    cookies_per_dozen = 12\n    total_cookies_needed = cookies_per_day * days\n    dozens_needed = total_cookies_needed / cookies_per_dozen\n    result = dozens_needed\n    return result"}
{"output": "def solution():\n    \n    total_candles = 50000\n    non_expensive_candles = total_candles * 0.99\n    remaining_candles = total_candles - non_expensive_candles\n    wet_dog_candles = remaining_candles * 0.05\n    both_candles = total_candles - non_expensive_candles - wet_dog_candles\n    result = both_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the regular price per blouse and the discount percentage\n    REGULAR_PRICE = 20\n    DISCOUNT_PERCENTAGE = 0.3\n\n    # Calculate the discounted price per blouse\n    discounted_price = REGULAR_PRICE * (1 - DISCOUNT_PERCENTAGE)\n\n    # Calculate the total cost of the discounted blouses\n    total_cost = discounted_price * 4\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    joanne_tallest_trees = 30\n    joanne_shortest_trees = joanne_tallest_trees / 2\n    joanne_average_trees = joanne_tallest_trees + joanne_shortest_trees + 1\n    sister_tallest_trees = joanne_tallest_trees * 2\n    sister_shortest_trees = joanne_shortest_trees * 3\n    sister_average_trees = joanne_average_trees + sister_tallest_trees + sister_shortest_trees\n    total_apples = 500\n    apples_from_tallest_trees = total_apples - joanne_tallest_trees\n    apples_from_shortest_trees = total_apples - joanne_shortest_trees\n    apples_from_average_trees = total_apples - sister_average_trees\n    result = apples_from_average_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of heads and bumps\n    total_heads = 180\n    total_bumps = 304\n\n    # Calculate the number of camels and dromedaries\n    camels = total_heads // 2\n    dromedaries = total_bumps - camels\n\n    # Calculate the number of dromedaries\n    dromedaries_per_hump = 1\n    dromedaries = dromedaries // dromedaries_per_hump\n\n    # return the result\n    result = dromedaries\n    return result"}
{"output": "def solution():\n    \n    # Define the distance traveled in the first 4 days\n    distance_first_4_days = 200 * 4\n\n    # Calculate the distance traveled in the next 2 days\n    distance_next_2_days = distance_first_4_days * 0.7\n\n    # Calculate the total distance traveled\n    total_distance = distance_first_4_days + distance_next_2_days + 300 * 2\n\n    # Display the total distance traveled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define Peter's locker size in cubic inches\n    peter_size = 5\n\n    # Calculate Zack's locker size in cubic inches\n    zack_size = peter_size / 4\n\n    # Calculate Timothy's locker size in cubic inches\n    timothy_size = zack_size / 2\n\n    # Display Timothy's locker size in cubic inches\n    result = timothy_size\n    return result"}
{"output": "def solution():\n    \n    stanley_elevation = 10000\n    oliver_elevation = 3000\n    total_climb_distance = stanley_elevation - oliver_elevation\n    result = total_climb_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of capital\n    initial_cap = 5000\n\n    # Calculate the amount of money given to the first bank\n    bank1_money = 4000\n\n    # Calculate the amount of money given to the second company\n    company2_money = 2 * bank1_money\n\n    # Calculate the total amount of money given away\n    total_money = bank1_money + company2_money\n\n    # Calculate the final amount of capital\n    final_cap = initial_cap + total_money\n\n    # return the result\n    result = final_cap\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cats\n    initial_cats = 50\n\n    # Calculate the number of cats carried away\n    carried_cats = 4 * 5\n\n    # Calculate the number of remaining cats\n    remaining_cats = initial_cats - carried_cats\n\n    # Calculate the number of cats who ran after a mouse\n    ran_cats = int(remaining_cats * 3/5)\n\n    # Calculate the number of cats left on the rock\n    cats_left = remaining_cats - ran_cats\n\n    # Display the number of cats left on the rock\n    result = cats_left\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the service in 6 months\n    first_six_months = 8 * 6\n\n    # Calculate the total cost of the service in 8 months\n    normal_price = 12 * 8\n\n    # Calculate the total cost of the service in 2 years\n    total_cost = first_six_months + normal_price + 14 * 8\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the tattered jeans and calculate the cost of the jogger jeans\n    tattered_cost = 28\n    jogger_cost = tattered_cost - 6\n\n    # Calculate the total savings from the jogger jeans\n    total_savings = 6\n    jogger_savings = total_savings / 3\n\n    # Calculate the total savings from the tattered jeans\n    tattered_total_savings = tattered_cost - jogger_savings\n\n    # Calculate the difference in savings between the two jeans\n    savings_difference = jogger_savings - tattered_total_savings\n\n    # return the result\n    result = savings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of each bus\n    BUS_CAPACITY = 60\n    MINIUSSES_CAPACITY = 30\n    MINIVANS_CAPACITY = 15\n\n    # Define the number of buses of each type\n    num_buses = 4\n    num_minibusses = 6\n    num_minivans = 10\n\n    # Calculate the total capacity of each type of bus\n    bus_capacity = num_buses * BUS_CAPACITY\n    minibusse_capacity = num_minibusses * MINIUSSES_CAPACITY\n    minivans_capacity = num_minivans * MINIVANS_CAPACITY\n\n    # Calculate the total capacity of all the employees\n    total_capacity = bus_capacity + minibusse_capacity + minivans_capacity\n\n    # Display the total capacity\n    result = total_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds attracted by each bird feeder\n    birds_per_feeder = 20\n\n    # Define the number of birds attracted by each store-bought feeder\n    birds_per_store_bought = birds_per_feeder + 10\n\n    # Calculate the total number of birds attracted\n    total_birds = (3 * birds_per_feeder) + (3 * birds_per_store_bought)\n\n    # Display the total number of birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the bagel\n    BAGEL_PRICE = 4\n\n    # Calculate the price of the soup\n    SOUP_PRICE = BAGEL_PRICE * 1.25\n\n    # Calculate the price of the cake\n    CAKE_PRICE = BAGEL_PRICE / 2\n\n    # Calculate the total cost of the dinner\n    total_cost = BAGEL_PRICE + SOUP_PRICE + CAKE_PRICE\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the amusement park and the selling price per card\n    ticket_cost = 100\n    selling_price = 1.5\n\n    # Calculate the total revenue from selling the cards\n    total_revenue = ticket_cost * selling_price\n\n    # Calculate the number of cards Kenny kept\n    kept_cards = total_revenue / 3\n\n    # Calculate the number of cards Kenny started with\n    starting_cards = total_revenue - kept_cards + 50\n\n    # Display the number of cards Kenny started with\n    result = starting_cards\n    return result"}
{"output": "def solution():\n    \n    total_guests = 36\n    half_guests = total_guests / 2\n    first_hotdog_guests = half_guests\n    second_hotdog_guests = 40\n    non_second_hotdog_guests = total_guests - first_hotdog_guests - second_hotdog_guests\n    result = non_second_hotdog_guests\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters in Indras' name\n    indras_letters = 6\n\n    # Calculate the number of letters in the sister's name\n    sister_letters = (indras_letters / 2) + 4\n\n    # Calculate the total number of letters\n    total_letters = indras_letters + sister_letters\n\n    # Display the total number of letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    pot_and_pans_price = 120\n    mixing_bowls_price = 20\n    separate_utensils_price = 5\n    total_price = pot_and_pans_price + mixing_bowls_price + (5 * separate_utensils_price)\n    discount = total_price * 0.2\n    final_price = total_price - discount\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    rope_price = 6\n    game_price = 11\n    ball_price = 2\n\n    # Define the amount of money Dora has saved\n    savings = 2\n\n    # Define the amount of money Dora's mother gave her\n    mother_money = 16\n\n    # Calculate the total amount of money Dora has\n    total_money = savings + mother_money\n\n    # Calculate the total cost of each item\n    total_cost = rope_price + game_price + ball_price\n\n    # Calculate the amount of money Dora still needs to buy all the items\n    remaining_money = total_cost - total_money\n\n    # return the result\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dragons Prince Thaddeus slew\n    thaddeus_dragons = 100\n\n    # Calculate the number of dragons Prince Arthur slew using a spear\n    arthur_dragons = thaddeus_dragons * 3\n\n    # Calculate the number of dragons Prince Walter slew using a rusty iron axe\n    walter_dragons = arthur_dragons * 2\n\n    # Calculate the number of dragons Prince Bruce slew using a nail file\n    bruce_dragons = walter_dragons / 5\n\n    # Calculate the total number of dragons Prince Bruce has\n    total_dragons = thaddeus_dragons + arthur_dragons + walter_dragons + bruce_dragons\n\n    # Display the total number of dragons\n    result = total_dragons\n    return result"}
{"output": "def solution():\n    \n    total_gallons = 15\n    num_containers = 5\n    gallons_per_container = total_gallons / num_containers\n    pints_per_gallon = 8\n    total_pints = gallons_per_container * pints_per_gallon\n    result = total_pints\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of chips and candy bars\n    CHIPS_PRICE = 40\n    CANDY_PRICE = 75\n\n    # Define the amount of money George spent\n    total_spent = 5\n\n    # Calculate the amount of money George had left after buying the chips\n    money_left = total_spent - (3 * CHIPS_PRICE)\n\n    # Calculate the number of candy bars George bought\n    candy_bars_bought = int(money_left / CANDY_PRICE)\n\n    # Display the number of candy bars George bought\n    result = candy_bars_bought\n    return result"}
{"output": "def solution():\n    \n    total_lollipops = 25\n    lollipops_kept = 5\n    lollipops_remaining = total_lollipops - lollipops_kept\n    friends = 4\n    lollipops_per_friend = lollipops_remaining / friends\n    result = lollipops_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the cake and the number of pieces\n    cake_weight = 20\n    num_pieces = 8\n\n    # Calculate the total weight of the cake\n    total_weight = cake_weight * num_pieces\n\n    # Calculate the weight of the remaining cake\n    remaining_weight = total_weight - total_weight\n\n    # return the result\n    result = remaining_weight\n    return result"}
{"output": "def solution():\n    \n    total_oranges = 34 + 22\n    friends = 6\n    oranges_per_person = total_oranges // friends\n    result = oranges_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of onions needed per serving\n    pounds_per_serving = 2\n    servings_per_person = 6\n\n    # Calculate the total cost of the onions\n    total_onion_cost = pounds_per_serving * 2 * servings_per_person\n\n    # Calculate the total cost of the beef stock\n    total_beef_stock_cost = 2 * 2 * servings_per_person\n\n    # Calculate the cost per serving\n    cost_per_serving = (total_onion_cost + total_beef_stock_cost) / servings_per_person\n\n    # Round the cost per serving to the nearest integer\n    result = round(cost_per_serving)\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes Wayne to drive from Wayne's hotel\n    wayne_hotel_time = 4\n\n    # Calculate the time it takes Bernadette to drive from Bernadette's hotel\n    bernadette_hotel_time = 4 * wayne_hotel_time\n\n    # Calculate the total time it takes Wayne and Bernadette to drive to the premiere theater\n    total_time = 5 + bernadette_hotel_time + 4\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the room in yards\n    length = 3\n\n    # Calculate the area of the room in square feet\n    square_area = 360 * length\n\n    # Calculate the perimeter of the room in square feet\n    perimeter = square_area / 360\n\n    # Display the perimeter of the room\n    result = perimeter\n    return result"}
{"output": "def solution():\n    \n    # Define the number of packs of each color of beads\n    elizabeth_red_packs = 1\n    elizabeth_clear_packs = 2\n    margareth_blue_packs = 3\n    margareth_red_packs = 4\n\n    # Define the number of beads per pack\n    beads_per_pack = 20\n\n    # Calculate the total number of beads for each color of sister\n    elizabeth_total_beads = (elizabeth_red_packs + elizabeth_clear_packs) * beads_per_pack\n    margareth_total_beads = (margareth_blue_packs + margareth_red_packs) * beads_per_pack\n\n    # Calculate the difference in the number of beads\n    bead_difference = elizabeth_total_beads - margareth_total_beads\n\n    # return the result\n    result = bead_difference"}
{"output": "def solution():\n    \n    # Define the initial temperature and the time spent baking\n    initial_temp = 40\n    baking_time = 3\n\n    # Calculate the temperature increase due to baking\n    baking_temp_increase = baking_time * 5\n\n    # Calculate the final temperature after baking\n    final_temp = initial_temp + baking_temp_increase\n\n    # Calculate the temperature increase due to opening the window\n    window_open_time = 30\n    window_temp_increase = window_open_time // 10 * 2\n\n    # Calculate the final temperature after cooling down\n    final_temp_increase = final_temp + window_temp_increase - window_temp_increase\n\n    # Display the final temperature\n    result = final_temp_increase\n    return result"}
{"output": "def solution():\n    \n    jon_swim_time = 40\n    jon_bike_time = 20\n    jon_run_time = 50\n    jon_total_time = jon_swim_time + jon_bike_time + jon_run_time\n    james_swim_time = jon_swim_time * 1.1\n    james_bike_time = jon_bike_time + 5\n    james_total_time = james_swim_time + james_bike_time\n    result = james_total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the length of Movie C in minutes\n    c_length = 1.25 * 60\n\n    # Calculate the length of Movie B in minutes\n    b_length = c_length + 5\n\n    # Calculate the length of Movie A in minutes\n    a_length = b_length / 4\n\n    # Display the length of Movie A in minutes\n    result = a_length\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a bail of hay\n    BUY_COST = 3\n\n    # Calculate the number of miles Michael runs\n    miles = 32 * 30\n\n    # Calculate the number of birds Michael eats\n    birds = miles / 2\n\n    # Calculate the cost of the birds\n    cost = birds * BUY_COST\n\n    # Calculate the change Michael has after buying the hay\n    change = cost - cost\n\n    # Display the change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs used in cases and cupboard\n    cases_eggs = 4 * 12\n    cupboard_eggs = 2\n\n    # Calculate the total number of eggs used\n    total_eggs = cases_eggs + cupboard_eggs\n\n    # Calculate the number of glasses of eggnog\n    glasses_of_eggs = total_eggs // 5\n\n    # Calculate the number of trays\n    trays = glasses_of_eggs // 5\n\n    # Display the number of trays\n    result = trays\n    return result"}
{"output": "def solution():\n    \n    joey_points = 214\n    marcy_points = 225\n    marcy_points_scored = 10\n    joey_points_scored = joey_points - marcy_points_scored\n    result = joey_points_scored\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the sneakers\n    INITIAL_COST = 576\n\n    # Calculate the revenue from selling 17 sneakers at $20 each\n    revenue_from_flash = 17 * 20\n\n    # Calculate the revenue from selling the remaining sneakers at $25 each\n    revenue_to_department = 48 - 17\n\n    # Calculate the total revenue from selling the remaining sneakers at $25 each\n    total_revenue = revenue_to_department * 25\n\n    # Calculate the total cost of the sneakers\n    total_cost = INITIAL_COST + revenue_from_flash\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of packets and the number of colors per packet\n    num_packets = 10\n    color_per_packet_1 = 8\n    color_per_packet_2 = 16\n\n    # Calculate the total number of colors\n    total_color = (num_packets * color_per_packet_1) + (num_packets * color_per_packet_2)\n\n    # Display the total number of colors\n    result = total_color\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the movie and popcorn\n    super_ticket_price = 20\n    soda_price = 3\n    popcorn_price = (super_ticket_price + soda_price) / 2\n\n    # Calculate the regular price of popcorn\n    regular_price = popcorn_price\n\n    # Calculate the amount saved by buying the soda\n    soda_saved = 2\n\n    # Calculate the total cost of buying the soda\n    soda_cost = soda_price - soda_saved\n\n    # Calculate the regular price of popcorn\n    regular_price = regular_price + soda_cost\n\n    result = regular_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of balloons and the initial cost\n    INITIAL_BALLOONS = 20\n    INITIAL_COST = 900\n\n    # Define the cost increase per balloon\n    COST_INCREASE = 20\n\n    # Calculate the new cost of each balloon\n    new_cost = INITIAL_COST + COST_INCREASE\n\n    # Calculate the new number of balloons\n    new_num_balloons = INITIAL_BALLOONS + 20\n\n    # Calculate the total cost of filling the balloons\n    total_cost = new_cost * new_num_balloons\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the average speed of the car during the road trip\n    distance_first_leg = 60 * 2  # distance = speed * time\n    distance_second_leg = 30 * 1  # distance = speed * time\n    average_speed = distance_first_leg + distance_second_leg\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sapphires and the cost of the traded ones\n    initial_sajphires = 8\n    traded_sajphires = 3\n    traded_cost = 800\n\n    # Define the cost of the two rubies\n    rubies_cost = 1200\n\n    # Calculate the new number of each type of jewel\n    new_sajphires = initial_sajphires - traded_sajphires\n    new_rubies = 2\n\n    # Calculate the total cost of the jewels\n    total_cost = (new_sajphires * traded_cost) + (new_rubies * traded_cost)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of apples eaten by Marin and his neighbor Nancy in 30 days\n    total_apples = 2 * 4 * 30  # Marin and his neighbor Nancy each eat 4 apples a day, for 30 days\n    result = total_apples\n    return result"}
{"output": "def solution():\n    # Calculate the volume of one raised bed\n    bed_volume = 2 * 8 * 2\n\n    # Calculate the total volume of all raised beds\n    total_bed_volume = bed_volume * 10\n\n    # Calculate the total volume of the potting soil needed\n    total_soil_volume = total_bed_volume * 2\n\n    # Calculate the total cost of the potting soil\n    total_cost = total_soil_volume * 12\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    red_cards = 15\n    green_cards = red_cards * 1.6\n    yellow_cards = red_cards + green_cards\n    total_cards = red_cards + green_cards + yellow_cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of fairies\n    initial_fairies = 50\n\n    # Calculate the number of fairies seen by the first friend\n    friend_fairies = initial_fairies / 2\n\n    # Calculate the total number of fairies seen\n    total_fairies_seen = initial_fairies + friend_fairies\n\n    # Calculate the number of fairies remaining\n    remaining_fairies = total_fairies_seen - 30\n\n    # Display the number of fairies remaining\n    result = remaining_fairies\n    return result"}
{"output": "def solution():\n    \n    jennifer_puppies = 8\n    jennifer_spots = 3\n    brandon_puppies = 12\n    brandon_spots = 4\n    total_puppies = jennifer_puppies + brandon_puppies\n    total_spots = jennifer_spots + brandon_spots\n    percent_spots = (total_spots / total_puppies) * 100\n    result = percent_spots\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each type of vehicle\n    sugar_box_weight = 1\n    carrot_weight = 12\n    hay_weight = 75\n\n    # Calculate the total weight of the sugar cubes\n    total_sugar_weight = 2 * sugar_box_weight\n\n    # Calculate the total weight of the carrots\n    total_carrot_weight = 4 * carrot_weight\n\n    # Calculate the total weight of the horses\n    total_horses_weight = total_sugar_weight + total_carrot_weight + hay_weight\n\n    # Calculate the number of oats\n    oats = total_horses_weight - total_horses_weight\n\n    # Calculate the number of carrots needed\n    num_carrots = 2 * sugar_box_weight // sugar_weight\n\n    # Calculate the total number of carrots needed\n    total_carrots_needed = num_carrots + num_carrots\n\n    result = total_carrots_needed\n    return result"}
{"output": "def solution():\n    \n    aluminum_can_value = 2\n    plastic_bottle_value = 3\n    aluminum_cans_per_week = 3\n    plastic_bottles_per_week = 5\n    total_money_per_week = (aluminum_can_value * aluminum_cans_per_week) + (plastic_bottle_value * plastic_bottles_per_week)\n    total_money_in_month = total_money_per_week * 4\n    result = total_money_in_month\n    return result"}
{"output": "def solution():\n    \n    frederick_plants = 10\n    toni_plants = frederick_plants * 1.6\n    shondra_plants = toni_plants - 7\n    result = shondra_plants\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount Ali had\n    initial_amount = 21\n\n    # Define the amount Leila gave Ali\n    leila_amount = 100 / 2\n\n    # Calculate the total amount Ali has now\n    total_amount = initial_amount + leila_amount\n\n    # Display the total amount Ali has now\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the pizza delivery\n    delivery_cost = 15\n\n    # Calculate the amount of the tip\n    tip_amount = delivery_cost / 5\n\n    # Calculate the total amount to be paid, including the tip\n    total_amount = delivery_cost + tip_amount\n\n    # Display the total amount\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the initial distance of the race\n    distance = 100\n\n    # Calculate the distance after the first part of the race\n    distance -= 5\n\n    # Calculate the distance after the second part of the race\n    distance -= 2\n\n    # Calculate the distance after the third part of the race\n    distance -= 3\n\n    # Calculate the distance after the fourth part of the race\n    distance -= 1\n\n    # return the result\n    result = distance\n    return result"}
{"output": "def solution():\n    # Calculate the total number of basketball cards\n    total_basketball_cards = 6 * 25\n\n    # Calculate the total number of baseball cards\n    total_baseball_cards = 5 * 40\n\n    # Calculate the total number of cards\n    total_cards = total_basketball_cards + total_baseball_cards\n\n    # Calculate the number of students\n    num_students = total_cards // 10\n\n    result = num_students\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total cost of Becky's purchase\n    becky_cost = 20 * 45\n\n    # Calculate the total cost of Kelly's purchase\n    kelly_cost = 20 * 50 * 0.9\n\n    # Calculate the difference in cost between Kelly and Becky\n    cost_difference = kelly_cost - becky_cost\n\n    # Display the difference in cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sheets per room and the number of comforters per room\n    SHEETS_PER_ROOM = 2\n    COMFORTER_PER_ROOM = 1\n\n    # Define the number of pillow cases per room and the number of towels per room\n    PILOW_CASES_PER_ROOM = 2\n    TUNELS_PER_ROOM = 2 * PILOW_CASES_PER_ROOM\n\n    # Calculate the total number of sheets and comforters in 80 rooms\n    total_sheets = SHEETS_PER_ROOM * 80\n    total_comforters = COMFORTER_PER_ROOM * 80\n\n    # Calculate the total number of pillow cases and towels\n    total_pillow_cases = PILOW_CASES_PER_ROOM * 80\n    total_towels = TUNELS_PER_ROOM * 80\n\n    # Calculate the total number of laundry pieces\n    total_laundry = total_sheets + total_comforters + total_pil"}
{"output": "def solution():\n    \n    # Define the initial number of shoes\n    initial_shoes = 200\n\n    # Calculate the number of shoes after Monday\n    shoes_after_monday = initial_shoes - 5\n\n    # Calculate the number of shoes after Wednesday\n    shoes_after_wednesday = shoes_after_monday + 15\n\n    # Calculate the number of shoes after Friday\n    shoes_after_friday = shoes_after_wednesday + 30\n\n    # Calculate the number of shoes on Sunday\n    shoes_on_sunday = shoes_after_friday - 180\n\n    # Display the number of shoes on Sunday\n    result = shoes_on_sunday\n    return result"}
{"output": "def solution():\n    \n    # Define the number of jars and cupcakes per jar\n    JARS = 6\n    CUPCAKES_PER_JAR = 8\n\n    # Calculate the total number of cupcakes needed\n    total_cupcakes = JARS * CUPCAKES_PER_JAR\n\n    # Calculate the number of pans needed\n    pans_needed = total_cupcakes // 12\n\n    # If there are any remaining cupcakes, add one more pan\n    if total_cupcakes % 12!= 0:\n        pans_needed += 1\n\n    # Display the number of pans needed\n    result = pans_needed\n    return result"}
{"output": "def solution():\n    \n    pen_price = 2\n    paper_price = 3 * pen_price - 1\n    total_cost = pen_price + paper_price\n    cash_given = 10\n    change = cash_given - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and pencils per student\n    num_students = 30\n    pencils_per_student = 10\n\n    # Calculate the total number of pencils in the class\n    total_pencils = num_students * pencils_per_student\n\n    # Calculate the number of pencils used after two months\n    used_pencils = total_pencils // 5\n\n    # Calculate the number of pencils remaining after two months\n    remaining_pencils = total_pencils - used_pencils\n\n    # Calculate the number of pencils left\n    left_pencils = remaining_pencils // 3\n\n    # Display the number of pencils left\n    result = left_pencils\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cookies Matt wants to eat\n    total_cookies = 5\n\n    # Calculate the number of carrot sticks Matt can eat\n    carrot_sticks = (total_cookies - 2) / 2\n\n    # Display the number of carrot sticks Matt has to eat\n    result = carrot_sticks\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the shark and the length of each remora\n    shark_length = 10\n    remora_length = 6\n\n    # Calculate the combined length of the remoras\n    total_length = shark_length + (2 * remora_length)\n\n    # Calculate the percentage of the shark's body length that is the combined length of the remoras\n    percentage = (total_length / shark_length) * 100\n\n    # return the result\n    result = percentage\n    return result"}
{"output": "def solution():\n    # Calculate the number of students with a desktop computer\n    students_with_computer = 0.75 * 20\n\n    # Calculate the total number of students at the grade level\n    total_students = students_with_computer + 20\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    total_time = 240 * 3\n    days_per_week = 4\n    time_per_day = total_time / days_per_week\n    result = time_per_day\n    return result"}
{"output": "def solution():\n    \n    total_spent = 300\n    book_price = 15\n    num_kids = 4\n    total_books = total_spent / book_price\n    books_per_child = total_books / num_kids\n    result = books_per_child\n    return result"}
{"output": "def solution():\n    \n    total_kids = 32\n    dairy_kids = 9\n    peanuts_kids = 6\n    both_kids = 3\n    non_allergic_kids = total_kids - dairy_kids - peanuts_kids - both_kids\n    result = non_allergic_kids\n    return result"}
{"output": "def solution():\n    \n    # Define the number of employees in each group and the number of tour guides in each group\n    Employees_PER_GROUP = 200\n    TICKETS_PER_GROUP = 7\n\n    # Calculate the total number of employees\n    total_employees = 3 * Employees_PER_GROUP\n\n    # Calculate the total number of tour guides\n    total_tour_guides = total_employees * TICKETS_PER_GROUP\n\n    # Display the total number of tour guides\n    result = total_tour_guides\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the plane tickets and the normal price per day\n    plane_ticket_cost = 5000\n    normal_price_per_day = 1500\n\n    # Calculate the cost of the hotel\n    hotel_cost_per_day = normal_price_per_day * 1.2\n\n    # Calculate the total cost of the trip\n    total_cost = plane_ticket_cost * 3 + hotel_cost_per_day * 3\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tubes of each color of paint\n    blue_tubes = 4\n    yellow_tubes = 3\n\n    # Calculate the number of tubes of each color of paint Jasper has\n    blue_jasper_tubes = blue_tubes / 2\n    yellow_jasper_tubes = yellow_tubes * 3\n\n    # Calculate the total number of tubes of paint Jasper has\n    total_jasper_tubes = blue_jasper_tubes + yellow_jasper_tubes\n\n    # Display the total number of tubes of paint Jasper has\n    result = total_jasper_tubes\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the 1959 penny\n    1959_weight = 48\n\n    # Calculate the weight of the 2010 penny\n    2010_weight = 0.75 * 1959_weight\n\n    # Calculate the combined weight of the two pennies\n    combined_weight = 1959_weight + 2010_weight\n\n    # return the result\n    result = combined_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount raised\n    total_amount = 200\n\n    # Calculate the amount earned by Keegan and Tasha\n    keegan_earnings = 83\n    tasha_earnings =91\n\n    # Calculate the total amount earned\n    total_earnings = keegan_earnings + tasha_earnings\n\n    # Calculate the amount still needed to reach the goal\n    amount_needed = total_amount - total_earnings\n\n    # return the result\n    result = amount_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the maximum number of songs the player can store\n    MAX_SONGS = 100\n\n    # Define the number of songs Gabriel has\n    gabriel_songs = 20\n\n    # Calculate the number of songs Luri has\n    luri_songs = gabriel_songs * 3\n\n    # Calculate the difference in songs between Luri and Gabriel\n    difference = max(luri_songs - gabriel_songs, 0)\n\n    # Display the difference in songs\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    oranges_picked = 60\n    price_per_orange = 10\n    oranges_eaten = oranges_picked * (2/5)\n    total_money = oranges_eaten * price_per_orange\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of Jillian's shoes\n    shoes_cost = 80\n\n    # Calculate the cost of Jillian's handbag\n    bag_cost = 3 * shoes_cost - 20\n\n    # Display the cost of Jillian's handbag\n    result = bag_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total distance James runs in a week\n    total_distance = 12 * 5  # 12 miles a day for 5 days\n\n    # Calculate the number of hours James runs in a week\n    hours = total_distance / 10  # 10 miles per hour\n\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of horses and the amount of oats they can consume per meal\n    num_horses = 4\n    oats_per_meal = 5\n\n    # Calculate the total amount of oats needed for one day\n    oats_per_day = num_horses * oats_per_meal * 2\n\n    # Calculate the total amount of oats needed for five days\n    oats_for_five_days = oats_per_day * 5\n\n    # Calculate the number of bags of oats needed\n    bags_needed = oats_for_five_days / 50\n\n    # Round up to the nearest whole number of bags\n    bags_needed = int(bags_needed + 0.5)\n\n    # return the result\n    result = bags_needed\n    return result"}
{"output": "def solution():\n    \n    total_puppies = 27\n    pomeranians = total_puppies * (2/3)\n    girls = pomeranians * (1/3)\n    result = girls\n    return result"}
{"output": "def solution():\n    \n    # Define the temperatures\n    southlandia_temp = -48\n    northlandia_temp = 21\n    midlandia_temp = -3\n\n    # Calculate the average temperature\n    avg_temp = (southlandia_temp + northlandia_temp + midlandia_temp) / 3\n\n    # Display the average temperature\n    result = avg_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the toy car and the amount already saved\n    toy_car_cost = 12\n    saved_amount = 4\n\n    # Calculate the remaining amount to be saved\n    remaining_amount = toy_car_cost - saved_amount\n\n    # Calculate the number of days it will take to save the remaining amount\n    days_to_save = remaining_amount / 2\n\n    # Display the number of days\n    result = days_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs per tray and the total number of trays\n    EGGS_PER_TRAY = 24\n    TRAYS = 2\n\n    # Calculate the total number of eggs that can be placed on the trays\n    total_eggs = EGGS_PER_TRAY * TRAYS\n\n    # Calculate the number of eggs that won't be placed on the trays\n    eggs_not_on_tray = 64 - total_eggs\n\n    # Display the number of eggs that won't be placed on the trays\n    result = eggs_not_on_tray\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a small pizza and a family-size pizza\n    small_pizza_cost = 8\n    family_size_pizza_cost = 3 * small_pizza_cost\n\n    # Calculate the total cost\n    total_cost = small_pizza_cost + family_size_pizza_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each pack of razors and the discount amount\n    PACK_PRICE = 4.00\n    PACK_DISCOUNT = 0.00\n\n    # Define the number of packs of razors Heather buys\n    packs = 2\n\n    # Calculate the total cost of the razors before the discount\n    total_cost = PACK_PRICE * packs\n\n    # Calculate the discount amount\n    discount_amount = total_cost - PACK_DISCOUNT\n\n    # Calculate the cost per individual razor after the discount\n    cost_per_racor = (total_cost - discount_amount) / packs\n\n    # Display the cost per individual razor\n    result = cost_per_racor\n    return result"}
{"output": "def solution():\n    \n    # Define the heights of the cheerleaders\n    CHERRY_HEIGHT_1 = 64\n    CHERRY_HEIGHT_2 = 60\n\n    # Calculate the total height of the cheerleaders\n    total_height = (9 * CHERRY_HEIGHT_1) + (10 * CHERRY_HEIGHT_2) + (3 * CHERRY_HEIGHT_3) + (2 * CHERRY_HEIGHT_2)\n\n    # Convert the height of the human pyramid to feet\n    height_feet = total_height / 12\n\n    # Display the height of the human pyramid in feet\n    result = height_feet\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Charisma works per day and the walking time per hour\n    WORK_HOURS_PER_DAY = 8\n    WALKING_TIME_PER_HOUR = 5\n\n    # Calculate the total number of hours Charisma works over 5 days\n    total_work_hours = WORK_HOURS_PER_DAY * 5\n\n    # Calculate the total walking time in minutes\n    total_walking_time = total_work_hours * WALKING_TIME_PER_HOUR\n\n    # Display the total walking time in minutes\n    result = total_walking_time\n    return result"}
{"output": "def solution():\n    \n    # Define Brett's current age\n    brett_age = 14\n\n    # Calculate Angela's age in four years\n    angela_age_in_4_years = brett_age * 3\n\n    # Calculate Angela's current age\n    angela_age = angela_age_in_4_years - 4\n\n    # Display Angela's current age\n    result = angela_age\n    return result"}
{"output": "def solution():\n    \n    morning_ride_cost = 6\n    afternoon_ride_cost = 2\n    days_per_week = 14\n    total_morning_cost = morning_ride_cost * days_per_week * 2\n    total_afternoon_cost = afternoon_ride_cost * days_per_week * 2\n    total_cost = total_morning_cost + total_afternoon_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of oranges in each box\n    ORANGES_PER_BOX = 10\n\n    # Calculate the total number of oranges brought by Ashley\n    ashley_oranges = 5 * ORANGES_PER_BOX\n\n    # Calculate the total number of oranges brought by Brianne\n    brianne_oranges = ashley_oranges + 20\n\n    # Calculate the total number of oranges brought by both of them\n    total_oranges = ashley_oranges + brianne_oranges\n\n    # Calculate the number of greek orange pies they can make\n    pies = total_oranges // 3\n\n    # Display the number of greek orange pies they can make\n    result = pies\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the first venue's attendance\n    first_venue_cost = 200\n\n    # Calculate the total cost of the second venue's attendance\n    second_venue_cost = 25 * 2\n\n    # Calculate the total cost of the first venue's food\n    first_venue_food_cost = 5 * 2\n\n    # Calculate the total cost of the first venue's guests\n    total_cost = first_venue_cost + second_venue_cost - first_venue_food_cost\n\n    # Calculate the number of guests needed to reach the total cost\n    guests_needed = total_cost / 25\n    result = guests_needed\n    return result"}
{"output": "def solution():\n    \n    total_insects = 43\n    david_insects = total_insects / 2\n    lily_insects = david_insects + 7\n    result = lily_insects\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of yarn in a skein\n    YARN_AMOUNT = 364\n\n    # Calculate the amount of yarn used by Mariah's grandma\n    grandma_yarn = YARN_AMOUNT / 2\n\n    # Calculate the total amount of yarn used\n    total_yarn = grandma_yarn + Mariah_yarn\n\n    # Display the total amount of yarn used\n    result = total_yarn\n    return result"}
{"output": "def solution():\n    \n    # Define the number of friends and the number of gifts each friend wants\n    num_friends = 5\n    friend1_gifts = 5\n    friend2_gifts = 2\n    friend3_gifts = 2\n    friend4_gifts = 2\n    friend5_gifts = 5\n    friend3_gifts = 2\n    friend4_gifts = 2\n    total_gifts = (num_friends * friend1_gifts) + (num_friends * friend2_gifts) + (num_friends * friend3_gifts) + 10\n\n    # Display the total number of gifts\n    result = total_gifts\n    return result"}
{"output": "def solution():\n    \n    # Define the width of the chair\n    chair_width = 3\n\n    # Calculate the width of the rug\n    rug_width = chair_width + 5\n\n    # Calculate 2 feet longer than twice the width of the rug\n    couch_width = 2 * rug_width + 2\n\n    # Display the length of the couch\n    result = couch_width\n    return result"}
{"output": "def solution():\n    \n    total_cost = 7\n    grape_cost = 2\n    green_cost = grape_cost / 2\n    strawberry_cost = (total_cost - grape_cost - green_cost) / 2\n    result = strawberry_cost\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of sticks from the 2 x 4 piece of wood\n    sticks_4 = 200 / 2\n\n    # Calculate the number of sticks from the 2 x 8 piece of wood\n    sticks_8 = 400 / 2\n\n    # Calculate the total cost of the sticks\n    sticks_cost = (sticks_4 * 4) + (sticks_8 * 6)\n\n    # Calculate the amount of money Frederick has left after buying the sticks\n    money_left = 24 - sticks_cost\n\n    # Calculate the maximum number of popsicle sticks that can be made with the money left\n    max_sticks = money_left // sticks_4\n\n    # Display the maximum number of popsicle sticks\n    result = max_sticks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sled dogs and the number of legs per dog\n    NUM_DOGS = 6\n    LEGS_PER_DOG = 4\n\n    # Calculate the total number of legs needed\n    total_legs = NUM_DOGS * LEGS_PER_DOG\n\n    # Calculate the total number of pairs of snowshoes needed\n    total_pairs = total_legs // 2\n\n    # Calculate the total cost of all pairs of snowshoes\n    total_cost = total_pairs * 12\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each bus trip and the number of days per week\n    BUS_TRIP_COST = 2.20\n    DAYS_PER_WEEK = 5\n\n    # Calculate the total cost of the bus trips\n    total_cost = BUS_TRIP_COST * DAYS_PER_WEEK * 2\n\n    # Calculate the cost of the weekly bus pass\n    pass_cost = 20\n\n    # Calculate the amount saved by buying the weekly bus pass\n    amount_saved = total_cost - pass_cost\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    farm_cows = 30\n    zoo_sheep = 20\n    farm_sheep = zoo_sheep / 2\n    total_cows = farm_cows + farm_sheep\n    total_sheep = zoo_sheep + farm_sheep\n    total_animals = total_cows + total_sheep\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    # Define the number of onions and potatoes Rose bought\n    rose_onions = 12\n    rose_potatoes = 4\n\n    # Calculate the number of onions and potatoes Sophia bought\n    sophia_onions = rose_onions / 4\n    sophia_potatoes = rose_potatoes / 4\n\n    # Calculate the total number of onions and potatoes Sophia bought\n    total_onions = sophia_onions\n    total_potatoes = sophia_potatoes\n\n    # Display the total number of onions and potatoes Sophia bought\n    result = total_onions + total_potatoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of lbs Andy wants to lose\n    lbs_to_lose = 30\n\n    # Define the number of days Andy has been losing lbs\n    days_to_lose = 31 - 19\n\n    # Define the number of calories Andy needs to burn to reach his goal\n    calories_to_burn = 3500\n\n    # Calculate the total number of calories Andy needs to burn to reach his goal\n    total_calories_to_burn = lbs_to_lose * calories_to_burn\n\n    # Calculate the number of calories Andy needs to burn per day to reach his goal\n    calories_per_day = total_calories_to_burn / days_to_lose\n\n    # Display the number of calories Andy needs to burn per day\n    result = calories_per_day\n    return result"}
{"output": "def solution():\n    \n    # Define the daily earnings and the total amount spent\n    daily_earnings = 30\n    total_spent = 100\n\n    # Calculate the total earnings for the week\n    total_earnings = daily_earnings * 7\n\n    # Calculate the amount left after the week\n    amount_left = total_earnings - total_spent\n\n    # return the result\n    result = amount_left\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Hannah will run\n    total_distance = 8 * 0.25  # each lap is 0.25 km\n\n    # Calculate the total amount of water Hannah needs to drink\n    total_water = 60 * total_distance  # Hannah needs to drink 60 ml of water for each kilometer she runs\n\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define Julie's initial amount of money\n    initial_money = 500\n\n    # Calculate the amount of money spent on clothes\n    clothes_cost = initial_money * 0.2\n\n    # Calculate the remaining amount of money\n    remaining_money = initial_money - clothes_cost\n\n    # Calculate the amount of money spent on CDs\n    cds_cost = remaining_money * 0.25\n\n    # Calculate the final amount of money Julie has left\n    final_money = remaining_money - cds_cost\n\n    # Display the final amount of money Julie has left\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the lot\n    lot_cost = 120000\n\n    # Calculate the cost of the house\n    house_cost = 3 * lot_cost\n\n    # Display the cost of the house\n    result = house_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the canvas bags\n    total_cost = 8 * 5 * 4\n\n    # Calculate the total revenue from selling the craft fair\n    total_revenue = 8 * 5\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    punches_per_minute = 25\n    rounds = 5\n    minutes_per_round = 3\n    total_minutes = rounds * minutes_per_round\n    total_punches = total_minutes * punches_per_minute\n    result = total_punches\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cookies Suzanne made\n    suzanne_cookies = 36\n\n    # Calculate the number of cookies Josh made\n    josh_cookies = suzanne_cookies / 4\n\n    # Calculate the number of cookies Kelsie made\n    kelsie_cookies = josh_cookies * 2\n\n    # Display the number of cookies Kelsie made\n    result = kelsie_cookies\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Ali has\n    total_money = 4 * 10 + 6 * 20\n\n    # Calculate the amount of money Ali gives to her sister\n    money_to_sister = total_money / 2\n\n    # Calculate the remaining amount of money\n    remaining_money = total_money - money_to_sister\n\n    # Calculate the amount of money Ali uses to buy dinner\n    money_for_dinner = remaining_money * 3 / 5\n\n    # Calculate the amount of money Ali has after buying dinner\n    money_after_dinner = remaining_money - money_for_dinner\n\n    result = money_after_dinner\n    return result"}
{"output": "def solution():\n    \n    # Define Rob's time in minutes\n    robce_time = 40 + 2 * 60\n\n    # Display Royce's time in minutes\n    result = royce_time\n    return result"}
{"output": "def solution():\n    \n    num_grandchildren = 3\n    hat_skeins = 2\n    scarf_skeins = 4\n    sweater_skeins = 12\n    mittens_skeins = 1\n    socks_skeins = 2\n    total_skeins = (hat_skeins + scarf_skeins + sweater_skeins + (2 * mittens_skeins) + (2 * socks_skeins)) * num_grandchildren\n    result = total_skeins\n    return result"}
{"output": "def solution():\n    \n    total_problems = 100\n    monday_problems = 12\n    tuesday_problems = monday_problems * 3\n    remaining_problems = total_problems - monday_problems - tuesday_problems\n    wednesday_problems = remaining_problems / 4\n    remaining_problems -= wednesday_problems\n    result = remaining_problems\n    return result"}
{"output": "def solution():\n    \n    tony_rate = 6\n    bobby_rate = tony_rate - 1\n    kathy_rate = bobby_rate * 2\n    ricky_rate = kathy_rate - 2\n    total_rate = tony_rate + bobby_rate + kathy_rate + ricky_rate\n    result = total_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of loaves of bread\n    initial_loaves = 200\n\n    # Define the number of loaves sold in the morning and afternoon\n    morning_sold = 93\n    afternoon_sold = 39\n\n    # Calculate the total number of loaves sold\n    total_sold = morning_sold + afternoon_sold\n\n    # Subtract the number of unsold loaves\n    remaining_loaves = initial_loaves - total_sold + 6\n\n    # return the result\n    result = remaining_loaves\n    return result"}
{"output": "def solution():\n    \n    red_tulips_per_row = 6\n    blue_tulips_per_row = 8\n    total_red_tulips = 36\n    total_blue_tulips = 24\n    total_flowers = (total_red_tulips // red_tulips_per_row) + (total_blue_tulips // blue_tulips_per_row)\n    result = total_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of raisins in the bag\n    total_raisins = 27\n\n    # Calculate the amount of raisins per batch\n    raisins_per_batch = 3/4\n\n    # Calculate the total amount of raisins used per batch\n    total_raisins_per_batch = raisins_per_batch / total_raisins\n\n    # Calculate the number of batches that can be made with the remaining raisins\n    num_batches = total_raisins / total_raisins_per_batch\n\n    # Round up to the nearest integer\n    num_batches = int(num_batches) + (num_batches % 1 > 0)\n\n    # return the result\n    result = num_batches\n    return result"}
{"output": "def solution():\n    \n    daily_consumption = 12\n    new_hourly_consumption = 2\n    kilowatt_rate = 1.5\n    daily_consumption_after_addition = daily_consumption - new_hourly_consumption\n    difference = daily_consumption_after_addition - kilowatt_rate\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the time per person to paint half a house\n    num_people = 5\n    time_per_person = 5 / 2\n\n    # Calculate the total time to paint the whole house\n    total_time = num_people * time_per_person\n\n    # Display the total time in hours\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sofas Ophelia has\n    ophelia_sofas = 20\n\n    # Calculate the number of sofas Jenna has\n    jenna_sofas = 3 * ophelia_sofas\n\n    # Calculate the number of sofas they each have\n    sofas_per_person = ophelia_sofas - 2\n    chairs_per_person = jenna_sofas / 2\n\n    # Calculate the total number of sofas and chairs they have\n    total_sofas = (ophelia_sofas + jenna_sofas) * sofas_per_person\n\n    # Display the total number of sofas and chairs\n    result = total_sofas\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the CD and the total amount paid\n    CD_PRICE = 4\n    TOTAL_PAID = 48\n\n    # Calculate the number of CDs Tom can buy with his total amount paid\n    num_cds = (TOTAL_PAID - CD_PRICE) / CD_PRICE\n\n    # Calculate the number of CDs Tom can buy without his headphone set\n    num_non_headphone_sets = int(num_cds)\n\n    # Calculate the number of CDs Tom can buy with the non-headphone set\n    num_non_headphone_sets = num_non_headphone_sets + 1\n\n    # Display the number of CDs Tom can buy with the non-headphone set\n    result = num_non_headphone_sets\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Josh spent working out each week\n    weekly_hours = 4\n\n    # Calculate the total number of hours Josh spent working out in the first two weeks\n    first_two_weeks_hours = 5 * 2\n\n    # Calculate the total number of hours Josh spent working out in the first two weeks\n    first_two_weeks_hours = 5 * 2\n\n    # Calculate the total number of hours Josh spent working out in the last week\n    last_two_weeks_hours = 6\n\n    # Calculate the total number of hours Josh spent working out across the 8 weeks\n    total_hours = (weekly_hours * 8) + first_two_weeks_hours + last_two_weeks_hours\n\n    # Display the total number of hours\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of passengers\n    passengers = 48\n\n    # Calculate the number of passengers who got off on the first stop\n    passengers -= 8\n\n    # Calculate the number of passengers who got into the bus after the first stop\n    passengers += 5 * 8\n\n    # Calculate the number of passengers who got off on the second stop\n    passengers -= 21\n\n    # Calculate the number of passengers who got on the second stop\n    passengers += 3 * 21\n\n    # Display the total number of passengers\n    result = passengers\n    return result"}
{"output": "def solution():\n    \n    jame_age_in_5_years = 27\n    cousin_age_in_8_years = (2 * jame_age_in_5_years) - 5\n    combined_age_in_5_years = jame_age_in_5_years + cousin_age_in_8_years\n    years_to_collec_age = combined_age_in_5_years - 5\n    result = years_to_collec_age\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the computer\n    computer_cost = 100\n\n    # Calculate the cost of the printer\n    printer_cost = computer_cost - 400\n\n    # Calculate the total cost of the computer, monitors and printer\n    total_cost = computer_cost + printer_cost\n\n    # Calculate the cost of one monitor\n    one_monitor_cost = total_cost / 2\n\n    # Display the cost of one monitor\n    result = one_monitor_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of shells brought by the boys\n    boys_shells = 60 * 2\n\n    # Calculate the total number of shells brought by the girls\n    girls_shells = boys_shells + 4 * 60\n\n    # Calculate the number of seashells brought by each girl\n    seashells_per_girl = girls_shells / 20\n\n    result = seashells_per_girl\n    return result"}
{"output": "def solution():\n    \n    # Define the number of candies George has left\n    george_left = 3\n\n    # Calculate the number of candies Nick had initially\n    nick_initial = 2 * george_initial\n\n    # Calculate the number of candies Nick has after eating and having some left\n    nick_total = nick_initial - 5 + george_left\n\n    # Display the number of candies Nick has\n    result = nick_total\n    return result"}
{"output": "def solution():\n    \n    # Define Chenny's age\n    chenny_age = 10\n\n    # Calculate Alyana's age\n    alyana_age = chenny_age - 4\n\n    # Calculate Anne's age\n    anne_age = alyana_age + 2\n\n    # Display Anne's age\n    result = anne_age\n    return result"}
{"output": "def solution():\n    \n    # Define the thickness of each book\n    book1_thickness = 31\n    book2_thickness = 50\n    book3_thickness = book2_thickness - 5\n    book4_thickness = book1_thickness * 2\n\n    # Calculate the total thickness of the four books\n    total_thickness = book1_thickness + book2_thickness + book3_thickness + book4_thickness\n\n    # Display the total thickness\n    result = total_thickness\n    return result"}
{"output": "def solution():\n    \n    # Define the number of vlogs Emma can make each week\n    week1_vlogs = 18\n    week2_vlogs = 21\n    week3_vlogs = 15\n\n    # Calculate the total number of vlogs Emma can make each month\n    total_vlogs = week1_vlogs + week2_vlogs + week3_vlogs\n\n    # Calculate the number of vlogs Emma needs to complete each month\n    vlogs_per_month = 72\n    vlogs_to_complete = total_vlogs / vlogs_per_month\n\n    # Display the number of vlogs Emma needs to complete each month\n    result = vlogs_to_complete\n    return result"}
{"output": "def solution():\n    \n    # Define the bill amount and the percentage of the bill that is 20% tip\n    bill_amount = 50\n    tip_percentage = 20\n\n    # Calculate the amount of the additional 20% tip\n    tip_amount = bill_amount * (tip_percentage / 100)\n\n    # Calculate the total amount paid\n    total_amount = bill_amount + tip_amount\n\n    # Display the total amount paid\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money\n    initial_money = 18\n\n    # Add the $5 to the share\n    initial_money += 5\n\n    # Add the $10 to the share\n    initial_money += 10\n\n    # Subtract the amount spent\n    remaining_money = initial_money - 8\n\n    # Triple the remaining amount\n    final_money = remaining_money * 3\n\n    # Display the final amount of money\n    result = final_money\n    return result"}
{"output": "def solution():\n    \n    # Define the target savings amount\n    target_savings = 11205\n\n    # Calculate the amount saved per day in the first half of the month\n    first_half_savings = target_savings / 4\n\n    # Calculate the amount saved per day in the second half of the month\n    second_half_savings = first_half_savings * 2\n\n    # Display the amount saved per day in the second half of the month\n    result = second_half_savings\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each fruit\n    APPLE_PRICE = 1.5\n    ORANGE_PRICE = 0.8\n    PEACH_PRICE = 0.75\n\n    # Define the number of each fruit purchased\n    num_apples = 3\n    num_oranges = 5\n    num_peaches = 6\n\n    # Calculate the total cost of the fruit\n    total_cost = (num_apples * APPLE_PRICE) + (num_oranges * ORANGE_PRICE) + (num_peaches * PEACH_PRICE)\n\n    # Calculate the change\n    change = 20 - total_cost\n\n    # Display the change\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the prices for each task\n    JAIRUS_PRICE = 0.8\n    JENNY_PRICE = 0.5\n\n    # Define the number of tasks each person finished\n    num_tasks = 20\n\n    # Calculate the total earnings for each person\n    jairus_earnings = jAIRUS_PRICE * num_tasks\n    jenny_earnings = JENNY_PRICE * num_tasks\n\n    # Calculate the difference in earnings between Jairus and Jenny\n    earnings_difference = jairus_earnings - jenny_earnings\n\n    # Display the difference in earnings\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    total_dollars = 100\n    jeff_ratio = 4\n    brad_ratio = 1\n    total_ratio = jeff_ratio + brad_ratio\n    jeff_dollars = (jeff_ratio / total_ratio) * total_dollars\n    result = jeff_dollars\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Jeff walks each day\n    daily_distance = 3 * 2\n\n    # Calculate the total distance Jeff has to work in a week\n    weekly_distance = daily_distance * 5\n\n    # Display the total distance Jeff walks in a week\n    result = weekly_distance\n    return result"}
{"output": "def solution():\n    \n    full_letters = 2 * 2\n    half_letters = full_letters / 2\n    total_letters = full_letters + half_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    num_families = 3\n    num_other_families = 3\n    num_round_calls = 4\n\n    # Calculate the total number of families that will be notified during the fourth round of calls\n    total_families = num_families + (num_other_families * num_round_calls)\n    result = total_families\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of Mark's final weight and the weight lost per month\n    final_weight = 70\n    weight_lost_per_month = 10\n\n    # Calculate the total weight lost over 3 months\n    total_weight_lost = weight_lost_per_month * 3\n\n    # Calculate the initial weight of Mark\n    initial_weight = final_weight - total_weight_lost\n\n    # return the result\n    result = initial_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toys in James's play set\n    james_toys = 80\n\n    # Calculate the number of toys in Jonathan's play set\n    jonathan_toys = james_toys * 5\n\n    # Calculate the number of toys Jonathan currently has\n    jonathan_current_toys = jonathan_toys + 2\n\n    # Display the number of toys Jonathan currently has\n    result = jonathan_current_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    NOTEBOOK_PRICE = 1.5\n    PEN_PRICE = 0.25\n    COMPUTER_PRICE = 12\n    GEOGRAPHY_PRICE = 10\n\n    # Define the number of each item to be purchased\n    num_notebooks = 5\n    num_pens = 2\n    num_geometries = 1\n\n    # Calculate the total cost of the items before discount\n    total_cost = (num_notebooks * NOTEBOOK_PRICE) + (num_pens * PEN_PRICE) + (num_geometries * GEOGRAPHY_PRICE)\n\n    # Calculate the discount amount\n    discount = total_cost * 0.1\n\n    # Calculate the total cost after discount\n    total_cost -= discount\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the friends\n    hamburger_price = 4\n    fries_price = 0.30\n    fruit_drink_price = 2\n\n    # Calculate the total cost of the friends\n    total_cost = (5 * hamburger_price) + (10 * fries_price) + (5 * fruit_drink_price)\n\n    # Calculate the change Carly will get back\n    change = 50 - total_cost\n\n    # return the result\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Calculate the commission earned from selling goods\n    goods_commission = 0.3 * 2500\n\n    # Calculate the commission earned from selling goods over $1000\n    goods_commission_over_1000 = 2500 * 1.1\n\n    # Calculate the total commission earned\n    total_commission = goods_commission + goods_commission_over_1000\n\n    # Display the total commission earned\n    result = total_commission\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cases and bottles per case\n    cases = 2\n    bottles_per_case = 24\n\n    # Define the number of guests and bottles per guest\n    guests = 70\n    bottles_per_guest = 2\n\n    # Calculate the total number of bottles needed\n    total_bottles = cases * bottles_per_case + guests * bottles_per_guest\n\n    # Calculate the additional bottles needed\n    additional_bottles = total_bottles - total_bottles\n\n    # Display the additional bottles needed\n    result = additional_bottles\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes Ray to swim a mile on a cold day\n    cold_time = 16\n\n    # Define the time it takes Ray to swim a mile on a warm day\n    warm_time = 2 + 2 * cold_time\n\n    # Calculate the difference in time between the two days\n    time_difference = warm_time - cold_time\n\n    # return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    hourly_rate = 2\n    hours_per_day = 5\n    days_per_week = 4\n    total_pay = hourly_rate * hours_per_day * days_per_week\n    weeks_to_save = 80 / total_pay\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the foot-long fish sub and the six-inch cold-cut combo sub\n    foot_long_cost = 40\n    combo_cost = 3 * foot_long_cost\n\n    # Calculate the total cost of the lunch sub\n    total_cost = foot_long_cost + combo_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_buttons = 21\n    two_holes_per_button = 2\n    four_holes_per_button = 4\n    total_holes = (total_buttons - 7) * two_holes_per_button + (total_buttons - 7) * four_holes_per_button\n    result = total_holes\n    return result"}
{"output": "def solution():\n    \n    # Define the size of Timothy's locker\n    timothy_size = 24\n\n    # Calculate the size of Zack's locker\n    zack_size = timothy_size / 2\n\n    # Calculate the size of Peter's locker\n    peter_size = zack_size / 4\n\n    # Display the size of Peter's locker\n    result = peter_size\n    return result"}
{"output": "def solution():\n    \n    # Define the daily recommended cups of coffee\n    daily_recommendation = 4\n\n    # Calculate the amount of coffee Octavia drinks\n    octavia_cups = daily_recommendation / 2\n\n    # Calculate the amount of coffee Juan drinks\n    juan_cups = octavia_cups * 10\n\n    # Calculate the number of cups Juan needs to reduce his daily coffee intake\n    cups_to_reduce = juan_cups - daily_recommendation\n\n    # Display the number of cups to reduce\n    result = cups_to_reduce\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cages of each type of rodent\n    hamster_cages = 3\n    guinea_cages = 3\n\n    # Calculate the total number of hamster cages\n    hamster_total = hamster_cages * 10\n\n    # Calculate the total number of guinea pig cages\n    guinea_total = guinea_cages * 5\n\n    # Calculate the total number of rodents\n    total_rodents = hamster_total + guinea_total\n\n    # Display the total number of rodents\n    result = total_rodents\n    return result"}
{"output": "def solution():\n    \n    mark_weight = 150\n    susan_weight = mark_weight - 20\n    bob_weight = 2 * susan_weight\n    total_weight = mark_weight + susan_weight + bob_weight\n    num_friends = 3\n    avg_weight = total_weight / num_friends\n    result = avg_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial angle of the pyramid\n    initial_angle = 32\n\n    # Calculate the distance the sun moves in 10 hours\n    distance_moved = 5 * 10\n\n    # Calculate the final angle of the pyramid\n    final_angle = initial_angle + distance_moved\n\n    # Display the final angle of the pyramid\n    result = final_angle\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sons and the age difference\n    num_sons = 2\n    age_diff = 4\n\n    # Calculate the total number of candles\n    total_candles = (12 - age_diff) * num_sons\n\n    # Calculate the total cost of the candles\n    total_cost = total_candles * 3\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Judy's reading speed in pages per minute\n    PAGES_PER_MINUTE = 2 / 1.5\n\n    # Calculate the total number of pages Judy read in the first week\n    first_week_pages = 15 * 7 * PAGES_PER_MINUTE\n\n    # Calculate the total number of pages Judy read in the second week\n    second_week_pages = 100\n\n    # Calculate the total number of pages Judy read in two weeks\n    total_pages = first_week_pages + second_week_pages\n\n    # Display the total number of pages Judy read\n    result = total_pages\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sandwiches\n    sandwiches = 12\n\n    # Calculate the number of sandwiches Cody ate\n    cody_sandwiches = sandwiches // 3\n\n    # Calculate the number of sandwiches Trevor ate\n    trevor_sandwiches = sandwiches // 4\n\n    # Calculate the total number of sandwiches eaten\n    total_sandwiches_eaten = cody_sandwiches + trevor_sandwiches\n\n    # Calculate the number of sandwiches left\n    sandwiches_left = sandwiches - total_sandwiches_eaten\n\n    # Display the number of sandwiches left\n    result = sandwiches_left\n    return result"}
{"output": "def solution():\n    \n    # Define Shiloh's current age and the number of years in the future\n    shiloh_age = 44\n    future_years = 7\n\n    # Calculate Shiloh's age in the future\n    shiloh_future_age = shiloh_age + future_years\n\n    # Calculate Shiloh's nephew's age in the future\n    nephew_future_age = shiloh_future_age / 3\n\n    # Calculate Shiloh's nephew's current age\n    nephew_age = nephew_future_age - future_years\n\n    # Display Shiloh's nephew's age\n    result = nephew_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Sharon lost\n    initial_money = 5\n\n    # Calculate the amount of money Sharon received for each of the first three teeth\n    first_three_money = initial_money + (1 * 3)\n\n    # Calculate the amount of money Sharon received for each of the last two teeth Sharon lost\n    last_two_teeth_money = (1 * 2) + (1 * 2 * 2)\n\n    # Calculate the total amount of money Sharon received\n    total_money_received = first_three_money + last_two_teeth_money\n\n    # Calculate the amount of money Sharon left\n    money_left = initial_money + total_money_received\n\n    # return the result\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    richie_goals = 80\n    mark_goals = richie_goals - 20\n    anna_goals = richie_goals - 45\n    total_goals = richie_goals + mark_goals + anna_goals\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money made by Liam and the price of each lemonade\n    liam_money = 63\n    lemonade_price = 4\n\n    # Calculate the total amount of money made by Mitchell\n    mitchell_money = 21 * lemonade_price\n\n    # Calculate the difference in money made between Mitchell and Liam\n    difference = mitchell_money - liam_money\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Peter has\n    initial_money = 70\n\n    # Calculate the amount of money Peter spent on wooden action figures\n    wooden_cost = 5 * 5\n\n    # Calculate the amount of money Peter spent on plastic action figures\n    plastic_cost = 2 * (initial_money - wooden_cost)\n\n    # Calculate the total number of action figures Peter will have\n    total_figures = wooden_cost + plastic_cost\n\n    # return the result\n    result = total_figures\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the kitten\n    total_cost = 200 + (3 * 20) + (4 * 12)  # Leah spent $200 on the fly, 3 vaccines cost $20 each, and 4 vases cost $12 each\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roses Ford grows per week\n    roses_per_week = 40\n\n    # Define the number of roses ordered by each shop\n    roses_per_shop = [20, 15, 30]\n\n    # Calculate the total number of roses ordered in a month\n    total_roses = sum(roses_per_shop) * 4\n\n    # Calculate the number of roses that Ford lacks\n    roses_lack = total_roses - roses_per_shop\n\n    # return the result\n    result = roses_lack\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount in Katina's savings account\n    initial_amount = 3000\n\n    # Define the amount removed each month\n    monthly_removed = 100\n\n    # Calculate the total amount removed over 2 years\n    total_removed = monthly_removed * 12 * 2\n\n    # Calculate the remaining amount in the account after 2 years\n    remaining_amount = initial_amount - total_removed\n\n    # Display the remaining amount\n    result = remaining_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and revenue per sandwich\n    COST_PER_LOAF = 3.00\n    REVENUE_PER_SANDWICH = 7.00\n\n    # Define the number of sandwiches made\n    sandwiches_made = 10\n\n    # Calculate the total revenue\n    revenue = sandwiches_made * REVENUE_PER_SANDWICH * 10\n\n    # Calculate the total cost\n    cost = 30.00\n\n    # Calculate the net profit\n    net_profit = revenue - cost\n\n    # Display the net profit\n    result = net_profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes and crayons per box\n    boxes = 3\n    crayons_per_box = 64\n\n    # Calculate the total number of crayons\n    total_crayons = boxes * crayons_per_box\n\n    # Calculate the number of small pieces of crayons\n    small_pieces = 8\n\n    # Calculate the total number of muffin pieces\n    total_muffin_pieces = total_crayons // small_pieces + (1 if total_crayons % small_pieces > 0 else 0)\n\n    # Calculate the total amount of money Kate can make\n    total_money = total_muffin_pieces * 1.5\n\n    # Display the total amount of money Kate can make\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per square foot of the new carpet\n    COST_PER_SQ_FT = 12 + 2\n\n    # Define the cost per square foot of the old carpet\n    COST_PER_SQ_FT_1 = 4\n\n    # Define the cost per square foot of the new carpet\n    COST_PER_SQ_FT_2 = 34\n\n    # Calculate the total cost of the new carpet\n    total_cost = (COST_PER_SQ_FT * 18) + (COST_PER_SQ_FT_1 * 12) + (COST_PER_SQ_FT_2 * 18) + (COST_PER_SQ_FT_2 * 12)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of birds seen\n    total_birds = 50 + 50 + 120 + 120 + 90\n\n    # Calculate the average number of birds seen per day\n    average_birds = total_birds / 7\n\n    # Display the average number of birds seen per day\n    result = average_birds\n    return result"}
{"output": "def solution():\n    \n    starting_value = 20\n    half_value = starting_value / 2\n    final_value = starting_value + half_value - 5 + 12\n    result = final_value\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cards the boy has\n    boy_cards = 5\n\n    # Calculate the number of cards the brother has\n    brother_cards = boy_cards - 3\n\n    # Calculate the total number of cards they have together\n    total_cards = boy_cards + brother_cards\n\n    # Display the total number of cards\n    result = total_cards\n    return result"}
{"output": "def solution():\n    \n    # Define the initial temperature and the percentage decrease\n    initial_temp = 468\n    percentage_decrease = 100 - initial_temp\n\n    # Calculate the new temperature after the percentage decrease\n    new_temp = initial_temp * (1 - percentage_decrease/100)\n\n    # Return the result\n    result = new_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each movie in minutes\n    MOVIE_1_LENGTH = 90\n    MOVIE_2_LENGTH = 120\n\n    # Calculate the total length of time it takes to watch both movies in minutes\n    total_length = MOVIE_1_LENGTH + MOVIE_2_LENGTH\n\n    # Display the total length in minutes\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the value of Herb's house and the percentage decrease\n    HERB_VALUE = 76000\n    PERCENT_DECREASE = 0.3\n\n    # Calculate the value of Juan's house\n    juan_value = HERB_VALUE * (1 - PERCENT_DECREASE)\n\n    # Calculate the total value of both houses\n    total_value = juan_value + HERB_VALUE\n\n    # Display the total value\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    cups_per_dozen = 12\n    dishes_per_dozen = 2 * cups_per_dozen\n    cups_brought = 40\n    dishes_brought = cups_brought + 20\n    total_cups = cups_brought / cups_per_dozen\n    total_dishes = dishes_brought / dishes_per_dozen\n    total_utensils = total_cups + total_dishes\n    result = total_utensils\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes and the cost per box\n    boxes = 2\n    box_cost = 100\n\n    # Calculate the total cost before discount\n    total_cost = boxes * box_cost\n\n    # Calculate the discount amount\n    discount = total_cost * 0.1\n\n    # Calculate the total cost after discount\n    total_cost_after_discount = total_cost - discount\n\n    # Calculate the cost per pair of contacts\n    cost_per_pair = total_cost_after_discount / boxes\n\n    # Display the cost per pair of contacts\n    result = cost_per_pair\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly rate and the number of hours worked each day\n    hourly_rate = 10\n    jill_saturday = 2\n    jill_sunday = 1\n    john_saturday = 2 * jill_saturday\n    john_sunday = 3 * jill_sunday\n\n    # Calculate John's earnings\n    john_earnings = john_saturday * hourly_rate\n\n    # Calculate Jill's earnings\n    jill_earnings = jill_sunday * hourly_rate\n\n    # Calculate the difference in earnings\n    earnings_difference = john_earnings - jill_earnings\n\n    # return the result\n    result = earnings_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water Hannah needs to drink per calorie\n    water_per_calorie = 100\n\n    # Calculate the total amount of water Hannah needs to drink\n    total_water = (2 * 500) + (1 * 600) * water_per_calorie\n\n    # Display the total amount of water Hannah needs to drink\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of jelly beans in the jar\n    total_jelly_beans = 4500\n\n    # Calculate the number of blue jelly beans\n    blue_jelly_beans = total_jelly_beans / 0.9\n\n    # Calculate the number of red jelly beans\n    red_jelly_beans = blue_jelly_beans - 1\n\n    # Calculate the number of green jelly beans\n    green_jelly_beans = blue_jelly_beans * 1.1\n\n    # Calculate the difference between the number of green and red jelly beans\n    difference = green_jelly_beans - red_jelly_beans\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial typing speed and the number of words added\n    initial_speed = 47\n    words_added = 5\n\n    # Calculate the new typing speed after testing\n    new_speed = initial_speed + words_added\n\n    # Calculate the average of the three measurements\n    average_speed = (new_speed * 3) / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    # Calculate the weight of Cheerios eaten in 5 weeks\n    weight_eaten_5_weeks = 1.25 * 5  # Martin eats 1.25 pounds/week for 5 weeks\n\n    # Calculate the weight of donuts eaten in 5 weeks\n    weight_eaten_5_weeks = 1.75 * 5  # Martin eats 1.75 pounds/week for 5 weeks\n\n    # Calculate the difference in weight between the two breakfast options\n    weight_difference = weight_eaten_5_weeks - weight_eaten_5_weeks\n    result = weight_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of invited people and the number of friends each person will invite\n    invited_people = 100\n    friends_per_person = 2\n\n    # Calculate the total number of friends to invite\n    total_friends = invited_people * friends_per_person\n\n    # Calculate the total number of people who will attend\n    total_attendees = invited_people + 10 + 8\n\n    # Calculate the total number of seats needed\n    total_seats = total_attendees * 100\n\n    # Display the total number of seats needed\n    result = total_seats\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the first dog\n    dog1_weight = 10\n\n    # Define the weight of the second dog\n    dog2_weight = dog1_weight * 2\n\n    # Define the weight of the third dog\n    dog3_weight = dog2_weight / 4\n\n    # Define the weight of the fourth dog\n    dog4_weight = dog3_weight * 4\n\n    # Define the weight of the mastiff\n    mastiff_weight = dog4_weight * 44\n\n    # Calculate the total weight of all the dogs\n    total_weight = dog1_weight + dog2_weight + dog3_weight + dog4_weight + mastiff_weight\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the boots\n    amazon_price = 16\n    amazon_shipping = 4\n    ebay_price = 13\n    ebay_shipping = 2 * amazon_shipping\n\n    # Calculate the difference in price\n    price_difference = ebay_price - (amazon_price + amazon_shipping)\n\n    # return the result\n    result = price_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial height of the beanstalk\n    initial_height = 4\n\n    # Define the height of the second-story window\n    second_story_height = 20\n\n    # Calculate the daily height of the beanstalk\n    daily_height = initial_height * 2\n\n    # Calculate the number of days it will take to reach the second-story window\n    days = second_story_height / daily_height\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    mushrooms_per_cup = 100\n    protein_per_cup = 3\n    mushrooms_per_day = 200\n    days_per_week = 7\n    total_mushrooms = mushrooms_per_day * days_per_week\n    total_protein = protein_per_cup * total_mushrooms\n    result = total_protein\n    return result"}
{"output": "def solution():\n    \n    # Define Jerry's current age\n    jerry_age = 5\n\n    # Calculate Jerry's age 5 years ago\n    jerry_age_5_years_ago = jerry_age - 5\n\n    # Calculate Jerry's age in 3 years\n    jerry_age_in_3_years = jerry_age_5_years_ago + 3\n\n    # Display Jerry's age in 3 years\n    result = jerry_age_in_3_years\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the dental work\n    total_cost = 2 * 2000 + 500  # 2 implants with a base price of $2000 each and 1 crown feature costs an extra $500\n\n    # Calculate the amount of money George has left after paying for the dental work\n    remaining_money = total_cost - 600  # George has $600 in a deposit\n\n    # Calculate the number of hours George needs to work to pay off the remaining money\n    hours_needed = remaining_money / 15  # George makes $15 per hour at work\n\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    # Let x be the measure of the smallest angle\n    # Then the second angle is 2x and the third angle is 3x\n    # The sum of the three angles is 180 degrees\n    # Therefore, x + 2x + 3x = 180\n    # Simplifying the equation, we get:\n    # 3x = 180\n    # Solving for x, we get:\n    # x = 60\n\n    # Therefore, the measure of the largest angle is 60 degrees\n    result = 60\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each gumball\n    QUARTER_PRICE = 0.25\n    DIME_PRICE = 0.10\n    NICKEL_PRICE = 0.05\n    PENNY_PRICE = 0.01\n\n    # Define the number of each gumball\n    num_quarters = 8\n    num_dimes = 6\n    num_nickels = 14\n    num_pennies = 15\n\n    # Calculate the total cost of the gumballs\n    total_cost = (num_quarters * QUARTER_PRICE) + (num_dimes * DIME_PRICE) + (num_nickels * NICKEL_PRICE) + (num_pennies * PENNY_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    dogs = 5\n    cats = 2\n    birds = 10\n    legs_per_dog = 4\n    legs_per_cat = 4\n    legs_per_bird = 4\n    total_legs = (dogs * legs_per_dog) + (cats * legs_per_cat) + (birds * legs_per_bird)\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    initial_weight = 8\n    increase_percent = 50\n    new_weight = initial_weight * (1 + increase_percent / 100)\n    final_weight = new_weight - 2\n    result = final_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of games\n    games = 5\n\n    # Calculate the total number of games Steve bought in the first year\n    total_first_year = games * 12\n\n    # Calculate the total number of games Steve bought in the second year\n    total_second_year = total_first_year + 2 * 12\n\n    # Calculate the total number of games Steve bought in the third year\n    total_third_year = 4 * 12\n\n    # Calculate the total number of games Steve bought in Christmas\n    total_christmas = 5 * 3\n\n    # Calculate the total number of games Steve has after 3 years\n    total_games = total_first_year + total_second_year + total_third_year + total_christmas\n\n    # return the result\n    result = total_games\n    return result"}
{"output": "def solution():\n    \n    # Calculate the speed of the plane\n    speed = 1200 / 3\n\n    # Calculate the time it would take to travel the additional 2000 miles at the same speed\n    additional_time = 2000 / speed\n\n    # Display the additional time\n    result = additional_time\n    return result"}
{"output": "def solution():\n    \n    # Calculate the amount of chocolates made by Marissa in one hour\n    marissa_hourly_chocolates = (3/4) * 120\n\n    # Calculate the total amount of chocolates made by both together in 12 hours\n    total_chocolates = 120 + marissa_hourly_chocolates * 12\n\n    # Display the total amount of chocolates made\n    result = total_chocolates\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Howard had\n    initial_money = 100\n\n    # Calculate the amount of money Howard spent on Tuesday\n    tuesday_money = 2 * 8\n\n    # Calculate the amount of money Howard spent on Wednesday\n    wednesday_money = 4 * tuesday_money\n\n    # Calculate the total amount of money Howard spent\n    total_money = monday_money + tuesday_money + wednesday_money\n\n    # Calculate the amount of money Howard has left\n    money_left = initial_money - total_money\n\n    # Display the amount of money Howard has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total earnings from selling lemonade in the first 4 hours\n    earnings_first_4_hours = 15 * 0.50 * 4\n\n    # Calculate the total earnings from selling lemonade in the next 2 hours\n    earnings_next_2_hours = 10 * 0.60 * 2\n\n    # Calculate the total earnings from selling lemonade for 6 hours\n    total_earnings = earnings_first_4_hours + earnings_next_2_hours\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Jeremy drives each month\n    jeremy_miles_per_month = 400\n\n    # Define the number of rotations per month\n    jeremy_rotations_per_month = 725\n\n    # Calculate the total number of rotations needed\n    total_rotations = jeremy_miles_per_month / jeremy_rotations_per_month\n\n    # Calculate the total number of years needed to complete all the rotations\n    total_years = total_rotations / 10000\n\n    # Display the total number of years needed\n    result = total_years\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the shampoo in cents\n    shampoo_cost = 2400\n\n    # Calculate the total number of washings needed\n    total_washings = 120\n\n    # Calculate the total number of pumps needed\n    total_pumps = total_washings / 120\n\n    # Calculate the cost per pump in cents\n    cost_per_pump = shampoo_cost / total_pumps\n\n    # Display the cost per pump in cents\n    result = cost_per_pump\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Joe has\n    initial_money = 50\n\n    # Calculate the discount amount\n    discount = initial_money * 0.3\n\n    # Calculate the final price of the shirt and shorts\n    final_price = 25 - discount + 35\n\n    # Calculate the total amount of money Joe will have after the purchase\n    total_money = initial_money - final_price\n\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of croissants per dozen\n    CROISSANTS_PER_DOZEN = 12\n\n    # Define the amount of butter needed per croissant\n    BUTTER_PER_CROISSANT = 0.25\n\n    # Calculate the total amount of croissants to be made in a week\n    total_croissants = 4 * CROISSANTS_PER_DOZEN * 7\n\n    # Calculate the total amount of butter needed\n    total_butter = total_croissants * BUTTER_PER_CROISSANT\n\n    # Display the total amount of butter needed\n    result = total_butter\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per meter of repaves and the length of Monica's street\n    COST_PER_METER = 198\n    MONICA_LENGTH = 150\n\n    # Calculate the cost to repave Lewis' street\n    lewis_length = 490\n    lewis_cost = LWIS_LENGTH * COST_PER_METER\n\n    # Calculate the difference in cost between the two scenarios\n    cost_difference = lewis_cost - monica_cost\n\n    # Display the cost difference\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    initial_funding = 100000\n    first_5_months = 5\n    final_funding = initial_funding * 1.5 * first_5_months\n    total_cost = initial_funding + final_funding\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of meat consumed by the team\n    meat_consumed = 6 + 8*8 + 1*16  # the first player ate a 6-ounce steak, 8 beef tips, each 1-pound steak, and the fourth and fifth players ordered vegetarian meals\n    result = meat_consumed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of members and posts per day\n    num_members = 1000\n    posts_per_day = 3\n\n    # Calculate the total number of posts in March\n    total_posts = num_members * posts_per_day * 31\n\n    # Display the total number of posts\n    result = total_posts\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of water used in a week\n    total_water_per_week = 2 * 20\n\n    # Calculate the total amount of water used in a year\n    total_water_per_year = total_water_per_week * 52\n\n    # Calculate the total cost of water for laundry in a year\n    cost_per_gallon = 0.15\n    total_cost = total_water_per_year * cost_per_gallon\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the fish and food\n    fish_price = 0.5\n    food_price = 2.0\n\n    # Calculate the total cost of the rocks\n    rocks_cost = 2 * 2.5\n\n    # Calculate the total cost of the coral\n    coral_cost = 3 * 2\n\n    # Calculate the total cost of the fish\n    fish_total_cost = 20 * fish_price\n\n    # Calculate the total cost of the food\n    food_cost = 20 * food_price\n\n    # Calculate the total cost of all the items\n    total_cost = 10.0 + rocks_cost + coral_cost + fish_total_cost + food_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial height of the beanstalk\n    height = 3\n\n    # Double the height of the beanstalk after the first week\n    height *= 2\n\n    # Grow 4 inches in the third week\n    height += 4\n\n    # Display the final height of the beanstalk\n    result = height\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of meat sold per hour and the number of hours worked per day\n    meat_sold_per_hour = 15\n    hours_per_day = 10\n\n    # Calculate the total amount of meat sold per day\n    total_meat_sold_per_day = meat_sold_per_hour * hours_per_day\n\n    # Calculate the number of days it will take to sell the meat from Bill's bull\n    bull_weight = 750\n    days_to_sell_bull = bull_weight / total_meat_sold_per_day\n\n    result = days_to_sell_bull\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and seats per row\n    rows = 4\n    seats_per_row = 18\n\n    # Calculate the total number of seats in the auditorium\n    total_seats = rows * seats_per_row\n\n    # Calculate the number of seats occupied by the administrators\n    admin_seats = total_seats // 4\n\n    # Calculate the number of remaining seats\n    remaining_seats = total_seats - admin_seats\n\n    # Calculate the number of seats occupied by the parents\n    parent_seats = remaining_seats // 3\n\n    # Calculate the number of seats occupied by students\n    student_seats = remaining_seats - parent_seats\n\n    # Display the number of students\n    result = student_seats\n    return result"}
{"output": "def solution():\n    \n    # Define the number of street lights per pole and the total number of intersections\n    street_lights_per_pole = 4\n    total_intersections = 4\n\n    # Calculate the total number of streetlights on the road\n    total_streetlights = street_lights_per_pole * total_intersections\n\n    # Calculate the number of streetlights not working\n    streetlights_not_working = 20\n\n    # Calculate the total number of streetlights on the road\n    total_streetlights_working = total_streetlights - streetlights_not_working\n\n    # Calculate the number of functioning street lights\n    functioning_streetlights = total_streetlights_working + streetlights_needed\n\n    # return the result\n    result = functioning_streetlights\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times each DVD can be played before it breaks\n    DVD1_TIMES = 356\n    DVD2_TIMES = 135\n\n    # Calculate the total number of times both DVDs can be played before they break\n    total_time = DVD1_TIMES + DVD2_TIMES\n\n    # Display the total number of times both DVDs can be played before they break\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of weeks and hours per week\n    weeks = 6\n    hours_per_week = 2 * 2\n\n    # Calculate the total number of hours\n    total_hours = weeks * hours_per_week\n\n    # Calculate the total cost of the sessions\n    total_cost = total_hours * 125\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of gum pieces\n    initial_pieces = 20\n\n    # Calculate the number of gum pieces eaten during the day\n    gum_pieces_eaten = 2 * 8 + 1 + 1\n\n    # Calculate the number of gum pieces remaining\n    gum_pieces_remaining = initial_pieces - gum_pieces_eaten\n\n    # Calculate the number of gum pieces given to Jim's sister\n    gum_pieces_given = gum_pieces_remaining / 2\n\n    # Calculate the number of gum pieces left at the end of the day\n    gum_pieces_left = gum_pieces_remaining - gum_pieces_given\n\n    # return the result\n    result = gum_pieces_left\n    return result"}
{"output": "def solution():\n    \n    # Define the age difference between Charmaine and 12 years\n    age_difference = 12\n\n    # Calculate Charmaine's current age\n    current_age = 16 + age_difference\n\n    # Calculate Charmaine's age in 4 years\n    future_age = current_age + 4\n\n    # Display Charmaine's future age\n    result = future_age\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total cost of the baseball coach\n    baseball_cost = 9 * 3\n\n    # Calculate the total cost of the basketball coach\n    basketball_cost = 8 * 14\n\n    # Calculate the difference in cost between the basketball and baseball coach\n    cost_difference = basketball_cost - baseball_cost\n\n    # return the result\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rows and flowers per row\n    rows = 10\n    flowers_per_row = 20\n\n    # Calculate the total number of flowers\n    total_flowers = rows * flowers_per_row\n\n    # Calculate the number of flowers with bloomed flowers\n    bloomed_flowers = total_flowers * (4/5)\n\n    # Display the number of flowers with bloomed flowers\n    result = bloomed_flowers\n    return result"}
{"output": "def solution():\n    \n    # Define the internet connection speed in Kb per second\n    Kb_PER_SECOND = 20\n\n    # Define the total number of Kb in Mb\n    TOTAL_Kb = 1000\n\n    # Calculate the total internet connection speed in Mb per hour\n    Mb_PER_HOUR = (TOTAL_Kb / 1000) * Kb_PER_SECOND\n\n    # Display the total internet connection speed in Mb per hour\n    result = Mb_PER_HOUR\n    return result"}
{"output": "def solution():\n    \n    first_three_days = 10 * 3\n    remaining_days = 7 - 3\n    remaining_cars = (10 - 4) * remaining_days\n    total_cars = first_three_days + remaining_cars\n    result = total_cars\n    return result"}
{"output": "def solution():\n    # Convert Adam's height from inches to feet\n    adam_height = 40 / 12\n\n    # Calculate how many years it will take to reach 4 feet\n    years = (4 - adam_height) / 2\n\n    result = years\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the cars sold\n    total_cost = 10 * 25000\n\n    # Calculate the amount paid to accompanying the cars\n    accompanying_cost = 0.3 * total_cost\n\n    # Calculate the total amount earned\n    total_earned = accompanying_cost * 10\n\n    # Calculate the amount of commission\n    commission = 0.1 * total_earned\n\n    result = total_earned\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of riders and the percentage that can stay upright\n    total_riders = 100\n    upright_percentage = 0.25\n\n    # Calculate the number of riders that can stay upright\n    upright_riders = total_riders * upright_percentage\n\n    # Calculate the number of women\n    women = total_riders * 0.6\n\n    # Calculate the number of men that can stay upright\n    upright_men = upright_riders - women\n\n    # return the result\n    result = upright_men\n    return result"}
{"output": "def solution():\n    \n    diamond_jewell_price = 2000\n    gold_jewell_price = (4/5) * diamond_jewell_price\n    silver_jewell_price = gold_jewell_price - 400\n    total_price = diamond_jewell_price + gold_jewell_price + silver_jewell_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    snowflake_stamps = 16\n    truck_stamps = snowflake_stamps + 3\n    rose_stamps = truck_stamps - 9\n    total_stamps = snowflake_stamps + truck_stamps + rose_stamps\n    result = total_stamps\n    return result"}
{"output": "def solution():\n    \n    # Define the distances and speeds\n    distance_1 = 75\n    speed_1 = 55\n    distance_2 = 75\n    speed_2 = 70\n\n    # Calculate the time it takes to travel the distance with each speed\n    time_1 = distance_1 / speed_1\n    time_2 = distance_2 / speed_2\n\n    # Calculate the total time\n    total_time = time_1 + time_2\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish caught by Naomi\n    naomi_fish = 17\n\n    # Calculate the number of fish caught by Darren\n    darren_fish = naomi_fish - 6\n\n    # Calculate the number of fish caught by Tommy\n    tommy_fish = darren_fish + 3\n\n    # Display the number of fish caught by Tommy\n    result = tommy_fish\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of the classes\n    total_cost = 60\n\n    # Define the cost per class\n    class_cost = 10\n\n    # Calculate the cost of the remaining classes\n    remaining_cost = total_cost - (10 * class_cost)\n\n    # Calculate the number of classes that can't sign up again\n    num_missed_classes = 10 - 10\n\n    # return the result\n    result = num_missed_classes\n    return result"}
{"output": "def solution():\n    \n    jewel_customers = 50\n    julie_customers = jewel_customers * 2\n    total_customers = jewel_customers + julie_customers\n    result = total_customers\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Paisley ran\n    paisley_distance = 4\n\n    # Calculate the distance Reggie ran\n    reggie_distance = paisley_distance * 5\n\n    # Calculate the distance Lynn ran\n    lynn_distance = reggie_distance - 3\n\n    # Display the distance Lynn ran\n    result = lynn_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of apples and oranges\n    apple_price = 5.20\n    orange_price = 3.30\n\n    # Calculate the total cost of 5 apples and 5 oranges\n    total_cost = (5 * apple_price) + (5 * orange_price)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    length = 6\n    width = 4\n    depth = 3\n    volume = length * width * depth\n    shovel_time = volume * 3\n    result = shovel_time\n    return result"}
{"output": "def solution():\n    \n    base_price = 30000\n    king_cab_cost = 7500\n    leather_seat_cost = king_cab_cost / 3\n    running_board_cost = leather_seat_cost - 500\n    total_cost = base_price + king_cab_cost + leather_seat_cost + running_board_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define Tim's monthly salary and the percentage increase\n    monthly_salary = 20000\n    percentage_increase = 0.05\n\n    # Calculate Tim's monthly salary after the promotion\n    monthly_salary_after_promotion = monthly_salary * (1 + percentage_increase)\n\n    # Calculate Tim's bonus amount\n    bonus_amount = monthly_salary_after_promotion / 2\n\n    # Calculate Tim's monthly salary after the bonus\n    monthly_salary_after_bonus = monthly_salary_after_promotion + bonus_amount\n\n    # Calculate Tim's yearly salary after the promotion and bonus\n    yearly_salary = monthly_salary_after_bonus * 12\n\n    result = yearly_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    SUIT_PRICE = 750\n    PANTS_PRICE = SUIT_PRICE / 5\n    SHIRT_PRICE = 60\n\n    # Define the number of each item purchased\n    num_suit = 10\n    num_pant = 10\n    num_shirt = 3\n\n    # Calculate the total cost of the suits\n    suit_cost = num_suit * SUIT_PRICE\n\n    # Calculate the total cost of the dress pants\n    pant_cost = num_pant * PANTS_PRICE\n\n    # Calculate the total cost of the dress shirts\n    shirt_cost = num_shirt * SHIRT_PRICE\n\n    # Calculate the total cost of everything\n    total_cost = suit_cost + pant_cost + shirt_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    political_articles_per_day = 20\n    weather_articles_per_day = 20\n    sister_articles_per_day = 10\n    days_in_month = 28\n    total_political_articles = political_articles_per_day * days_in_month\n    total_weather_articles = weather_articles_per_day * days_in_month\n    total_sister_articles = sister_articles_per_day * days_in_month\n    total_articles = total_political_articles + total_weather_articles + total_sister_articles\n    result = total_articles\n    return result"}
{"output": "def solution():\n    \n    steve_age = 60\n    wife_age = steve_age + 4\n    son_age = steve_age / 2\n    wife_age_in_husband = son_age + 3\n    result = wife_age_in_husband\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each portion of flour\n    portion_weight = 2\n\n    # Calculate the total weight of flour in one bag\n    total_weight = portion_weight * 8\n\n    # Calculate the total weight of flour in three bags\n    total_weight_in_3_bags = total_weight * 3\n\n    # return the result\n    result = total_weight_in_3_bags\n    return result"}
{"output": "def solution():\n    \n    alisa_speed = 12\n    alisa_time = 4.5\n    stanley_speed = 10\n    stanley_time = 2.5\n    alisa_distance = alisa_speed * alisa_time\n    stanley_distance = stanley_speed * stanley_time\n    total_distance = alisa_distance + stanley_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the rate at which Bill can dig per hour\n    SOIL_RATE = 4\n    CLAY_RATE = SOIL_RATE / 2\n\n    # Define the amount of soil and clay to dig\n    soil_amount = 24\n    clay_amount = 8\n\n    # Calculate the total time to dig the well\n    total_time = (soil_amount / SOIL_RATE) + (clay_amount / CLAY_RATE)\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cupcakes each person will get\n    VANILLA_CUPCAKES = 2\n    TEACHER_CUPCAKES = 2\n    CLASSMATES = 25\n\n    # Calculate the total number of cupcakes needed\n    total_cupcakes = (VANILLA_CUPCAKES + TEACHER_CUPCAKES + CLASSMATES) * 3\n\n    # Display the total number of cupcakes needed\n    result = total_cupcakes\n    return result"}
{"output": "def solution():\n    \n    initial_likes = 2000\n    weekly_likes = initial_likes * 70\n    new_likes = 20000\n    total_likes = initial_likes + weekly_likes + new_likes\n    result = total_likes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of each pomegranate and the discount percentage\n    INITIAL_PRICE = 20\n    DISCOUNT_PERCENTAGE = 10\n\n    # Calculate the total cost of the pomegranates before the discount\n    total_cost_before_discount = INITIAL_PRICE * 20\n\n    # Calculate the discounted price of each pomegranate\n    discounted_price_before_discount = INITIAL_PRICE - DISCOUNT_PERCENTAGE / 100\n\n    # Calculate the total cost of the pomegranates after the discount\n    total_cost_after_discount = total_cost_before_discount - discounted_price_before_discount\n\n    # Calculate the difference between the final prices paid\n    price_difference = total_cost_after_discount - (20 * INITIAL_PRICE)\n\n    # Display the price difference\n    result = price_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the sales from red hats in the first month\n    red_sales_1 = 400\n\n    # Calculate the sales from green hats in the first month\n    green_sales_1 = red_sales_1 / 2\n\n    # Calculate the sales from second month\n    second_sales_1 = (3/4) * red_sales_1\n\n    # Calculate the total sales in two months\n    total_sales = red_sales_1 + green_sales_1 + second_sales_1\n\n    # Display the total sales\n    result = total_sales\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the carriage\n    total_hours = (5 + 9) - 1  # James is hiring the carriage from 5 PM to 9 PM, and he gets 1 hour free\n    total_cost = total_hours * 2 * 15  # each hour after the first paid $15 is twice the cost of the carriage\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    starting_balance = 200\n    ending_balance = 420\n    starting_amount = 300\n    amount_withheld = starting_balance - ending_balance - starting_amount\n    result = amount_withheld\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and the number of deviled egg halves each guest will eat\n    num_guests = 16\n    deviled_halves_per_guest = 3\n\n    # Calculate the total number of deviled egg halves needed\n    total_deviled_halves = num_guests * deviled_halves_per_guest\n\n    # Calculate the total number of eggs needed\n    total_eggs = total_deviled_halves / 2\n\n    # Convert the total number of eggs to dozens\n    total_dozens = total_eggs / 12\n\n    # return the result\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    \n    total_pages = 15\n    written_pages = total_pages / 3\n    remaining_pages = total_pages - written_pages\n    result = remaining_pages\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pages and the number of days\n    total_pages = 200\n    days = 30\n\n    # Calculate the number of pages Mike will read each day\n    pages_per_day = 10\n\n    # Calculate the total number of days before the deadline\n    days_before_dead = (total_pages - pages_per_day) / pages_per_day\n\n    # Display the number of days before the deadline\n    result = days_before_dead\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the plane and the monthly expenses\n    plane_cost = 150000\n    rent_per_month = 5000\n    fuel_per_month = rent_per_month * 2\n\n    # Calculate the total expenses for the first year\n    total_expenses = (rent_per_month + fuel_per_month) * 12\n\n    # Calculate the final cost for the first year\n    final_cost = plane_cost - total_expenses\n\n    # return the result\n    result = final_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the time it took to cook rice\n    rice_time = 30\n\n    # Calculate the time it took to cook pork\n    pork_time = rice_time + 20\n\n    # Calculate the combined cooking time of pork and rice\n    combined_time = pork_time + rice_time\n\n    # Calculate the time it took to cook beans\n    beans_time = combined_time / 2\n\n    # Calculate the total cooking time\n    total_time = rice_time + pork_time + beans_time\n\n    # Display the total cooking time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    almonds_cost = 10\n    walnuts_cost = 15\n    mixture_almonds_cost = almonds_cost / 2\n    mixture_walnuts_cost = walnuts_cost / 3\n    cost_difference = mixture_almonds_cost - mixture_walnuts_cost\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    legs = 70\n    heads = 20\n    total_animals = legs + heads\n    sheep = total_animals - legs\n    result = sheep\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a normal brand of coffee and the percentage increase\n    NORMAL_PRICE = 5\n    PERCENTAGE_INCREASE = 0.2\n\n    # Calculate the cost of the expensive brand of coffee\n    expensive_cost = NORMAL_PRICE * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate the cost of the week's worth of coffee\n    weekly_cost = (1 * WEEK_PRICE) + 2\n\n    # Calculate the total cost of everything\n    total_cost = weekly_cost + 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the chips\n    chips_cost = 2 * 2\n\n    # Calculate the total cost of the fried chicken\n    fried_chicken_cost = 8\n\n    # Calculate the total cost of the soda\n    soda_cost = 1\n\n    # Calculate the total cost of the apple pie\n    apple_pie_cost = 20 - chips_cost - fried_chicken_cost - soda_cost\n\n    result = apple_pie_cost\n    return result"}
{"output": "def solution():\n    \n    total_newspapers = 600\n    district_a_deliveries = 198\n    district_c_deliveries = 209\n    district_b_deliveries = total_newspapers - district_a_deliveries - district_c_deliveries\n    result = district_b_deliveries\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the class meets per week and the duration of each meal\n    meals_per_week = 4\n    meal_duration = 2\n\n    # Define the number of weeks\n    weeks = 6\n\n    # Calculate the total duration of the class\n    total_duration = meals_per_week * meal_duration * weeks\n\n    # Calculate the number of recipes that can be made\n    recipes = total_duration // 1.5\n\n    # Display the number of recipes that can be made\n    result = recipes\n    return result"}
{"output": "def solution():\n    \n    total_teachers = 150\n    history_teachers = total_teachers * 0.6\n    math_teachers = total_teachers - history_teachers\n    hours_per_day = 6\n    total_hours = math_teachers * hours_per_day\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Aurelia has\n    aurelia_money = 120\n\n    # Calculate the amount of money Kassidy has\n    kassidy_money = aurelia_money * 3/4\n\n    # Calculate the amount of money Rayna has\n    rayna_money = kassidy_money + 60\n\n    # Calculate the total amount of money they have\n    total_money = aurelia_money + kassidy_money + rayna_money\n\n    # Calculate the amount of money each person will have if they share equally\n    each_person_money = total_money / 2\n\n    # Display the amount of money each person will have\n    result = each_person_money\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each quarter in minutes\n    quarter_length = 12\n\n    # Define the number of quarters in the game\n    num_quarters = 4\n\n    # Calculate the total length of the game in minutes\n    total_length = (quarter_length * num_quarters) + 5\n\n    # Display the total length of the game in minutes\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of employees and the percentage of employees that are management\n    total_employees = 50\n    management_percentage = 0.2\n\n    # Calculate the number of employees that are management\n    management_employees = total_employees * management_percentage\n\n    # Calculate the number of employees that are not management\n    non_management_employees = total_employees - management_employees\n\n    # Calculate the number of employees that are overseeing\n    overseeing_employees = non_management_employees * 0.3\n\n    # return the result\n    result = overseeing_employees\n    return result"}
{"output": "def solution():\n    # Calculate the total number of tablespoons of flour needed\n    flour_tablespoons = 5 * 16\n\n    # Calculate the total number of tablespoons of sugar needed\n    sugar_tablespoons = 3 * 16\n\n    # Calculate the total number of tablespoons of salt needed\n    salt_tablespoons = 0.25 * 16\n\n    # Calculate the total number of tablespoons of dry ingredients needed\n    dry_tablespoons = flour_tablespoons + sugar_tablespoons + salt_tablespoons\n    result = dry_tablespoons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of candy each person has\n    robert_candy = 3\n    cindy_candy = 5\n    aaron_candy = 4\n\n    # Calculate the total amount of candy\n    total_candy = robert_candy + cindy_candy + aaron_candy\n\n    # Calculate the amount of candy each person gets if they share equally\n    candy_per_person = total_candy / 3\n\n    # Display the amount of candy each person gets\n    result = candy_per_person\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the candies of type A and type B\n    cost_A = 7 * 0.5\n    cost_B = 10 * 0.75\n    total_cost = cost_A + cost_B\n\n    # Calculate the amount of change Adam will receive\n    change = 15 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the number of good and bad days\n    good_days = 12\n    bad_days = 8\n\n    # Calculate the number of good and bad days\n    good_bad_days = good_days + bad_days\n\n    # Calculate the number of good and bad days\n    good_good_days = good_days - good_bad_days\n\n    # Calculate the number of good and bad days\n    good_bad_days = bad_days - bad_days\n\n    # Calculate the number of good and bad days\n    good_good_days = good_good_days - good_bad_days\n\n    # Calculate the number of good, bad, and neutral days\n    good_neutral_days = good_days - good_bad_days - bad_days\n\n    # Calculate the total number of good, bad, and neutral days\n    total_good_days = good_good_days + good_neutral_days\n\n    # Calculate the number of good days left in the month\n    good_days_left = good_days - total_good_days"}
{"output": "def solution():\n    \n    # Define the number of books Janey has\n    janey_books = 21\n\n    # Calculate the number of books Sally has\n    sally_books = (janey_books - 3) / 2\n\n    # Display the number of books Sally has\n    result = sally_books\n    return result"}
{"output": "def solution():\n    \n    # Define the growth rate of the bamboo in inches per day\n    GROWTH_RATE = 30\n\n    # Define the current height of the bamboo in inches\n    CURRENT_HEIGHT = 20 * 12\n\n    # Define the target height of the bamboo in inches\n    TARGET_HEIGHT = 600\n\n    # Calculate the number of days it will take to reach the target height\n    days = (TARGET_HEIGHT - CURRENT_HEIGHT) / GROWTH_RATE\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and toys\n    initial_dogs = 4\n    initial_toys = initial_dogs * 1\n\n    # Define the number of dogs in the shelter after buying more\n    new_dogs = 8\n\n    # Calculate the number of dogs left after buying more\n    left_dogs = initial_dogs + new_dogs\n\n    # Calculate the number of dogs James bought\n    bought_dogs = 2 * left_dogs\n\n    # Calculate the total number of toys needed\n    total_toys = (initial_toys + new_dogs - 3) + (bought_dogs * 1)\n\n    # Display the total number of toys needed\n    result = total_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the initial investment amount\n    investment_amount = 1200\n\n    # Calculate the amount after Dylan's investment\n    dylan_investment_amount = investment_amount * (2/5)\n\n    # Calculate the remaining amount after Dylan's investment\n    remaining_amount = investment_amount - dylan_investment_amount\n\n    # Calculate the amount after Frances\n    frances_investment_amount = remaining_amount * (2/3)\n\n    # Calculate the amount for Skyler's investment\n    skyler_investment_amount = investment_amount - dylan_investment_amount - frances_investment_amount\n\n    # Display the amount for Skyler's investment\n    result = skyler_investment_amount\n    return result"}
{"output": "def solution():\n    \n    carol_weeks = 5\n    jennifer_weeks = 5\n    carol_total_signatures = 20\n    jennifer_total_signatures = 44\n    total_weeks = 3\n    total_signatures = carol_total_signatures + jennifer_total_signatures + (total_weeks * carol_weeks) + (total_weeks * jennifer_weeks)\n    sisters_to_reach_100_signatures = 100\n    result = sisters_to_reach_100_signatures\n    return result"}
{"output": "def solution():\n    \n    # Define Lorie's hourly rate\n    lorie_rate = 10\n\n    # Calculate Karen's hourly rate\n    karen_rate = lorie_rate * 2\n\n    # Calculate Karen's total earnings for two days\n    karen_earnings = karen_rate * 3 * 2\n\n    # Display Karen's total earnings\n    result = karen_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of potatoes and the number of hash browns each potatoes makes\n    potatoes = 96\n    browns_per_potatoes = 36 / 6\n\n    # Calculate the total number of hash browns\n    total_browns = browns_per_potatoes * potatoes\n\n    # return the result\n    result = total_browns\n    return result"}
{"output": "def solution():\n    \n    max_load = 700\n    adult_weight = 80\n    num_adults = 8\n    total_weight = num_adults * adult_weight\n    excess_weight = max_load - total_weight\n    result = excess_weight\n    return result"}
{"output": "def solution():\n    \n    katarina_cookies = 68\n    max_cookies = katarina_cookies + 12\n    summer_cookies = max_cookies + 23\n    total_cookies = katarina_cookies + max_cookies + summer_cookies\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    final_design_length = 140\n    extended_dress_length = final_design_length * 1.5 + 20\n    original_dress_length = extended_dress_length / 1.0\n    result = original_dress_length\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to mow the lawn in \"turtle\" and \"rabbit\" modes\n    TURLE_TIME = 1\n    RABBIT_TIME = 40\n\n    # Calculate the time it takes to mow the lawn in half of the turtle and rabbit modes\n    half_turtle_time = TURLE_TIME / 2\n    half_rabbit_time = RABBIT_TIME / 2\n\n    # Calculate the total time it takes to mow the lawn\n    total_time = half_turtle_time + half_rabbit_time\n\n    # Display the total time in minutes\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_time = 30\n    travel_time = 6 + 13\n    remaining_time = total_time - travel_time\n    result = remaining_time\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and amounts of each item\n    APPLE_PRICE = 4\n    BANANA_PRICE = 2\n    ORANGE_PRICE = 3\n    APPLE_AMOUNT = 1\n    BANANA_AMOUNT = 2\n    ORANGE_AMOUNT = 2\n\n    # Calculate the total cost of each item\n    apple_cost = APPLE_PRICE * APPLE_AMOUNT\n    banana_cost = BANANA_PRICE * BANANA_AMOUNT\n    orange_cost = ORANGE_PRICE * ORANGE_AMOUNT\n\n    # Calculate the total cost of all items\n    total_cost = apple_cost + banana_cost + orange_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    greta_cookies = 30\n    celinda_cookies = greta_cookies * 2\n    total_cookies = greta_cookies + celinda_cookies - 10\n    result = total_cookies\n    return result"}
{"output": "def solution():\n    \n    # Let x be the age of one triplet\n    # Then the age of one twin is x + 7\n    # The sum of their ages is 44\n    # So we have x + (x + 7) = 44\n    # Simplifying, we get 2x + 7 = 44\n    # Solving for x, we get x = 5\n\n    # Therefore, one twin is 5 years old\n    result = 5\n    return result"}
{"output": "def solution():\n    \n    math_homework = 20\n    reading_homework = 40\n    history_homework = 20\n    dinner_hours = 3\n    total_homework_time = math_homework + reading_homework + history_homework + dinner_hours\n    nap_time = total_homework_time\n    result = nap_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each lollipop and candy\n    LOLLIPOP_PRICE = 0.40\n    CANDY_PRICE = 0.40\n\n    # Define the number of lollipops and candies purchased\n    num_lollipops = 5\n    num_candies = 4\n\n    # Calculate the total cost of the lollipops\n    lollipop_cost = num_lollipops * LOLLIPOP_PRICE\n\n    # Calculate the total cost of the candies\n    candy_cost = num_candies * CANDY_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = lollipop_cost + candy_cost\n\n    # Calculate the cost per person\n    cost_per_person = total_cost / 10\n\n    # Display the cost per person\n    result = cost_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of coins saved per month by Rong\n    rong_coins_per_month = 20\n\n    # Calculate the number of coins saved per month by Neil\n    neil_coins_per_month = (2/5) * rong_coins_per_month + rong_coins_per_month\n\n    # Calculate the total number of coins saved per month by both of them\n    total_coins_per_month = rong_coins_per_month + neil_coins_per_month\n\n    # Calculate the total number of coins saved in 10 years\n    total_coins_saved = total_coins_per_month * 10\n\n    # return the result\n    result = total_coins_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each vaccine\n    VACCINE_COST = 20\n\n    # Define the number of vaccines needed\n    vaccines_needed = 2\n\n    # Calculate the total cost of the vaccines\n    total_cost = vaccines_needed * VACCINE_COST\n\n    # Calculate the amount of the heartworm check\n    heartworm_check = total_cost * 0.6\n\n    # Calculate the amount of money John has left after the heartworm check\n    money_left = total_cost - heartworm_check - 125\n\n    # Display the amount of money John has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each type of fruit\n    APPLE_PRICE = 0.5\n    BANANA_PRICE = 2 * APPLE_PRICE\n    ORANGE_PRICE = 3 * BANANA_PRICE\n\n    # Define the number of each type of fruit in a crate\n    bananas = 5\n    apples = 12\n    oranges = 7\n\n    # Calculate the total cost of the fruits\n    total_cost = (bananas * BANANA_PRICE) + (apples * APPLE_PRICE) + (oranges * ORANGE_PRICE)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total square footage of the comforter\n    red_squares = 14\n    blue_squares = red_squares + 4\n    green_squares = blue_squares + 6\n    white_squares = green_squares - 12\n    total_square_footage = (red_squares * 1) + (blue_squares * 1) + (white_squares * 1)\n    result = total_square_footage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of high chairs\n    high_chairs = 8\n\n    # Calculate the number of regular chairs\n    regular_chairs = high_chairs * 5\n\n    # Calculate the total number of chairs\n    total_chairs = high_chairs + regular_chairs\n\n    # Calculate the number of chairs left to get\n    chairs_left = 42 + 15 - total_chairs\n\n    # Display the number of chairs left to get\n    result = chairs_left\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of deer and the percentage of bucks\n    total_deer = 50\n    buck_percentage = 0.5\n\n    # Calculate the number of bucks and the number of 8-point bucks\n    bucks = total_deer * buck_percentage\n    points = bucks * 0.2\n\n    # Display the number of 8-point bucks\n    result = points\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum number of points collected by each student\n    adam_points = 50\n    betty_points = adam_points * 1.3\n    marta_points = betty_points * 3\n\n    # Calculate the total number of points collected\n    total_points = adam_points + betty_points + marta_points\n\n    # Calculate the number of missing points\n    missing_points = total_points - 400\n\n    # return the result\n    result = missing_points\n    return result"}
{"output": "def solution():\n    \n    # Define the number of children and grandchildren\n    num_children = 3\n    num_grandchildren = 3\n\n    # Calculate the total number of grandchildren\n    total_grandchildren = num_children * num_grandchildren\n\n    # Calculate the total number of babies\n    total_babies = total_grandchildren * 3\n\n    # Display the total number of babies\n    result = total_babies\n    return result"}
{"output": "def solution():\n    # Calculate the amount of money Greta puts into her retirement account\n    retirement_amount = 0.5 * 2400\n\n    # Calculate the amount of money Greta spends on her car payment\n    car_payment = 0.2 * 2400\n\n    # Calculate the total amount of money Greta spends\n    total_spent = retirement_amount + car_payment\n\n    # Calculate the amount of money Greta has left to spend\n    money_left = 2400 - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_pencils = 20\n    missing_pencils = 4\n    remaining_pencils = total_pencils - missing_pencils\n    pairs_of_pencils = remaining_pencils // 2\n    result = pairs_of_pencils\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes and fireworks per box\n    BOXES_IN_JULY = 15\n    BOXES_PER_FIVEWORK = 20\n\n    # Calculate the total number of fireworks\n    total_fireworks = (BOXES_IN_JULY * BOXES_PER_FIVEWORK) + (BOXES_IN_JULY * BOXES_PER_FIVEWORK)\n\n    # Calculate the number of boxes Hannah will set off\n    boxes_set_off = 3\n\n    # Calculate the number of fireworks Hannah will see in the right angle\n    right_angle_fireworks = total_fireworks * 0.4\n\n    # Calculate the number of fireworks Hannah will see in the backyard\n    backyard_fireworks = boxes_set_off * 5\n\n    # Calculate the total number of fireworks Hannah will see\n    total_fireworks += right_angle_fireworks + backyard_fireworks\n\n    # Display the total number of fireworks\n    result ="}
{"output": "def solution():\n    \n    # Define the number of people and friends\n    num_people = 10\n    num_friends = 12 + 7\n\n    # Calculate the total number of seats\n    total_seats = num_people + num_friends\n\n    # Calculate the total number of drinks\n    total_drinks = total_seats * 1\n\n    # Calculate the total number of snacks\n    total_snacks = total_seats * 3\n\n    # Calculate the total cost of drinks and snacks\n    total_cost = (total_drinks + total_snacks) * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    gissela_truck_capacity = 4000\n    gordy_truck_capacity = gissela_truck_capacity + 800\n    combined_truck_capacity = 11600\n    gary_truck_capacity = combined_truck_capacity - gissela_truck_capacity - gordy_truck_capacity\n    result = gary_truck_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the number of males and females\n    num_males = 8\n    num_females = 6\n\n    # Calculate the number of dumplings each male ate\n    male_dumplings = num_males + 1\n\n    # Calculate the number of dumplings each female ate\n    female_dumplings = num_females * 3\n\n    # Calculate the total number of dumplings\n    total_dumplings = (male_dumplings + female_dumplings) * 2\n\n    # Display the total number of dumplings\n    result = total_dumplings\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of Gerald's money to Julia's money\n    ratio = 3/2\n\n    # Calculate the total amount of money\n    total_money = 100\n\n    # Calculate the amount of money spent by Gerald\n    gerald_spent = 10\n\n    # Calculate the amount of money left after Gerald spent $10\n    money_left = total_money - gerald_spent\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    cat_speed = 15\n    turtle_speed = cat_speed / 5\n    time = 40\n    distance = turtle_speed * time\n    result = distance\n    return result"}
{"output": "def solution():\n    \n    # Define the fundraising goal amount and the amount raised in the first 3 hours\n    fundraising_goal = 6300\n    first_3_hours_amount = 2100\n\n    # Calculate the amount raised per hour\n    amount_per_hour = fundraising_goal / 3\n\n    # Calculate the total number of hours needed to reach the fundraising goal\n    total_hours = fundraising_goal / amount_per_hour\n\n    # Round up to the nearest whole number of hours\n    total_hours = int(total_hours + 0.5)\n\n    result = total_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage of water used for industrial purposes\n    industrial_percentage = 80\n\n    # Calculate the total amount of water used\n    total_water = 40 / 100\n\n    # Calculate the percentage of water used for non-industrial purposes\n    non_industrial_percentage = 100 - industrial_percentage\n\n    # Display the percentage of water used for non-industrial purposes\n    result = non_industrial_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days in a week and the price per day\n    DAYS_PER_WEEK = 7\n    PRICE_PER_DAY = 12\n\n    # Calculate the total cost for 2 weeks\n    total_cost = PRICE_PER_DAY * DAYS_PER_WEEK * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of quarts of chocolate and vanilla ice cream made per hour\n    CHOCOLATE_QUARTS_PER_HOUR = 100 / 2\n    VANILLA_QUARTS_PER_HOUR = 50 / 4\n\n    # Calculate the total number of quarts of chocolate and vanilla ice cream made in 48 hours\n    total_quarts = (CHOCOLATE_QUARTS_PER_HOUR * 48) + (VANILLA_QUARTS_PER_HOUR * 48)\n\n    # Display the total number of quarts of chocolate and vanilla ice cream made in 48 hours\n    result = total_quarts\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    CROISSANT_PRICE = 3.00\n    CINNAMON_PRICE = 2.50\n    MINICHES_PRICE = 4.00\n    BLUEBERRY_MUFFIN_PRICE = 1.00\n\n    # Calculate the total cost of each item\n    croissant_cost = 5 * CROISSANT_PRICE\n    cinnamon_cost = 4 * CINNAMON_PRICE\n    mini_quiches_cost = 3 * MINICHES_PRICE\n    blueberry_muffin_cost = 13 * BLUEBERRY_MUFFIN_PRICE\n\n    # Calculate the total cost of all items\n    total_cost = croissant_cost + cinnamon_cost + mini_quiches_cost + blueberry_muffin_cost\n\n    # Calculate the discount\n    discount = total_cost * 0.1\n\n    # Calculate the final bill\n    final_bill = total_cost - discount\n\n    #"}
{"output": "def solution():\n    \n    # Define the price of each ice cream scoop and the amount of money Erin has\n    ice_cream_price = 1.5\n    erin_money = 6.00\n\n    # Calculate the number of scoops of ice cream she should buy\n    scoops_needed = (ern_money - erin_money) / ice_cream_price\n\n    # Round up to the nearest whole number of scoops\n    scoops_needed = int(scoops_needed) + 1\n\n    # return the result\n    result = scoops_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of candies\n    initial_candies = 100\n\n    # Calculate the number of candies eaten by Ginger\n    ginger_candies = 4 * 7 * 2\n\n    # Calculate the number of candies eaten by Amy\n    amy_candies = 3 * 7 * 2\n\n    # Calculate the difference in candies between Ginger and Amy\n    candy_difference = amy_candies - ginger_candies\n\n    # return the result\n    result = candy_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of square feet of the bathroom\n    square_feet = 36\n\n    # Calculate the number of mosaic tiles needed\n    mosaic_tiles = square_feet * 24 * (2/3)\n\n    # Display the total number of mosaic tiles needed\n    result = mosaic_tiles\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per pound of blueberries\n    COST_PER_POUND = 1.5\n\n    # Define the amount of blueberries picked\n    pounds_picked = 30\n\n    # Calculate the cost of picking the blueberries\n    cost_picked = pounds_picked * COST_PER_POUND\n\n    # Calculate the cost of buying the blueberries\n    cost_purchase = pounds_picked * 2.5\n\n    # Calculate the amount of money saved\n    money_saved = cost_purchase - cost_picked\n\n    # Display the amount of money saved\n    result = money_saved\n    return result"}
{"output": "def solution():\n    \n    # Define the number of computers and the original price per computer\n    num_computers = 500\n    original_price = 700\n\n    # Calculate the new price per computer\n    new_price = original_price * 1.1\n\n    # Calculate the total cost of buying the new computers at the new prices\n    total_cost = num_computers * new_price\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of ounces in each omelet\n    EGG_OUNCES = 2\n    CHEESE_OUNCES = 2\n    HAM_OUNCES = 2\n\n    # Define the number of calories per ounce for each omelet\n    EGG_CALORIES = 75\n    CHEESE_CALORIES = 120\n    HAM_CALORIES = 40\n\n    # Calculate the total number of calories in each omelet\n    egg_calories = EGG_CALORIES * EGG_OUNCES\n    cheese_calories = CHEESE_CALORIES * CHEESE_OUNCES\n    ham_calories = HAM_CALORIES * HAM_OUNCES\n\n    # Calculate the total number of calories in the omelet\n    total_calories = egg_calories + cheese_calories + ham_calories\n\n    # Display the total number of calories\n    result = total_calories\n    return result"}
{"output": "def solution():\n    \n    pencil_cost = 0.5\n    eraser_cost = 0.25\n    num_pencils = 6\n    num_erasers = 8\n    total_cost = (pencil_cost * num_pencils) + (eraser_cost * num_erasers)\n    change = 10 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people who apply\n    total_people = 100\n\n    # Calculate the number of people who receive interviews\n    interviews = total_people * 0.3\n\n    # Calculate the number of people who receive a job offer\n    job_offer = interviews * 0.2\n\n    # Calculate the number of people who accept the position\n    position = job_offer / 3\n\n    # Display the number of people who accept the position\n    result = position\n    return result"}
{"output": "def solution():\n    \n    total_sacks = 20\n    cousin_sacks = 3\n    brother_sacks = 4\n    rice_per_sack = 25\n    total_rice = total_sacks * rice_per_sack\n    cousin_kgs = cousin_sacks * rice_per_sack\n    brother_kgs = brother_sacks * rice_per_sack\n    total_kgs = total_rice + cousin_kgs + brother_kgs\n    result = total_kgs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boxes of coco Crunch and Fruit Loops bought last week\n    coco_crunch_last_week = 3\n    fruit_loops_last_week = 5\n\n    # Define the number of boxes of cereal bought last week\n    cereal_last_week = 4\n\n    # Calculate the total number of boxes of cereal bought this week\n    total_cereal_this_week = coco_crunch_last_week + fruit_loops_last_week\n\n    # Calculate the difference in the number of boxes of cereal bought this week and last week\n    difference = total_cereal_this_week - cereal_last_week\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    right_foot_rate = 300\n    left_foot_rate = 250\n    arms_rate = 200\n    total_time = 5\n    raised_time = 2\n    right_foot_taps = right_foot_rate * total_time\n    left_foot_taps = left_foot_rate * total_time\n    total_taps = right_foot_taps + left_foot_taps\n    combined_total = total_taps * 2\n    result = combined_total\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the pothole\n    total_cost = 450 + 120 + 3 * 25  # $450 worth of damage, $120 for unauthorized road maintenance, 3 buckets of asphalt that cost $25 each\n\n    # Calculate the amount saved by fixing the pothole\n    amount_saved = total_cost - 450  # $450 worth of damage, minus the cost of the fixed pothole\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    normal_chairs = 170\n    babies = 23\n    normal_chairs_sent = 20\n    babies_sent = 13\n    total_chairs_sent = normal_chairs_sent + babies_sent\n    total_chairs_left = normal_chairs + babies - total_chairs_sent\n    result = total_chairs_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per pizza\n    SLICES_PER_PIZZA = 12\n\n    # Calculate the total number of slices of pizza ordered\n    total_slices = 2 * SLICES_PER_PIZZA + 4 * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by Bryce and two friends\n    slices_eaten = (2/3) * total_slices + (2/4) * SLICES_PER_PIZZA\n\n    # Calculate the number of slices eaten by the remaining friends\n    slices_remaining = total_slices - slices_eaten\n\n    # Display the number of slices remaining\n    result = slices_remaining\n    return result"}
{"output": "def solution():\n    \n    cat_sausages = 9\n    dog_sausages = cat_sausages * (2/3)\n    total_sausages = cat_sausages + dog_sausages\n    average_time = total_sausages / 2\n    result = average_time\n    return result"}
{"output": "def solution():\n    \n    topher_shoe_length = 8 * 12 + 4\n    bobby_shoe_length = (topher_shoe_length - 10) / 9\n    result = bobby_shoe_length\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of students' cars' windows\n    num_students_windows = 64 * 4\n\n    # Calculate the number of teachers' cars' windows\n    num_teachers_windows = 32 * 2\n\n    # Calculate the number of students' cars' windows\n    num_students_total_windows = num_students_windows * 0.25\n\n    # Calculate the number of teachers' cars' windows\n    num_teachers_total_windows = num_teachers_windows * 0.75\n\n    # Calculate the total number of windows\n    total_windows = num_students_total_windows + num_teachers_total_windows\n\n    # Display the total number of windows\n    result = total_windows\n    return result"}
{"output": "def solution():\n    # Calculate the total number of spools\n    total_spools = 15 + 45 + 40 + 50\n\n    # Calculate the number of blue spools\n    blue_spools = 15 + 40\n\n    # Calculate the percentage of blue spools\n    percentage_blue = (blue_spools / total_spools) * 100\n    result = percentage_blue\n    return result"}
{"output": "def solution():\n    \n    total_people = 5000\n    midday_votes = (2/5) * total_people\n    remaining_votes = total_people - midday_votes\n    16_votes = (2/3) * remaining_votes\n    not_voted = total_people - 16_votes\n    result = not_voted\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pieces of gum per pack and the number of days\n    GUM_PER_PACK = 15\n    DAYS = 30\n\n    # Calculate the total number of pieces of gum needed\n    total_gum = GUM_PER_PACK * DAYS\n\n    # Calculate the number of packs of gum needed\n    packs_needed = total_gum // GUM_PER_PACK\n    if total_gum % GUM_PER_PACK!= 0:\n        packs_needed += 1\n\n    # Display the number of packs needed\n    result = packs_needed\n    return result"}
{"output": "def solution():\n    # Calculate the total number of smores needed\n    total_smores = 9 * 2 + 6 * 1  # 9 kids want 2 smores apiece, 6 adults will eat 1 smore apiece\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_smores / 8  # each sleeve makes the base for 8 large smores\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_boxes / 3  # there are 3 sleeves in a box\n\n    result = total_boxes\n    return result"}
{"output": "def solution():\n    \n    dora_age = 15\n    father_age = 2 * dora_age + 8\n    mother_age = father_age - 4\n    total_age = dora_age + father_age + mother_age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount of money found\n    total_money = 20\n\n    # Define the number of siblings\n    num_siblings = 3\n\n    # Calculate the amount of money each sibling gets\n    sibling_money = total_money / (num_siblings + 1)\n\n    # Display the amount of money each sibling gets\n    result = sibling_money\n    return result"}
{"output": "def solution():\n    \n    math_weight = 2\n    science_weight = 2\n    french_weight = 4\n    english_weight = 3\n    history_weight = 2 * english_weight\n    total_weight = math_weight + science_weight + french_weight + english_weight + history_weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    total_voters = 100\n    candidate_a_votes = total_voters * 0.2\n    candidate_b_votes = candidate_a_votes * 1.5\n    candidate_c_votes = total_voters - candidate_a_votes - candidate_b_votes\n    result = candidate_c_votes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of apples Boris has\n    boris_apples = 100\n\n    # Calculate the number of apples Beck has\n    beck_apples = boris_apples - 23\n\n    # Subtract the number of apples Boris gives to Beck\n    boris_apples -= 10\n\n    # Calculate the difference between the number of apples Beck and Boris have\n    difference = beck_apples - boris_apples\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of water per cube\n    water_per_cube = 4 + 2 + 0.5\n\n    # Calculate the total amount of water used\n    total_water_used = 3 * water_per_cube + 7 * water_per_cube + 8 * water_per_cube\n\n    # Calculate the amount of water left\n    water_left = 32 - total_water_used\n\n    # Display the amount of water left\n    result = water_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books Clara has\n    clara_books = 20\n\n    # Calculate the number of books Steven has\n    steven_books = clara_books / 2\n\n    # Calculate the number of books Alice has\n    alice_books = steven_books + 6\n\n    # Calculate the difference in books between Clara and Alice\n    books_difference = clara_books - alice_books\n\n    # Display the difference in books between Clara and Alice\n    result = books_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the price of a gallon jar and the price difference between a gallon and half-gallon jar\n    GALLON_PRICE = 5\n    GALLON_PRICE_DIFF = 2\n\n    # Calculate the price of a half-gallon jar\n    HALF_GALLON_PRICE = GALLON_PRICE / 2\n\n    # Calculate the total cost of 10-gallon jars\n    total_gallon_cost = 10 * GALLON_PRICE\n\n    # Calculate the total cost of 16 half-gallon jars\n    total_half_gallon_cost = 16 * HALF_GALLON_PRICE\n\n    # Calculate the total cost of all jars\n    total_cost = total_gallon_cost + total_half_gallon_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of students who like to bake\n    total_students = 50\n    bake_students = 10\n\n    # Calculate the number of students who like to play basketball\n    basketball_students = 5\n\n    # Calculate the number of students who like to play video games\n    video_game_students = total_students - bake_students - basketball_students\n\n    # Calculate the number of students who like to play music\n    music_students = 2 * basketball_students\n\n    # Calculate the number of students who like to play video games\n    video_game_players = video_game_students - music_students\n\n    # Display the number of students who like to play video games\n    result = video_game_players\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of birds\n    initial_birds = 12\n\n    # Calculate the number of birds scared away\n    scared_birds = initial_birds // 3\n\n    # Calculate the total number of birds after the scared ones\n    total_birds = initial_birds - scared_birds\n\n    # Add the 20 birds that joined the fearless ones\n    total_birds += 20\n\n    # Display the total number of birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    total_students = 80\n    students_per_class = total_students / 2\n    girl_percent = 40\n    girl_students = students_per_class * (girl_percent / 100)\n    boy_students = students_per_class - girl_students\n    result = boy_students\n    return result"}
{"output": "def solution():\n    \n    initial_slices = 2\n    added_slices = 3\n    remaining_slices = initial_slices + added_slices - 2 - 5\n    result = remaining_slices\n    return result"}
{"output": "def solution():\n    # Calculate the total number of animals that need to be groomed\n    total_animals = 8 + 5 + 3 + 12\n\n    # Calculate the number of animals each day of the week\n    animals_per_day = total_animals / 7\n\n    result = animals_per_day\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of buying 3 packs of old magic cards\n    total_cost = 3 * 1800\n\n    # Calculate the total revenue from selling the old magic cards\n    total_revenue = 4000 + 1000 + 30 * 50\n\n    # Calculate the total profit\n    total_profit = total_revenue - total_cost\n    result = total_profit\n    return result"}
{"output": "def solution():\n    # Calculate the cost of the first amusement park\n    adult_cost = 26 * 2\n    child_cost = 12 * 2\n    total_cost_first = adult_cost + child_cost\n\n    # Calculate the cost of the second amusement park\n    adult_cost = 14 * 2\n    child_cost = 10 * 2\n    total_cost_second = adult_cost + child_cost\n\n    # Calculate the difference in cost between the two amusement parks\n    cost_difference = total_cost_first - total_cost_second\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tomatoes sold per day and the cost per tomato\n    TOMATOES_SOLD_PER_DAY = 500\n    COST_PER_TOMATO = 0.5\n\n    # Calculate the total cost of buying the new vendor\n    new_vendor_cost = TOMATOES_SOLD_PER_DAY * COST_PER_TOMATO\n\n    # Calculate the total revenue from selling the new vendor\n    new_vendor_revenue = TOMATOES_SOLD_PER_DAY * 0.4\n\n    # Calculate the total savings per day\n    total_savings_per_day = (new_vendor_revenue - COST_PER_TOMATO) - TOMATOES_SOLD_PER_DAY\n\n    # Calculate the total savings per week\n    total_savings_per_week = total_savings_per_day * 7\n\n    # Display the total savings per week\n    result = total_savings_per_week\n    return result"}
{"output": "def solution():\n    \n    sean_marbles = 56\n    carl_marbles = 4 * sean_marbles\n    total_marbles = carl_marbles + sean_marbles\n    result = total_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of students and the number of groups required\n    total_students = 50\n    total_groups = 6\n\n    # Calculate the number of students in each group\n    students_per_group = total_students / total_groups\n\n    # Calculate the number of additional groups required\n    additional_groups = 12 - students_per_group\n\n    # return the result\n    result = additional_groups\n    return result"}
{"output": "def solution():\n    \n    weekdays = 5\n    weekend_days = 2\n    weekday_rental = 60\n    weekend_rental = 100\n    total_rental = (weekdays * weekday_rental) + (weekend_days * weekend_rental)\n    result = total_rental\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of bananas\n    initial_bananas = 48\n\n    # Calculate the number of bananas after the first day\n    first_day_bananas = initial_bananas / 2\n\n    # Calculate the number of bananas after the second day\n    second_day_bananas = first_day_bananas + 25 - 12\n\n    # Calculate the number of bananas after the third day\n    third_day_bananas = second_day_bananas + 6\n\n    # Display the total number of bananas\n    result = third_day_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of roommates and the monthly electricity bill\n    num_roommates = 4\n    monthly_bill = 100\n\n    # Calculate the total electricity bill for one month\n    monthly_total = monthly_bill * 12\n\n    # Calculate the electricity bill for each roommate per month\n    roommate_total = monthly_total / num_roommates\n\n    # Display the electricity bill for each roommate per month\n    result = roommate_total\n    return result"}
{"output": "def solution():\n    \n    glasses_per_dozen = 12\n    plates_per_dozen = 12\n    glasses_sent = 8 * glasses_per_dozen\n    plates_sent = 4 * plates_per_dozen\n    glasses_broken = 10\n    plates_broken = 6\n    glasses_remaining = glasses_sent - glasses_broken\n    plates_remaining = plates_sent - plates_broken\n    total_glasses = glasses_remaining + glasses_remaining\n    total_plates = plates_remaining + plates_remaining\n    result = total_glasses + total_plates\n    return result"}
{"output": "def solution():\n    \n    # Define the number of small and large stickers Lorraine starts with\n    small_stickers = 30\n    large_stickers = 40\n\n    # Calculate the number of small and large stickers after the first trades\n    small_stickers_after_first_discount = small_stickers - (small_stickers * 0.9)\n    large_stickers_after_first_discount = large_stickers - (large_stickers_after_first_discount * 0.5)\n\n    # Calculate the number of small and large stickers after the second trades\n    small_stickers_after_second_discount = large_stickers_after_first_discount - (large_stickers_after_first_discount * 3)\n    large_stickers_after_second_discount = large_stickers_after_second_discount - (large_stickers_after_second_discount * 0.5)\n\n    # Calculate the total number of buttons Lorraine has\n    total_buttons = small_stick"}
{"output": "def solution():\n    \n    # Define the number of matches played on Monday and Friday\n    monday_matches = 2\n    friday_matches = 1\n\n    # Calculate the number of matches played on Saturday\n    saturday_matches = monday_matches * 2\n\n    # Calculate the total number of matches played in one week\n    total_matches = monday_matches + friday_matches + saturday_matches\n\n    # return the result\n    result = total_matches\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of people on the council\n    total_people = 33\n\n    # Calculate the number of votes in the old regulation\n    old_regulation_votes = total_people * 2\n\n    # Calculate the number of votes in the new regulation\n    new_regulation_votes = old_regulation_votes * 2\n\n    # Display the number of votes in the new regulation\n    result = new_regulation_votes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students who need size each type of shirt\n    extra_small = 11\n    small = 2 * extra_small\n    medium = small - 4\n    large = medium / 2\n    extra_large = large + 6\n\n    # Calculate the total number of shirts needed\n    total_shirts = extra_small + small + medium + large + extra_large\n\n    # Display the total number of shirts needed\n    result = total_shirts\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the bag\n    original_price = 140\n\n    # Calculate the discount amount\n    discount = original_price * 0.05\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of songs in a playlist and the length of each song\n    SONGS_PER_PLAYLIST = 300\n    SONG_LENGTH = 10\n\n    # Calculate the total length of all the songs in the 20 playlists\n    total_length = SONGS_PER_PLAYLIST * SONG_LENGTH * 20\n\n    # Display the total length in hours\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people and the percentage of people who win the big race\n    initial_people = 50\n    big_race_percentage = 0.2\n\n    # Calculate the number of people who win the big race\n    big_race_wins = initial_people * big_race_percentage\n\n    # Calculate the number of people who don't win the big race\n    remaining_people = initial_people - big_race_wins\n\n    # Calculate the percentage of people who win the big race\n    big_race_percentage_remaining = 0.6\n\n    # Calculate the number of people who win the big race\n    big_race_wins_remaining = remaining_people * big_race_percentage_remaining\n\n    # Calculate the number of people who win the big race\n    big_race_wins_total = big_race_wins_remaining + big_race_wins_remaining\n\n    # Calculate the number of people who win the big race\n    big_race_percentage_remaining = 1 - big_race_percentage_remaining\n\n    # Calculate the number of people who"}
{"output": "def solution():\n    \n    girls = 6\n    pomeranians = girls / (1/3)\n    total_puppies = (2/3) * pomeranians\n    result = total_puppies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Jayden had\n    initial_money = 70\n\n    # Calculate the amount of money Jayden's sister gave her\n    sister_money = 90 / 2\n\n    # Calculate the total amount of money Jayden has\n    total_money = initial_money + sister_money\n\n    # Calculate the amount of money Jayden still needs to buy the camera\n    remaining_money = total_money - 200\n\n    # Display the amount of money Jayden still needs to buy the camera\n    result = remaining_money\n    return result"}
{"output": "def solution():\n    \n    total_cases = 250\n    first_house_cases = total_cases / 3\n    second_house_cases = total_cases - first_house_cases\n    third_house_cases = second_house_cases * 2\n    result = third_house_cases\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    CUCUMBER_PRICE = 2\n    TOMATO_PRICE = 1\n    LETTUCE_PRICE = 3\n\n    # Define the number of each item purchased\n    leila_cucumbers = 3\n    jack_tomatoes = 5\n    chase_lettuce = 1\n\n    # Calculate the total cost of the cucumbers\n    leila_cost = leila_cucumbers * CUCUMBER_PRICE\n\n    # Calculate the total cost of the tomatoes\n    jack_cost = jack_tomatoes * TOMATO_PRICE\n\n    # Calculate the total cost of the lettuce\n    lettuce_cost = chase_lettuce * LETTUCE_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = leila_cost + jack_cost + lettuce_cost\n\n    # Display the total cost\n    result ="}
{"output": "def solution():\n    \n    # Define the number of bananas\n    bananas = 200\n\n    # Calculate the number of pears\n    pears = bananas * 1.45\n\n    # Calculate the total number of fruits\n    total_fruits = bananas + pears\n\n    # Display the total number of fruits\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the ball and the amount of money Marissa had\n    ball_cost = 20\n    marissa_money = 80\n\n    # Calculate the amount of money left after buying the ball\n    remaining_money = marissa_money - ball_cost\n\n    # Calculate the number of candy bars Marissa bought\n    candy_bars = remaining_money // 5\n\n    # Display the number of candy bars\n    result = candy_bars\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per kilogram of oranges\n    COST_PER_KG = 3\n\n    # Calculate the total cost to make 1 liter of juice\n    total_cost_per_liter = 5 * COST_PER_KG\n\n    # Calculate the total cost to make 4 liters of juice\n    total_cost = total_cost_per_liter * 4\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of books read in one hour\n    books_per_hour = 300 / 2\n\n    # Define the number of books read after one hour\n    books_after_one_hour = books_per_hour - 150\n\n    # Calculate the total number of books read\n    total_books = books_after_one_hour + books_after_one_hour\n\n    # Display the total number of books read\n    result = total_books\n    return result"}
{"output": "def solution():\n    \n    # Define the hourly rate and the number of classes\n    HOURLY_RATE = 15\n    MONDAY_CLASSES = 4\n    MONDAY_HOURS = 5\n    WEDNESDAY_CLASSES = 2\n    WEDNESDAY_HOURS = 2\n\n    # Calculate the total earnings from Monday\n    monday_earnings = (MONDAY_CLASSES * HOURLY_RATE * MONDAY_HOURS) + (WEDNESDAY_CLASSES * WEDNESDAY_HOURS)\n\n    # Calculate the total earnings from Wednesday\n    wednesday_earnings = (MONDAY_CLASSES + WEDNESDAY_CLASSES) * HOURLY_RATE * WEDNESDAY_HOURS\n\n    # Calculate the total earnings for both days\n    total_earnings = monday_earnings + wednesday_earnings\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of vanilla and fruity scents\n    vanilla_scents = 4\n    fruity_scents = 8\n\n    # Calculate the number of vanilla and fruity scents sold\n    vanilla_sold = vanilla_scents * 5\n    fruity_sold = fruity_scents * 2\n\n    # Calculate the difference in sales between the vanilla and fruity scents\n    sales_difference = vanilla_sold - fruity_sold\n\n    # return the result\n    result = sales_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each eggplant and the total amount to be made\n    EGGPLANT_PRICE = 3\n    TOTAL_AMOUNT = 135\n\n    # Define the number of eggplants to be sold\n    num_eggplants = 20\n\n    # Calculate the total amount to be made from selling the eggplants\n    eggplant_total = num_eggplants * EGGPLANT_PRICE\n\n    # Calculate the remaining amount to be made from selling the corn\n    corn_remaining = TOTAL_AMOUNT - eggplant_total\n\n    # Calculate the price of each ear of corn\n    corn_price = corn_remaining / 25\n\n    # Display the price of each ear of corn\n    result = corn_price\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hours Tatiana has\n    total_hours = 7 + 5\n\n    # Calculate the number of hours Tatiana spends playing soccer\n    soccer_hours = total_hours - 3 - (1/3 * 3)\n\n    # Calculate the percentage of Tatiana's weekend spent playing soccer\n    soccer_percentage = (soccer_hours / total_hours) * 100\n\n    # Display the percentage of Tatiana's weekend spent playing soccer\n    result = soccer_percentage\n    return result"}
{"output": "def solution():\n    \n    total_pencils = 50\n    brandon_pencils = total_pencils / 2\n    remaining_pencils = total_pencils - brandon_pencils\n    charlie_pencils = remaining_pencils * 3 / 5\n    kept_pencils = remaining_pencils - charlie_pencils\n    result = kept_pencils\n    return result"}
{"output": "def solution():\n    \n    # Define the distance and speed of the museum\n    distance = 150\n    speed = 75\n\n    # Calculate the time taken to travel the museum\n    time = distance / speed\n\n    # Calculate the total time spent at the museum\n    total_time = time + 6\n\n    # Calculate the distance that Jack gone from home\n    distance_to_home = distance - total_time\n\n    # Display the distance from home\n    result = distance_to_home\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars and motorcycles\n    num_cars = 57\n    num_motorcycles = 73\n\n    # Define the number of wheels needed for each car and motorcycle\n    car_wheels = 4\n    motorcycle_wheels = 2\n\n    # Calculate the total number of wheels needed\n    total_wheels = (num_cars * car_wheels) + (num_motorcycles * motorcycle_wheels)\n\n    # Calculate the number of wheels left in the box\n    wheels_left = 650 - total_wheels\n\n    # return the result\n    result = wheels_left\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the laptop\n    original_price = 1000\n\n    # Calculate the discount amount\n    discount = original_price * 0.2\n\n    # Calculate the final price after the discount\n    final_price = original_price - discount\n\n    # Display the final price\n    result = final_price\n    return result"}
{"output": "def solution():\n    \n    total_movies = 600\n    series_movies = total_movies / 3\n    normal_movie_cost = 10\n    series_movie_cost = 6\n    remaining_movies = total_movies - series_movies\n    older_movies = 0.4 * remaining_movies\n    new_movie_cost = 5\n    total_cost = (series_movies * series_movie_cost) + (older_movies * older_movie_cost) + (normal_movies * normal_movie_cost)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    peach_price = 2\n    plum_price = 1\n    apricot_price = 3\n    peaches = 6\n    plums = 8\n    apricots = 6\n    total_spent = (peaches * peach_price) + (plums * plum_price) + (apricots * apricot_price)\n    result = total_spent\n    return result"}
{"output": "def solution():\n    # Calculate the distance travelled in 6 hours at 50 miles per hour\n    distance_driven = 50 * 6\n\n    # Calculate the distance travelled in 6 hours at half their speed minus 5 miles per hour\n    distance_half = (1.5 * 6) / 2\n\n    # Calculate the total distance travelled\n    total_distance = distance_driven + distance_half\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of enemies and berries each player gets\n    emma_enemies = 10 + 8\n    emma_berries = 5 + 3\n\n    # Calculate the total points earned from each player\n    ava_points = emma_enemies * 10 + emma_berries * 5\n    emma_points = emma_berries * 5 + emma_berries * 5\n\n    # Calculate the total points earned from the three players\n    total_points = ava_points + emma_points\n\n    # Calculate the difference in points between the two players\n    points_difference = total_points - emma_points\n\n    # return the result\n    result = points_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of the pizzas and the cost of the two pizzas that cost 30 dollars\n    total_cost = 64\n    two_pizza_cost = 30\n\n    # Calculate the cost of the other two pizzas\n    other_pizza_cost = (total_cost - two_pizza_cost) / 2\n\n    # return the result\n    result = other_pizza_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total number of times they ride their bikes in a week\n    usual_days = 5 + 2*2  # they ride twice the times they do on usual days\n    total_days = usual_days + 2*2  # they ride twice the times they do on usual days\n    total_times = total_days * 3  # they can ride 3 times a day for 5 days\n    result = total_times\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of orange and white fish\n    orange_fish = 3\n    white_fish = 4\n\n    # Define the number of fish in the mixed tank\n    mixed_tank_fish = 17\n\n    # Calculate the number of orange fish after adding the mixed tank\n    orange_fish += mixed_tank_fish * 2\n\n    # Calculate the total number of fish\n    total_fish = orange_fish + white_fish\n\n    # Calculate the number of white fish\n    white_fish = total_fish - mixed_tank_fish\n\n    # return the result\n    result = white_fish\n    return result"}
{"output": "def solution():\n    \n    fuel_efficiency = 10\n    regular_price = 3\n    distance = 5\n    gallons_per_week = (distance * 4) / fuel_efficiency\n    total_price = gallons_per_week * regular_price\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the number of twenties and quarters\n    num_twenties = 10\n    num_quarters = 140\n\n    # Calculate the number of quarters spent\n    num_quarters_spent = num_quarters * 0.75\n\n    # Calculate the total amount spent\n    total_spent = num_quarters_spent + (num_twenties * 0.2)\n\n    # Display the total amount spent\n    result = total_spent\n    return result"}
{"output": "def solution():\n    \n    tomato_yield = 22\n    eggplant_yield = 4\n    num_tomato_plants = 5\n    num_eggplant_plants = 8\n    total_tomato_yield = num_tomato_plants * tomato_yield\n    total_eggplant_yield = num_eggplant_plants * eggplant_yield\n    total_yield = total_tomato_yield + total_eggplant_yield\n    result = total_yield\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of TVs sold\n    total_tvs = 40\n\n    # Calculate the number of smart TVs sold\n    smart_tvs = total_tvs / 4\n\n    # Calculate the number of analog TVs sold\n    analog_tvs = total_tvs / 8\n\n    # Calculate the number of OLED TVs sold\n    oled_tvs = total_tvs - smart_tvs - analog_tvs\n\n    # return the result\n    result = oled_tvs\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the trip and the amount of money John has\n    trip_cost = 300\n    money_available = 50\n\n    # Calculate the amount of money John can cover with the trip\n    money_covered = trip_cost / 2\n\n    # Calculate the amount of money John is missing\n    missing_money = money_available - money_covered\n\n    # return the result\n    result = missing_money\n    return result"}
{"output": "def solution():\n    \n    # Define the starting temperature\n    START_TEMP = 45\n\n    # Define the temperature increase per log\n    WALK_INCREASE = 5\n\n    # Calculate the total temperature increase\n    total_temp_increase = WALK_INCREASE * 2\n\n    # Calculate the number of logs Carson needs to burn\n    logs_to_burn = (START_TEMP + total_temp_increase) / WALK_INCREASE\n\n    # Display the number of logs Carson needs to burn\n    result = logs_to_burn\n    return result"}
{"output": "def solution():\n    \n    total_people = 90\n    total_groups = 9\n    group_size = total_people / total_groups\n    group_size_with_members = group_size * 3/5\n    group_size_with_seashells = group_size_with_members * 2\n    result = group_size_with_seashells\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 172\n\n    # Subtract the number of people who got off at the first stop\n    first_stop_people = initial_people - 47\n\n    # Add the number of people who got on at the second stop\n    second_stop_people = first_stop_people + 13 - 38\n\n    # Display the total number of people on the train\n    result = second_stop_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bottle caps found per day and the price per cap\n    CAPS_PER_DAY = 10\n    PRICE_PER_CAP = 0.25\n\n    # Calculate the total number of bottle caps found in 30 days\n    total_caps = CAPS_PER_DAY * 30\n\n    # Calculate the total amount of money earned\n    total_money = total_caps * PRICE_PER_CAP\n\n    # Display the total amount of money earned\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    regular_rate = 20\n    regular_hours = 8\n    extra_hours = 11 - regular_hours\n    extra_rate = regular_rate * 1.5\n    total_pay = regular_rate * regular_hours + extra_rate * extra_hours\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the number of female lions\n    female_lions = 12\n\n    # Calculate the number of male lions\n    male_lions = female_lions / 2\n\n    # Calculate the total number of lions\n    total_lions = female_lions + male_lions + 14\n\n    # Display the total number of lions\n    result = total_lions\n    return result"}
{"output": "def solution():\n    \n    original_price = 40\n    discount_percent = 25\n    discount_amount = original_price * (discount_percent / 100)\n    discounted_price = original_price - discount_amount\n    amount_paid = 50\n    money_left = discounted_price - amount_paid\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial employee number and salary\n    initial_employee = 200\n    salary_per_month = 4000\n\n    # Calculate the total salary paid to the employees after three months\n    total_salary = initial_employee * salary_per_month * 20 * 3\n\n    # return the result\n    result = total_salary\n    return result"}
{"output": "def solution():\n    # Calculate the total length of the caroling schedule\n    total_length = 2 * 150 + 240  # the choir plans to sing \"Deck the Halls\" twice and \"Jingle Bells\" once\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    billy_rate = 10\n    billy_raise = 0.5\n    sally_rate = billy_rate + 0.5\n    sally_hours = 20\n    billy_salary = billy_rate * sally_hours\n    sally_salary = sally_rate * sally_hours\n    difference = billy_salary - sally_salary\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of a loaf of bread and a bagel\n    LOAF_COST = 2\n    BAGEL_COST = 1\n\n    # Calculate the cost of 3 loaves of bread\n    loaf_total_cost = 3 * LOAF_COST\n\n    # Calculate the cost of 2 bagels\n    bagel_total_cost = 2 * BAGEL_COST\n\n    # Calculate the cost difference between the two\n    cost_difference = loaf_total_cost - bagel_total_cost\n\n    # Display the cost difference\n    result = cost_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of points scored by Pierson\n    pierson_points = 278\n\n    # Calculate the number of points scored by Nikita\n    nikita_points = (pierson_points / 2) + 11\n\n    # Calculate the total number of points scored\n    total_points = pierson_points + nikita_points\n\n    # return the result\n    result = total_points\n    return result"}
{"output": "def solution():\n    num_classes = 40\n    num_students_per_class = 25\n    num_teachers_per_class = 3\n    num_trees_per_child = 1\n    num_trees_per_teacher = 2\n\n    # Calculate the total number of students\n    total_students = num_classes * num_students_per_class\n\n    # Calculate the total number of teachers\n    total_teachers = num_classes * num_teachers_per_class\n\n    # Calculate the total number of trees\n    total_trees = (total_students * num_trees_per_child) + (total_teachers * num_trees_per_teacher)\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stuffed animals\n    puppies = 3\n    koalas = 5\n    zebras = 2\n    frogs = 4\n\n    # Calculate the total number of stuffed animals\n    total_animals = puppies + koalas + zebras + frogs\n\n    # Calculate the number of stuffed goats\n    goats = total_animals * 0.3\n\n    # Display the number of stuffed goats\n    result = goats\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of hours Kris needs to play\n    total_hours = 30\n\n    # Calculate the number of hours Kris plays in the first two weeks\n    first_two_weeks_hours = 0.5 * 2 * 2\n\n    # Calculate the total number of hours Kris plays in the last two weeks\n    last_two_weeks_hours = 0.5 * 2 * 2\n\n    # Calculate the total number of hours Kris has already played\n    total_played_hours = first_two_weeks_hours + last_two_weeks_hours\n\n    # Calculate the number of hours Kris still needs to play to earn the achievement\n    remaining_hours = total_hours - total_played_hours\n\n    # Display the number of hours Kris still needs to play\n    result = remaining_hours\n    return result"}
{"output": "def solution():\n    \n    car1_speed = 60\n    car2_speed = 70\n    time = 2\n    car1_distance = car1_speed * time\n    car2_distance = car2_speed * time\n    total_distance = car1_distance + car2_distance\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    diamond_cost = 600\n    gold_cost = 300\n    total_cost = diamond_cost + gold_cost\n    premium_percent = 30\n    premium_amount = total_cost * (premium_percent / 100)\n    total_paid = total_cost + premium_amount\n    result = total_paid\n    return result"}
{"output": "def solution():\n    \n    # Define the number of third-graders and fourth graders\n    third_graders = 500\n    fourth_graders = 100\n\n    # Calculate the number of fifth graders\n    fifth_graders = 400\n\n    # Calculate the fourth grade pass rate\n    fourth_grade_pass_rate = 2 * fourth_grade_pass_rate\n\n    # Calculate the total pass rate\n    total_pass_rate = (third_graders * 340) + (fourth_graders * fourth_grade_pass_rate) + (400 * fifth_grade_pass_rate)\n\n    # return the result\n    result = total_pass_rate\n    return result"}
{"output": "def solution():\n    \n    # Define the number of glass chips per square inch\n    CHIPS_PER_SQ_INCH = 12\n\n    # Define the size of each bag of glass chips\n    BAG_SIZE = 72\n\n    # Define the height of the mosaic in square inches\n    mosaic_height = 3\n\n    # Calculate the total number of glass chips\n    total_chips = 2 * BAG_SIZE\n\n    # Calculate the total square inches of the mosaic\n    total_square_inches = total_chips * CHIPS_PER_SQ_INCH\n\n    # Display the total square inches of the mosaic\n    result = total_square_inches\n    return result"}
{"output": "def solution():\n    \n    # Define the number of quarts of tea left and the number of students who drank 1.5 quarts each\n    initial_quarts = 10\n    num_students_1 = 4\n\n    # Define the number of quarts of tea each drank and the number of students who drank 2 quarts each\n    num_students_2 = 16\n\n    # Calculate the total number of gallons of tea at the beginning of the party\n    total_gallons = (initial_quarts * num_students_1 * 1.5) + (initial_quarts * num_students_2 * 2)\n\n    # Display the total number of gallons of tea\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of butterscotch candies\n    initial_butterscotch_candies = 100\n\n    # Define the number of butterscotch candies sold and ordered\n    sold_butterscotch_candies = 150\n    ordered_butterscotch_candies = 100\n\n    # Calculate the total number of butterscotch candies sold\n    total_butterscotch_candies_sold = sold_butterscotch_candies + ordered_butterscotch_candies\n\n    # Calculate the number of butterscotch candies still needed to reach 100\n    remaining_butterscotch_candies = initial_butterscotch_candies - total_butterscotch_candies_sold\n\n    # return the result\n    result = remaining_butterscotch_candies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of students on campus\n    initial_students = 10\n\n    # Calculate the number of students on campus after one month\n    final_students = initial_students * 2\n\n    # Calculate the number of additional students who joined by May\n    additional_students = final_students - initial_students\n\n    # return the result\n    result = additional_students\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each branch and the amount of money Felix made\n    BRANCH_COST = 0.25\n    DAILY_MONEY = 105\n\n    # Calculate the number of branches Felix climbed per day\n    branches_per_day = DAILY_MONEY / BRANCH_COST\n\n    # Display the number of branches climbed per day\n    result = branches_per_day\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of petals picked\n    total_petals = 3*5 + 4*6 + 5*4 + 6*7\n\n    # Calculate the number of petals left\n    remaining_petals = total_petals - 1*5 + 6*7\n\n    # Display the number of remaining flowers\n    result = remaining_petals\n    return result"}
{"output": "def solution():\n    \n    total_marshmallows = 35\n    john_marshmallows = 9\n    desean_marshmallows = 9\n    lost_marshmallows = 3\n    remaining_marshmallows = total_marshmallows - john_marshmallows - desean_marshmallows - lost_marshmallows\n    s_mores_per_kid = remaining_marshmallows // 2\n    result = s_mores_per_kid\n    return result"}
{"output": "def solution():\n    \n    jack_play_time = 20 / 0.25\n    friend_play_time = jack_play_time / 2\n    friend_play_time_1 = 1.5 * friend_play_time\n    total_play_time = 4 * 60 # convert hours to minutes\n    total_play_time_1 = jack_play_time + friend_play_time_1 + friend_play_time_1\n    total_play_time_2 = jack_play_time + friend_play_time_2\n    total_play_time_3 = total_play_time_1 + friend_play_time_3 + total_play_time_2 + total_play_time_3\n    result = total_play_time_3\n    return result"}
{"output": "def solution():\n    \n    jar_size = 10\n    oil_ratio = 2\n    fragrance_ratio = 1\n    sugar_ratio = 1\n    total_ratio = oil_ratio + fragrance_ratio + sugar_ratio\n    oil_amount = (jar_size / total_ratio) * oil_ratio\n    result = oil_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of goats and cows\n    goat_price = 500\n    cow_price = 1500\n\n    # Define the number of goats and cows purchased\n    num_goats = 3\n    num_cows = 2\n\n    # Calculate the total cost of the goats and cows\n    total_cost = (goat_price * num_goats) + (cow_price * num_cows)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_cupcakes = 63\n    chocolate_cupcakes = 8\n    toffee_cupcakes = 40\n    cupcakes_to_buy = total_cupcakes - chocolate_cupcakes - toffee_cupcakes\n    result = cupcakes_to_buy\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Robert has\n    robert_cars = 20\n\n    # Calculate the number of cars Joe has\n    joe_cars = robert_cars * 2\n\n    # Calculate the number of cars Joe sells\n    sold_cars = joe_cars * 0.2\n\n    # Calculate the number of cars Joe gives away\n    given_away_cars = sold_cars * 2\n\n    # Calculate the number of cars Joe remains with\n    remaining_cars = joe_cars - sold_cars - given_away_cars\n\n    # Display the number of cars Joe remains with\n    result = remaining_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the total amount raised\n    total_amount = 175000\n\n    # Define the amount raised from organizations\n    organization_amount = 50000\n\n    # Calculate the amount raised from students\n    student_amount = total_amount - organization_amount\n\n    # Calculate the amount each student raised\n    student_count = 20\n    student_amount = student_amount / student_count\n\n    # Display the amount each student raised\n    result = student_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the time Sandy walked on the first day\n    first_day_time = 8\n\n    # Calculate the time Sandy walked on the second day\n    second_day_time = first_day_time / 2\n\n    # Calculate the total time Sandy spent walking\n    total_time = first_day_time + second_day_time\n\n    # Convert the total time to minutes\n    total_time_minutes = total_time * 60\n\n    # Display the total time in minutes\n    result = total_time_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cars in the parking lot\n    initial_cars = 50\n\n    # Define the number of cars counted during the first break\n    first_break_cars = 20\n\n    # Calculate the number of cars remaining in the parking lot\n    remaining_cars = initial_cars + first_break_cars\n\n    # Calculate the number of cars in the parking lot who had gone\n    gone_cars = remaining_cars / 2\n\n    # Calculate the total number of cars counted during lunch break\n    total_cars = remaining_cars + gone_cars\n\n    # Display the total number of cars counted during lunch break\n    result = total_cars\n    return result"}
{"output": "def solution():\n    \n    cycles_per_day = 30\n    tasks_per_cycle = 5\n    pay_per_task = 1.20\n    days_per_week = 7\n    total_tasks = cycles_per_day * tasks_per_cycle * days_per_week\n    total_pay = total_tasks * pay_per_task\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the points scored by Sasha in the first game\n    sasha_points_1 = 14\n\n    # Calculate the points scored by Julie in the first game\n    julie_points_1 = sasha_points_1 - 4\n\n    # Calculate the points scored by Sasha in the second game\n    sasha_points_2 = julie_points_1 - 6\n\n    # Calculate the total points scored by both games\n    total_points = sasha_points_1 + julie_points_1 + sasha_points_2\n\n    # Display the total points scored\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    cat_food_packages = 8\n    dog_food_packages = 6\n    cat_food_tins_per_package = 11\n    dog_food_tins_per_package = 6\n    total_cat_food_tins = cat_food_packages * cat_food_tins_per_package\n    total_dog_food_tins = dog_food_packages * dog_food_tins_per_package\n    difference = total_cat_food_tins - total_dog_food_tins\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cards and the difference in number between Becca and Smendrick\n    total_cards = 341\n    becca_smendrick_diff = 12\n\n    # Calculate the number of cards that PJ has\n    pj_cards = total_cards / 4\n\n    # Calculate the number of cards that Smendrick has\n    smendrick_cards = pj_cards * 3\n\n    # Calculate the number of cards that Becca has\n    becca_cards = smendrick_cards + becca_smendrick_diff\n\n    # return the result\n    result = becca_cards\n    return result"}
{"output": "def solution():\n    \n    green_eggs = 5\n    blue_eggs = green_eggs * 2\n    pink_eggs = blue_eggs - 1\n    yellow_eggs = pink_eggs / 3\n    total_eggs = green_eggs + blue_eggs + pink_eggs + yellow_eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of the book and the cost of the book\n    book_weight = 4\n    book_cost = 32\n\n    # Calculate the total cost of the book\n    book_cost = book_weight * book_cost\n\n    # Calculate the total cost of the book with the shipping company\n    total_cost = book_weight * 0.35 + 20 * 0.08\n\n    # Calculate the amount of the refund\n    refund_amount = book_cost * 0.75\n\n    # Calculate the amount of money lost\n    money_lost = book_cost - total_cost - refund_amount\n\n    # return the result\n    result = money_lost\n    return result"}
{"output": "def solution():\n    \n    starting_money = 40\n    father_money = 100\n    jeans_cost = 30\n    num_jeans = 2\n    bag_cost = 20\n    total_spent = (jeans_cost * num_jeans) + bag_cost\n    money_left = starting_money + father_money - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bars produced in the first week\n    first_week = 8000\n\n    # Calculate the number of bars produced in the second week\n    second_week = first_week / 2\n\n    # Calculate the number of bars produced in the third week\n    third_week = first_week * 3\n\n    # Calculate the total number of bars produced in the first three weeks\n    total_bars = first_week + second_week + third_week\n\n    # Calculate the number of bars produced in the fourth week\n    fourth_week = 50000 - total_bars\n\n    # Display the number of bars produced in the fourth week\n    result = fourth_week\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each TikTok video in minutes\n    VIDEO_LENGTH = 4\n\n    # Define the number of TikTok videos Britany records each week\n    videos_per_week = 18\n\n    # Define the number of hours Britany spends writing amateur songs each week\n    amateur_hours_per_week = 2\n\n    # Define the number of minutes Britany spends doing her makeup each week\n    makeup_minutes_per_week = 15 * 6\n\n    # Calculate the total number of minutes Britany spends on TikTok each week\n    total_minutes_per_week = (videos_per_week * VIDEO_LENGTH) + amateur_hours_per_week + makeup_minutes_per_week\n\n    # Calculate the total number of minutes Britany spends on TikTok each month\n    total_minutes_per_month = total_minutes_per_week * 4\n\n    # Display the total number of minutes Britany spends on TikTok each month\n    result = total_minutes_per_"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    MIRROR_PRICE = 129\n    SHIRT_PRICE = 2\n    CHANDELier_PRICE = 1\n    PPICTURE_PRICE = 10\n\n    # Define the number of each item Angela needs to install\n    num_mirrors = 6\n    num_shelves = 2\n    num_chandeliers = 2\n    num_pictures = 20\n\n    # Calculate the total cost of each type of item\n    mirrors_cost = num_mirrors * MIRROR_PRICE\n    shelves_cost = num_shelves * SHIRT_PRICE\n    chandelier_cost = num_chandeliers * CHANDELier_PRICE\n    pictures_cost = num_pictures * PPICTURE_PRICE\n\n    # Calculate the total cost of all items\n    total_cost = mirrors_cost + shelves_cost + chandelier_cost + pictures_cost\n\n    # Display the total cost\n    result = total_cost"}
{"output": "def solution():\n    \n    # Define the amount saved by Eva\n    eda_savings = 20\n\n    # Calculate the amount saved by Anthony\n    anthony_savings = eda_savings + 10\n\n    # Calculate the amount saved by Roy\n    roy_savings = anthony_savings * 1.4\n\n    # Display the amount saved by Roy\n    result = roy_savings\n    return result"}
{"output": "def solution():\n    \n    # Define Pompei's mountain height in inches\n    POMPEI_HEIGHT = 1\n\n    # Calculate Saskay's mountain height in inches\n    SASKAY_HEIGHT = POMPEI_HEIGHT * 12\n\n    # Calculate Kagiyami's mountain height in inches\n    KAGIYAMI_HEIGHT = SASKAY_HEIGHT * 4\n\n    # Calculate Naruto's mountain height in inches\n    NARuto_HEIGHT = KAGIYAMI_HEIGHT * 10\n\n    # Display Naruto's mountain height in feet\n    result = NARuto_HEIGHT\n    return result"}
{"output": "def solution():\n    \n    speed = 8\n    time_1 = 4\n    time_2 = 6\n    distance_1 = speed * time_1\n    distance_2 = speed * time_2\n    total_distance = distance_1 + distance_2\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of each kangaroo\n    KANGAROO_SPEED = 0.5\n\n    # Define the number of kangaroos and hours\n    kangaroos = 3\n    hours = 18\n\n    # Calculate the total speed of the kangaroos\n    total_speed = kangaroos * KANGAROO_SPEED\n\n    # Calculate the time it will take for each turtle to travel the same speed\n    time_per_turtle = hours / 4\n\n    # Calculate the total time it will take for four turtles to travel the same speed\n    total_time = time_per_turtle * 4\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of clay dishes Kora made\n    kora_dishes = 20\n\n    # Calculate the number of clay dishes Rory made\n    rory_dishes = kora_dishes + 20\n\n    # Calculate the number of clay dishes Jada made\n    jada_dishes = rory_dishes * 2\n\n    # Calculate the total number of clay dishes made\n    total_dishes = kora_dishes + rory_dishes + jada_dishes\n\n    # Display the total number of clay dishes\n    result = total_dishes\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the laptop and the discount\n    original_price = 600\n    discount = 200\n\n    # Calculate the discounted price of the new laptop\n    discounted_price = original_price - discount\n\n    # Calculate the total amount Erika has to pay\n    total_payment = 150 + 80 + 50\n\n    # Calculate the total cost of the new laptop\n    total_cost = discounted_price + 600\n\n    # Calculate the amount of money Erika has to pay\n    money_needed = total_cost - total_payment\n\n    # Display the amount of money Erika has to pay\n    result = money_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per apple\n    LARGE_APLE_SLICES = 5\n    SMALL_APLE_SLICES = 3\n\n    # Define the number of large and small apples\n    num_large_apples = 3\n    num_small_apples = 5\n\n    # Calculate the total number of slices\n    total_slices = (num_large_apples * LARGE_APLE_SLICES) + (num_small_apples * SMALL_APLE_SLICES)\n\n    # Subtract the number of slices Adam ate\n    remaining_slices = total_slices - 15\n\n    # Display the number of remaining slices\n    result = remaining_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of milk produced per cow\n    MILK_PER_COW = 5\n\n    # Define the number of cows already produced\n    cows_produced = 3\n\n    # Define the target amount of milk produced per day\n    TARGET_AMOUNT = 25\n\n    # Calculate the number of cows needed to produce the target amount\n    cows_needed = (TARGET_AMOUNT / MILK_PER_COW) - cows_produced\n\n    # Display the number of cows needed\n    result = cows_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the original length of the glue stick\n    ORIGINAL_LENGTH = 12\n\n    # Calculate the length of the glue stick used\n    used_length = ORIGINAL_LENGTH * (1/6) + ORIGINAL_LENGTH * (2/3) + ORIGINAL_LENGTH * (1/2)\n\n    # Calculate the length of the glue stick not used\n    not_used_length = ORIGINAL_LENGTH - used_length\n\n    # Display the total length of the glue sticks not used\n    result = not_used_length\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the car and the phone\n    CAR_PRICE = 10000\n    PHONE_PRICE = 800\n\n    # Define the amount of money Gabriel has\n    GABRIEL_MONEY = 5000\n\n    # Define the amount of money Gabriel's brother gave him\n    BROTHER_MONEY = 200\n\n    # Calculate the total cost of the car and phone\n    total_cost = CAR_PRICE + PHONE_PRICE\n\n    # Calculate the total amount of money Gabriel has\n    total_money = GABRIEL_MONEY + BROTHER_MONEY\n\n    # Calculate the amount of money Gabriel still needs\n    still_needed = total_money - total_cost\n\n    # Display the amount of money Gabriel still needs\n    result = still_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the hat and the amount of money given\n    hat_cost = 70\n    money_given = 20 * 4\n\n    # Calculate the total amount of change\n    change = money_given - hat_cost\n\n    # return the result\n    result = change\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the squirt guns\n    squirt_cost = 6 * 2\n\n    # Calculate the total cost of the water balloons\n    water_balloon_cost = 3 * 3\n\n    # Calculate the total cost of all the items\n    total_cost = squirt_cost + water_balloon_cost\n\n    # Calculate the amount of money Craig has left\n    money_left = 2 * 20 - total_cost\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dishes collected by jack\n    jack_dishes = 60\n\n    # Calculate the number of socks collected by Jack\n    jack_socks = jack_dishes * 2\n\n    # Calculate the number of dishes collected by Peter\n    peter_dishes = jack_dishes / 2\n\n    # Calculate the total number of socks and dishes\n    total_socks = jack_socks + peter_socks\n    total_dishes = jack_dishes + peter_dishes\n\n    # Display the total number of socks and dishes\n    result = total_socks + total_dishes\n    return result"}
{"output": "def solution():\n    \n    total_students = 20\n    math_only = 5\n    english_only = 8\n    math_and_english = total_students - math_only - english_only\n    result = math_and_english\n    return result"}
{"output": "def solution():\n    \n    total_show_time = 120\n    stage_time = 2\n    perform_time = 6\n    exit_time = 2\n    intermission_time = 10\n    remaining_time = total_show_time - stage_time - perform_time - exit_time\n    num_groups = remaining_time // intermission_time\n    result = num_groups\n    return result"}
{"output": "def solution():\n    \n    # Define the initial investment amount and the interest rate\n    initial_amount = 300\n    interest_rate = 0.75\n\n    # Calculate the interest earned over 3 years\n    interest_earned = initial_amount * interest_rate * 3\n\n    # Calculate the total amount after 3 years\n    total_amount = initial_amount + interest_earned\n\n    # return the result\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the number of white and floral shirts\n    white_shirts = 40\n    floral_shirts = 50\n\n    # Calculate the number of white shirts with collars\n    white_collar_shirts = white_shirts / 2\n\n    # Calculate the number of floral shirts with buttons\n    floral_collar_shirts = floral_shirts - 20\n\n    # Calculate the difference between the number of floral shirts with no buttons and white shirts with collars\n    diff = floral_collar_shirts - white_collar_shirts\n\n    # return the result\n    result = diff\n    return result"}
{"output": "def solution():\n    \n    total_eggs = 900\n    eggs_per_tray = 30\n    total_trays = total_eggs / eggs_per_tray\n    price_per_tray = 2.5\n    total_earnings = total_trays * price_per_tray\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of goats in each farms\n    farms_goats_1 = 55\n    farms_goats_2 = 45\n\n    # Calculate the number of goats sold from Farm X\n    goats_sold_X = 10\n\n    # Calculate the number of goats sold from Farm Y\n    goats_sold_Y = 2 * goats_sold_X\n\n    # Calculate the total number of goats sold\n    total_goats_sold = goats_sold_X + goats_sold_Y\n\n    # Calculate the total number of goats left\n    total_goats_left = farms_goats_1 + farms_goats_2 - total_goats_sold\n\n    # Display the total number of goats left\n    result = total_goats_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pairs of shoes James buys each month and the total cost\n    shoes_per_month = 2\n    total_cost = 40000\n\n    # Calculate the average cost per pair of shoes\n    cost_per_pair = total_cost / (shoes_per_month * 12)\n\n    # Display the average cost per pair of shoes\n    result = cost_per_pair\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of green and red food and the discount amount\n    GREEN_PRICE = 25\n    RED_PRICE = 18\n    DISCOUNT = 2\n\n    # Define the number of baskets of green and red food purchased\n    green_baskets = 3\n    red_baskets = 3\n\n    # Calculate the total cost of the green food\n    green_cost = green_baskets * GREEN_PRICE\n\n    # Calculate the total cost of the red food\n    red_cost = (red_baskets * RED_PRICE) - (green_cost * DISCOUNT)\n\n    # Calculate the total cost of all the purchased baskets\n    total_cost = green_cost + red_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of rooms and the time it takes to clean one room\n    total_rooms = 90\n    time_per_room = 20\n\n    # Calculate the number of rooms to clean\n    rooms_to_clean = total_rooms / 2\n\n    # Calculate the total time to clean all the rooms\n    total_time = rooms_to_clean * time_per_room\n\n    # Convert the total time to hours\n    hours = total_time / 60\n\n    # return the result\n    result = hours\n    return result"}
{"output": "def solution():\n    \n    # Define the number of homes built in each year\n    homes_year1 = 12\n    homes_year2 = 3 * homes_year1\n    homes_year3 = 2 * homes_year2\n\n    # Calculate the total number of homes built over the next three years\n    total_homes = homes_year1 + homes_year2 + homes_year3\n\n    # Display the total number of homes built\n    result = total_homes\n    return result"}
{"output": "def solution():\n    \n    # Let x be the age of my brother\n    x = 87 + 3\n\n    # Let y be the age of my sister\n    y = x + 2\n\n    # Let z be the age of my mom\n    z = 3 * x - 1\n\n    # We know that x + y + z = 87\n    # Substituting x in terms of y, we get 3x - 3 = 87\n    # Solving for x, we get x = 87 - 3\n\n    result = x\n    return result"}
{"output": "def solution():\n    \n    num_students = 27\n    num_glue_sticks_per_student = 2\n    num_packs = num_students // num_glue_sticks_per_student + (num_students % num_glue_sticks_per_student > 0)\n    result = num_packs\n    return result"}
{"output": "def solution():\n    \n    # Define the initial volume of water passing through the river\n    initial_volume = 4000\n\n    # Calculate the volume of water passing through the river after the first day\n    first_day_volume = initial_volume * 2\n\n    # Calculate the volume of water passing through the river after the second day\n    second_day_volume = first_day_volume * 2\n\n    # Calculate the total volume of water passing through the river after the third day\n    total_volume = first_day_volume + second_day_volume\n\n    # return the result\n    result = total_volume\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people infected per day and the number of days\n    PEOPLE_PER_DAY = 10\n    DAYS = 3\n\n    # Calculate the total number of people infected after three days\n    total_people = PEOPLE_PER_DAY * DAYS\n\n    # Display the total number of people infected\n    result = total_people\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money received by Julieta and Rafaela\n    rafaela_money = 20 * 40  # each customer gave 20 tips\n    julieta_money = 0.9 * rafaela_money  # Julieta received 10% less money than Rafaela\n    total_money = rafaela_money + julieta_money\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    total_oranges = 12\n    oranges_given = 3 * 2 + 3\n    oranges_remaining = total_oranges - oranges_given\n    result = oranges_remaining\n    return result"}
{"output": "def solution():\n    \n    claire_badges_per_month = 1\n    amber_badges_per_month = claire_badges_per_month * 2\n    wendy_badges_per_month = 3 * claire_badges_per_month\n    wendy_badges_per_year = wendy_badges_per_month * 12\n    difference = wendy_badges_per_year - amber_badges_per_year\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of banana bread loaves Paige can bake\n    banana_bread_loaves = 2\n\n    # Define the number of slices per banana bread loaf\n    slices_per_loaf = 8\n\n    # Calculate the total number of slices Paige can bake\n    total_slices = banana_bread_loaves * slices_per_loaf\n\n    # Calculate the total amount raised\n    total_raised = total_slices * 0.5\n\n    # Display the total amount raised\n    result = total_raised\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gold coins\n    gold_coins = 70\n\n    # Calculate the number of silver coins\n    silver_coins = gold_coins - 30\n\n    # Calculate the total number of coins\n    total_coins = gold_coins + silver_coins\n\n    # Display the total number of coins\n    result = total_coins\n    return result"}
{"output": "def solution():\n    \n    total_burritos = 600\n    students = 50\n    burritos_per_student = 10\n    burritos_eaten = 20\n    burritos_given = students * burritos_per_student\n    burritos_leftover = total_burritos - burritos_given - burritos_eaten\n    result = burritos_leftover\n    return result"}
{"output": "def solution():\n    \n    red_cars = 12\n    green_cars = red_cars - 2\n    blue_cars = 3 * green_cars\n    total_cars = 75\n    yellow_cars = total_cars - (red_cars + green_cars + blue_cars)\n    result = yellow_cars\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of books and the difference in number between Sofie, Anne, and Fawn\n    total_books = 85\n    sofie_difference = 25\n    fawn_difference = 12\n\n    # Calculate the number of books Anne has\n    anne_books = (total_books - sofie_difference) / (1 + sofie_difference + 1)\n\n    # Calculate the number of books Fawn has\n    fawn_books = anne_books + fawn_difference\n\n    # Display the number of books Fawn has\n    result = fawn_books\n    return result"}
{"output": "def solution():\n    \n    potatoes_weight = 5\n    sweet_potatoes_weight = potatoes_weight * 2\n    carrots_weight = sweet_potatoes_weight - 3\n    result = carrots_weight\n    return result"}
{"output": "def solution():\n    # Calculate the total number of small jello cups needed\n    total_jello_cups = 30 * 4\n\n    # Calculate the total number of boxes needed\n    total_boxes = total_jello_cups / 10\n\n    # Calculate the total cost\n    total_cost = total_boxes * 1.25\n\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the phones\n    total_cost = 5 * 700\n\n    # Calculate the amount of change the seller will give back\n    change = 4000 - total_cost\n    result = change\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of groceries per month\n    total_cost = 400\n\n    # Calculate the cost that Madeline pays per week\n    madeline_cost = total_cost * 0.6\n\n    # Calculate the cost that Keenan pays per week\n    keenan_cost = total_cost - madeline_cost\n\n    # Calculate the cost per week that Keenan pays\n    keenan_weekly_cost = keenan_cost / 4\n\n    # Return the result\n    result = keenan_weekly_cost\n    return result"}
{"output": "def solution():\n    \n    total_pieces = 60\n    day1_pieces = (2/5) * total_pieces\n    day2_pieces = 10\n    remaining_pieces = total_pieces - day1_pieces - day2_pieces\n    day3_pieces = (7/13) * remaining_pieces\n    eaten_pieces = day1_pieces + day2_pieces + day3_pieces\n    result = eaten_pieces\n    return result"}
{"output": "def solution():\n    \n    soda_price = 21\n    water_price = 8\n    soda_quantity = 3\n    water_quantity = 2\n    total_cost = (soda_price * soda_quantity) + (water_price * water_quantity)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each bolt\n    BOLT_PRICE = 0.03\n\n    # Define the number of bolts David wants to buy\n    bolts = 16\n\n    # Calculate the total cost of the bolts\n    total_cost = bolts * BOLT_PRICE\n\n    # Calculate the amount of money David has left\n    money_left = 12.48 - total_cost\n\n    # Display the amount of money David has left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Calculate the rate of dog walking\n    rate = 33 / 3\n\n    # Calculate the total earnings after 12 hours\n    earnings = rate * 12\n\n    # Display the total earnings\n    result = earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles Paul has\n    initial_marbles = 52\n\n    # Subtract the marbles given to Paul's friend\n    marbles_left = initial_marbles - 28\n\n    # Calculate the number of marbles Paul lost\n    lost_marbles = marbles_left / 4\n\n    # Calculate the number of marbles Paul has left\n    remaining_marbles = marbles_left - lost_marbles\n\n    # Display the number of marbles Paul has left\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of multiple-choice, true/false, and long-answer questions\n    num_multiple_choice = 10\n    num_true_false = 20\n    num_long_answer = 5\n\n    # Calculate the total number of points earned from each type of question\n    mc_points = num_multiple_choice * 0.8\n    tx_points = num_true_false * 0.9\n    sg_points = num_long_answer * 0.6\n\n    # Calculate the total number of points earned\n    total_points = mc_points + tx_points + sg_points\n\n    # return the result\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the cost to make a profit and the selling price per chicken\n    PROFIT = 2000\n    SELLING_PRICE = 50\n\n    # Calculate the number of chickens Isaias plans to sell\n    num_chickens = 300\n    num_sold = int(num_chickens * 3/5)\n\n    # Calculate the total cost to sell the chickens\n    total_cost = num_sold * SELLING_PRICE\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_glasses = 32\n    julie_glasses = 14\n    micah_glasses = total_glasses - julie_glasses\n    difference = julie_glasses - micah_glasses\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    hair_cost = 400\n    manicure_cost = hair_cost / 4\n    pedicure_cost = manicure_cost * 3 / 4\n    total_cost = hair_cost + manicure_cost + pedicure_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the rope and the cost per meter\n    rope_length = 20\n    cost_per_meter = 2\n\n    # Calculate the total cost of the rope\n    total_cost = rope_length * cost_per_meter\n\n    # Calculate the cost of the new rope\n    new_rope_cost = rope_length * 1.5\n\n    # Calculate the total cost of the new rope\n    total_new_cost = new_rope_cost\n\n    # Calculate the amount of money left over after buying the new rope\n    money_left_over = total_cost - total_new_cost\n\n    # return the result\n    result = money_left_over\n    return result"}
{"output": "def solution():\n    # Calculate Melanie's current age\n    current_age = 18 - 10\n\n    # Calculate the number of years until Melanie's age is thrice her present age\n    years = current_age - 3 * current_age\n    result = years\n    return result"}
{"output": "def solution():\n    \n    bacon_price = 10\n    chicken_price = bacon_price * 2\n    strawberry_price = 4\n    apple_price = strawberry_price / 2\n    total_price = (bacon_price * 5) + (chicken_price * 6) + (strawberry_price * 3) + (apple_price * 7)\n    remaining_budget = 65 - total_price\n    result = remaining_budget\n    return result"}
{"output": "def solution():\n    \n    # Define the runtime of the final concert\n    runtime = 65\n\n    # Calculate the length of the concert\n    concert_length = runtime / 2\n\n    # Calculate the length of the 15-minute encore\n    encore_length = 15\n\n    # Calculate the length of the usual concert\n    usual_length = concert_length - encore_length\n\n    # Display the length of the usual concerts\n    result = usual_length\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of toys\n    initial_toys = 200\n\n    # Define the number of toys given to each person\n    alyssa_toys = 40\n    bonnie_toys = 80\n    nicky_toys = 30\n\n    # Calculate the total number of toys\n    total_toys = initial_toys + alyssa_toys + bonnie_toys + nicky_toys\n\n    # Display the total number of toys\n    result = total_toys\n    return result"}
{"output": "def solution():\n    \n    # Define the number of chimichangas made on each day\n    tuesday_chimichangas = 125\n    wednesday_chimichangas = 125\n    friday_chimichangas = 2 * tuesday_chimichangas\n\n    # Calculate the total number of chimichangas made\n    total_chimichangas = tuesday_chimichangas + wednesday_chimichangas + friday_chimichangas\n\n    # return the result\n    result = total_chimichangas\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of microphones and the percentage that won't fit\n    total_microphones = 50\n    no_space = 0.2\n\n    # Calculate the number of pairs that can fit\n    num_space = total_microphones * no_space\n    num_pairs = num_space // 2\n\n    # return the result\n    result = num_pairs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of birds nesting in the bushes\n    nesting_birds = 6\n\n    # Calculate the number of birds flying overhead\n    flying_birds = nesting_birds * (2/3)\n\n    # Define the number of birds feeding\n    feeding_birds = 3 * 8\n\n    # Calculate the total number of birds\n    total_birds = nesting_birds + flying_birds + feeding_birds\n\n    # Display the total number of birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 55\n    cookies_eaten = 5\n    cookies_left = total_cookies - cookies_eaten\n    jars = 5\n    cookies_per_jar = cookies_left / jars\n    result = cookies_per_jar\n    return result"}
{"output": "def solution():\n    \n    orchid_petals = 5\n    daisy_petals = 10\n    total_orchid_petals = orchid_petals * 5\n    total_daisy_petals = daisy_petals * 4\n    difference = total_daisy_petals - total_orchid_petals\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_plants = 100\n    indoor_plants = total_plants / 4\n    remaining_plants = total_plants - indoor_plants\n    outdoor_plants = (2/3) * remaining_plants\n    flowering_plants = remaining_plants - outdoor_plants\n    flowering_percent = (flowering_plants / total_plants) * 100\n    result = flowering_percent\n    return result"}
{"output": "def solution():\n    # Calculate the speed of a whirligig\n    speed_whirligig = 5 * 121  # a whirligig spins at five times the speed of a thingamabob\n    result = speed_whirlig\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the salad and yogurt\n    salad_price = 6\n    yogurt_price = salad_price / 2\n\n    # Calculate the total price of the carrots\n    carrots_price = 11 - salad_price - yogurt_price\n\n    # Calculate the price of one carrot\n    carrot_price = carrots_price / 2\n\n    # return the result\n    result = carrot_price\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 8\n    days_per_week = 5\n    hourly_rate_1 = 10\n    hourly_rate_2 = 2\n    weekly_pay = (hours_per_day * hourly_rate_1 * days_per_week) + (hours_per_day * hourly_rate_2 * days_per_week)\n    result = weekly_pay\n    return result"}
{"output": "def solution():\n    \n    # Define the amount made from mowing lawns in the first week\n    week1_amount = 80 / 3\n\n    # Define the amount made from mowing lawns in the second week\n    week2_amount = 80 / 5\n\n    # Calculate the total amount made from mowing lawns in the first week\n    week1_total = week1_amount * 3\n\n    # Calculate the total amount made from mowing lawns in the second week\n    week2_total = week2_amount * 5\n\n    # Calculate the total amount made from mowing lawns in the last month\n    total_amount = week1_total + week2_total\n\n    # Calculate the amount made from lemonade sales\n    lemonade_sales = 80 - total_amount\n\n    # Display the amount made from lemonade sales\n    result = lemonade_sales\n    return result"}
{"output": "def solution():\n    \n    # Define Martin's weight\n    martin_weight = 55\n\n    # Calculate Carl's weight\n    carl_weight = martin_weight + 16\n\n    # Calculate Christian's weight\n    christian_weight = carl_weight + 8\n\n    # Calculate Harry's weight\n    harry_weight = christian_weight - 5\n\n    # Display Harry's weight\n    result = harry_weight\n    return result"}
{"output": "def solution():\n    \n    rental_frequency = 10\n    rental_hours_per_month = 3\n    rental_pay_per_hour = 25\n    total_rental_pay = rental_frequency * rental_hours_per_month * rental_pay_per_hour\n    car_payment = 500\n    profit = total_rental_pay - car_payment\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    martha_notebooks = 7 - 5\n    joseph_notebooks = 3 * martha_notebooks\n    difference = joseph_notebooks - martha_notebooks\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the distance rowed by Dijana\n    dijana_distance = 50\n\n    # Calculate the distance rowed by Anis\n    anis_distance = dijana_distance * (1 + 1/5)\n\n    # Calculate the total distance rowed\n    total_distance = dijana_distance + anis_distance\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cookies\n    total_cookies = 100\n\n    # Define the number of nephews\n    num_nephews = 6\n\n    # Calculate the number of cookies each nephew will get\n    cookies_per_nephew = total_cookies / num_nephews\n\n    # Calculate the number of cookies each nephew will get after the husband snucks 4\n    cookies_per_nephew -= 4\n\n    # Display the number of cookies each nephew will get\n    result = cookies_per_nephew\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pages Denise and Daniel read yesterday\n    denise_yesterday = 10\n    daniel_yesterday = 13\n\n    # Calculate the number of pages Denise read today\n    denise_today = daniel_yesterday + 5\n\n    # Calculate the difference in pages read between Denise and Daniel\n    pages_difference = denise_yesterday - daniel_yesterday\n\n    # Display the difference in pages read\n    result = pages_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and children\n    num_adults = 4\n    num_children = 8\n\n    # Calculate the total number of bowls eaten\n    total_bowls_eaten = num_adults + num_children\n\n    # Calculate the number of times each child will have a bowl of soup\n    num_times_per_child = (num_children // 2) + (num_adults % 2 > 0)\n\n    # Display the number of times each child will have a bowl of soup\n    result = num_times_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the price of each item\n    NOTEBOOK_PRICE = 1.5\n    BALLPEN_PRICE = 0.5\n\n    # Define the number of each item purchased\n    notebooks = 5\n    ballpen = 1\n\n    # Calculate the total cost of the notebooks\n    notebook_cost = notebooks * NOTEBOOK_PRICE\n\n    # Calculate the total cost of the ballpen\n    ballpen_cost = ballpen * BALLPEN_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = notebook_cost + ballpen_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of material needed for each type of mask\n    SMALL_MASK_CAPACITY = 2\n    LARGE_MASK_CAPACITY = 2.25\n\n    # Define the number of each type of mask Jo wants to make\n    small_masks = 20\n    large_masks = 8\n\n    # Calculate the total amount of material needed\n    total_material = (small_masks * SMALL_MASK_CAPACITY) + (large_masks * LARGE_MASK_CAPACITY)\n\n    # Display the total amount of material needed\n    result = total_material\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fast and furious movies\n    fast_movies = 9\n    furious_movies = 9\n\n    # Calculate the total number of movies\n    total_movies = fast_movies + furious_movies\n\n    # Calculate the total cost of seeing the movies\n    total_cost = 216\n\n    # Calculate the average price per ticket\n    average_price = (total_cost / total_movies) / 3\n\n    # return the result\n    result = average_price\n    return result"}
{"output": "def solution():\n    \n    sleep_time = 10\n    work_time = sleep_time - 2\n    dog_walking_time = 1\n    total_dog_walking_time = dog_walking_time * 5\n    total_sleep_time = sleep_time + work_time\n    free_time = total_sleep_time - total_dog_walking_time\n    result = free_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of blue and red shoe boxes\n    blue_boxes = 7\n    red_boxes = 9\n\n    # Calculate the number of blue shoe boxes used for fishing\n    blue_used = 3\n\n    # Calculate the number of red shoe boxes used for fishing\n    red_used = red_boxes / 3\n\n    # Calculate the total number of blue and red shoe boxes used\n    total_used = blue_used + red_used\n\n    # Calculate the number of red and blue shoe boxes left\n    red_left = red_boxes - total_used\n\n    # return the result\n    result = red_left\n    return result"}
{"output": "def solution():\n    \n    sarah_books = 9\n    joseph_books = 2 * sarah_books - 2\n    result = joseph_books\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 30\n\n    # Calculate the number of marbles given to Jamie\n    jamie_marbles = initial_marbles // 5\n\n    # Calculate the number of marbles remaining for Dean\n    remaining_marbles = initial_marbles - jamie_marbles\n\n    # Subtract the marbles given to Donald\n    remaining_marbles -= 10\n\n    # Display the number of marbles remaining for Dean\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    duncan_age_now = 60\n    duncan_age_8_years_ago = duncan_age_now - 8\n    adam_age_4_years_ago = duncan_age_8_years_ago / 2\n    adam_age_now = adam_age_4_years_ago + 4\n    adam_age_in_8_years = adam_age_now + 8\n    result = adam_age_in_8_years\n    return result"}
{"output": "def solution():\n    \n    # Define the number of acres in Farmer Brown's farm\n    brown_acres = 200\n\n    # Calculate the number of acres in Farmer Smith's farm\n    smith_acres = 2 * brown_acres + 100\n\n    # Calculate the total number of acres\n    total_acres = brown_acres + smith_acres\n\n    # Display the total number of acres\n    result = total_acres\n    return result"}
{"output": "def solution():\n    \n    # Define the pay rate per package\n    PAY_RATE = 0.20\n\n    # Define the number of packages completed per hour\n    PACKAGES_PER_HOUR = 50 - 10\n\n    # Calculate the total number of packages completed\n    total_packages = PACKAGES_PER_HOUR * 8\n\n    # Calculate the total earnings\n    total_earnings = total_packages * PAY_RATE\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    normal_sudoku_time = 45\n    extreme_sudoku_time = 4 * normal_sudoku_time\n    total_time = normal_sudoku_time + extreme_sudoku_time\n    bottles_per_half_hour = 0.5\n    total_bottles = total_time * bottles_per_half_hour\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red and yellow balloons\n    red_balloons = 20\n    yellow_balloons = 3\n\n    # Calculate the total number of red and yellow balloons\n    total_red_yellow = red_balloons + yellow_balloons\n\n    # Calculate the total number of balloons\n    total_balloons = 58\n\n    # Calculate the number of yellow balloons\n    yellow_balloons = total_balloons - total_red_yellow\n\n    # Display the number of yellow balloons\n    result = yellow_balloons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of miles Jon drives each day and the number of days in a month\n    miles_per_day = 100\n    days_per_month = 30\n\n    # Calculate the total number of miles Jon drives in a month\n    total_miles = miles_per_day * days_per_month\n\n    # Calculate the number of tune-ups Jon needs to make each month\n    tune_ups_per_month = total_miles / 1000\n\n    # Round up to the nearest whole number of tune-ups\n    tune_ups = int(tune_ups_per_month + 0.5)\n\n    # return the result\n    result = tune_ups\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours worked on Tuesday\n    tuesday_hours = 5\n\n    # Calculate the number of hours worked on Wednesday\n    wednesday_hours = tuesday_hours * 2\n\n    # Calculate the number of hours worked on Thursday\n    thursday_hours = wednesday_hours - 2\n\n    # Calculate the total number of hours worked\n    total_hours = tuesday_hours + wednesday_hours + thursday_hours\n\n    # return the result\n    result = total_hours\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money spent\n    total_spent = 11 + (1 * 0.5) + (2 * 7)\n\n    # Calculate the total amount of money left\n    remaining_money = total_spent - 11 - total_spent\n\n    # Calculate the amount of money each person receives\n    julia_money = remaining_money / 3\n    nadine_money = remaining_money / 3\n\n    result = julia_money + nadine_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of fruit pieces\n    apples = 3\n    bananas = 5\n    oranges = 6\n\n    # Subtract the number of fruit pieces eaten from the initial number\n    apples -= 2\n    bananas -= 2\n    oranges -= 2\n\n    # Calculate the total number of fruit pieces left\n    total_pieces = apples + bananas + oranges\n\n    # return the result\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students playing tennis\n    tennis_students = 6\n\n    # Define the number of students playing volleyball\n    volleyball_students = tennis_students * 2\n\n    # Define the number of students playing soccer\n    soccer_students = 16 + 22\n\n    # Calculate the total number of students\n    total_students = tennis_students + volleyball_students + soccer_students\n\n    # Display the total number of students\n    result = total_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and lollipops sold per student\n    num_students = 30\n    lollipops_per_student = 10\n\n    # Calculate the total number of lollipops sold\n    total_lollipops = num_students * lollipops_per_student\n\n    # Calculate the total cost of buying the lollipops\n    total_cost = total_lollipops * 0.5\n\n    # Calculate the total revenue from selling the lollipops\n    total_revenue = total_lollipops * 0.8\n\n    # Calculate the profit from selling the lollipops\n    profit = total_revenue - total_cost\n\n    # return the result\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cats\n    cats = 3\n\n    # Calculate the number of dogs\n    dogs = cats * 3\n\n    # Calculate the number of rabbits\n    rabbits = dogs - 2\n\n    # Calculate the number of fish\n    fish = rabbits * 3\n\n    # Calculate the number of gerbils\n    gerbils = fish / 3\n\n    # Calculate the total number of pets\n    total_pets = cats + dogs + rabbits + fish + gerbils\n\n    # Display the total number of pets\n    result = total_pets\n    return result"}
{"output": "def solution():\n    \n    total_slices = 24\n    abby_slices_per_day = 2\n    josh_slices_per_day = 2 * abby_slices_per_day\n    total_days = total_slices / (abby_slices_per_day + josh_slices_per_day)\n    result = total_days\n    return result"}
{"output": "def solution():\n    # Calculate the total number of shells Martha will collect in 10 years\n    total_shells = 5 * 12 * 10  # Martha is currently 5 years old, so multiply by 12 months in a year\n    result = total_shells\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cups and the number of rows\n    total_cups = 27\n    num_rows = 3\n\n    # Calculate the number of cups of cinnamon tea in each row\n    cups_per_row = total_cups / num_rows\n\n    # Calculate the number of cups of chamomile and mint tea in each row\n    cups_per_chamomile = cups_per_row / 2\n    cups_per_mint = cups_per_row - cups_per_chamomile\n\n    # Calculate the number of cups of cinnamon tea left\n    cups_left = cups_per_mint - 15\n\n    # Calculate the number of cups of mint tea in each row\n    cups_per_row_mint = cups_left / num_rows\n\n    # Display the number of cups of mint tea in each row\n    result = cups_per_row_mint\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of berries the sloth can pick up in one trip\n    berries_per_trip = 24 / 4\n\n    # Calculate the minimum number of berries the sloth can pick up per trip\n    min_berries_per_trip = berries_per_trip / 3\n\n    # Display the minimum number of berries the sloth can pick up per trip\n    result = min_berries_per_trip\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of water in the pool\n    initial_water = 10000\n\n    # Calculate the amount of water left in the tank after 6 days\n    remaining_water = initial_water / 2 - 500 * 6\n\n    # Display the remaining amount of water\n    result = remaining_water\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    FRIEND_TICKET_PRICE = 10\n    SATURDAY_TICKET_PRICE = 7\n    POPCORN_PRICE = 8\n    CANDY_PRICE = 2\n\n    # Define the number of each item Colby wants to get\n    friday_tickets = 5\n    saturday_tickets = 8\n\n    # Calculate the total cost of each item Colby wants to get\n    friday_cost = friday_tickets * FRIEND_TICKET_PRICE\n    saturday_cost = saturday_tickets * SATURDAY_TICKET_PRICE\n    popcorn_cost = 8\n    candy_cost = 2\n\n    # Calculate the total cost of all the items Colby wants to get\n    total_cost = friday_cost + saturday_cost + popcorn_cost + candy_cost\n\n    # Calculate the maximum number of movies Colby can see\n    max_movies = ("}
{"output": "def solution():\n    \n    # Define the number of calories in a normal roll and a normal blueberry muffin\n    NORMAL_CINNON_CALORIES = 600\n    NORMAL_BLUEBERRY_CALORIES = 450\n\n    # Calculate the total number of calories in the normal rolls and blueberry muffins\n    total_calories = (200 * NORMAL_CINNON_CALORIES) + (300 * NORMAL_BLUEBERRY_CALORIES)\n\n    # Calculate the number of calories in a mini pastry\n    mini_pastry_calories = total_calories / 3\n\n    # Display the number of calories in the mini pastries\n    result = mini_pastry_calories\n    return result"}
{"output": "def solution():\n    \n    # Define the number of junebugs removed on each day\n    monday_removed = 39\n    tuesday_wednesday_removed = 2 * monday_removed\n    thursday_removed = 48\n    friday_removed = 57\n\n    # Calculate the total number of junebugs removed\n    total_removed = monday_removed + tuesday_wednesday_removed + thursday_removed + friday_removed\n\n    # Calculate the average number of junebugs removed per day\n    average_removed = total_removed / 5\n\n    # Display the average number of junebugs removed per day\n    result = average_removed\n    return result"}
{"output": "def solution():\n    \n    bus_speed = 60\n    bus_time = 5\n    car_speed = 30\n    car_time = 8\n    bus_distance = bus_speed * bus_time\n    car_distance = car_speed * car_time\n    difference = bus_distance - car_distance\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blocks in the building bag and the number of stuffed animals per bin\n    BLOCKS_IN_BAG = 31\n    STUFFED_ANALS_PER_BIN = 8\n\n    # Define the number of multicolored rings in the stacking rings\n    STACKING_RINGS = 9\n\n    # Calculate the total number of toys in the toys\n    total_toys = BLOCKS_IN_BAG + STUFFED_ANALS_PER_BIN * 62\n\n    # Calculate the number of bouncy balls in the toys\n    bouncy_balls = 62 - total_toys\n\n    # Display the number of bouncy balls\n    result = bouncy_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the combined age of Peter, Paul, and John\n    combined_age = 100\n\n    # Let x be the age of John\n    x = combined_age - 10\n\n    # Let y be the age of Peter\n    y = x + 10\n\n    # Let z be the sum of Paul and John's age\n    z = x + 10\n\n    # Now we have x + y = combined_age\n    x = (combined_age - 10) / 2\n\n    # Peter's age is equal to the sum of Paul and John's age\n    peter_age = x + y\n\n    # Display Peter's age\n    result = peter_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of water balloons\n    initial_balloons = 0\n\n    # Calculate the number of balloons given to Maria's friends\n    friends_balloons = 4 * 2\n\n    # Calculate the number of balloons given to Maria's mom\n    mom_balloons = 4 * 3\n\n    # Calculate the total number of balloons\n    total_balloons = initial_balloons + friends_balloons + mom_balloons\n\n    # Display the total number of balloons\n    result = total_balloons\n    return result"}
{"output": "def solution():\n    # Calculate the total number of boxes of stuff needed\n    total_boxes = 10 * 5 + 10  # 10 people donate 5 boxes each, and 10 boxes already\n\n    # Calculate the total number of tables needed\n    total_tables = total_boxes / 2  # 2 boxes worth of stuff per table\n\n    # Calculate the number of new tables needed\n    new_tables = total_tables + 15  # 15 tables already owned\n\n    result = new_tables\n    return result"}
{"output": "def solution():\n    \n    # Define the number of seeds and distances spitted by each seed\n    zoey_seeds = 40\n    zoey_distance = 10\n    sydney_seeds = 35\n    sydney_distance = 12\n\n    # Calculate the total distance spitted\n    total_distance = (zoey_seeds * zoey_distance) + (sydney_seeds * sydney_distance)\n\n    # Calculate the average distance spat\n    average_distance = total_distance / 2\n\n    # Display the average distance spat\n    result = average_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours Fern runs per day and the number of days in a month\n    HOURS_PER_DAY = 24\n    DAYS_PER_MONTH = 30\n\n    # Define the number of widgets each person makes per hour\n    widgets_per_hour = 60\n\n    # Define the number of widgets each person makes per hour\n    widgets_per_hour = 45\n\n    # Calculate the total number of widgets Fern makes in a month\n    total_widgets_per_month = widgets_per_hour * HOURS_PER_DAY * DAYS_PER_MONTH\n\n    # Calculate the total number of widgets Fern makes in a month\n    total_widgets_per_month = total_widgets_per_month * widgets_per_hour\n\n    # Calculate the total revenue from the Widgeteer 3000\n    revenue_from_widgeteer = total_widgets_per_month * 6\n\n    # Calculate the total revenue from the WidgetMaster 9000\n    revenue_from_widgetmaster = total_widgets_per_month * 6\n\n    # Calculate the difference in revenue\n    re"}
{"output": "def solution():\n    # Calculate the total cost of staying 12 hours at 5 pm\n    cost_12_hours = 1000 * 12  # 1000 pesos for 12 hours\n\n    # Calculate the total cost of staying 1600 pesos at 5 pm\n    cost_24_hours = 1600 * 24  # 1600 pesos for 24 hours\n\n    # Calculate the total cost of staying 12 hours at 5 pm\n    total_cost_12_hours = cost_12_hours + cost_24_hours\n\n    # Calculate the total cost of staying 70 pesos per hour after 12 hours\n    total_cost_70_hours = total_hours * 70  # 70 pesos per hour after 12 hours\n\n    # Calculate the amount saved by adding 70 pesos per hour\n    amount_saved = total_cost_12_hours - total_cost_70_hours\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    goat_weight = 5\n    sheep_weight = (2 * goat_weight) - 3\n    total_goats = 15\n    total_sheep = 12\n    total_weight = (total_goats * goat_weight) + (total_sheep * sheep_weight)\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Calculate John's total earnings\n    total_earnings = 50 * 6\n\n    # Calculate how much John wants to spend on gas\n    gas_spending = 50\n\n    # Calculate how much John wants to deposit\n    deposit = 100\n\n    # Calculate how much John can spend on pencils\n    pencil_cost = 10\n\n    # Calculate how much John can spend on pens\n    pens_can_buy = (total_earnings - gas_spending - deposit) // pencil_cost\n\n    # Display how many pens John can buy\n    result = pens_can_buy\n    return result"}
{"output": "def solution():\n    \n    craig_words = 20\n    craig_letters = 15\n    craig_total_letters = craig_words * craig_letters\n    brother_total_letters = craig_total_letters + 50\n    total_letters = craig_total_letters + brother_total_letters\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of Schools and the number of rows per School\n    SCHOOLS = 5\n    ROWS_PER_SCHOOL = 7\n\n    # Calculate the total number of rows\n    total_rows = SCHOOLS * ROWS_PER_SCHOOL * 2\n\n    # Calculate the total number of children\n    total_children = total_rows * 8\n\n    # Display the total number of children\n    result = total_children\n    return result"}
{"output": "def solution():\n    # Calculate the total number of bottles of apple juice in the class\n    total_bottles = 29 * 9 * 100  # each coupon can be redeemed for 100 bottles of apple juice\n\n    # Calculate the total number of bottles of apple juice given to students\n    total_given = total_bottles * 2  # each student gets 2 bottles of apple juice\n\n    # Calculate the total number of bottles of apple juice the teacher has for herself\n    total_herself = total_bottles - total_given\n    result = total_herself\n    return result"}
{"output": "def solution():\n    \n    repair_cost = 40\n    labor_cost = 2.25 * 35\n    parts_cost = 60\n    total_cost = repair_cost + labor_cost + parts_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each CD and the discount percentage\n    COST_PER_CD = 15\n    DISCOUNT_PERCENTAGE = 0.4\n\n    # Calculate the total cost of the CDs without the discount\n    total_cost = 10 * COST_PER_CD\n\n    # Calculate the total cost of the CDs with the discount\n    discounted_cost = total_cost * (1 - DISCOUNT_PERCENTAGE)\n\n    # Calculate the total revenue from selling the CDs\n    total_revenue = (10 - 5) * 40\n\n    # Calculate the final cost after the discount\n    final_cost = total_cost - discounted_cost\n\n    # Display the final cost\n    result = final_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total earnings from selling yams\n    yam_earnings = 6 * 1.5\n\n    # Calculate the total earnings from selling sweet potatoes\n    sweet_potato_earnings = 10 * 2\n\n    # Calculate the total earnings from selling carrots\n    carrot_earnings = 4 * 1.25\n\n    # Calculate the total earnings from selling everything\n    total_earnings = yam_earnings + sweet_potato_earnings + carrot_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    total_distance = 20\n    swimming_speed = 2\n    swimming_distance = total_distance * (swimming_speed / 100)\n    resting_time = swimming_time / 2\n    remaining_distance = total_distance - swimming_distance - resting_distance\n    resting_speed = swimming_speed / 2\n    resting_time = resting_time / 2\n    total_time = swimming_time + resting_time + finished_distance / resting_speed\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of loaves of bread Sam had last Friday\n    sam_last_friday = 7\n\n    # Calculate the number of loaves of bread the bakery has\n    bakery_last_friday = sam_last_friday * 7 - 40\n\n    # Display the number of loaves of bread the bakery has\n    result = bakery_last_friday\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stickers Jasmine was given\n    given_stickers = 15\n\n    # Define the number of stickers Jasmine lost during playtime\n    lost_stickers = 7\n\n    # Define the number of stickers Jasmine gave her classmates\n    given_stickers += 5\n\n    # Calculate the total number of stickers Jasmine has at the end\n    total_stickers = given_stickers - lost_stickers + given_stickers\n\n    # Display the total number of stickers\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the commission rates for each type of newspaper\n    NY_COMMISSION_RATE = 0.1\n    WAL_COMMISSION_RATE = 0.08\n\n    # Define the number of copies of each type of newspaper sold\n    ny_copies = 6\n    wal_copies = 10\n\n    # Calculate the commission earned for each type of newspaper\n    ny_earnings = ny_copies * NY_COMMISSION_RATE\n    wal_earnings = wal_copies * WAL_COMMISSION_RATE\n\n    # Calculate the commission earned for each type of newspaper\n    ny_total_earnings = ny_earnings * NY_COMMISSION_RATE\n    wal_total_earnings = wal_earnings * WAL_COMMISSION_RATE\n\n    # Calculate the total commission earned\n    total_earnings = ny_total_earnings + wal_total_earnings\n\n    # Display the total commission earned\n    result = total_earn"}
{"output": "def solution():\n    \n    # Define Deanna's age\n    deanna_age = 26\n\n    # Calculate Marcus's age\n    marcus_age = deanna_age - 5\n\n    # Calculate Leo's age\n    leo_age = marcus_age * 2\n\n    # Display Leo's age\n    result = leo_age\n    return result"}
{"output": "def solution():\n    \n    total_points = 45\n    bahati_points = (total_points - 20) / 3\n    dinar_points = total_points - bahati_points\n    azibo_points = dinar_points + 10\n    result = azibo_points\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the book in inches\n    length = 1.5\n\n    # Calculate the number of pages printed on each side of the paper\n    pages_per_side = length / 2\n\n    # Calculate the total number of pages printed\n    total_pages = pages_per_side * 2\n\n    # return the result\n    result = total_pages\n    return result"}
{"output": "def solution():\n    \n    # Define the number of minutes in 8:00 AM and 11:00 PM\n    MINUTES_IN_HOUR = 60\n\n    # Calculate the number of reports Vince staple in that time\n    reports_per_minute = 30 / 15\n    total_reports = (MINUTES_IN_HOUR * reports_per_minute) + (MAXUTES_IN_HOUR * reports_per_minute)\n\n    # Display the total number of reports staple\n    result = total_reports\n    return result"}
{"output": "def solution():\n    # Calculate the total time Kim spent sleeping on her cameras in a day\n    total_sleep_time = (2 * 60) + (2 * 60) + 5  # 2:15 am = 120 minutes, plus 5 minutes\n\n    result = total_sleep_time\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of measuring spoons to cups\n    SPOONS_TO_CUP_RATIO = 2/3\n\n    # Define the number of measuring cups Jonathan has\n    cups = 2 * 12\n\n    # Calculate the number of measuring spoons Jonathan has\n    spoons = SPOONS_TO_CUP_RATIO * cups\n\n    # Subtract the number of gifted measuring spoons\n    remaining_spoons = spoons - 6\n\n    # Display the total number of utensils Jonathan has remaining\n    result = remaining_spoons\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of the hospital and the fraction that was occupied\n    capacity = 1000\n    occupancy_fraction = 1/5\n\n    # Calculate the number of occupied beds after 2 weeks\n    occupied_beds = capacity * occupancy_fraction * 14\n\n    # Calculate the number of unoccupied beds after 2 weeks\n    unoccupied_beds = occupied_beds * 2\n\n    # Display the total number of unoccupied beds\n    result = unoccupied_beds\n    return result"}
{"output": "def solution():\n    \n    total_emails = 16\n    work_emails = 7\n    remaining_emails = total_emails - work_emails\n    family_emails = (2/3) * remaining_emails\n    boyfriend_emails = (1/3) * remaining_emails\n    result = boyfriend_emails\n    return result"}
{"output": "def solution():\n    \n    # Define Aliya's age\n    aliya_age = 3\n\n    # Calculate Shawna's age\n    shawna_age = aliya_age * 3\n\n    # Calculate Shawna's father's age\n    father_age = shawna_age * 5\n\n    # Display Shawna's father's age\n    result = father_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people in the concert\n    initial_people = 48\n\n    # Calculate the number of people who were not overstated by Kelly\n    non_overstated_people = initial_people * 0.8\n\n    # Calculate the actual number of people who attended the concert\n    actual_people = non_overstated_people - initial_people\n\n    # return the result\n    result = actual_people\n    return result"}
{"output": "def solution():\n    \n    jason_balls = 2\n    jeffrey_balls = jason_balls / 2\n    jordan_balls = jason_balls * 2\n    total_balls = jason_balls + jeffrey_balls + jordan_balls\n    result = total_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of holes dug on each day\n    day1_holes = 10\n    day2_holes = 15\n    day3_holes = 8\n\n    # Calculate the total number of holes dug during the first three days\n    total_holes = day1_holes + day2_holes + day3_holes\n\n    # Calculate the number of holes remaining after digging for the first three days\n    remaining_holes = total_holes - (day1_holes + day2_holes + day3_holes)\n\n    # Calculate the number of holes added during the fourth day\n    day4_holes = 4 * remaining_holes\n\n    # Calculate the total number of holes digged during the fourth day\n    total_digging_holes += day4_holes\n\n    # Display the total number of holes digged\n    result = total_digging_holes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of corn chips each person got\n    amora_corn_chips = 70\n    lainey_corn_chips = 70\n    collins_corn_chips = (amora_corn_chips + lainey_corn_chips) / 2\n\n    # Calculate the total number of corn chips\n    total_corn_chips = amora_corn_chips + lainey_corn_chips + collins_corn_chips\n\n    # Display the total number of corn chips\n    result = total_corn_chips\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost of supplies and the percentage increase\n    total_cost = 400\n    percentage_increase = 50\n\n    # Calculate the cost of one ticket\n    ticket_cost = total_cost / (1 + percentage_increase/100)\n\n    # Calculate the total cost of all three tickets\n    total_cost_all_tickets = ticket_cost * 3\n\n    # return the result\n    result = total_cost_all_tickets\n    return result"}
{"output": "def solution():\n    \n    total_pokemon = 339\n    pokemon_caught = (total_pokemon + 5) / 3\n    stan_caught = (4 * pokemon_caught) - 13\n    result = stan_caught\n    return result"}
{"output": "def solution():\n    \n    # Define the length of each episode and the total number of episodes\n    EPISODE_LENGTH = 20\n    TOTAL_EPISODES = EPISODE_LENGTH / 2\n\n    # Calculate the total length of the show\n    total_length = TOTAL_EPISODES * EPISODE_LENGTH\n\n    # Display the total length of the show\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance travelled in the first leg of the journey\n    distance_leg1 = 30 * 10\n\n    # Calculate the distance travelled in the second leg of the journey\n    distance_leg2 = 18 * 2\n\n    # Calculate the distance travelled in the third leg of the journey\n    distance_leg3 = 22 * 5\n\n    # Calculate the total distance travelled\n    total_distance = distance_leg1 + distance_leg2 + distance_leg3\n\n    # Display the total distance travelled\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of brownies in a dozen\n    DOZEN = 12\n\n    # Calculate the total number of brownies before the party\n    initial_brownies = initial_brownies * DOZEN\n\n    # Calculate the total number of brownies after the party\n    total_brownies = initial_brownies + 4 * DOZEN\n\n    # Calculate the number of brownies eaten during the party\n    eaten_brownies = 1.5 * DOZEN\n\n    # Calculate the number of brownies left over\n    left_over_brownies = total_brownies - eaten_brownies\n\n    # Display the number of brownies left over\n    result = left_over_brownies\n    return result"}
{"output": "def solution():\n    \n    # Define the age of Nancy and his brother\n    nani_age = 8\n    brother_age = 2 * nani_age\n\n    # Calculate the age of Nancy's sister\n    sister_age = nani_age * 0.75\n\n    # Calculate the total age of all three family members\n    total_age = nani_age + brother_age + sister_age\n\n    # Display the total age\n    result = total_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of racquets and the time to string each type of racquet\n    num_racquets = 12\n    gut_time = 15\n    polyter_time = 22\n    hybrid_time = 18\n\n    # Calculate the total time to string all the racquets\n    total_time = (gut_time * 3) + (polyter_time * 5) + (hybrid_time * 4)\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the phone\n    PHONE_PRICE = 600\n\n    # Calculate the price of the first 2 kids\n    first_2_kids_price = PHONE_PRICE / 2\n\n    # Calculate the price of the remaining phones\n    remaining_phones_price = PHONE_PRICE / 2\n\n    # Calculate the total cost\n    total_cost = first_2_kids_price + remaining_phones_price\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of players in Carlton's team\n    carlton_players = 13\n\n    # Calculate the number of players in Zeke's team\n    zeke_players = carlton_players + 7\n\n    # Calculate the total number of players in both teams\n    total_players = carlton_players + zeke_players\n\n    # Display the total number of players\n    result = total_players\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the fence\n    length = 15\n    width = 10\n\n    # Calculate the perimeter of the fence\n    perimeter = 2 * (length + width)\n\n    # Calculate the total number of wooden slats needed\n    total_slats = perimeter * 2\n\n    # return the result\n    result = total_slats\n    return result"}
{"output": "def solution():\n    \n    total_boxes = 12\n    boxes_given = 2 + 2\n    oranges_sold = total_boxes - boxes_given\n    oranges_kept = oranges_sold / 4\n    oranges_sold = oranges_sold - oranges_kept\n    result = oranges_sold\n    return result"}
{"output": "def solution():\n    \n    # Define the number of states in the USA\n    usa_states = 24\n\n    # Calculate the number of states in india\n    india_states = (usa_states / 2) + 4\n\n    # Calculate the total number of states\n    total_states = usa_states + india_states\n\n    # Display the total number of states\n    result = total_states\n    return result"}
{"output": "def solution():\n    \n    dictionary_cost = 18\n    dinosaur_book_cost = 13\n    childrens_cookbook_cost = 8\n    total_cost = dictionary_cost + dinosaur_book_cost + childrens_cookbook_cost\n    saved_money = 14\n    hourly_rate = 5\n    remaining_money = total_cost - saved_money\n    hours_needed = remaining_money / hourly_rate\n    result = hours_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of cherries\n    total_cherries = 60\n\n    # Calculate the number of cherries Robert has\n    richard_cherries = 30 + 10\n\n    # Calculate the number of cherries Jerry has\n    jerry_cherries = total_cherries - richard_cherries\n\n    # Calculate the difference between the number of cherries Robert and Jerry have\n    difference = richard_cherries - jerry_cherries\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of gingerbread and apple pie\n    gingerbread_price = 6\n    apple_pie_price = 15\n\n    # Calculate the prices of gingerbread and apple pie on Saturday\n    saturday_gingerbread_price = 10\n    saturday_apple_pie_price = saturday_apple_pie_price - 4\n\n    # Calculate the prices of gingerbread and apple pie on Sunday\n    sunday_gingerbread_price = saturday_gingerbread_price + 5\n    sunday_apple_pie_price = 15\n\n    # Calculate the total earnings for two days\n    total_earnings = (saturday_gingerbread_price * saturday_sales) + (sunday_gingerbread_price * sunday_sales) + (saturday_apple_pie_price * sunday_sales)\n\n    # return the result\n    result = total_e"}
{"output": "def solution():\n    \n    # Define the size of each bottle of sunscreen in ounces\n    BOTTLE_SIZE = 8\n\n    # Define the number of hours Pamela will be outside each day\n    hours_per_day = 4\n\n    # Define the number of days Pamela will be outside\n    days = 8\n\n    # Calculate the total number of bottles Pamela will need to pack\n    total_bottles = (hours_per_day * days) / BOTTLE_SIZE\n\n    # Display the total number of bottles Pamela will need to pack\n    result = total_bottles\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the blue car\n    blue_car_price = 100\n\n    # Calculate the price of the red car\n    red_car_price = blue_car_price * 0.6\n\n    # Calculate the total price of both cars\n    total_price = blue_car_price + red_car_price\n\n    # return the result\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    emil_age = 19\n    emil_turns_24 = 24\n    dad_age = emil_age + emil_turns_24\n    brother_age = emil_age / 2\n    sum_of_dad_and_brother = dad_age + brother_age\n    result = sum_of_dad_and_brother\n    return result"}
{"output": "def solution():\n    \n    mother_beads = 20\n    sister_beads = mother_beads + 10\n    friend_beads = mother_beads * 2\n    total_beads = mother_beads + sister_beads + friend_beads\n    result = total_beads\n    return result"}
{"output": "def solution():\n    \n    thursday_catch = 3\n    friday_catch = 4 * thursday_catch\n    saturday_catch = friday_catch / 2\n    total_catch = thursday_catch + friday_catch + saturday_catch\n    servings = total_catch / 3\n    result = servings\n    return result"}
{"output": "def solution():\n    \n    total_students = 30\n    football_players = total_students * 0.2\n    remaining_students = total_students - football_players\n    cheerleaders_or_band = remaining_students * 0.25\n    remaining_students -= cheerleaders_or_band\n    students_left_early = remaining_students - (3 * 0.25)\n    result = students_left_early\n    return result"}
{"output": "def solution():\n    \n    sophie_size = 5\n    charlie_size = sophie_size * 5\n    total_size = sophie_size + charlie_size\n    average_size = total_size / 2\n    result = average_size\n    return result"}
{"output": "def solution():\n    \n    bed_length = 111\n    flowering_width = 12\n    flowering_length_inches = bed_length - (bed_length * flowering_width)\n    flowering_plants = flowering_length_inches / 1.5\n    total_flowering_plants = flowering_plants + 17\n    flowering_plant_cost = 6\n    total_cost = total_flowering_plants * flowering_plant_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pretzels eaten by Edgar per day\n    edgar_daily_pretzels = 18\n\n    # Calculate the number of pretzels eaten by Edgar's brother per day\n    brother_daily_pretzels = edgar_daily_pretzels / 2\n\n    # Calculate the number of pretzels eaten by Edgar's brother per week\n    brother_weekly_pretzels = brother_daily_pretzels * 7\n\n    # return the result\n    result = brother_weekly_pretzels\n    return result"}
{"output": "def solution():\n    num_baskets = 5\n    petunias_per_basket = 3\n    sweet_potato_vines_per_basket = 2\n    petunias_cost = 3.0\n    sweet_potato_vines_cost = 2.5\n\n    # Calculate the total cost of all petunias\n    total_petunias_cost = num_baskets * petunias_per_basket * petunias_cost\n\n    # Calculate the total cost of all sweet potato vines\n    total_sweet_potato_vines_cost = num_baskets * sweet_potato_vines_per_basket * sweet_potato_vines_cost\n\n    # Calculate the total cost of all hanging baskets\n    total_cost = total_petunias_cost + total_sweet_potato_vines_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each type of flower\n    ROSE_WEIGHT = 1\n    CARNATION_WEIGHT = 1.5\n    SUNFLOWER_WEIGHT = 3\n\n    # Define the number of each type of flower planted\n    sunflower_count = 4\n    carnation_count = 10\n\n    # Calculate the total weight of each type of flower\n    total_weight = sunflower_count * SUNFLOWER_WEIGHT + carnation_count * CARNATION_WEIGHT\n\n    # Calculate the number of roses that can be planted\n    rose_count = int(30 / ROSE_WEIGHT)\n\n    # Display the number of roses that can be planted\n    result = rose_count\n    return result"}
{"output": "def solution():\n    \n    # Define Jessica's monthly income and the percentage of her income she sets towards fancy shoes\n    monthly_income = 2000\n    shoe_percentage = 0.25\n\n    # Calculate Jessica's monthly shoes\n    monthly_shoes = monthly_income * shoe_percentage\n\n    # Calculate the number of shoes she can buy in a year\n    yearly_shoes = monthly_shoes * 12\n\n    # Display the number of shoes she can buy in a year\n    result = yearly_shoes\n    return result"}
{"output": "def solution():\n    \n    # Define the rate of peeling and sauting shrimp\n    PEELING_RATE = 6\n    SAUGHT_RATE = 30\n\n    # Define the number of shrimp to be cooked\n    shrimp_to_cook = 90\n\n    # Calculate the total time to peel and cook the shrimp\n    total_time = (shrimp_to_cook / (PEELING_RATE + SAUGHT_RATE)) * 10\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the starting and final temperatures\n    starting_temp = 2 * 3 + 3 * 4\n    final_temp = 2 * 2 - 2\n\n    # Calculate the difference between the final and starting temperatures\n    temp_difference = final_temp - starting_temp\n\n    # return the result\n    result = temp_difference\n    return result"}
{"output": "def solution():\n    \n    # Define the age of Bill's dad when he saw the comet\n    dad_age = 30\n\n    # Calculate the age of Bill's father when he saw the comet\n    father_age = dad_age / 3\n\n    # Calculate the age of Bill when he saw the comet in the first time\n    first_time_age = dad_age + 75 - father_age\n\n    # Display the age of Bill when he saw the comet in the first time\n    result = first_time_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of months in a year\n    MONTHS_IN_YEAR = 12\n\n    # Calculate the number of checks written to electric bills\n    electric_bills = MONTHS_IN_YEAR * 1\n\n    # Calculate the number of checks written to gas bills\n    gas_bills = MONTHS_IN_YEAR * 2\n\n    # Calculate the number of checks written to church\n    church_checks = MONTHS_IN_YEAR * 2\n\n    # Calculate the number of checks written to pest and lawn services\n    pest_lawn_checks = MONTHS_IN_YEAR * 1\n\n    # Calculate the total number of checks written per year\n    total_checks = electric_bills + gas_bills + church_checks + pest_lawn_checks\n\n    # Display the total number of checks written per year\n    result = total_checks\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of flights and the fraction that fall to Greece\n    total_flights = 2 * 25\n    greece_fraction = 0.75\n\n    # Calculate the number of flights that fall to Germany\n    germany_flights = total_flights - greece_fraction\n\n    # Calculate the number of flights that fall to Poland\n    poland_flights = greece_flights * 2\n\n    # Calculate the number of flights that fall to France\n    france_flights = (poland_flights / 2)\n\n    # return the result\n    result = france_flights\n    return result"}
{"output": "def solution():\n    \n    tobias_time = 20\n    chikote_time = tobias_time * 2\n    combined_time = tobias_time + chikote_time\n    combined_time_in_minutes = combined_time * 60\n    result = combined_time_in_minutes\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of money Adam has to contribute\n    total_money = 30 + 6 + 2*6  # Adam bought himself and his mother gave him $6, and his father gave him twice as much\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define Akbar's age and Alessandro's age\n    akbar_age = 3\n    alessandro_age = 4\n\n    # Calculate the average age of the group\n    avg_age = (akbar_age + alessandro_age) / 4\n\n    # Calculate Helene's age\n    helene_age = avg_age * 2\n\n    # Calculate the total age of the children\n    total_age = 20\n\n    # Calculate Wilfred's age\n    wilfred_age = total_age - (akbar_age + alessandro_age + helene_age)\n\n    # Display Wilfred's age\n    result = wilfred_age\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount collected\n    initial_amount = 500 + 1500\n\n    # Calculate the amount donated by the lawyer\n    donated_amount = initial_amount * 3\n\n    # Calculate the total amount collected\n    total_amount = initial_amount + donated_amount + 200\n\n    # Display the total amount collected\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and cookies per guest\n    num_guests = 100\n    cookies_per_guest = 15\n\n    # Calculate the total number of cookies\n    total_cookies = num_guests * cookies_per_guest\n\n    # Calculate the number of cookies to be given to the church next door\n    cookies_to_next_door = total_cookies / 2\n\n    # Calculate the number of people in the church next door\n    num_people = cookies_to_next_door / 15\n\n    # Display the number of people in the church next door\n    result = num_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of adults and kids\n    num_adults = 6\n    num_kids = 4\n\n    # Calculate the total number of slices\n    total_slices = num_adults * 2 + num_kids * 2\n\n    # Calculate the percentage of the watermelon that each adult gets\n    adult_percentage = (num_adults / num_adults) * 100\n\n    # Display the percentage of the watermelon that each adult gets\n    result = adult_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to check each type of trip\n    INGATIENT_TIME = 20\n    APPointMENT_TIME = 30\n\n    # Define the number of each type of trip\n    num_inpatients = 9\n    num_appointments = 10\n\n    # Calculate the total time spent on each type of trip\n    total_time = (num_inpatients * INGATIENT_TIME) + (num_appointments * APPointMENT_TIME)\n\n    # Calculate the time left to update all the records\n    time_left = 9 - total_time\n\n    # Display the time left to update all the records\n    result = time_left\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to make the cake batter and bake the cake\n    batter_time = 20\n    bake_time = 30\n\n    # Define the time required to cool and frost the cake\n    cool_time = 2 * 60 + 10\n\n    # Calculate the total time required to make the cake\n    total_time = batter_time + bake_time + cool_time\n\n    # Calculate the latest time Jordan can serve the cake\n    latest_time = (5 * 60) - total_time\n\n    # Display the latest time\n    result = latest_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of chocolate bars sold by each person\n    lisa_bars = 3.5 * 2\n    peter_bars = 4.5 * 2\n\n    # Calculate the total number of chocolate bars sold\n    total_bars = lisa_bars + peter_bars\n\n    # Calculate the number of chocolate bars in a box\n    bars_per_box = 64 / total_bars\n\n    # Display the number of chocolate bars in a box\n    result = bars_per_box\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per session to rent the studio and per student per session\n    rent_cost = 25\n    student_cost = 1.5\n\n    # Calculate the total number of sessions in a week\n    sessions_per_week = 10 * 3\n\n    # Calculate the total earnings in a week\n    earnings_per_week = (sessions_per_week * rent_cost) + (students_per_week * student_cost)\n\n    # Calculate the total earnings in a month\n    earnings_per_month = earnings_per_week * 4\n\n    result = earnings_per_month\n    return result"}
{"output": "def solution():\n    \n    peter_boxes = 4\n    martha_boxes = 7\n    total_bars = 64 + 56\n    bars_per_box_peter = total_bars / peter_boxes\n    bars_per_box_martha = total_bars / martha_boxes\n    bars_more_per_box = bars_per_box_peter - bars_per_box_martha\n    result = bars_more_per_box\n    return result"}
{"output": "def solution():\n    \n    # Define the total population of porcupines\n    total_population = 50\n\n    # Calculate the number of female porcupines\n    female_population = total_population * 3/5\n\n    # Calculate the total number of babies born per month\n    babies_per_month = 4\n\n    # Calculate the total number of babies born in a year\n    babies_per_year = female_population * babies_per_month * 12\n\n    # Calculate the number of porcupines in the park after a year\n    porcupines_in_park = total_population - babies_per_year\n\n    # Display the number of porcupines in the park after a year\n    result = porcupines_in_park\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the pool\n    width = 14\n    length = 25\n    depth = 4\n\n    # Calculate the volume of the pool\n    volume = width * length * depth\n\n    # Calculate the amount of water needed\n    water = volume * 5.9\n\n    # Calculate the cost to fill the pool\n    cost = water * 0.10\n\n    # Display the cost to fill the pool\n    result = cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of red sticks\n    red_sticks = 9\n\n    # Calculate the number of blue sticks\n    blue_sticks = red_sticks + 5\n\n    # Calculate the number of yellow sticks\n    yellow_sticks = blue_sticks - 3\n\n    # Calculate the total number of sticks\n    total_sticks = red_sticks + blue_sticks + yellow_sticks\n\n    # Display the total number of sticks\n    result = total_sticks\n    return result"}
{"output": "def solution():\n    \n    # Calculate the distance Matteo traveled\n    matteo_distance = 55 * 4\n\n    # Calculate the distance Shandy traveled\n    shandy_distance = 45 * 10\n\n    # Calculate the difference in distance between Shandy and Matteo\n    distance_difference = shandy_distance - matteo_distance\n\n    # Display the difference in distance\n    result = distance_difference\n    return result"}
{"output": "def solution():\n    # Calculate the number of students over 16 years old\n    over_16 = 3000 / 2\n\n    # Calculate the number of male students over 16 years old\n    male_over_16 = over_16 / 4\n\n    # Calculate the number of students under 16 years old\n    under_16 = 3000 / 2\n\n    # Calculate the number of male students under 16 years old\n    male_under_16 = under_16 / 2\n\n    # Calculate the total number of female students\n    total_female = over_16 + male_over_16 + under_16 + male_under_16\n    result = total_female\n    return result"}
{"output": "def solution():\n    \n    # Define the number of laps Bethany can run\n    bethany_laps = 10\n\n    # Calculate the number of laps Trey can run\n    trey_laps = bethany_laps + 4\n\n    # Calculate the number of laps Shaelyn can run\n    shaelyn_laps = trey_laps / 2\n\n    # Calculate the number of laps Quinn can run\n    quinn_laps = shaelyn_laps - 2\n\n    # Calculate the difference in the number of laps Bethany can run compared to Quinn\n    diff_laps = bethany_laps - quinn_laps\n\n    # Display the difference in the number of laps\n    result = diff_laps\n    return result"}
{"output": "def solution():\n    \n    # Define the initial capacity of the tank\n    capacity = 18000\n\n    # Calculate the amount of water pumped on the first day\n    wanda_water = capacity * (1/4)\n\n    # Calculate the amount of water pumped on the second day\n    wanda_water_2 = wanda_water * (2/3)\n\n    # Calculate the amount of water pumped on the third day\n    ms_b_water = 0\n\n    # Calculate the total amount of water pumped\n    total_water = wanda_water + wanda_water_2 + ms_b_water\n\n    # Display the total amount of water pumped\n    result = total_water\n    return result"}
{"output": "def solution():\n    # Calculate the total capacity of the power bank after 5 hours\n    total_capacity = 0.9 * 5\n\n    # Calculate the capacity of the battery after 3 hours\n    battery_capacity = 0.7 * 3\n\n    # Calculate the total capacity after the battery\n    total_capacity_after_battery = total_capacity - battery_capacity\n\n    # Calculate the total charge of the power bank\n    total_charge = total_capacity_after_battery * 0.28\n\n    result = total_charge\n    return result"}
{"output": "def solution():\n    \n    wage_rate = 10\n    tip_rate = 15\n    down_payment = 10000\n    savings_rate = 0.2\n    hours_per_week = 40\n    total_wages = wage_rate * hours_per_week\n    total_tips = tip_rate * hours_per_week\n    total_earnings = total_wages + total_tips\n    weeks_to_save = down_payment / total_earnings\n    result = weeks_to_save\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of fruit\n    peach_price = 0.5\n    pear_price = 0.75\n    kiwis_price = 1\n    apple_price = 0.75\n    plum_price = 0.25\n\n    # Define the number of each type of fruit Jamaar has already purchased\n    peaches_purchased = 3\n    pears_purchased = 4\n    kiwis_purchased = 2\n    apples_purchased = 5\n\n    # Calculate the total cost of the fruit Jamaar has already purchased\n    total_cost = peaches_purchased * peach_price + pears_purchased * pear_price + kiwis_purchased * kiwis_price + apples_purchased * apple_price\n\n    # Calculate the remaining amount of money Jamaar can spend on plums\n    remaining_money = 10 - total_cost\n\n    # Calculate the maximum number of plums Jamaar can"}
{"output": "def solution():\n    \n    total_packs = 15\n    pieces_per_pack = 60\n    packs_kept = 2\n    pieces_kept = total_packs * pieces_per_pack - packs_kept\n    pieces_per_friend = pieces_kept / 10\n    result = pieces_per_friend\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of carrots\n    initial_price = 120\n\n    # Calculate the price of carrots after one year\n    one_year_price = initial_price * 1.05\n\n    # Calculate the price of carrots after three years\n    three_years_price = one_year_price * 3\n\n    # Round the price to the nearest integer\n    rounded_price = round(three_years_price)\n\n    # return the result\n    result = rounded_price\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pictures and the number of albums\n    total_pictures = 72\n    num_albums = 8\n\n    # Calculate the number of pictures in each album\n    pictures_per_album = total_pictures / num_albums\n\n    # Calculate the number of pictures that are selfies\n    pictures_selfies = pictures_per_album\n\n    # Calculate the number of pictures that are portraits\n    pictures_portraits = pictures_per_album\n\n    # Calculate the total number of pictures that are portraits\n    total_portraits = pictures_portraits + pictures_selfies\n\n    # return the result\n    result = total_portraits\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes James to read 3 pages before going to bed\n    time_before_bed = 10\n\n    # Define the number of pages James reads\n    pages_read = 18\n\n    # Calculate the time it takes James to read one page before going to bed\n    time_per_page = time_before_bed / pages_read\n\n    # Calculate the total time it takes James to read the book\n    total_time = time_per_page * pages_read\n\n    # Return the result in minutes\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of guests\n    initial_guests = 100\n\n    # Calculate the number of guests who elected during the early checkout\n    early_checkout_guests = 24\n\n    # Calculate the number of guests who elected during the late checkout\n    late_checkout_guests = 15\n\n    # Calculate the number of guests who checked in during the early checkout\n    early_checkout_checked_in = early_checkout_guests * 2\n\n    # Calculate the number of guests who checked in during the late checkout\n    late_checkout_checked_in = late_checkout_guests * 2\n\n    # Calculate the total number of guests checked in\n    total_checked_in = early_checkout_checked_in + late_checkout_checked_in + 7\n\n    # Calculate the final number of guests\n    final_guests = initial_guests - total_checked_in + late_checkout_checked_in\n\n    # return the result\n    result = final_guests\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bananas picked on Wednesday and Thursday\n    wednesday_bananas = 4\n    thursday_bananas = 6\n\n    # Calculate the number of bananas picked on Friday\n    friday_bananas = wednesday_bananas * 3\n\n    # Calculate the total number of bananas picked\n    total_bananas = wednesday_bananas + thursday_bananas + friday_bananas\n\n    # return the result\n    result = total_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of items in the quiz\n    total_items = 60\n\n    # Calculate the number of easy questions\n    easy_questions = total_items * 0.4\n\n    # Calculate the number of average and difficult questions\n    average_questions = total_items - easy_questions\n    difficult_questions = average_questions / 2\n\n    # Calculate the number of points Aries will get from the easy questions\n    easy_points = easy_questions * 0.75\n\n    # Calculate the number of points Aries will get from the average and difficult questions\n    difficult_points = difficult_questions * 0.5\n\n    # Calculate the total number of points Aries will get\n    total_points = easy_points + difficult_points\n\n    # return the result\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the price of a small stuffed animal and the total earnings\n    small_price = 4\n    large_earnings = 120\n\n    # Calculate the total earnings from the small stuffed animals\n    small_earnings = large_earnings / 3\n\n    # Calculate the number of small stuffed animals sold\n    small_sold = small_earnings / small_price\n\n    # return the result\n    result = small_sold\n    return result"}
{"output": "def solution():\n    # Calculate the total number of sandwiches eaten by the family in one week\n    sandwiches_per_day = 5 + 4 + 2  # man eats 5 sandwiches per day, wife eats 4 sandwiches per day, son eats 2 sandwiches per day\n    total_sandwiches = sandwiches_per_day * 7  # there are 7 days in a week\n    result = total_sandwiches\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and quantities of each item\n    COOKIE_PRICE = 1\n    CUPCAKE_PRICE = 4\n    COOKIE_QUANTITY = 80\n    CUPCAKE_QUANTITY = 60\n\n    # Calculate the total earnings from each item\n    cookie_earnings = COOKIE_PRICE * COOKIE_QUANTITY\n    cupcake_earnings = CUPCAKE_PRICE * CUPCAKE_QUANTITY\n\n    # Calculate the total earnings from the two sisters\n    sisters_earnings = 2 * 10\n\n    # Calculate the total earnings\n    total_earnings = cookie_earnings + cupcake_earnings\n\n    # Calculate the amount of money left\n    money_left = total_earnings - sisters_earnings\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    total_eggs = 100\n    smith_eggs = 30\n    other_eggs = total_eggs - smith_eggs\n    friends_eggs = other_eggs - 10\n    result = friends_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of ore each dwarf can mine per day\n    ORE_PER_DAY = 12\n\n    # Calculate the amount of ore each dwarf can mine with an iron pickaxe\n    iron_ounces = ORE_PER_DAY * 2\n\n    # Calculate the amount of ore each dwarf can mine with a steel pickaxe\n    steel_ounces = iron_ounces * 1.5\n\n    # Calculate the total amount of ore each dwarf can mine in a month with 30 days\n    total_ounces = (iron_ounces * 30) + (steel_ounces * 30)\n\n    # Display the total amount of ore each dwarf can mine in 30 days\n    result = total_ounces\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the sandwiches in each package\n    package1_price = 3\n    package2_price = 6\n    package3_price = 8\n\n    # Calculate the total price of the sandwiches in each package\n    package1_total_price = package1_price * 2\n    package2_total_price = package2_price * 4\n    package3_total_price = package3_price * 3\n\n    # Calculate the total price of the package with 8 sandwiches\n    total_price = package1_total_price + package2_total_price + package3_total_price\n\n    # return the result\n    result = total_price\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the bedroom set and the selling price of the old bedroom\n    bedroom_set_cost = 3000\n    bedroom_set_sale_price = 1000\n\n    # Calculate the total cost of the bedroom set\n    total_cost = bedroom_set_cost + bedroom_set_sale_price\n\n    # Calculate the amount Tom has to pay per month\n    monthly_payment = total_cost * 0.1\n\n    # Display the monthly payment\n    result = monthly_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of red, green, and yellow balloons\n    red_balloons = 25\n    green_balloons = 7\n    yellow_balloons = 12\n\n    # Calculate the number of red balloons after the gust of wind\n    red_balloons_after_gust = red_balloons * 0.4\n\n    # Calculate the number of yellow balloons after the gust of wind\n    yellow_balloons_after_gust = yellow_balloons // 2\n\n    # Calculate the number of blue balloons caught in the tree\n    blue_balloons_caught = 8\n\n    # Calculate the number of remaining balloons\n    remaining_balloons = red_balloons_after_gust - yellow_balloons_after_gust - blue_balloons_caught\n\n    # Calculate the number of additional balloons added to the remaining clutch\n    additional_balloons = remaining_ballo"}
{"output": "def solution():\n    # Calculate the probability of Marcus will have to turn in his homework tomorrow\n    probability_tomorrow = 0.5 + 0.4 + 0.2  # 50% chance, 40% chance, 20% chance\n\n    # Calculate the probability of Marcus will have to turn in his homework tomorrow\n    probability_tomorrow = probability_tomorrow / 100\n\n    # Calculate the percentage chance that Marcus will actually have to turn in his homework tomorrow\n    percentage_tomorrow = (probability_tomorrow / 100) * 100\n    result = percentage_tomorrow\n    return result"}
{"output": "def solution():\n    \n    total_people = 6000\n    graduate_seats = 950\n    faculty_seats = 300\n    total_seats = graduate_seats + faculty_seats\n    tickets_per_person = total_seats / total_people\n    result = tickets_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of large jelly beans\n    large_beans = 75\n\n    # Calculate the number of medium-sized jelly beans\n    medium_beans = large_beans * 2\n\n    # Calculate the number of small jelly beans\n    small_beans = medium_beans + 3\n\n    # Display the number of small jelly beans\n    result = small_beans\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 6\n    days_listening = 3\n    daily_pay = 15\n    parking_pay = 3\n    total_pay = (hours_per_day * daily_pay) + (parking_pay * days_listening)\n    pay_per_hour = total_pay / days_listening\n    result = pay_per_hour\n    return result"}
{"output": "def solution():\n    \n    starting_money = 200\n    book_price = 16\n    pencil_price = 6\n    num_books = 3\n    num_pencils = 3\n    total_spent = (num_books * book_price) + (num_pencils * pencil_price)\n    result = total_spent\n    return result"}
{"output": "def solution():\n    \n    # Define the width of the driveway and the length of each bottle\n    driveway_width = 24\n    bottle_length = 3\n\n    # Calculate the number of bottles needed\n    bottles_needed = driveway_width // bottle_length + (1 if driveway_width % bottle_length > 0 else 0)\n\n    # Calculate the time to go from the first bottle to the next bottle\n    time_to_next_bottle = 5\n\n    # Calculate the total time to go from the bottles\n    total_time = bottles_needed * time_to_next_bottle\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples in one box and the number of boxes ordered\n    APPLES_PER_BOX = 40\n    BOXES_ordered = 2\n\n    # Calculate the total number of apples\n    total_apples = APPLES_PER_BOX * BOXES_ordered\n\n    # Calculate the number of packs that can be made\n    packs = total_apples // 8\n\n    # Display the number of packs\n    result = packs\n    return result"}
{"output": "def solution():\n    \n    # Define the price of Parmesan and Mozzarella\n    PARMESAN_PRICE = 11\n    MOZEN_PRICE = 6\n\n    # Define the amount of Parmesan and Mozzarella Amor buys\n    parmesan_amount = 2\n    mozzarella_amount = 3\n\n    # Calculate the total cost of the meat\n    total_cost = (parmesan_amount * PARMESAN_PRICE) + (mozzarella_amount * MOZEN_PRICE)\n\n    # Calculate how much money Amor will have left after buying the meat\n    money_left = 50 - total_cost\n\n    # Display how much money Amor will have left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money Jim gets per year\n    LOANS_PER_YEAR = 50000\n\n    # Define the number of years Jim takes to finish his job\n    years_to_finish = 4\n\n    # Define the number of years Jim has a 25k job before college\n    years_before_college = 25\n\n    # Calculate Jim's income after college tripled his income\n    income_after_college = income_after_college * 3\n\n    # Calculate the total amount of money Jim earns\n    total_money = income_after_college + (years_to_finish * LOANS_PER_YEAR)\n\n    # Display the total amount of money Jim earns\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Calculate the area of the bed\n    bed_area = 6 * 8\n\n    # Calculate the area of the fabric needed\n    fabric_area = 2 * bed_area + 2 * 2\n\n    # Display the total area of fabric needed\n    result = fabric_area\n    return result"}
{"output": "def solution():\n    \n    # Define the number of letters delivered on each day\n    monday_letters = 425\n    tuesday_letters = monday_letters + 17\n    wednesday_letters = 2 * tuesday_letters + 5\n\n    # Calculate the total number of letters delivered\n    total_letters = monday_letters + tuesday_letters + wednesday_letters\n\n    # Display the total number of letters delivered\n    result = total_letters\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and the price per person for each salad\n    num_people = 16\n    chicken_salad_price = 6.5\n    pasta_salad_price = 6\n\n    # Calculate the total cost of each salad\n    chicken_salad_cost = 10 * chicken_salad_price\n    pasta_salad_cost = 6 * pasta_salad_price\n\n    # Calculate the total cost of the catering\n    total_cost = chicken_salad_cost + pasta_salad_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the amount of money Johnny won in the second race\n    second_race_money = 2 * 5 + 1\n\n    # Calculate the amount of money Johnny won in the third race\n    third_race_money = 1.5 * second_race_money\n\n    # Calculate the total amount of money Johnny lost\n    total_money_lost = 5 + second_race_money + third_race_money\n\n    # Calculate the average amount of money Johnny lost per day\n    average_money_lost = total_money_lost / 3\n    result = average_money_lost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of countries and cities\n    num_countries = 26\n    num_cities = 5\n\n    # Calculate the total population\n    total_population = num_countries * num_cities * 1000\n\n    # Display the total population\n    result = total_population\n    return result"}
{"output": "def solution():\n    \n    # Calculate Xavier's height after the growth\n    xavier_height = 4 * 12 + 3\n\n    # Calculate Cole's height after the growth\n    cole_height = 50 * 12 + 2\n\n    # Calculate the difference between Cole and Xavier's height\n    height_difference = cole_height - xavier_height\n\n    # Display the height difference\n    result = height_difference\n    return result"}
{"output": "def solution():\n    \n    total_amount = 1920\n    first_share = total_amount / 3\n    second_share = first_share + 80\n    third_share = 2 * second_share\n    first_share = second_share / 3\n    result = first_share\n    return result"}
{"output": "def solution():\n    \n    # Define the number of painters and the daily work rate\n    num_painters = 4\n    daily_work_rate = 3/8\n\n    # Calculate the total work hours per day\n    total_work_hours = daily_work_rate * 7 * 3\n\n    # Calculate the total work hours per week\n    total_work_hours += total_work_hours\n\n    # Calculate the number of hours each pencil put in\n    hours_per_pencil = total_work_hours / num_painters\n\n    # return the result\n    result = hours_per_pencil\n    return result"}
{"output": "def solution():\n    \n    total_balls = 19\n    first_set_balls = None\n    second_set_balls = None\n    third_set_balls = second_set_balls / 2\n    first_set_balls = (total_balls - 4 - second_set_balls - third_set_balls) / 3\n    result = first_set_balls\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the car and the depreciation rate\n    INITIAL_COST = 20000\n    DEpreciation_RATE = 0.21\n\n    # Calculate the depreciation price of the car in the first year\n    depreciation_price_2007 = INITIAL_COST * (1 - DEpreciation_RATE)\n\n    # Calculate the depreciation price of the car in the second year\n    depreciation_price_2010 = depreciation_price_2007 * (1 - DEpreciation_RATE)\n\n    # Display the depreciation price of the car in the second year\n    result = depreciation_price_2010\n    return result"}
{"output": "def solution():\n    \n    total_books = 50\n    english_books = total_books / 2\n    german_books = total_books * 0.1\n    spanish_books = total_books - english_books - german_books\n    result = spanish_books\n    return result"}
{"output": "def solution():\n    \n    # Define the distance from San Diego to California and to New York City\n    distance = 1955\n\n    # Calculate the total distance Bernice drove in 4 days\n    total_distance = 325 * 4\n\n    # Calculate the remaining distance Bernice needs to drive\n    remaining_distance = distance - total_distance\n\n    # Display the remaining distance\n    result = remaining_distance\n    return result"}
{"output": "def solution():\n    \n    cups_per_day = 8\n    cups_per_gallon = 16\n    days = 30\n    total_cups = cups_per_day * days\n    total_gallons = total_cups / cups_per_gallon\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of people on the train\n    initial_people = 120\n\n    # Calculate the number of people who board the train at the first stop\n    first_stop_people = initial_people + 20\n\n    # Calculate the number of people who descended at the second stop\n    second_stop_people = 50\n\n    # Calculate the number of people who boarded at the third station\n    third_station_people = 80\n\n    # Calculate the total number of people on the train at the final stop\n    final_people = initial_people + first_stop_people + second_stop_people + third_station_people\n\n    # return the result\n    result = final_people\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the athletic gear\n    top_price = 10\n    shorts_price = top_price + 5\n    shoes_price = 48 / 2\n    coupon_price = 2\n    socks_price = 8\n\n    # Calculate the total cost of the athletic gear\n    total_cost = top_price + shorts_price + shoes_price + (socks_price - coupon_price)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total area of the kitchen floor and the cost per tile\n    total_area = 200\n    cost_per_tile = 12\n\n    # Calculate the total number of tiles needed\n    total_tiles = total_area / 2\n\n    # Calculate the total cost of the tiles\n    total_cost = total_tiles * cost_per_tile\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the normal monthly cost and the percentage increase\n    NORMAL_COST = 120\n    INSURANCE_PERCENTAGE = 0.6\n\n    # Calculate the annual cost of insurance\n    annual_cost = NORMAL_COST * INSURANCE_PERCENTAGE * 12\n\n    # Display the annual cost\n    result = annual_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of beds and king size beds per week\n    beds_per_week = 4\n    king_size_beds_per_week = 1\n\n    # Calculate the number of loads of laundry per week\n    loads_per_week = (beds_per_week * 2) + (king_size_beds_per_week * 1)\n\n    # Calculate the total number of loads of laundry per year\n    loads_per_year = loads_per_week * 52\n\n    # return the result\n    result = loads_per_year\n    return result"}
{"output": "def solution():\n    \n    # Define the number of movies watched on Saturday\n    saturday_movies = 4\n\n    # Calculate the number of movies watched on Sunday\n    sunday_movies = saturday_movies / 2\n\n    # Calculate the total number of movies watched in one week\n    weekly_movies = saturday_movies + sunday_movies\n\n    # Calculate the total number of movies watched in four weeks\n    total_movies = weekly_movies * 4\n\n    # return the result\n    result = total_movies\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of stickers\n    initial_stickers = 100\n\n    # Define the number of stickers collected last year\n    last_year_stickers = 50\n\n    # Define the number of stickers collected this year\n    this_year_stickers = last_year_stickers * 2\n\n    # Calculate the total number of stickers\n    total_stickers = initial_stickers + last_year_stickers + this_year_stickers\n\n    # return the result\n    result = total_stickers\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cats and the amount of cat food per day\n    num_cats = 3\n    cat_food_per_day = 60\n\n    # Calculate the total amount of cat food per day\n    total_cat_food_per_day = cat_food_per_day * 2\n\n    # Calculate the number of days the cat food will last\n    num_days = 720 / total_cat_food_per_day\n\n    # Display the number of days\n    result = num_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pizzas and slices per pizza\n    pizzas = 4\n    slices_per_pizza = 8\n\n    # Calculate the total number of slices\n    total_slices = pizzas * slices_per_pizza\n\n    # Calculate the number of slices eaten by Becky and Jake\n    becky_slices = 10\n    jake_slices = becky_slices - 3\n\n    # Calculate the number of slices eaten by Silvia\n    silvia_slices = jake_slices * 2\n\n    # Calculate the total number of slices eaten\n    total_eaten = becky_slices + jake_slices + silvia_slices + 10\n\n    # return the result\n    result = total_eaten\n    return result"}
{"output": "def solution():\n    \n    total_time = 98\n    donovan_time = (total_time - 18) / 2\n    betsy_time = donovan_time + 18\n    result = betsy_time\n    return result"}
{"output": "def solution():\n    \n    cast_cost = 200\n    visit_cost = 300 * 0.5 + 4 * 30\n    parking_cost = 6 * 2\n    total_cost = cast_cost + visit_cost + parking_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of emails James gets each day\n    total_emails = 80\n\n    # Calculate the number of emails that don't require any response\n    no_response_emails = total_emails * 0.2\n\n    # Calculate the number of emails that James responds to\n    responded_emails = total_emails - no_response_emails\n\n    # Calculate the number of responded emails in a 5 day work week\n    weekly_responded_emails = responded_emails * 5\n\n    # return the result\n    result = weekly_responded_emails\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classes visited on each day\n    monday_classes = 32\n    tuesday_classes = monday_classes * 2\n    wednesday_classes = tuesday_classes * 3\n    thursday_classes = 30\n    friday_classes = 25\n\n    # Calculate the total number of classes visited\n    total_classes = monday_classes + tuesday_classes + wednesday_classes + thursday_classes + friday_classes\n\n    # Display the total number of classes visited\n    result = total_classes\n    return result"}
{"output": "def solution():\n    \n    # Define the scores for the first 3 tests and the fourth test\n    score_3_tests = 100\n    score_4th_test = 80\n\n    # Calculate the total score for all 4 tests\n    total_score = score_3_tests + score_4th_test\n\n    # Calculate the average score across all 4 tests\n    average_score = total_score / 4\n\n    # Display the average score\n    result = average_score\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pizzas\n    initial_pizzas = 20\n\n    # Calculate the number of pizzas eaten by the glee club\n    glee_club_pizzas = initial_pizzas * 0.7\n\n    # Calculate the number of pizzas remaining after the glee club eats\n    remaining_pizzas = initial_pizzas - glee_club_pizzas\n\n    # Calculate the number of pizzas eaten by the football team\n    football_team_pizzas = remaining_pizzas * 2\n\n    # Calculate the number of pizzas remaining after the football team eats 80%\n    remaining_pizzas -= football_team_pizzas * 0.8\n\n    # return the result\n    result = remaining_pizzas\n    return result"}
{"output": "def solution():\n    \n    # Define the number of small and big coupons\n    small_coupons = 700\n    big_coupons = 2 * small_coupons\n\n    # Define the cost of each type of coupon\n    small_coupon_cost = 5\n    big_coupon_cost = 15\n\n    # Calculate the total cost of the small coupons\n    total_small_coupons_cost = small_coupons * small_coupon_cost\n\n    # Calculate the total cost of the big coupons\n    total_big_coupons_cost = big_coupons * big_coupon_cost\n\n    # Calculate the total cost of all the coupons\n    total_cost = total_small_coupons_cost + total_big_coupons_cost\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of meatballs in each sub sandwich\n    MEATBALLS_PER_SANDWICH = 4\n\n    # Calculate the number of meatballs ordered by Sidney\n    sidney_ordered = 10 - 3\n\n    # Calculate the number of meatballs eaten by Mark\n    mark_eaten = 4\n\n    # Calculate the number of meatballs ordered by Sidney\n    sidney_remaining = sidney_ordered - mark_eaten\n\n    # Calculate the number of meatballs ordered by Sidney\n    sidney_remaining = sidney_remaining * MEATBALLS_PER_SANDWICH\n\n    # Calculate the total number of meatballs in the sub sandwiches that remained\n    total_remaining = sidney_remaining + 3\n\n    # Display the total number of meatballs\n    result = total_remaining\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trucks and tons of fertiliser per truck\n    NUM_TRUCKS = 20\n    TONS_PER_TRUCK = 20\n\n    # Calculate the total number of tons of fertiliser\n    total_tons = NUM_TRUCKS * TONS_PER_TRUCK\n\n    # Calculate the number of lorries dispatched\n    lorries_delivered = total_tons // 4\n\n    # Calculate the number of mechanical failures\n    mechanical_failures = lorries_delivered % 4\n\n    # Calculate the total number of tons of fertiliser delivered\n    total_delivered = lorries_delivered + mechanical_failures\n\n    # Display the total number of tons of fertiliser delivered\n    result = total_delivered\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of croissants needed\n    total_croissants = 6 * 12\n\n    # Calculate the amount of butter needed\n    butter_needed = total_croissants / 2\n\n    # Calculate the total cost of the butter\n    butter_cost = butter_needed * 4\n\n    result = butter_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of renting the party\n    classmates_cost = 25 * 20\n    girls_cost = 7 * 6\n    family_members_cost = 13 * 6\n    total_cost = classmates_cost + girls_cost + family_members_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money each person had\n    maggie_money = 60\n    riza_money = 60\n\n    # Calculate the amount of money each person spent\n    maggie_spent = maggie_money / 4\n    riza_spent = riza_money / 3\n\n    # Calculate the total amount of money they have left\n    total_money = (maggie_spent + riza_spent) * 2\n\n    # Display the total amount of money they have left\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    total_bananas = 315\n    first_monkey_bananas = 10\n    second_monkey_bananas = first_monkey_bananas + 4\n    third_monkey_bananas = total_bananas - first_monkey_bananas - second_monkey_bananas\n    result = third_monkey_bananas\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of puzzle pieces\n    initial_pieces = 500\n\n    # Calculate the number of puzzle pieces after half of them\n    half_pieces = initial_pieces / 2\n\n    # Calculate the total number of puzzle pieces\n    total_pieces = half_pieces + 500\n\n    # return the result\n    result = total_pieces\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of the flowers\n    rose_price = 2\n    dozen_price = 15\n\n    # Calculate the total cost of the flowers\n    total_cost = (rose_price * 15) + (dozen_price * 12)\n\n    # Calculate the amount of change Jenny receives\n    change = 5 - total_cost\n\n    # Calculate the number of quarters left\n    quarters = int(change / 0.25)\n\n    # return the result\n    result = quarters\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and quantities of each item\n    milkshake_price = 5.5\n    burger_platters_price = 11\n    sodas_price = 1.5\n    milkshakes_quantity = 6\n    burger_platters_quantity = 9\n    sodas_quantity = 20\n\n    # Calculate the total revenue from each item\n    milkshake_revenue = milkshakes_price * milkshakes_quantity\n    burger_platters_revenue = burger_platters_price * burger_platters_quantity\n    sodas_revenue = sodas_price * sodas_quantity\n\n    # Calculate the total revenue from all items\n    total_revenue = milkshake_revenue + burger_platters_revenue + sodas_revenue\n\n    # return the result\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes for the first train to arrive\n    train1_time = 10\n\n    # Define the time it takes for the second train to arrive\n    train2_time = train1_time / 2\n\n    # Define the time it takes for the third train to arrive\n    train3_time = train1_time / 4\n\n    # Define the total time it takes for all four train to arrive\n    total_time = train1_time + train2_time + train3_time\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toothpicks needed and the number of weeks\n    TOTAL_TOOTHPASTES = 200\n    WEEKS = 12\n\n    # Calculate the number of toothpicks saved each week\n    saved_per_week = 10\n\n    # Calculate the total number of toothpicks saved over the weeks\n    total_saved = saved_per_week * WEEKS\n\n    # Calculate the number of remaining toothpicks\n    remaining_toothpicks = TOTAL_TOOTHPASTES - total_saved\n\n    # Calculate the number of weeks needed to save the remaining toothpicks\n    weeks_needed = remaining_toothpicks / saved_per_week\n\n    # Display the number of weeks needed\n    result = weeks_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of the watch\n    original_price = 2000\n\n    # Calculate the price of the watch after the first discount\n    first_discount_price = original_price * 0.75\n\n    # Calculate the price of the watch after the second discount\n    second_discount_price = first_discount_price * 0.2\n\n    # Calculate the percentage discount\n    percentage_discount = (second_discount_price - first_discount_price) / original_price * 100\n\n    # Display the percentage discount\n    result = percentage_discount\n    return result"}
{"output": "def solution():\n    \n    springs_per_hour = 60 / 4\n    jellyfish_per_hour = springs_per_hour * 1\n    total_jellyfish = jellyfish_per_hour * 5\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    # Define Binkie's score\n    binkie_score = 90\n\n    # Calculate Frankie's score\n    frankie_score = 2 * binkie_score + 15\n\n    # Display Frankie's score\n    result = frankie_score\n    return result"}
{"output": "def solution():\n    \n    # Define the distance from home to store and the speed of walk\n    distance = 4\n    speed = 4\n\n    # Calculate the time it takes to walk to store\n    time = distance / speed\n\n    # Calculate the time it takes to walk back home\n    time_back = distance / 2\n\n    # Calculate the total time\n    total_time = time_back + time_back\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the price of a single banana and a bunch\n    BANANA_PRICE = 0.8\n    BUNCH_PRICE = 3.0\n\n    # Define the number of bunches purchased\n    num_bunches = 10\n\n    # Calculate the total cost of buying the bananas in individual bunches\n    individual_cost = num_bunches * BANANA_PRICE\n\n    # Calculate the total cost of buying the bananas in bunches\n    bunch_cost = num_bunches * BANCH_PRICE\n\n    # Calculate the amount saved by buying the bananas in bunches instead of individually\n    amount_saved = individual_cost - bunch_cost\n\n    # Display the amount saved\n    result = amount_saved\n    return result"}
{"output": "def solution():\n    \n    total_fence = 100\n    harry_fence = (total_fence - 60) / 2\n    sam_fence = (total_fence - harry_fence) / 2\n    result = sam_fence\n    return result"}
{"output": "def solution():\n    # Calculate the growth rate of the crocodile in inches per year\n    growth_rate = 8 / 4\n\n    # Calculate the total growth of the crocodile in 13 years\n    total_growth = growth_rate * 13\n    result = total_growth\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each type of bike\n    MTB_PRICE = 500\n    BMX_PRICE = 2 * MTB_PRICE\n    Trekking_PRICE = 450\n\n    # Calculate the number of Trekking bikes sold\n    trekking_bikes = 300 / 2\n\n    # Calculate the number of BMX bikes sold\n    bMX_bikes = 300 * 0.15\n\n    # Calculate the number of MTB bikes sold\n    mib_bikes = 300 - treking_bikes - bMX_bikes\n\n    # Calculate the total price of each type of bike\n    mib_price = treking_bikes * MTB_PRICE\n    bna_price = bMX_bikes * BMX_PRICE\n\n    # Calculate the total price of all the bikes\n    total_price = mib_price + bna_price + mib_price\n\n    # Display the total price\n    result ="}
{"output": "def solution():\n    # Calculate the total number of bales of hay made by the farmer and the truck\n    total_bales_made = 5 * 6  # each hour, the farmer makes 5 bales\n    total_bales_picked_up = 3 * 6  # each hour, the truck picks up 3 bales\n    total_bales_left = total_bales_made - total_bales_picked_up  # calculate the number of bales left\n    result = total_bales_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of periods and extra classes\n    num_periods = 6\n    num_classes = 2\n\n    # Define the length of each class in minutes\n    class_length = 40\n\n    # Calculate the total length of all classes in minutes\n    total_class_length = num_classes * class_length\n\n    # Calculate the total length of the weekly class in minutes\n    total_class_length_in_minutes = total_class_length * 5\n\n    # Calculate the total length of the weekly class in minutes\n    total_class_length_in_minutes = total_class_length_in_minutes * 16\n\n    # Calculate the total time spent learning in minutes\n    total_learning_time = (total_class_length_in_minutes / 16) + (num_classes * (class_length / 16))\n\n    # Convert the total learning time from minutes to hours\n    total_learning_time_hours = total_learning_time / 60\n\n    # Return the result\n    result = total_learning_time_hours\n    return result"}
{"output": "def solution():\n    \n    # Define the starting height of the ball\n    starting_height = 24 * 3\n\n    # Calculate the height of the ball after each bounce\n    bounce_height = starting_height * (2/3)\n\n    # Calculate the height of the ball after the second bounce\n    second_bounce_height = bounce_height - starting_height\n\n    # Display the height of the ball after the second bounce\n    result = second_bounce_height\n    return result"}
{"output": "def solution():\n    \n    # Define the height of the first child in inches\n    child1 = 6\n\n    # Calculate the height of the second child in inches\n    child2 = child1 + 2\n\n    # Calculate the height of the third child in inches\n    child3 = child2 - 5\n\n    # Calculate the height of the fourth child in inches\n    child4 = child3 + 3\n\n    # Display the height of the fourth child in inches\n    result = child4\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bags and the price per bag\n    bags = 10\n    price_per_bag = 5\n\n    # Calculate the total number of apples sold\n    total_apples = 2000\n\n    # Calculate the total number of bags sold\n    total_bags = total_apples // bags\n\n    # Calculate the total earnings\n    total_earnings = total_bags * price_per_bag\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of meat on the triceratops\n    initial_meat = None\n\n    # Calculate the amount of meat on the left of the triceratops\n    left_meat = 270 / 2\n\n    # Calculate the amount of meat on the velociraptors\n    velociraptors_meat = left_meat / 2\n\n    # Calculate the total amount of meat on the triceratops\n    total_meat = left_meat + velociraptors_meat\n\n    result = total_meat\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total area of the four walls\n    total_area = 10 * 8 * 5\n\n    # Calculate the total area of the room\n    room_area = total_area * 4\n\n    # Calculate the number of gallons of paint needed\n    gallons_needed = room_area / 20\n\n    # Calculate the total cost of the room\n    total_cost = gallons_needed * 12\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of sodas\n    initial_sodas = 12\n\n    # Calculate the number of sodas left after the first shake\n    sodas_left = initial_sodas - 3\n\n    # Calculate the number of sodas taken by Ellen's brother\n    brother_sodas = 1 + 2\n\n    # Calculate the total number of sodas taken\n    total_sodas = sodas_left + brother_sodas\n\n    # Calculate the probability of Ellen's friend getting sprayed with sodas\n    friend_probability = total_sodas / initial_sodas\n\n    # Calculate the percentage of sodas that Ellen's friend gets sprayed with sodas\n    friend_percentage = (friend_probability / initial_sodas) * 100\n\n    # Display the percentage of sodas that Ellen's friend gets sprayed with sodas\n    result = friend_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of each train\n    train1_speed = 60\n    train2_speed = train1_speed / 2\n\n    # Calculate the total distance traveled by each train after 3 hours\n    train1_distance = train1_speed * 3\n    train2_distance = train2_speed * 3\n\n    # Calculate the total distance apart from each other after 3 hours\n    total_distance = train1_distance + train2_distance\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the number of hours per day and the number of days in March\n    HOURS_PER_DAY = 3\n    DAYS_IN_MARCH = 31\n\n    # Calculate the number of days between March 1st and April 19th\n    days_between_19ths = DAYS_IN_MARCH * 0.2\n\n    # Calculate the total number of people that can be helpd in one day\n    people_per_day = 2 * HOURS_PER_DAY\n\n    # Calculate the total number of people that can be help in one day\n    total_people_per_day = people_per_day * days_between_19ths\n\n    # Calculate the total number of people that can be help in all the days\n    total_people = total_people_per_day * DAYS_IN_MARCH\n\n    # Display the total number of people that can be help\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars and the number of people each car carries\n    num_cars = 20\n    num_buses = 12\n    people_per_car = 3\n\n    # Calculate the total number of people carried\n    total_people = (num_cars * people_per_car) + (num_buses * people_per_bus)\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define Mike's age\n    mike_age = 24\n\n    # Calculate Martha's age\n    martha_age = mike_age - 4\n\n    # Calculate Jeff's age\n    jeff_age = martha_age + 10\n\n    # Display Jeff's age\n    result = jeff_age\n    return result"}
{"output": "def solution():\n    # Calculate the time it takes to ride the biggest waterslide\n    time_biggest_slide = 300 / 60\n\n    # Calculate the time it takes to ride the second biggest waterslide\n    time_second_slide = 240 / 80\n\n    # Calculate the difference in time between the two biggest waterslide\n    time_difference = time_biggest_slide - time_second_slide\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    lunch_time = 30\n    break_time = 2 * 60\n    total_time = (lunch_time + break_time) * 5\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    total_miles = 52\n    amber_miles = 8\n    micah_miles = amber_miles * 3.5\n    ahito_miles = total_miles - amber_miles - micah_miles\n    result = ahito_miles\n    return result"}
{"output": "def solution():\n    \n    # Define the initial balance and the cost of the item\n    initial_balance = 85.00\n    item_cost = 15.00\n\n    # Calculate the discounted price of the frying pan and the set of towels\n    frying_pan_discount = 0.20\n    towels_discount = 0.10\n    frying_pan_price = 20.00\n    towels_price = 30.00\n\n    # Calculate the discounted price of the frying pan and the set of towels\n    frying_pan_discounted_price = frying_pan_price * (1 - frying_pan_discount)\n    towels_discounted_price = towels_price * (1 - towels_discount)\n\n    # Calculate the total cost of all items\n    total_cost = initial_balance - item_cost + frying_pan_discounted_price + towels_discounted_price\n\n    # Calculate the new balance on the credit card\n    new_balance = new_balance - total_"}
{"output": "def solution():\n    \n    # Define the total number of jellyfish in the tank\n    total_jellyfish = None\n\n    # Calculate the number of large jellyfish\n    large_jellyfish = total_jellyfish / 5\n\n    # Calculate the number of large jellyfish who changed color\n    changed_jellyfish = 6\n\n    # Calculate the number of small jellyfish\n    small_jellyfish = large_jellyfish - changed_jellyfish\n\n    # Calculate the total number of jellyfish in the tank\n    total_jellyfish = (large_jellyfish * 2) + (small_jellyfish * 2)\n\n    result = total_jellyfish\n    return result"}
{"output": "def solution():\n    \n    # Define Chris's age\n    chris_age = 4\n\n    # Calculate Ben's age\n    ben_age = chris_age * 2\n\n    # Calculate Caroline's age\n    caroline_age = ben_age * 3\n\n    # Calculate Caroline's age\n    caroline_age = caroline_age + chris_age\n\n    # Display Caroline's age\n    result = caroline_age\n    return result"}
{"output": "def solution():\n    \n    # Define Lauren's current salary and savings rate\n    current_salary = 100000\n    savings_rate = 0.2\n\n    # Calculate Lauren's annual salary\n    annual_salary = current_salary * (1 - savings_rate)\n\n    # Calculate the number of years needed to save for 20 years\n    years_needed = 20 - annual_salary\n\n    # Display the number of years needed\n    result = years_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the total length of ribbon and the number of cut parts\n    total_length = 100\n    num_parts = 4\n\n    # Calculate the length of each cut part\n    part_length = total_length / num_parts\n\n    # Calculate the length of each final cut\n    final_cut_length = part_length / num_parts\n\n    # Display the length of each final cut\n    result = final_cut_length\n    return result"}
{"output": "def solution():\n    \n    # Define the percentage of boys in the school\n    boys_percentage = 40\n\n    # Calculate the total number of boys in the school\n    total_boys = 240 / (boys_percentage / 100)\n\n    # Calculate the total number of girls in the school\n    total_girls = total_boys / 240\n\n    # Display the total number of girls\n    result = total_girls\n    return result"}
{"output": "def solution():\n    \n    pots_cost = 19\n    soil_cost = 26\n    coupon_amount = 7\n    total_cost = pots_cost + soil_cost - coupon_amount\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the total height of the women at the party\n    total_height = 3 * 4 + 3 * 2  # three women wearing 4 inch heels and three women wearing 2 inch heels\n\n    # Calculate the average height of the women at the party\n    average_height = total_height / 3\n    result = average_height\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of miles Soledad needs to hike\n    total_miles = 9300\n\n    # Define the number of miles Soledad walks per day\n    miles_per_day = 125 * 2\n\n    # Calculate the number of miles Soledad still needs to hike\n    remaining_miles = total_miles - miles_per_day\n\n    # Calculate the number of miles Soledad must hike per day\n    miles_per_day_needed = remaining_miles / (12 * 2)\n\n    # Display the number of miles Soledad must hike per day\n    result = miles_per_day_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each type of ball\n    RED_COST = 9\n    BLUE_COST = 5\n    GREEN_COST = 3\n\n    # Define the number of each type of ball sold\n    red_balls = 3\n    blue_balls = 11\n    green_balls = 25\n\n    # Calculate the total revenue from each type of ball\n    red_revenue = red_balls * RED_COST\n    blue_revenue = blue_balls * BLUE_COST\n    green_revenue = green_balls * GREEN_COST\n\n    # Calculate the total revenue from all balls\n    total_revenue = red_revenue + blue_revenue + green_revenue\n\n    # Display the total revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    total_apples = 12\n    peter_apples = total_apples / 4\n    paul_apples = total_apples / 3\n    james_apples = total_apples - peter_apples - paul_apples\n    result = james_apples\n    return result"}
{"output": "def solution():\n    \n    initial_temp = 2\n    temp_dropped_overnight = 8\n    temp_increase = 3\n    final_temp = initial_temp - temp_dropped_overnight + temp_increase\n    result = final_temp\n    return result"}
{"output": "def solution():\n    \n    starting_money = 21\n    allowance_saved = 11\n    comic_book_cost = 5\n    puzzle_cost = 19\n    total_spent = comic_book_cost + puzzle_cost\n    money_left = starting_money + allowance_saved - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the initial budget and the amount already spent\n    initial_budget = 16\n    amount_spent = 4\n\n    # Calculate the remaining budget after the amount spent\n    remaining_budget = initial_budget - amount_spent\n\n    # Calculate the cost of the books\n    book_cost = remaining_budget / 2\n\n    # Display the cost of each book\n    result = book_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of students in the class\n    initial_students = 50\n\n    # Calculate the 20% increase\n    increase = initial_students * 0.2\n\n    # Calculate the new number of students in the class\n    new_students = initial_students + increase\n\n    # return the result\n    result = new_students\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times the light blinks per minute\n    blinks_per_minute = 255 / 5\n\n    # Calculate the total number of minutes needed to blink 459 times\n    total_minutes = blinks_per_minute * 459\n\n    # Display the total number of minutes needed\n    result = total_minutes\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of male guppies\n    male_guppies = 4 + 2\n\n    # Calculate the total number of female guppies\n    female_guppies = 7 + 1\n\n    # Calculate the total number of female goldfishes\n    female_goldfishes = 3 + 2\n\n    # Calculate the total number of male fishes\n    male_fishes = male_guppies + female_guppies\n\n    # Calculate the total number of female goldfishes\n    female_goldfishes = female_guppies + female_goldfishes\n\n    # Calculate the difference between the number of female fishes and male fishes\n    difference = female_goldfishes - male_fishes\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    amalia_mowing_time = 4\n    megan_walking_time = amalia_mowing_time + 2\n    dior_mowing_time = amalia_mowing_time + 4\n    total_time = amalia_mowing_time + megan_walking_time + dior_mowing_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    # Calculate the distance John drove in a month\n    distance = 70 * 2 * 2  # distance = speed x time\n\n    # Calculate the distance John drove in a month\n    distance_in_a_month = distance * 2  # John visits his parents twice a month\n\n    result = distance_in_a_month\n    return result"}
{"output": "def solution():\n    \n    # Define the distance Sofie will walk in 7 days\n    sofie_distance = 10 * 7\n\n    # Calculate the distance Brian will walk in 7 days\n    brian_distance = sofie_distance / 2\n\n    # Calculate the total distance Brian will walk in 7 days\n    total_distance = brian_distance * 7\n\n    # return the result\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of toys and the number of workers\n    total_toys = 400\n    num_workers = 5\n\n    # Calculate the number of toys produced by the first 2 workers\n    toys_produced_2 = 6 * 2\n\n    # Calculate the number of toys produced by the next 2 workers\n    toys_produced_3 = 4 * 2\n\n    # Calculate the total number of toys produced during the 10-hour shift\n    total_toys_produced = (toys_produced_2 + toys_produced_3) * 10\n\n    # Calculate the number of toys remaining to be produced by the fifth worker\n    toys_remaining = total_toys - total_toys_produced\n\n    # Calculate the number of toys produced per hour by the fifth worker\n    toys_produced_5 = toys_remaining / 5\n\n    # return the result\n    result = toys_produced_5\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of Kory's dog\n    kory_weight = 60\n\n    # Calculate the weight of Elijah's dog\n    elijah_weight = kory_weight / 2\n\n    # Calculate the total weight of Elijah and Kory's dogs\n    total_weight = elijah_weight + kory_weight\n\n    # Display the total weight\n    result = total_weight\n    return result"}
{"output": "def solution():\n    \n    # Define the number of stickers Seth kept and gave away\n    kris_kept = 9\n    rob_given = 7\n\n    # Calculate the number of stickers Seth gave to Luis\n    luis_given = 0.5 * kris_kept\n\n    # Calculate the number of stickers Seth gave to Kris\n    kris_given = kris_given\n\n    # Calculate the number of stickers Seth gave to Rob\n    rob_given = rob_given\n\n    # Calculate the total number of stickers Seth had\n    total_given = luis_given + kris_given + rob_given\n\n    # Display the total number of stickers Seth had\n    result = total_given\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each large bag and the amount of M&M in it\n    LARGE_BAG_WEIGHT = 10\n    SMALL_BAG_WEIGHT = 30\n\n    # Calculate the total weight of the large bags\n    total_large_bag_weight = 3 * LARGE_BAG_WEIGHT\n\n    # Calculate the total amount of M&M in the small bags\n    total_small_bag_weight = total_large_bag_weight // SMALL_BAG_WEIGHT\n\n    # Calculate the number of small bags that can be made with the remaining small bags\n    num_small_bags = total_small_bag_weight // SMALL_BAG_WEIGHT\n\n    # Display the number of small bags that can be made\n    result = num_small_bags\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of the earth\n    earth_distance = 40000\n\n    # Calculate the distance that Alfie will fly\n    alfie_distance = earth_distance / 2\n\n    # Calculate the number of days it will take to fly the same distance\n    days = alfie_distance / 400\n\n    # Display the number of days\n    result = days\n    return result"}
{"output": "def solution():\n    \n    # Define the speed of the average car\n    AVERAGE_SPEED = 120\n\n    # Calculate the speed of the second fastest car\n    second_fastest_speed = AVERAGE_SPEED * 5\n\n    # Calculate the speed of the first fastest car\n    first_fastest_speed = second_fastest_speed * 1.25\n\n    # Calculate the speed of the faster car\n    faster_car_speed = first_fastest_speed / 1.25\n\n    # Display the speed of the faster car\n    result = faster_car_speed\n    return result"}
{"output": "def solution():\n    \n    # Define Liam's current age and the age difference between Liam and Vince\n    liam_age = 16\n    age_difference = 2\n\n    # Calculate Liam's age 2 years ago\n    liam_age_2_years_ago = liam_age - age_difference\n\n    # Calculate Vince's age 2 years ago\n    vince_age_2_years_ago = liam_age_2_years_ago / 2\n\n    # Calculate Vince's current age\n    vince_age = vince_age_2_years_ago + age_difference\n\n    # Display Vince's current age\n    result = vince_age\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of eggs painted\n    total_eggs = 56\n\n    # Define the number of eggs painted by Camden and Sarah\n    camden_sarah_eggs = 30 - 12\n\n    # Calculate the number of eggs painted by Arnold\n    arnold_eggs = total_eggs - camden_sarah_eggs\n\n    # Calculate the difference between the number of eggs painted by Camden and Arnold\n    difference = camden_sarah_eggs - arnold_eggs\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the number of crayons and the weight of each box\n    NUM_CRAYONS = 200\n    BOX_WEIGHT = 8\n\n    # Calculate the total weight of all the boxes\n    total_box_weight = NUM_CRAYONS / 8 * BOX_WEIGHT\n\n    # Calculate the total weight of all the crayons\n    total_weight = total_box_weight + NUM_CRAYONS\n\n    # Convert the total weight from ounces to pounds\n    total_weight_in_pounds = total_weight / 16\n\n    # Display the total weight in pounds\n    result = total_weight_in_pounds\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the tree and the percentage of logs that can be made\n    tree_length = 80\n    log_percentage = 0.8\n\n    # Calculate the number of logs that can be made\n    num_logs = tree_length * log_percentage\n\n    # Calculate the number of planks that can be made from each log\n    num_planks_per_log = 5\n\n    # Calculate the total number of planks that can be made\n    total_planks = num_logs * num_planks_per_log\n\n    # Calculate the total earnings from selling the planks\n    total_earnings = total_planks * 1.2\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the monthly salary of Valerie and her brother\n    VERIE_SALARY = 5000\n    BROTHER_SALARY = VERIE_SALARY / 2\n\n    # Calculate the combined salary of Valerie and her brother\n    combined_salary = VERIE_SALARY + BROTHER_SALARY\n\n    # Calculate the salary of their mother\n    mother_salary = combined_salary * 2\n\n    # Calculate the total amount of money they all have together\n    total_salary = VERIE_SALARY + BROTHER_SALARY + mother_salary\n\n    # Display the total salary\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of each walk\n    DISTANCE_BEACH = 2\n    DISTANCE_SIDEWALK = 1\n\n    # Calculate the walking speed of each walk\n    walking_speed_beach = DISTANCE_BEACH / 40  # miles per minute\n    walking_speed_sidewalk = DISTANCE_SIDEWALK / 2  # miles per minute\n\n    # Calculate the time it takes to walk each walk\n    walking_time_beach = DISTANCE_BEACH / walking_speed_beach  # minutes\n    walking_time_sidewalk = DISTANCE_SIDEWALK / walking_speed_sidewalk  # minutes\n\n    # Calculate the total time it takes to complete the walk\n    total_time = (walking_time_beach + walking_time_sidewalk) * 60  # minutes\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    # Calculate the total amount saved in the past 8 weeks\n    total_saved = 4 * 8\n\n    # Calculate the remaining amount to be saved\n    remaining_amount = 60 - total_saved\n\n    # Calculate the number of weeks needed to save the remaining amount\n    weeks_needed = remaining_amount / 4\n    result = weeks_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue birds in each tree\n    tree1_birds = 7\n    tree2_birds = 4\n    tree3_birds = 3\n\n    # Calculate the total number of blue birds\n    total_birds = (3 * tree1_birds) + (2 * tree2_birds) + tree3_birds\n\n    # Display the total number of blue birds\n    result = total_birds\n    return result"}
{"output": "def solution():\n    \n    # Define the number of marbles in a dozen\n    MARBLES_PER_DOZEN = 12\n\n    # Calculate the total number of marbles Bob will have after receiving 2 dozen more marbles\n    total_marbles = 60 + (2 * MARBLES_PER_DOZEN)\n\n    # Calculate the number of marbles Bob loses\n    lost_marbles = 10\n\n    # Calculate the number of marbles Bob will have after losing some\n    remaining_marbles = total_marbles - lost_marbles\n\n    # Display the number of marbles Bob will have\n    result = remaining_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the minimum temperature for the first two mugs of water\n    MINIMUM_TEMP = 40\n\n    # Define the temperature of the first two mugs of water\n    mug1_temp = 33\n    mug2_temp = 33\n\n    # Calculate the total amount of water from the first two mugs of water\n    total_water_mugs = mug1_temp + mug2_temp\n\n    # Calculate the amount of water that Donny pours from the first two mugs of water\n    water_pulled = 4 * mug1_temp + 1 * mug2_temp\n\n    # Calculate the minimum temperature for the second bottle\n    minimum_temp = (total_water_mugs - water_pulled) + MINIMUM_TEMP\n\n    # Display the minimum temperature for the second bottle\n    result = minimum_temp\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cows and chickens\n    initial_cows = 50\n    initial_chickens = 20\n\n    # Calculate the number of cows and chickens after three weeks\n    cows_per_day = 20\n    chickens_per_day = 10\n    total_cows = initial_cows + (cows_per_day * 7 * 3)\n    total_chickens = initial_chickens + (chickens_per_day * 7 * 3)\n\n    # Calculate the total number of animals on the farm\n    total_animals = total_cows + total_chickens\n\n    # return the result\n    result = total_animals\n    return result"}
{"output": "def solution():\n    \n    pack_cost = 10\n    bagels_per_pack = 9\n    packs_ordered = 4\n    discount = 0.1\n    bags_ordered = 4\n    total_cost = (packs_ordered * pack_cost) / bagels_per_pack * (1 - discount)\n    cost_per_bagel = total_cost / bags_ordered\n    result = cost_per_bagel\n    return result"}
{"output": "def solution():\n    \n    # Define the number of scoops of mashed potatoes\n    mashed_scoops = 23 - 5\n\n    # Calculate the number of potatoes needed for 1 less than 3 scoops\n    potatoes_needed = mashed_scoops - 3\n\n    # Calculate the total number of potatoes eaten\n    total_potatoes = potatoes_needed + mashed_scoops\n\n    # Display the total number of potatoes eaten\n    result = total_potatoes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs Chester eats and increases\n    eggs_per_day_1 = 3\n    eggs_per_day_2 = 5\n\n    # Calculate the total number of eggs Chester will need in 30 days\n    total_eggs = (eggs_per_day_1 * 30) + (eggs_per_day_2 * 30)\n\n    # Calculate the total number of dozens of eggs Chester will need in 60 days\n    total_dozens = total_eggs / 12\n\n    # Display the total number of dozens of eggs\n    result = total_dozens\n    return result"}
{"output": "def solution():\n    \n    # Define the number of green jelly beans and calculate the number of red jelly beans\n    green_jellybeans = 17\n    red_jellybeans = 2 * green_jellybeans\n\n    # Calculate the total number of jellybeans\n    total_jellybeans = 60\n\n    # Calculate the number of blue jellybeans\n    blue_jellybeans = total_jellybeans - green_jellybeans - red_jellybeans\n\n    # Display the number of blue jellybeans\n    result = blue_jellybeans\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees and lemons collected per year\n    NUM_TREES = 5\n    LEMONS_PER_YEAR = 6\n\n    # Calculate the total number of lemons collected in a decade\n    total_lemons = NUM_TREES * LEMONS_PER_YEAR * 10\n\n    # Display the total number of lemons collected\n    result = total_lemons\n    return result"}
{"output": "def solution():\n    \n    total_passengers = 84\n    men_ratio = 5\n    women_ratio = 9\n    total_ratio = men_ratio + women_ratio\n    women_on_bus = (women_ratio / total_ratio) * total_passengers\n    women_on_bus_alight = 20\n    women_remaining = women_on_bus - women_on_bus_alight\n    result = women_remaining\n    return result"}
{"output": "def solution():\n    \n    sunflower_price = 2\n    bouquet_price = 8\n    earnings_per_day = 26 + 56\n    sunflowers_per_bouquet = 12\n    total_sunflowers = (earnings_per_day // bouquet_price) * sunflowers_per_bouquet\n    result = total_sunflowers\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each rock\n    COST_PER_ROCK = 5\n    SELLING_PRICE_PER_ROCK = 7\n\n    # Calculate the total cost of the rocks\n    total_cost = COST_PER_ROCK * 100\n\n    # Calculate the total revenue from selling the rocks\n    total_revenue = SELLING_PRICE_PER_ROCK * 100\n\n    # Calculate the amount of money Adam will lose\n    money_lost = 100 - total_cost - total_revenue\n\n    # Display the amount of money Adam lost\n    result = money_lost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of scenes of each type of picture\n    large_scenes = 45\n    medium_scenes = 36\n    small_scenes = 49\n\n    # Define the number of scenes of each type of picture\n    large_scenes_per_day = 5\n    medium_scenes_per_day = 6\n    small_scenes_per_day = 7\n\n    # Calculate the total number of scenes of each type\n    total_large_scenes = large_scenes + large_scenes_per_day\n    total_medium_scenes = medium_scenes + medium_scenes_per_day\n    total_small_scenes = small_scenes + small_scenes_per_day\n\n    # Calculate the total number of days it will take for Lauren to create all the scenes\n    total_days = (total_large_scenes + total_medium_scenes + total_small_scenes) / (large_scenes"}
{"output": "def solution():\n    \n    # Define the number of eggs prepared\n    eggs_prepared = 3 * 12\n\n    # Define the number of children\n    num_children = 4\n\n    # Calculate the number of eggs each child receives\n    eggs_per_child = eggs_prepared / num_children\n\n    # Display the number of eggs each child receives\n    result = eggs_per_child\n    return result"}
{"output": "def solution():\n    \n    # Define the number of fish and the amount of food each fish needs per day\n    num_fish = 3\n    food_per_fish = 1\n\n    # Calculate the total amount of food needed per day\n    total_food_per_day = num_fish * food_per_fish\n\n    # Calculate the total amount of food needed for May\n    total_food_per_month = total_food_per_day * 30\n\n    # return the result\n    result = total_food_per_month\n    return result"}
{"output": "def solution():\n    \n    initial_roses = 30\n    roses_given = 24\n    roses_bought = 15\n    total_roses = initial_roses - roses_given + roses_bought\n    result = total_roses\n    return result"}
{"output": "def solution():\n    \n    # Calculate the speed of Sid in miles per hour\n    speed_1 = 110 / 2\n\n    # Calculate the speed of Sid in miles per hour\n    speed_2 = 140 / 3\n\n    # Calculate the total speed of Sid\n    total_speed = speed_1 + speed_2\n\n    # Calculate the average speed of Sid\n    average_speed = total_speed / 3\n\n    # Display the average speed\n    result = average_speed\n    return result"}
{"output": "def solution():\n    \n    # Define the probability of winning the first lottery ticket\n    first_ticket_prob = 0.2\n\n    # Define the probability of winning the second lottery ticket\n    second_ticket_prob = 3 * first_ticket_prob\n\n    # Calculate the total probability of both tickets\n    total_prob = first_ticket_prob + second_ticket_prob\n\n    # Calculate the probability of winning both tickets\n    first_ticket_percentage = first_ticket_prob * 100\n    second_ticket_percentage = second_ticket_prob * 100\n\n    # Display the probability of winning both tickets\n    result = first_ticket_percentage\n    return result"}
{"output": "def solution():\n    \n    # Define the number of seashells collected by Jim\n    jim_seashells = 27\n\n    # Calculate the number of seashells collected by Carlos\n    carloy_seashells = jim_seashells - 5\n\n    # Calculate the number of seashells collected by Carlos\n    carlos_seashells = carloy_seashells * 2\n\n    # Calculate the total number of seashells collected\n    total_seashells = jim_seashells + carlos_seashells\n\n    # Calculate the number of seashells each person gets\n    seashells_per_person = total_seashells // 3\n\n    # Display the number of seashells each person gets\n    result = seashells_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the number of carrots eaten on weekdays\n    WEEKDAY_CARROTS = 4 * 5\n\n    # Define the number of carrots eaten on Saturday and Sunday\n    WEEKDAY_SATURDAY_CARROTS = 5 * 2\n\n    # Calculate the total number of carrots eaten in a week\n    total_carrots = WEEKDAY_CARROTS + WEEKDAY_SATURDAY_CARROTS\n\n    # Display the total number of carrots eaten in a week\n    result = total_carrots\n    return result"}
{"output": "def solution():\n    \n    first_song_time = 5\n    second_song_time = first_song_time * 1.6\n    total_time = first_song_time + second_song_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of the mobile device\n    COST_PER_DEVICE = 20\n    SELLING_PRICE_PER_DEVICE = 2 * COST_PER_DEVICE\n\n    # Calculate the total cost of buying 2 devices last Monday\n    total_cost = 2 * COST_PER_DEVICE\n\n    # Calculate the total revenue from selling 4 devices last Tuesday\n    total_revenue = 4 * SELLING_PRICE_PER_DEVICE\n\n    # Calculate the total profit\n    total_profit = total_revenue - total_cost\n\n    # Display the total profit\n    result = total_profit\n    return result"}
{"output": "def solution():\n    \n    # Define Isabel's height\n    isabel_height = 7\n\n    # Calculate Carl's height\n    carl_height = isabel_height / 2\n\n    # Calculate Ned's height\n    ned_height = carl_height - 2\n\n    # Calculate Carl's height\n    carl_height_in_feet = carl_height + 1\n\n    # Display Carl's height in feet\n    result = carl_height_in_feet\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bottles produced per day and the percentage of people who need daily energy demand\n    BOTTLES_PER_DAY = 4200\n    PERCENTAGE_PER_PERSON = 0.2\n\n    # Calculate the number of people that need daily energy demand\n    daily_people = 2300 * (1 - PERCENTAGE_PER_PERSON)\n\n    # Calculate the number of bottles of juices that can be produced with the daily energy demand\n    juices_needed = daily_people * BOTTLES_PER_DAY\n\n    # Calculate the number of additional bottles of juices Hortex needs to produce\n    additional_juices = juices_needed - juices_needed\n\n    # Display the number of additional bottles of juices Hortex needs to produce\n    result = additional_juices\n    return result"}
{"output": "def solution():\n    \n    # Calculate the total number of octuplets\n    total_octuplets = 8\n\n    # Calculate the number of purple and blue wearers\n    purple_wearers = total_octuplets * (3/4)\n    blue_wearers = total_octuplets * (1/4)\n\n    # Calculate the number of baby wearers\n    baby_wearers = purple_wearers * (1/3)\n\n    # Calculate the percentage chance of a baby wearing a purple\n    baby_percentage = (purple_wearers / baby_wearers) * 100\n\n    # Display the percentage chance\n    result = baby_percentage\n    return result"}
{"output": "def solution():\n    \n    total_tax_reports = 5168\n    monday_tuesday_reports = 1907\n    thursday_friday_reports = 2136\n    total_received = monday_tuesday_reports + thursday_friday_reports\n    wednesday_reports = total_tax_reports - total_received\n    result = wednesday_reports\n    return result"}
{"output": "def solution():\n    # Calculate the amount earned from selling half of the land\n    half_land = 80 / 2\n    half_land_earnings = half_land * 50\n\n    # Calculate the amount earned from selling 1/4 of the land\n    one_half_land = 80 / 4\n    one_half_land_earnings = one_half_land * 30\n\n    # Calculate the amount earned from selling the remaining land\n    remaining_land = 80 - half_land - one_half_land\n    remaining_land_earnings = remaining_land * 3\n\n    # Calculate the total earnings from selling all the land\n    total_earnings = half_land_earnings + one_half_land_earnings + remaining_land_earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define Haley's age\n    haley_age = 26\n\n    # Calculate Geb's age\n    geb_age = (haley_age / 2) - 10\n\n    # Display Geb's age\n    result = geb_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of times Tyrion goes out per day\n    times_per_day = 3\n\n    # Define the number of times Tyrion changes his face mask per time he goes out\n    changes_per_time = 2\n\n    # Calculate the total number of face masks used per day\n    masks_per_day = times_per_day * changes_per_time\n\n    # Calculate the total number of face masks used in 2 days\n    masks_per_two_days = masks_per_day * 2\n\n    # Display the total number of face masks used in 2 days\n    result = masks_per_two_days\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in a dozen\n    EGGS_PER_DOZEN = 12\n\n    # Define the number of eggs each person finds\n    lamar_eggs = 5\n    stacy_eggs = 2 * lamar_eggs\n    charlie_eggs = stacy_eggs - 2\n    mei_eggs = charlie_eggs / 2\n\n    # Calculate the total number of eggs\n    total_eggs = 3 * EGGS_PER_DOZEN\n\n    # Calculate the total number of eggs that are not hidden\n    not_hidden_eggs = lamar_eggs + stacy_eggs + charlie_eggs + mei_eggs\n\n    # Calculate the number of eggs that are still hidden\n    hidden_eggs = total_eggs - not_hidden_eggs\n\n    # Display the number of eggs that are still hidden\n    result = hidden_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apartments in each complex\n    apartments_per_complex = 200\n\n    # Calculate the total number of apartments\n    total_apartments = apartments_per_complex * 2\n\n    # Calculate the number of apartments in the last complex\n    apartments_last_complex = total_apartments * 0.6\n\n    # Calculate the total number of apartments collected from each place\n    total_apartments_collected = apartments_first_complex + apartments_last_complex\n\n    # Calculate the total amount of money collected from each place\n    money_per_place = total_apartments_collected * 0.40\n\n    # Calculate the total amount of money John makes in a week\n    total_money = money_per_place * 3\n\n    # return the result\n    result = total_money\n    return result"}
{"output": "def solution():\n    # Calculate the number of fruits produced in the first 5-year-old trees\n    first_5_years = 50\n    first_5_total = first_5_years * 3\n\n    # Calculate the number of fruits produced in the next 6-year-old trees\n    next_6_years = first_5_years * 3\n    next_6_total = first_6_years * 7\n\n    # Calculate the number of fruits produced in the next 8-year-old trees\n    next_8_years = first_5_years - 200\n    next_8_total = next_8_years * 20\n\n    # Calculate the total number of fruits produced\n    total_fruits = first_5_total + next_5_total + first_6_total + next_6_total + next_8_total + next_8_total\n    result = total_fruits\n    return result"}
{"output": "def solution():\n    \n    # Define Jack's initial amount of money\n    jack_money = 100\n\n    # Calculate the amount of money given to Sophia\n    sophia_money = jack_money * (1/5)\n\n    # Calculate Jack's new amount of money\n    jack_money = jack_money + sophia_money\n\n    # Display Jack's new amount of money\n    result = jack_money\n    return result"}
{"output": "def solution():\n    \n    # Let x be the length of the blue rope\n    # Then the length of the red rope is 4x\n\n    # The sum of the lengths of the ropes is 37\n    # Therefore, x + (x-7) = 37\n    # Simplifying, we get:\n    # 3x - 7 = 37\n    # Solving for x, we get:\n    x = 5\n\n    # Therefore, the length of the red rope is 4x = 14\n\n    # Display the length of the red rope\n    result = 14\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money given by Ronnie\n    ronnie_money = 5\n\n    # Calculate the amount of money given by Rissa\n    rissa_money = ronnie_money * 3\n\n    # Calculate the total amount of money given to each person\n    total_money = ronnie_money + rissa_money\n\n    # Calculate the amount of money left after each person receives an equal amount\n    money_left = (4/5) * total_money\n\n    # Display the amount of money left\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of pints of paint used\n    total_pints = 12\n\n    # Calculate the number of yellow pints of paint\n    yellow_pints = total_pints / 2\n\n    # Calculate the number of red pints of paint\n    red_pints = total_pints - yellow_pints\n\n    # return the result\n    result = red_pints\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of each bedroom\n    bedroom_length = 20\n    bedroom_width = 12\n\n    # Calculate the area of each bedroom\n    bedroom_area = bedroom_length * bedroom_width\n\n    # Calculate the area of the living room\n    living_room_area = bedroom_area * 5\n\n    # Calculate the total area of the house\n    total_area = bedroom_area + living_room_area + 1000\n\n    # return the result\n    result = total_area\n    return result"}
{"output": "def solution():\n    \n    # Define the number of puffs of clouds counted on Monday\n    monday_clouds = 3\n\n    # Calculate the number of puffs of clouds counted on Friday\n    friday_clouds = monday_clouds * 2\n\n    # Calculate the total number of puffs of clouds counted over the five days\n    total_clouds = monday_clouds + friday_clouds\n\n    # Display the total number of puffs of clouds counted\n    result = total_clouds\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the regular box and the percentage increase\n    REGULAR_PRICE = 12\n    PERCENTAGE_INCREASE = 0.2\n\n    # Calculate the price of the new box\n    new_box_price = REGULAR_PRICE * (1 + PERCENTAGE_INCREASE)\n\n    # Calculate the number of dishwashing cycles that can be run with the new box\n    cycles = 100 / new_box_price\n\n    # Display the number of dishwashing cycles\n    result = cycles\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of money Thomas withdraws\n    initial_money = 1000\n\n    # Calculate the amount of money Thomas has after losing 10 bills\n    remaining_money = initial_money - 10\n\n    # Calculate the amount of money Thomas uses to pay for a bill\n    bills_for_bill = remaining_money / 2\n\n    # Calculate the amount of money Thomas triples his money\n    triples_money = remaining_money * 3\n\n    # Calculate the number of 5 dollar bills Thomas has\n    num_bills = triples_money // 5\n\n    # Display the number of 5 dollar bills Thomas has\n    result = num_bills\n    return result"}
{"output": "def solution():\n    \n    first_half_goals = 4\n    second_half_goals = first_half_goals - 2\n    first_half_total = first_half_goals + second_half_goals\n    second_half_ratio = 1/4\n    second_half_goals_ratio = 4\n    second_half_total = second_half_goals * second_half_ratio + second_half_goals_ratio\n    total_goals = first_half_total + second_half_total\n    result = total_goals\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of chalk used per day\n    initial_chalk_per_day = 5\n\n    # Calculate the amount of chalk used for recycling the chalk\n    recycling_chalk_per_day = initial_chalk_per_day * 0.2\n\n    # Calculate the total amount of chalk used after recycling the chalk\n    total_chalk_used = initial_chalk_per_day + recycling_chalk_per_day\n\n    # Calculate the amount of chalk used for extra help\n    extra_help_chalk = total_chalk_used * 0.45\n\n    # Calculate the final amount of chalk used\n    final_chalk_used = total_chalk_used - extra_help_chalk\n\n    # Display the final amount of chalk used\n    result = final_chalk_used\n    return result"}
{"output": "def solution():\n    \n    # Define the number of boys and girls in the class\n    num_boys = 12\n    num_girls = 12\n\n    # Calculate the number of girls who are on varsity\n    num_girls_on_varsity = num_girls / 3\n\n    # Calculate the number of boys who are on varsity\n    num_boys_on_varsity = num_boys / 4\n\n    # Calculate the total number of students who are on varsity\n    total_on_varsity = num_girls_on_varsity + num_boys_on_varsity\n\n    # Calculate the total number of students who are not on varsity\n    total_not_on_varsity = num_boys + num_girls - total_on_varsity\n\n    # Display the total number of students who are not on varsity\n    result = total_not_on_varsity\n    return result"}
{"output": "def solution():\n    \n    # Define the number of face masks Mike bought\n    mike_masks = 5\n\n    # Calculate the number of face masks Johnny bought\n    johnny_masks = 3 * mike_masks + 2\n\n    # Display the number of face masks Johnny bought\n    result = johnny_masks\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of teeth\n    initial_teeth = 30\n\n    # Calculate the number of teeth that James' dentist drills\n    dentist_drills = 4\n\n    # Calculate the number of teeth that James' dentist caps\n    dentist_caps = dentist_drills + 7\n\n    # Calculate the total number of teeth that James' dentist fixs\n    dentist_fixs = dentist_drills + dentist_caps\n\n    # Calculate the percentage of teeth that James' dentist fixs\n    percentage_fixs = (dentist_fixs / initial_teeth) * 100\n\n    # return the result\n    result = percentage_fixs\n    return result"}
{"output": "def solution():\n    # Calculate the total amount of milk sold\n    total_milk_sold = 4000 * 3.5\n\n    # Calculate the amount of milk that passed the expiry date\n    milk_passed = (2/5) * total_milk_sold\n\n    # Calculate the amount of milk that did not be sold\n    milk_not_sold = total_milk_sold - milk_passed\n\n    # Calculate the refund amount\n    refund_amount = milk_not_sold * 3.5\n    result = refund_amount\n    return result"}
{"output": "def solution():\n    \n    # Let's assume Colin's current age is x\n    # Then Wendy's current age will be x + 5\n    # In 25 years, Colin's age will be (x + 5) / 3\n    # According to the problem, x + 5 = 25\n    # Solving for x, we get x = 5\n\n    # Therefore, Colin is currently 5 years old\n    result = 5\n    return result"}
{"output": "def solution():\n    \n    # Define the total cost and the cost per book\n    total_cost = 20000\n    cost_per_book = 500 / 100\n\n    # Calculate the number of books Bob can buy per school\n    num_books = total_cost / cost_per_book\n\n    # Round down to the nearest whole number\n    num_books = int(num_books) + (num_books % 1 > 0)\n\n    # Display the number of books Bob can buy per school\n    result = num_books\n    return result"}
{"output": "def solution():\n    \n    # Define the number of apples that fell out of the tree\n    initial_apples = 2\n\n    # Define the number of apples that fall out of the tree\n    fallen_out_apples = 5\n\n    # Define the number of apples that fall out of the tree\n    fallen_out_apples -= 6\n\n    # Calculate the total number of apples at the tree\n    total_apples = initial_apples + fallen_out_apples\n\n    # Display the total number of apples\n    result = total_apples\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of coal ordered and the size of each bag\n    coal_ordered = 850\n    bag_size = 50\n\n    # Calculate the number of bags of coal delivered\n    bags_delivered = coal_ordered / bag_size\n\n    # Calculate the total cost of the order\n    total_cost = bags_delivered * 18\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices per pizza\n    CHEESE_SLICES = 12\n    PEPPERONI_SLICES = 8\n\n    # Define the number of friends\n    num_friends = 6\n\n    # Calculate the total number of slices eaten\n    total_slices_eaten = num_friends * CHEESE_SLICES + 4 * PEPPERONI_SLICES\n\n    # Calculate the total number of pies needed\n    total_pies = total_slices_eaten // CHEESE_SLICES + (total_slices_eaten % CHEESE_SLICES > 0)\n\n    # Display the total number of pies needed\n    result = total_pies\n    return result"}
{"output": "def solution():\n    # Calculate the total distance Sam ran this week\n    total_distance = 3*3 + 5*2  # Sam ran 3 miles on Monday, Wednesday and Friday, and 5 miles on Tuesday and Thursday\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    snowballs_per_hour = 20\n    melt_interval = 2\n    total_snowballs = 60\n    total_melt_time = (total_snowballs // melt_interval) * 15\n    total_time = total_melt_time + (total_snowballs % melt_interval) * 60\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define John's current age\n    john_age = 28\n\n    # Define the ratio of John's age to Jim's age when it came out\n    john_to_jim_ratio = 2\n\n    # Calculate Jim's current age\n    jim_age = (john_age - john_age) / john_to_jim_ratio\n\n    # Display Jim's current age\n    result = jim_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of slices of apple\n    num_slices = 8\n\n    # Calculate the number of slices eaten by Doxa's sister\n    sister_slices = num_slices + 1\n\n    # Calculate the number of slices eaten by Doxa's brother\n    brother_slices = sister_slices + 1\n\n    # Calculate the total number of slices eaten\n    total_slices = num_slices + sister_slices + brother_slices\n\n    # Display the total number of slices eaten\n    result = total_slices\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bandages ordered on the first day\n    day1_bandages = 38\n\n    # Calculate the number of bandages used on the second day\n    day2_bandages = day1_bandages - 10\n\n    # Calculate the total number of bandages ordered\n    total_bandages = day1_bandages + day2_bandages\n\n    # Calculate the number of bandages used on the third day\n    day3_bandages = 2 * 4\n\n    # Calculate the number of bandages left at the end of the third day\n    day3_bandages_left = 78\n\n    # Calculate the number of bandages used on the first day\n    day1_bandages = total_bandages - day3_bandages_left\n\n    # Display the number of bandages used on the first day\n    result = day1_bandages\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per inch of haircut and per color\n    COST_PER_INCH = 30\n    COLOR_COST = 40\n\n    # Calculate the total cost of haircut\n    total_cut_cost = (8 - 10) * COST_PER_INCH\n\n    # Calculate the total cost of haircut\n    total_color_cost = 10 * COST_PER_INCH\n\n    # Calculate the total cost of haircut and color\n    total_cost = total_cut_cost + total_color_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    hours_per_day = 7.5\n    days_per_week = 6\n    hourly_rate = 1.5\n    total_hours = hours_per_day * days_per_week * 4\n    total_pay = total_hours * hourly_rate + 10\n    result = total_pay\n    return result"}
{"output": "def solution():\n    \n    laundry_salary = 3\n    room_cleaning_salary = 1.5\n    trash_to_curb_salary = 0.75\n    dishwasher_empty_salary = 0.5\n    dishwasher_emptied = 6\n    laundry_total_salary = laundry_salary * dishwasher_emptied\n    room_total_salary = room_cleaning_salary * 2\n    total_salary = laundry_total_salary + room_total_salary + trash_to_curb_salary + dishwasher_empty_salary\n    result = total_salary\n    return result"}
{"output": "def solution():\n    \n    # Define the number of gallons of blood in each whale\n    GALLONS_PER_WHALE = 40\n\n    # Calculate the number of gallons of blood in each shark\n    GALLONS_PER_SHARK = GALLONS_PER_WHALE * 3\n\n    # Calculate the total number of gallons of blood in the sea\n    total_gallons = GALLONS_PER_WHALE * 10\n\n    # Display the total number of gallons of blood\n    result = total_gallons\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people who entered the restaurant in the morning\n    morning_people = 50\n\n    # Calculate the number of people who entered the restaurant at 10:00\n    first_people = morning_people + 40\n\n    # Calculate the number of people who entered the restaurant at 10:00\n    after_10_people = first_people * 2\n\n    # Calculate the number of people who entered the restaurant at 10:00\n    lunch_people = after_10_people * 2\n\n    # Calculate the number of people who entered the restaurant at evening\n    evening_people = first_people * 3\n\n    # Calculate the total number of people who entered the restaurant\n    total_people = morning_people + first_people + after_10_people + lunch_people + evening_people\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Define the number of packs of red pens\n    red_packs = 5\n\n    # Calculate the number of black pens\n    black_packs = red_packs * 2\n\n    # Calculate the total number of pens\n    total_pens = (red_packs + black_packs) * 5\n\n    # return the result\n    result = total_pens\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bottles of scotch and the cost per bottle\n    scotch_bottles = 10\n    scotch_cost = 600 / scotch_bottles\n\n    # Define the number of bottles of cognac purchased\n    cognac_bottles = 2 * scotch_bottles\n\n    # Calculate the cost per bottle of cognac\n    cognac_cost = scotch_cost * 1.5\n\n    # Calculate the total cost\n    total_cost = scotch_cost + (cognac_bottles * cognac_cost)\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of trees planted on the first day\n    white_oak_trees = 20\n    lodgepole_trees = 2 * white_oak_trees\n\n    # Define the number of trees planted on the second day\n    white_oak_trees += 10\n    lodgepole_trees += (1/4)*white_oak_trees\n\n    # Calculate the total number of trees planted\n    total_trees = white_oak_trees + lodgepole_trees\n\n    # Display the total number of trees planted\n    result = total_trees\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount of root beer\n    initial_amount = 24\n\n    # Calculate the amount of root beer after the first day\n    first_day_amount = initial_amount - 4\n\n    # Calculate the amount of root beer after the second day\n    second_day_amount = first_day_amount - 7\n\n    # Calculate the amount of root beer visited by Ronnie\n    ronnie_amount = 7\n\n    # Calculate the total amount of root beer\n    total_amount = first_day_amount + second_day_amount + ronnie_amount\n\n    # Display the total amount of root beer\n    result = total_amount\n    return result"}
{"output": "def solution():\n    \n    # Let x be the number of coffee mugs in the teacher's lounge\n    x = (40 - 8) / 4\n\n    # Display the number of coffee mugs in the teacher's lounge\n    result = x\n    return result"}
{"output": "def solution():\n    \n    total_fish = 66\n    red_stripes = total_fish / 3\n    remaining_fish = total_fish - red_stripes\n    blue_stripes = remaining_fish * 5 / 11\n    total_stripes = red_stripes + blue_stripes\n    result = total_stripes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eyeshadow colors in each set\n    palettes_per_set = 4\n    sets_per_set = 6\n\n    # Calculate the total number of eyeshadow colors before the sister steals one\n    total_colors_before = (2 * palettes_per_set) + (3 * sets_per_set)\n\n    # Calculate the number of eyeshadow colors left after the sister steals one\n    total_colors_after = (total_colors_before - 1) * palettes_per_set\n\n    # Calculate the number of eyeshadow colors used up by Amy\n    colors_used = total_colors_after / 2\n\n    # Calculate the number of eyeshadow colors left\n    eyeshadow_colors_left = total_colors_after - colors_used\n\n    # Display the number of eyeshadow colors left\n    result = eyeshadow_colors_left\n    return result"}
{"output": "def solution():\n    \n    # Define Mattison's height\n    mattison_height = 60\n\n    # Calculate the height of the two-story house\n    house_height = mattison_height * 7\n\n    # Calculate the height of the first floor\n    first_floor_height = mattison_height * 3\n\n    # Calculate the height of the second floor\n    second_floor_height = house_height - first_floor_height\n\n    # Display the height of the second floor\n    result = second_floor_height\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of shells\n    total_shells = 20\n\n    # Calculate the number of shells found by Alphas\n    alphas_shells = total_shells * 0.4\n\n    # Calculate the number of shells remaining\n    remaining_shells = total_shells - alphas_shells\n\n    # Calculate the number of shells found by The finders\n    finders_shells = remaining_shells * 0.6\n\n    # Calculate the number of shells found by Gogetters\n    gogetters_shells = total_shells - alphas_shells - finders_shells\n\n    # return the result\n    result = gogetters_shells\n    return result"}
{"output": "def solution():\n    \n    # Define the number of dogs and the distance each dog needs per day\n    NUM_DOGS = 4\n    dog1_distance = 1\n    dog2_distance = 4\n    dog3_distance = 3\n    dog4_distance = 3\n\n    # Calculate the total distance each dog needs per day\n    total_distance = (dog1_distance + dog2_distance + dog3_distance) / NUM_DOGS\n\n    # Calculate the distance the last dog needs per day\n    last_dog_distance = total_distance - total_distance\n\n    # Display the distance the last dog needs per day\n    result = last_dog_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial loan amount and the percentage of the loan\n    loan_amount = 250000\n    loan_percentage = 0.4\n\n    # Calculate the amount of the loan\n    loan_amount = loan_amount * loan_percentage\n\n    # Calculate the amount of the loan used to pay off debts\n    debt_amount = loan_amount * 0.6\n\n    # Calculate the amount of leftover money after paying off debts\n    leftover_money = loan_amount - debt_amount\n\n    # return the result\n    result = leftover_money\n    return result"}
{"output": "def solution():\n    \n    # Define the weight of each tuna and the price per kilogram\n    tuna1_weight = 56\n    tuna2_weight = 46\n    tuna3_weight = 26\n    price_per_kilogram = 0.5\n\n    # Calculate the total weight of all the tunas\n    total_weight = tuna1_weight + tuna2_weight + tuna3_weight\n\n    # Calculate the total earnings from selling all the tunas\n    total_earnings = total_weight * price_per_kilogram\n\n    # return the result\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the price of the magazines\n    magazines_price = 72 / (11/8)\n\n    # Calculate the profit\n    profit = magazines_price - magazines_price\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    low_speed = 3\n    medium_speed = 2\n    high_speed = 2 * medium_speed\n    total_water = low_speed * low_speed + medium_speed * medium_speed + high_speed * high_speed\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    # Define the number of packs and balloons per pack\n    PACKS = 10\n    BALLOONS_PER_PACK = 30\n\n    # Calculate the total number of balloons\n    total_balloons = PACKS * BALLOONS_PER_PACK\n\n    # Calculate the number of balloons thrown\n    balloons_thrown = total_balloons - 12\n\n    # Display the number of balloons thrown\n    result = balloons_thrown\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of medicine in the first dosage\n    medicine_1 = 14\n\n    # Calculate the amount of medicine in the second dosage\n    medicine_2 = medicine_1 * 3\n\n    # Calculate the total amount of medicine in 8 doses\n    total_medicine = medicine_1 + medicine_2\n\n    # Display the total amount of medicine\n    result = total_medicine\n    return result"}
{"output": "def solution():\n    \n    # Define the capacity of Ali's class\n    ali_class_capacity = 120\n\n    # Calculate the capacity of one class\n    class_capacity = ali_class_capacity / 8\n\n    # Calculate the total capacity of both classes\n    total_capacity = 2 * class_capacity\n\n    # Display the total capacity\n    result = total_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the initial amount borrowed and the amount returned\n    initial_amount = 300\n    returned_amount = initial_amount * 0.02\n\n    # Calculate the total amount owed after the promised return\n    total_amount_owed = initial_amount + returned_amount\n\n    # Calculate the amount Stephen will give his sister each month\n    monthly_payment = 25\n\n    # Calculate the remaining amount after the promised payment\n    remaining_amount = total_amount_owed - monthly_payment\n\n    # Calculate the amount Stephen will pay in the twelfth month\n    twelfth_month_payment = remaining_amount + (monthly_payment * 11)\n\n    # Display the amount Stephen will pay in the twelfth month\n    result = twelfth_month_payment\n    return result"}
{"output": "def solution():\n    \n    # Define the number of children and the number of diaper changes each child requires per day\n    num_children = 2\n    changes_per_child = 5\n\n    # Calculate the total number of diaper changes each child requires per day\n    total_changes_per_child = changes_per_child * num_children\n\n    # Calculate the number of diaper changes Jordan's wife changes per day\n    wife_changes_per_day = total_changes_per_child / 2\n\n    # Calculate the total number of diaper changes Jordan changes per day\n    jordan_changes_per_day = total_changes_per_child - wife_changes_per_day\n\n    # Display the total number of diaper changes Jordan changes per day\n    result = jordan_changes_per_day\n    return result"}
{"output": "def solution():\n    \n    # Calculate the volume of the jar\n    volume = 6 * 6 * 15\n\n    # Calculate the number of red jelly beans\n    red_jelly_beans = volume * 0.3\n\n    # Calculate the distance between the red and packed jelly beans\n    distance = red_jelly_beans / 0.15\n\n    # Display the distance\n    result = distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial capacity of the bus\n    capacity = 200\n\n    # Calculate the number of people who entered the bus at the first stop\n    first_stop_people = 40\n\n    # Calculate the total number of people who entered the bus at the first station\n    first_station_people = first_stop_people + (3/4)*first_station_people\n\n    # Calculate the number of people who entered the bus at the second station\n    second_station_people = first_station_people * 2\n\n    # Calculate the total number of people required to fill the remaining spaces on the bus\n    remaining_capacity = capacity - first_stop_people - second_station_people\n\n    # Display the total number of people required to fill the remaining spaces\n    result = remaining_capacity\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of one visit and the number of visits per year\n    visit_cost = 2\n    visits_per_year = 3\n\n    # Calculate the total cost of visiting for 5 years\n    total_cost_5_years = visit_cost * visits_per_year * 5\n\n    # Calculate the total cost of visiting for 3 more years\n    total_cost_3_years = visit_cost * visits_per_year * 3\n\n    # Calculate the total cost of all visits\n    total_cost = total_cost_5_years + total_cost_3_years\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students and points per grade\n    num_students = 10\n    points_per_grade = 7\n\n    # Calculate the total number of points in all grades\n    total_points = num_students * points_per_grade * 12\n\n    # Calculate the number of groups that can try and escape the room\n    num_groups = num_students // 8\n\n    # Calculate the total time needed to escape all the students\n    total_time = num_groups * 45\n\n    # Display the total time needed\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of wooden and roof frames\n    WOODEN_TABLE_PRICE = 20\n    ROOF_FRAME_PRICE = 10\n\n    # Define the number of wooden and roof frames\n    num_wooden = 4\n    num_roof_frames = 2\n\n    # Calculate the total cost of the wooden tables\n    wooden_cost = num_wooden * WOODEN_TABLE_PRICE\n\n    # Calculate the total cost of the roof frames\n    roof_cost = num_roof_frames * ROOF_FRAME_PRICE\n\n    # Calculate the total cost of all the items\n    total_cost = wooden_cost + roof_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the length of the board\n    board_length = 40\n\n    # Calculate the length of the shorter piece\n    shorter_piece = board_length / 2\n\n    # Calculate the length of the longer piece\n    longer_piece = shorter_piece * 4\n\n    # Display the length of the longer piece\n    result = longer_piece\n    return result"}
{"output": "def solution():\n    \n    # Define the number of meatballs per pound and the total number of meatballs to be made\n    MEATBALLS_PER_POUND = 16\n    TOTAL_MEATBALLS = 80\n\n    # Calculate the number of pounds of ground beef needed\n    pounds_of_ground_beef = TOTAL_MEATBALLS / MEATBALLS_PER_POUND\n\n    # Calculate the number of tablespoons of the secret steakhouse seasoning needed\n    tablespoons_per_pound = 2\n    tablespoons_needed = pounds_of_ground_beef * tablespoons_per_pound\n\n    # Display the total number of tablespoons of the secret steakhouse seasoning needed\n    result = tablespoons_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the width of each window and the number of windows\n    WINDOW_WIDTH = 35\n    NUM_WINDOWS = 5\n\n    # Calculate the total width of all the windows\n    total_width = WINDOW_WIDTH * NUM_WINDOWS\n\n    # Calculate the amount of fabric needed\n    fabric_needed = total_width * 2\n\n    # Display the amount of fabric needed\n    result = fabric_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost per minute of the call\n    COST_PER_MINUTE = 0.25\n\n    # Define the number of minutes the call was made\n    minutes = 36\n\n    # Calculate the cost of the call before the discount\n    initial_cost = COST_PER_MINUTE * minutes\n\n    # Calculate the discounted price per minute\n    discounted_price = COST_PER_MINUTE - 0.2\n\n    # Calculate the total cost of the call\n    total_cost = initial_cost - discounted_price\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of rain on Monday\n    monday_rain = 2\n\n    # Calculate the amount of rain on Tuesday\n    tuesday_rain = 2 * monday_rain + 1\n\n    # Display the amount of rain on Tuesday\n    result = tuesday_rain\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people and treats per person\n    num_people = 5\n    treats_per_person = 2\n\n    # Calculate the total number of treats\n    total_treats = num_people * treats_per_person\n\n    # Calculate the number of brownies\n    num_brownies = 3 * total_treats - 2\n\n    # Calculate the number of cupcakes\n    num_cupcakes = total_treats + num_brownies\n\n    # Display the number of cupcakes\n    result = num_cupcakes\n    return result"}
{"output": "def solution():\n    \n    # Define the initial prices of the manicure and the pedicure\n    MANICURE_PRICE = 35\n    PENICURE_PRICE = 40\n\n    # Calculate the discounted prices of the manicure and the pedicure\n    discounted_manicure_price = MANICURE_PRICE * 0.8\n    discounted_pedicure_price = PENICURE_PRICE * 0.8\n\n    # Calculate the total cost of both manicure and pedicure\n    total_cost = (discounted_manicure_price + discounted_pedicure_price) * 2\n\n    # Calculate the total cost including nail art\n    total_cost += 3 * 2\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of magazines ordered and the number of issues each magazine sends\n    ordered_magazines = 3\n    ordered_issues = 12\n\n    # Define the number of magazines Susan has and the number of issues each magazine sends\n    susan_magazines = 1\n    susan_issues = 6\n\n    # Calculate the number of magazines Susan's last magazine sends\n    last_magazines = susan_magazines * 4 * susan_issues\n\n    # Calculate the total number of magazines Susan gets every year\n    total_magazines = (ordered_magazines * ordered_issues) + susan_magazines + last_magazines\n\n    # return the result\n    result = total_magazines\n    return result"}
{"output": "def solution():\n    \n    # Define the number of paintings Samantha has\n    samantha_paintings = 27\n\n    # Calculate the number of paintings Shelley has\n    shelley_paintings = samantha_paintings + 12\n\n    # Calculate the number of paintings Kim has\n    kim_paintings = shelley_paintings - 8\n\n    # Display the number of paintings Kim has\n    result = kim_paintings\n    return result"}
{"output": "def solution():\n    \n    # Define the initial price of the toy\n    initial_price = 40\n\n    # Calculate the price after the increase in December\n    price_after_december = initial_price * 1.8\n\n    # Calculate the price after the decrease in January\n    price_after_january = price_after_december * 0.5\n\n    # Display the price after the decrease in January\n    result = price_after_january\n    return result"}
{"output": "def solution():\n    \n    standard_fee_per_hour = 80\n    veteran_fee_per_hour = standard_fee_per_hour * 0.75\n    num_standard_lessons = 4\n    num_veteran_lessons = 2\n    total_cost = (num_standard_lessons * standard_fee_per_hour) + (num_veteran_lessons * veteran_fee_per_hour)\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the scores\n    scores = [50, 80, 60, 40, 90, 70, 60]\n\n    # Calculate the average score\n    avg_score = sum(scores) / len(scores)\n\n    # Display the average score\n    result = avg_score\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of pomelos\n    initial_pomelos = 20\n\n    # Calculate the number of pomelos left with Eve\n    pomelos_left = initial_pomelos // 4\n\n    # Calculate the number of pomelos given away\n    pomelos_given_away = initial_pomelos - pomelos_left\n\n    # Display the number of pomelos given away\n    result = pomelos_given_away\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of apples\n    initial_apples = 60\n\n    # Calculate the number of apples Walter ate\n    apples_ate = initial_apples * (2/5)\n\n    # Calculate the number of apples remaining after Walter ate\n    remaining_apples = initial_apples - apples_ate\n\n    # Calculate the number of apples Walter gave to his sister\n    apples_given = remaining_apples * 0.25\n\n    # Calculate the number of apples remaining after giving some to his sister\n    remaining_apples -= apples_given\n\n    # Calculate the total amount of money Walter received\n    total_money = remaining_apples * 3\n\n    # return the result\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    last_year_novels = 9\n    this_year_novels = (3/4) * last_year_novels\n    result = this_year_novels\n    return result"}
{"output": "def solution():\n    \n    # Define the average speed of the interstate\n    AVERAGE_SPEED = 50\n\n    # Define the number of days\n    DAYS = 3\n\n    # Calculate the total distance covered\n    total_distance = AVERAGE_SPEED * DAYS\n\n    # Calculate the percentage of the distance covered\n    percentage_covered = (total_distance / 6000) * 100\n\n    # Display the percentage of the distance covered\n    result = percentage_covered\n    return result"}
{"output": "def solution():\n    \n    # Define the number of grapes eaten by Madeline\n    madeline_grapes = 6\n\n    # Calculate the number of grapes used for grape juice\n    grape_juice_grapes = madeline_grapes * 5\n\n    # Calculate the number of grapes remaining after making the grape juice and making the glass\n    remaining_grapes = madeline_grapes - grape_juice_grapes\n\n    # Calculate the number of grapes used for pies\n    pie_grapes = remaining_grapes // 4\n\n    # Calculate the total number of grapes at the beginning\n    total_grapes = madeline_grapes + grape_juice_grapes + pie_grapes\n\n    # Display the total number of grapes at the beginning\n    result = total_grapes\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of teachers and the number of sick teachers\n    total_teachers = 82\n    sick_teachers = 13\n\n    # Calculate the number of teachers at the school that day\n    school_teachers = total_teachers - sick_teachers + 9\n\n    # return the result\n    result = school_teachers\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of each item\n    PASTA_COST = 1.00\n    CHEDDAR_COST = 3.00\n    GUYE_COST = 2 * CHEDDAR_COST\n\n    # Calculate the total cost of each item\n    pasta_cost = PASTA_COST * 7\n    cheddar_cost = CHEDDAR_COST\n    gruyere_cost = GUYE_COST * 52\n\n    # Calculate the total cost of both items\n    total_cost = pasta_cost + cheddar_cost + gruyere_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the number of classrooms and the time per classroom\n    num_classrooms = 80\n    time_per_classroom = 15\n\n    # Calculate the total time spent cleaning classrooms\n    total_time = num_classrooms * time_per_classroom\n\n    # Calculate the total number of hours worked\n    total_hours = 8\n\n    # Calculate the total number of hours worked\n    total_time_hours = total_time / 60\n\n    # Calculate the percentage of time spent cleaning classrooms per day\n    percentage_per_day = (total_time_hours / total_time_hours) * 100\n\n    # Display the percentage of time spent cleaning classrooms per day\n    result = percentage_per_day\n    return result"}
{"output": "def solution():\n    \n    middle_shelf_capacity = 10\n    bottom_shelf_capacity = 2 * middle_shelf_capacity\n    top_shelf_capacity = bottom_shelf_capacity - 5\n    total_books = 110\n    total_shelf_capacity = middle_shelf_capacity + bottom_shelf_capacity + top_shelf_capacity\n    total_books_needed = total_books - total_shelf_capacity\n    result = total_books_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the cost and selling price of each egg\n    COST_PER_DOZEN = 2.40\n    SELLING_PRICE_PER_EGG = 1\n\n    # Calculate the total cost of the eggs\n    total_cost = 5 * COST_PER_DOZEN\n\n    # Calculate the total revenue from selling the eggs\n    total_revenue = 3 * SELLING_PRICE_PER_EGG\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    total_hats = 100\n    red_hats = total_hats / 2\n    remaining_hats = total_hats - red_hats\n    blue_hats = (3/5) * remaining_hats\n    white_hats = remaining_hats - blue_hats\n    result = white_hats\n    return result"}
{"output": "def solution():\n    # Calculate the total cost of the jerky sticks\n    total_cost = 30 * 18  # 30 sticks at $18.00 per bag\n\n    # Calculate the cost per stick of jerky in cents\n    cost_per_stick = total_cost / 30\n\n    result = cost_per_stick\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of questions and the percentage of correct answers\n    total_questions = 70 + 40\n    correct_percentage = 0.7\n\n    # Calculate the number of correct questions on the first test\n    correct_questions = total_questions * correct_percentage\n\n    # Calculate the number of questions left to move on the first test\n    left_questions = total_questions - correct_questions\n\n    # Calculate the number of questions needed to move on the second test\n    needed_questions = (40 - left_questions) / correct_percentage\n\n    # Round up to the nearest whole number\n    needed_questions = round(needed_questions) + 1\n\n    # return the result\n    result = needed_questions\n    return result"}
{"output": "def solution():\n    \n    total_ice_cubes = 116\n    strawberry_cubes = (total_ice_cubes + 4) / 5\n    blueberry_cubes = strawberry_cubes - 4\n    result = blueberry_cubes\n    return result"}
{"output": "def solution():\n    \n    games_per_year = 40\n    points_per_game = 21\n    total_points = games_per_year * points_per_game * 4\n    result = total_points\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of marbles\n    initial_marbles = 10\n\n    # Calculate the number of marbles after the tripped and dropped marbles\n    remaining_marbles = initial_marbles // 2\n\n    # Calculate the number of marbles that scrambled\n    scrambled_marbles = 3\n\n    # Calculate the number of marbles that were not a marble\n    non_marbles = remaining_marbles - scrambled_marbles\n\n    # Calculate the number of marbles that were inspected\n    inspected_marbles = scrambled_marbles - non_marbles\n\n    # Calculate the final number of marbles\n    final_marbles = remaining_marbles + inspected_marbles\n\n    # Display the final number of marbles\n    result = final_marbles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Jason needs to sell and his bonus\n    cars_needed = 15\n    bonus = 1\n\n    # Calculate the average number of telephone calls per car\n    calls_per_car = (cars_needed // 25) + (cars_needed % 25 > 0)\n\n    # Calculate the number of customers who will receive new cars\n    customers = cars_needed // 2\n\n    # Calculate the number of telephone calls needed to buy one car\n    calls_per_car += 1\n\n    # Calculate the total number of telephone calls needed\n    total_calls = calls_per_car * customers\n\n    # Display the total number of telephone calls needed\n    result = total_calls\n    return result"}
{"output": "def solution():\n    \n    # Define the number of rooms and the number of people\n    num_rooms = 8\n    num_people = 4\n\n    # Calculate the number of flashlights\n    num_flashlights = num_people * 2\n\n    # Calculate the number of small and medium candles\n    num_small_rooms = num_rooms // 2\n    num_medium_rooms = num_rooms - num_small_rooms\n    num_small_candles = 4 * num_small_rooms\n    num_medium_candles = 5 * num_medium_rooms\n\n    # Calculate the total number of candles\n    total_candles = num_small_candles + num_medium_candles\n\n    # Display the total number of candles\n    result = total_candles\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bags of chips and the number of chips per bag\n    bags_of_chips = 2\n    chips_per_bag = 55\n\n    # Calculate the total number of chips\n    total_chips = bags_of_chips * chips_per_bag\n\n    # Calculate the number of chips each person gets\n    chips_per_person = total_chips / 5\n\n    # Display the number of chips each person gets\n    result = chips_per_person\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes John to get to the first side\n    first_side_time = 5\n\n    # Define the time it takes John to get to the second and third sides\n    second_third_side_time = 2 * first_side_time\n\n    # Define the time it takes John to get to the last 2 sides\n    last_2_side_time = first_side_time / 2\n\n    # Define the time it takes John to get to the 5th side\n    fifth_side_time = 6 * first_side_time\n\n    # Calculate the total time of the cube\n    total_time = first_side_time + second_third_side_time + last_2_side_time + fifth_side_time\n\n    # Display the total time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the number of helmets\n    helmets = 20\n\n    # Calculate the number of robots\n    robots = helmets / 2\n\n    # Calculate the number of footballs\n    footballs = helmets / 2\n\n    # Calculate the total number of items\n    total_items = robots + helmets + footballs\n\n    # Display the total number of items\n    result = total_items\n    return result"}
{"output": "def solution():\n    \n    daily_hours = 6\n    weekly_hours = daily_hours * 5\n    call_duration = 15\n    calls_per_week = weekly_hours // call_duration\n    result = calls_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to dry one painting with the old varnish\n    old_time = 7\n\n    # Define the time it takes to dry one painting with the new varnish\n    new_time = 12\n\n    # Calculate the total time to dry 6 paintings with the old varnish\n    total_old_time = old_time * 6\n\n    # Calculate the total time to dry 6 paintings with the new varnish\n    total_new_time = new_time * 6\n\n    # Calculate the difference in time between the two scenarios\n    time_difference = total_new_time - total_old_time\n\n    # return the result\n    result = time_difference\n    return result"}
{"output": "def solution():\n    \n    total_plants = 20\n    half_plants = 4\n    one_plant = 8\n    quarter_plants = total_plants - half_plants - one_plants\n    half_water = half_plants * 0.5\n    one_water = one_plant\n    quarter_water = quarter_plants * 0.25\n    total_water = half_water + one_water + quarter_water\n    result = total_water\n    return result"}
{"output": "def solution():\n    \n    distance = 200\n    land_speed = 20\n    water_speed = 10\n    land_distance = distance / 2\n    water_distance = distance / 2\n    total_time = (land_distance / land_speed) + (water_distance / water_speed)\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    sticks_needed = 56\n    sticks_per_box = 8\n    boxes_needed = sticks_needed / sticks_per_box\n    box_cost = 2\n    total_cost = boxes_needed * box_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the cost of the main phone plan\n    main_phone_cost = 20\n\n    # Calculate the cost of each additional phone\n    additional_phone_cost = main_phone_cost / 2\n\n    # Calculate the total cost of the phone plan\n    total_cost = main_phone_cost + (5 * additional_phone_cost)\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    doughnuts_per_day = 10\n    doughnuts_per_june = doughnuts_per_day * 30\n    price_per_doughnut = 2\n    money_made = doughnuts_per_june * price_per_doughnut\n    result = money_made\n    return result"}
{"output": "def solution():\n    \n    total_photos = 210\n    photos_per_batch = 7\n    batches_per_day = 6\n    daily_photos = photos_per_batch * batches_per_day\n    days_needed = total_photos / daily_photos\n    result = days_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the number of each type of dry cleaning in a week\n    blouses_per_week = 5\n    pants_per_week = 2\n    skirts_per_week = 1\n\n    # Define the prices of each type of dry cleaning\n    blouse_price = 5\n    skirt_price = 6\n    pant_price = 8\n\n    # Calculate the total cost of dry cleaning in 5 weeks\n    total_cost = (blouses_per_week * blouse_price + (pants_per_week * pant_price) + (skirts_per_week * skirt_price) + (pants_per_week * pant_price) * 5\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define John's normal speaking speed\n    NORMAL_SPEED = 150\n\n    # Calculate John's final speaking speed after training\n    FINAL_SPEED = NORMAL_SPEED * 2.5\n\n    # Calculate the total number of words John needs to speak\n    total_words = FINAL_SPEED * 10 * 450\n\n    # Calculate the time it takes John to speak 10 pages\n    time_in_minutes = total_words / 450\n\n    # Display the time it takes John to speak 10 pages\n    result = time_in_minutes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of people at the beach on the first day\n    first_day = 50\n\n    # Calculate the number of people at the beach on the second day\n    second_day = first_day + 20\n\n    # Calculate the total number of people at the beach on the third day\n    third_day = 2 * second_day\n\n    # Calculate the total number of people at the beach that week\n    total_people = first_day + second_day + third_day\n\n    # Display the total number of people\n    result = total_people\n    return result"}
{"output": "def solution():\n    \n    # Calculate the number of kernels popped in the first 30 seconds\n    first_30_seconds = 20\n\n    # Calculate the number of kernels popped in the next 30 seconds\n    next_30_seconds = 3 * first_30_seconds\n\n    # Calculate the number of kernels popped in the next thirty seconds\n    next_thirty_seconds = 4 * next_30_seconds\n\n    # Calculate the number of kernels popped in the final 30 seconds\n    final_30_seconds = (1/2) * (first_30_seconds + next_thirty_seconds)\n\n    # Calculate the total number of kernels popped\n    total_kernels = first_30_seconds + next_30_seconds + final_30_seconds\n\n    # Calculate the number of kernels left to pop\n    left_to_pop = total_kernels - (1/4) * final_30_seconds\n\n    # Display the number of kernels left to pop\n    result = left_to_pop\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of lemon in one gallon of lemonade\n    LEMON_PER_GALLON = 1\n\n    # Define the number of gallons of lemonade needed for the party\n    gallons_needed = 4\n\n    # Calculate the total amount of lemon in the original gallons of lemonade\n    original_gallons = gallons_needed / LEMON_PER_GALLON\n    total_lemon = original_gallons * LEMON_PER_GALLON + 2 * original_gallons\n\n    # Calculate the number of lemons needed for the party\n    lemons_needed = total_lemon / 6\n\n    # Display the number of lemons needed\n    result = lemons_needed\n    return result"}
{"output": "def solution():\n    \n    german_shepherd_food_per_day = 5\n    bulldog_food_per_day = 3\n    total_food_per_day = (3 * german_shepherd_food_per_day) + (2 * bulldog_food_per_day)\n    total_food_per_week = total_food_per_day * 7\n    result = total_food_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the number of 2-legged and 4-legged animals\n    num_2legged = 10\n    num_4legged = 15\n\n    # Calculate the total number of pairs of animal legs\n    total_legs = (num_2legged * 2) + (num_4legged * 4)\n\n    # Display the total number of pairs of animal legs\n    result = total_legs\n    return result"}
{"output": "def solution():\n    \n    # Define the number of blue blocks and calculate the number of yellow blocks\n    blue_blocks = 4\n    yellow_blocks = 2 * blue_blocks\n\n    # Calculate the total number of blocks\n    total_blocks = 32\n\n    # Calculate the number of red blocks\n    red_blocks = total_blocks - blue_blocks - yellow_blocks\n\n    # Display the number of red blocks\n    result = red_blocks\n    return result"}
{"output": "def solution():\n    # Calculate the distance Elvis traveled in the first 5 hours\n    distance_first_leg = 18 * 5\n\n    # Calculate the distance Elvis traveled in the next 8 hours\n    distance_second_leg = 18 * 8\n\n    # Calculate the total distance Elvis traveled\n    total_distance = distance_first_leg + distance_second_leg\n    result = total_distance\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the boat\n    initial_cost = 9000\n\n    # Calculate the cost after the first year\n    first_year_cost = initial_cost * 0.7\n\n    # Calculate the cost after the second year\n    second_year_cost = first_year_cost * 0.7\n\n    # Calculate the cost after the third year\n    third_year_cost = second_year_cost * 0.2\n\n    # Calculate the total cost after the three years\n    total_cost = initial_cost - first_year_cost - second_year_cost - third_year_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    total_candies = 232\n    red_candies = 54\n    orange_candies = 2 * red_candies\n    yellow_candies = 0.5 * red_candies\n    pink_candies = total_candies - (red_candies + orange_candies + yellow_candies)\n    result = pink_candies\n    return result"}
{"output": "def solution():\n    \n    hotel_cost = 80 * 3\n    bus_cost = 0.1 * 80 * 7\n    total_cost = hotel_cost + bus_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    # Calculate the number of marbles that Mazie gave to Darla\n    marbles_to_dallas = 21 - 4  # Dallas dropped 4 marbles in the playground\n    marbles_to_darla = 52 - marbles_to_dallas  # Mazie has 52 marbles in total\n    result = marbles_to_darla\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of adult and child tickets and popcorns\n    ADULT_TICKET_PRICE = 12\n    CHILD_TICKET_PRICE = 8\n    POPCORN_PRICE = 3\n\n    # Calculate the total cost of adult and child tickets\n    adult_cost = ADULT_TICKET_PRICE + CHILD_TICKET_PRICE\n    child_cost = CHILD_TICKET_PRICE\n    total_cost = adult_cost + child_cost\n\n    # Calculate the total cost of popcorns\n    total_popcorns_cost = 2 * POPCORN_PRICE\n\n    # Calculate the total cost of all popcorns\n    total_popcorns_cost = total_popcorns_cost + total_popcorns_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    car_weight = 1200\n    luggage_weight = 250\n    children_weight = 2 * 75\n    total_weight = car_weight + luggage_weight + children_weight\n    force_percent = 0.01\n    force_needed = total_weight * force_percent\n    result = force_needed\n    return result"}
{"output": "def solution():\n    \n    # Define the dimensions of the backyard fence\n    long_side = 20\n    short_side = 15\n\n    # Calculate the total length of the backyard fence\n    total_length = long_side + short_side\n\n    # return the result\n    result = total_length\n    return result"}
{"output": "def solution():\n    \n    # Define the age difference between Mia and Emma\n    age_difference = -40\n\n    # Calculate the current age of Mia and Emma\n    mia_age = 40 + age_difference\n\n    # Calculate the average age of their ages\n    average_age = (mia_age + 40) / 2\n\n    # Display the average age\n    result = average_age\n    return result"}
{"output": "def solution():\n    \n    # Define the number of seashells found by each person\n    tom_seashells = 214\n    nancy_seashells = 432\n    benny_seashells = 86\n\n    # Calculate the total number of seashells found\n    total_seashells = tom_seashells + nancy_seashells + benny_seashells\n\n    # Subtract the number of cracked seashells\n    good_seashells = total_seashells - 67\n\n    # Display the number of good seashells found\n    result = good_seashells\n    return result"}
{"output": "def solution():\n    num_people = 12\n    dinner_plate_cost = 6.0\n    bowl_cost = 5.0\n    salad_plate_cost = 4.0\n\n    # Calculate the total cost of all dinner plates\n    total_dinner_cost = num_people * dinner_plate_cost\n\n    # Calculate the total cost of all bowls\n    total_bowl_cost = num_people * bowl_cost\n\n    # Calculate the total cost of all salad plates\n    total_salad_cost = num_people * salad_plate_cost\n\n    # Calculate the total cost of all place settings\n    total_cost = total_dinner_cost + total_bowl_cost + total_salad_cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    steve_time = 10\n    anna_time = (steve_time / 2) + 2\n    result = anna_time\n    return result"}
{"output": "def solution():\n    \n    pigs = 5\n    feed_per_pig = 4\n    feed_per_day = feed_per_pig * 2\n    feed_ordered = 300\n    feed_remaining = feed_ordered - feed_per_day * feed_per_day\n    result = feed_remaining\n    return result"}
{"output": "def solution():\n    \n    # Define the number of guests and hot dogs needed per guest\n    guests = 20\n    hot_dogs_per_guest = 2\n\n    # Calculate the total number of hot dogs needed\n    total_hot_dogs = guests * hot_dogs_per_guest\n\n    # Calculate the number of hot dogs needed to reach the party\n    hot_dogs_needed = total_hot_dogs - 4\n\n    # Calculate the number of hot dog packs needed\n    hot_dogs_per_pack = 6\n    packs_needed = hot_dogs_needed / hot_dogs_per_pack\n\n    # Calculate the total cost of the hot dogs\n    total_cost = packs_needed * 2\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and quantities of cupcakes and cookies\n    CUPCAKE_PRICE = 2\n    COOKIE_PRICE = 1\n    CUPCAKE_QUANTITY = 20\n    COOKIE_QUANTITY = 40\n\n    # Calculate the total revenue from cupcake sales\n    cupcake_revenue = CUPCAKE_PRICE * CUPCAKE_QUANTITY\n\n    # Calculate the total revenue from cookie sales\n    cookie_revenue = COOKIE_PRICE * COOKIE_QUANTITY\n\n    # Calculate the total revenue from tray sales\n    tray_revenue = TRAY_PRICE * 5\n\n    # Calculate the total revenue from all sales\n    total_revenue = cupcake_revenue + cookie_revenue + tray_revenue\n\n    # Calculate the amount of money Frances has left\n    money_left = total_revenue - (20 * CUPCAKE_PRICE)\n\n    # Display the amount of money Frances has left\n    result"}
{"output": "def solution():\n    \n    # Define the initial number of children\n    initial_children = 5\n\n    # Calculate the number of children after the first street\n    children_after_street1 = initial_children + 5\n\n    # Calculate the number of children after the second street\n    children_after_street2 = children_after_street1 + 2\n\n    # Calculate the number of children after the third street\n    children_after_street3 = children_after_street2 + 2\n\n    # Calculate the total number of children after the first and second street\n    total_children = children_after_street1 + children_after_street2 + children_after_street3\n\n    # Display the total number of children\n    result = total_children\n    return result"}
{"output": "def solution():\n    \n    total_meals = 1500\n    meals_given = 64 + 30 + 48\n    meals_left = total_meals - meals_given\n    result = meals_left\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin in cents\n    quarter_value = 25\n    nickel_value = 5\n    dime_value = 10\n\n    # Calculate the total value of the coins in cents\n    total_value = (quarter_value * 25) + (nickel_value * 2) + (dime_value * 7)\n\n    # Display the total value in cents\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    # Define the age of each sibling\n    SISTER_AGE = 16\n    BROTHER_AGE = 12\n\n    # Calculate the age of each brother\n    brother_age = BROTHER_AGE / 2\n\n    # Calculate the age of each sister\n    sister_age = SISTER_AGE\n\n    # Calculate the total age of all the siblings\n    total_age = (2 * BROTHER_AGE) + (3 * sister_age)\n\n    # Display the total age\n    result = total_age\n    return result"}
{"output": "def solution():\n    # Calculate the total time Charisma spends meditation/sleeping each week\n    total_sleep_time = 2 * 15 * 5  # Charisma meditates for 15 minutes every day, and she pays for 5 days a week\n\n    # Calculate the total time Charisma spends practiced yoga in 4 weeks\n    total_practice_time = 4 * 60 * 1  # Charisma practices for 1 hour of yoga, and she pays for 4 weeks\n\n    # Calculate the total time Charisma spent on meditation/sleeping\n    total_time = total_sleep_time + total_practice_time\n    result = total_time\n    return result"}
{"output": "def solution():\n    \n    # Define the volume of each type of shirt\n    SMALL_SHIRT_VOLUME = 3\n    MEDIUM_SHIRT_VOLUME = 4\n    LARGE_SHIRT_VOLUME = 6\n\n    # Define the number of each type of shirt used\n    small_shirts = 11\n    medium_shirts = 8\n    large_shirts = 6\n\n    # Calculate the total volume of the fabric\n    fabric_volume = (small_shirts * SMALL_SHIRT_VOLUME) + (medium_shirts * MEDIUM_SHIRT_VOLUME) + (large_shirts * LARGE_SHIRT_VOLUME)\n\n    # Display the total volume of the fabric\n    result = fabric_volume\n    return result"}
{"output": "def solution():\n    \n    # Define the number of sunflower seeds in a dozen\n    SUNFLOWER_SEEDS_PER_DOZEN = 12\n\n    # Define the number of seeds in a small sunflower\n    small_sunflower_seeds = 3 * SUNFLOWER_SEEDS_PER_DOZEN\n\n    # Calculate the number of seeds in a large sunflower\n    large_sunflower_seeds = small_sunflower_seeds * 1.5\n\n    # Calculate the total number of sunflower seeds\n    total_seeds = small_sunflower_seeds + large_sunflower_seeds\n\n    # Display the total number of sunflower seeds\n    result = total_seeds\n    return result"}
{"output": "def solution():\n    \n    # Define the number of pens George has\n    george_pens = 18\n\n    # Calculate the number of pens Timothy has\n    timothy_pens = george_pens * 3\n\n    # Calculate the number of pens Sarah has\n    sarah_pens = timothy_pens / 2\n\n    # Display the number of pens Sarah has\n    result = sarah_pens\n    return result"}
{"output": "def solution():\n    \n    albert_height = 36\n    anne_height = 2 * albert_height\n    jackie_height = anne_height - 2\n    result = jackie_height\n    return result"}
{"output": "def solution():\n    \n    # Define the number of bars produced per day and the selling price per bar\n    BARS_PER_DAY = 5000\n    SELLING_PRICE = 2\n\n    # Calculate the total number of bars produced over two weeks\n    total_bars = BARS_PER_DAY * 14\n\n    # Calculate the total revenue from selling all the bars\n    total_revenue = total_bars * SELLING_PRICE\n\n    # Display the total revenue\n    result = total_revenue\n    return result"}
{"output": "def solution():\n    \n    # Define the original price of each T-shirt and the discount percentage\n    ORIGINAL_PRICE = 8\n    DISCOUNT_PERCENTAGE = 50\n\n    # Calculate the discounted price of each T-shirt\n    discounted_price = ORIGINAL_PRICE * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the final price of the shoes\n    final_price = 40\n\n    # Calculate the total cost of the T-shirts\n    tshirts_cost = 2 * discounted_price\n\n    # Calculate the total cost of the shoes\n    shoes_cost = final_price * (1 - DISCOUNT_PERCENTAGE/100)\n\n    # Calculate the total cost of all the items\n    total_cost = tshirts_cost + shoes_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the weekly allowance and the number of weeks\n    weekly_allowance = 6\n    weeks = 3\n\n    # Calculate the total amount spent on ice cream cones\n    ice_cream_cost = (3 * 1.25) + (3 * 1.25)\n\n    # Calculate the remaining amount after buying ice cream cones\n    remaining_amount = weekly_allowance - ice_cream_cost\n\n    # Calculate the number of movie tickets that can be bought\n    movie_tickets = int(remaining_amount / 6.5)\n\n    # Display the number of movie tickets\n    result = movie_tickets\n    return result"}
{"output": "def solution():\n    \n    # Define the prices of each item\n    leggings_price = 100\n    photo_frame_price = 5\n    sunglasses_price = 30\n    bathrobes_price = 100\n\n    # Calculate the total cost of each item\n    ellen_total = leggings_price + photo_frame_price\n    lani_total = sunglasses_price + (2 * bathrobes_price)\n\n    # Calculate the total cost of both items\n    total_cost = ellen_total + lani_total\n\n    # return the result\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the prices and quantities of each ingredient\n    PENION_PRICE = 6\n    JACKET_PRICE = 8\n    HONEY_PRICE = 10\n    PENION_QUANTITY = 2\n    JACKET_QUANTITY = 1.5\n    HONEY_QUANTITY = 2\n\n    # Calculate the total cost of each ingredient\n    passion_cost = PENION_PRICE * PENION_QUANTITY\n    jackfruit_cost = JACKET_PRICE * JACKET_QUANTITY\n    honey_cost = HONEY_PRICE * HONEY_QUANTITY\n\n    # Calculate the total revenue from selling all the jars\n    total_revenue = (passion_cost + jackfruit_cost + honey_cost) * 10\n\n    # Calculate the profit\n    profit = total_revenue - total_cost\n\n    # Display the profit\n    result = profit\n    return result"}
{"output": "def solution():\n    \n    # Define the value of each coin in dollars\n    quarter_value = 25\n    dime_value = 10\n    nickel_value = 5\n    penny_value = 1\n\n    # Calculate the total value of each coin in dollars\n    quarter_total = 32 * quarter_value\n    dime_total = 95 * dime_value\n    nickel_total = 120 * nickel_value\n    penny_total = 750 * penny_value\n\n    # Calculate the total value in dollars\n    total_value = quarter_total + dime_total + nickel_total + penny_total\n\n    # return the result\n    result = total_value\n    return result"}
{"output": "def solution():\n    \n    ice_cream_cost = 3.5\n    movie_ticket_cost = 7.5\n    bracelet_cost = 8.5\n    total_spent = ice_cream_cost + (2 * movie_ticket_cost) + bracelet_cost\n    money_left = 40 - total_spent\n    result = money_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of cars Josh services each day\n    CARS_PER_DAY = 3\n\n    # Define the number of days in a week Josh is open\n    DAYS_IN_WEEK = 7 - 3  # Josh is open every day except Sunday and Wednesday\n\n    # Calculate the total number of cars Josh services in 2 weeks\n    total_cars = CARS_PER_DAY * DAYS_IN_WEEK * 2\n\n    # Calculate the total amount of money Josh makes\n    total_money = total_cars * 4\n\n    # Display the total amount of money Josh makes\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the initial number of cookies\n    initial_cookies = 9 + 4 + 5\n\n    # Calculate the number of cookies left after the first eating\n    cookies_left = initial_cookies - 3 - 2 - 2 + 4 - 4\n\n    # Display the number of cookies left\n    result = cookies_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of toy soldiers and the price per toy\n    NUM_TOYS = 12\n    PRICE_PER_TOY = 5\n\n    # Calculate the total amount earned from the first half of the collection\n    half_collection_price = (NUM_TOYS // 2) * PRICE_PER_TOY\n\n    # Calculate the total amount earned from the second half of the collection\n    half_collection_price = (NUM_TOYS - half_collection_price) * PRICE_PER_TOY\n\n    # Calculate the total amount earned\n    total_earnings = half_collection_price + half_collection_price\n\n    # Display the total earnings\n    result = total_earnings\n    return result"}
{"output": "def solution():\n    \n    # Define the number of days Nate digs\n    days = 14\n\n    # Define the number of holes the dog can dig per day\n    holes_per_day = 6\n\n    # Define the number of new holes the dog keeps per night\n    new_holes_per_night = 6\n\n    # Calculate the total number of holes to dig\n    total_holes = days * holes_per_day\n\n    # Calculate the total number of new holes to dig\n    new_holes = total_holes + new_holes_per_night\n\n    # Calculate the number of weeks it takes to dig all the holes\n    weeks = new_holes / (total_holes * new_holes_per_night)\n\n    # Display the number of weeks\n    result = weeks\n    return result"}
{"output": "def solution():\n    \n    # Define the number of students in each school\n    normal_students = 4000\n    butler_students = normal_students * 3/4\n\n    # Calculate the average number of students in each school\n    normal_avg = normal_students / 12\n    butler_avg = butler_students / 12\n\n    # Calculate the difference in the number of students\n    difference = normal_avg - butler_avg\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    total_cookies = 7995\n    rainbow_cookies = 2595\n    oatmeal_cookies = 3075\n    chocolate_chip_cookies = total_cookies - rainbow_cookies - oatmeal_cookies\n    result = chocolate_chip_cookies\n    return result"}
{"output": "def solution():\n    \n    test_tubes = 16 / 2\n    beakers = 7\n    petri_dishes = 14 + 2\n    total_tubes = test_tubes + beakers\n    total_dishes = petri_dishes + total_tubes\n    result = total_tubes + total_dishes\n    return result"}
{"output": "def solution():\n    \n    # Define the number of tables and legs per table\n    num_tables = 4\n    legs_per_table = 4\n\n    # Define the number of screws needed per leg\n    screws_per_leg = 2\n\n    # Calculate the total number of screws needed\n    total_screws = num_tables * legs_per_table * screws_per_leg\n\n    # Calculate the number of screws left over\n    screws_left = 40 - total_screws\n\n    # return the result\n    result = screws_left\n    return result"}
{"output": "def solution():\n    \n    # Define the number of eggs in the first basket\n    eggs_first_basket = 10\n\n    # Define the number of eggs in the second basket\n    eggs_second_basket = 2 * eggs_first_basket\n\n    # Calculate the total number of eggs in both baskets\n    total_eggs = eggs_first_basket + eggs_second_basket\n\n    # Display the total number of eggs\n    result = total_eggs\n    return result"}
{"output": "def solution():\n    \n    # Define the amount of money raised by each girl\n    alexandra_money = 430\n    kim_money = alexandra_money + 320\n    sarah_money = 300\n    maryam_money = sarah_money + 400\n\n    # Calculate the total amount of money raised\n    total_money = alexandra_money + kim_money + sarah_money + maryam_money\n\n    # Display the total amount of money raised\n    result = total_money\n    return result"}
{"output": "def solution():\n    \n    # Define the distance of Vanessa and Aaron\n    vanessa_distance = 4\n    aaron_distance = vanessa_distance / 2\n\n    # Define the time taken by Aaron to complete the race\n    aaron_time = 16\n\n    # Calculate the time taken by Vanessa to complete the race\n    vanessa_time = (aaron_distance / aaron_distance) * aaron_time\n\n    # return the result\n    result = vanessa_time\n    return result"}
{"output": "def solution():\n    \n    # Define the ratio of line to dock\n    LINE_RATIO = 3\n\n    # Define the amount of dock\n    dock_amount = 200\n\n    # Define the amount of new line\n    new_line = 6\n\n    # Calculate the total amount of line needed\n    total_line = (dock_amount / LINE_RATIO) * LINE_RATIO + new_line\n\n    # Display the total amount of line needed\n    result = total_line\n    return result"}
{"output": "def solution():\n    \n    # Define the number of reservations and the cost of each meal\n    num_reservations = 6\n    meal_cost = 5\n\n    # Calculate the total cost of meals and wine\n    total_meal_cost = num_reservations * meal_cost\n    total_wine_cost = 5\n\n    # Calculate the total earnings per day\n    total_earnings_per_day = total_meal_cost + total_wine_cost\n\n    # Calculate the total earnings per week\n    total_earnings_per_week = total_earnings_per_day * 2\n\n    # return the result\n    result = total_earnings_per_week\n    return result"}
{"output": "def solution():\n    \n    # Define the number of watermelons and the total cost\n    NUM_WATERMELONS = 50\n    TOTAL_COST = 80\n\n    # Calculate the total revenue from selling all the watermelons\n    total_revenue = NUM_WATERMELONS * 0.25 * TOTAL_COST\n\n    # Calculate the price per watermelon sold\n    price_per_watermelon = total_revenue / NUM_WATERMELONS\n\n    # Display the price per watermelon sold\n    result = price_per_watermelon\n    return result"}
{"output": "def solution():\n    \n    john_age_at_19 = 19\n    dora_age_at_3_years = 12\n    dora_age_now = dora_age_at_3_years - 3\n    youngest_son_age_at_3_years = john_age_at_32 + 3\n    result = youngest_son_age_at_3_years\n    return result"}
{"output": "def solution():\n    \n    # Define the time it takes to peel an orange and Jane\n    ana_time = 3\n    jane_time = 4\n\n    # Calculate the total time it takes to peel both oranges\n    total_time = ana_time + jane_time\n\n    # Calculate the number of oranges each person will peel in an hour\n    ana_oranges_per_hour = 60 / ana_time\n    jane_oranges_per_hour = 60 / jane_time\n\n    # Calculate the difference in the number of oranges each person will peel in an hour\n    difference = ana_oranges_per_hour - jane_oranges_per_hour\n\n    # return the result\n    result = difference\n    return result"}
{"output": "def solution():\n    \n    # Define the initial cost of the new radiator and the discount percentage\n    INITIAL_COST = 400\n    DISCOUNT_PERCENTAGE = 0.8\n\n    # Calculate the discounted cost of the new radiator\n    discounted_cost = INITIAL_COST * (1 - DISCOUNT_PERCENTAGE)\n\n    # Calculate the cost of the mechanic\n    mechanic_cost = 50 * 3\n\n    # Calculate the total cost\n    total_cost = discounted_cost + mechanic_cost\n\n    # Display the total cost\n    result = total_cost\n    return result"}
{"output": "def solution():\n    \n    # Define the total number of animals and the number of legs\n    total_animals = 20\n    total_legs = 70\n\n    # Calculate the number of chickens and cows\n    chickens = (total_legs - total_legs) / 2\n\n    # return the result\n    result = chickens\n    return result"}
{"output": "def solution():\n    \n    total_pizzas = 7\n    slices_per_pizza = 8\n    total_slices = total_pizzas * slices_per_pizza\n    num_people = 4\n    slices_per_person = total_slices / num_people\n    result = slices_per_person\n    return result"}